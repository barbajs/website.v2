/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 160);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module, global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _gsScope; });
/* unused harmony export TweenLite */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return globals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TweenLite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return SimpleTimeline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return Animation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Ease; });
/* unused harmony export Linear */
/* unused harmony export Power0 */
/* unused harmony export Power1 */
/* unused harmony export Power2 */
/* unused harmony export Power3 */
/* unused harmony export Power4 */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return TweenPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return EventDispatcher; });
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */

/* ES6 changes:
	- declare and export _gsScope at top.
	- set var TweenLite = the result of the main function
	- export default TweenLite at the bottom
	- return TweenLite at the bottom of the main function
	- pass in _gsScope as the first parameter of the main function (which is actually at the bottom)
	- remove the "export to multiple environments" in Definition().
 */
var _gsScope = typeof window !== "undefined" ? window : typeof module !== "undefined" && module.exports && typeof global !== "undefined" ? global : this || {};
var TweenLite = function (window) {
  "use strict";

  var _exports = {},
      _doc = window.document,
      _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;

  if (_globals.TweenLite) {
    return _globals.TweenLite; //in case the core set of classes is already loaded, don't instantiate twice.
  }

  var _namespace = function _namespace(ns) {
    var a = ns.split("."),
        p = _globals,
        i;

    for (i = 0; i < a.length; i++) {
      p[a[i]] = p = p[a[i]] || {};
    }

    return p;
  },
      gs = _namespace("com.greensock"),
      _tinyNum = 0.00000001,
      _slice = function _slice(a) {
    //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
    var b = [],
        l = a.length,
        i;

    for (i = 0; i !== l; b.push(a[i++])) {}

    return b;
  },
      _emptyFunc = function _emptyFunc() {},
      _isArray = function () {
    //works around issues in iframe environments where the Array global isn't shared, thus if the object originates in a different window/iframe, "(obj instanceof Array)" will evaluate false. We added some speed optimizations to avoid Object.prototype.toString.call() unless it's absolutely necessary because it's VERY slow (like 20x slower)
    var toString = Object.prototype.toString,
        array = toString.call([]);
    return function (obj) {
      return obj != null && (obj instanceof Array || typeof obj === "object" && !!obj.push && toString.call(obj) === array);
    };
  }(),
      a,
      i,
      p,
      _ticker,
      _tickerActive,
      _defLookup = {},

  /**
   * @constructor
   * Defines a GreenSock class, optionally with an array of dependencies that must be instantiated first and passed into the definition.
   * This allows users to load GreenSock JS files in any order even if they have interdependencies (like CSSPlugin extends TweenPlugin which is
   * inside TweenLite.js, but if CSSPlugin is loaded first, it should wait to run its code until TweenLite.js loads and instantiates TweenPlugin
   * and then pass TweenPlugin to CSSPlugin's definition). This is all done automatically and internally.
   *
   * Every definition will be added to a "com.greensock" global object (typically window, but if a window.GreenSockGlobals object is found,
   * it will go there as of v1.7). For example, TweenLite will be found at window.com.greensock.TweenLite and since it's a global class that should be available anywhere,
   * it is ALSO referenced at window.TweenLite. However some classes aren't considered global, like the base com.greensock.core.Animation class, so
   * those will only be at the package like window.com.greensock.core.Animation. Again, if you define a GreenSockGlobals object on the window, everything
   * gets tucked neatly inside there instead of on the window directly. This allows you to do advanced things like load multiple versions of GreenSock
   * files and put them into distinct objects (imagine a banner ad uses a newer version but the main site uses an older one). In that case, you could
   * sandbox the banner one like:
   *
   * <script>
   *     var gs = window.GreenSockGlobals = {}; //the newer version we're about to load could now be referenced in a "gs" object, like gs.TweenLite.to(...). Use whatever alias you want as long as it's unique, "gs" or "banner" or whatever.
   * </script>
   * <script src="js/greensock/v1.7/TweenMax.js"></script>
   * <script>
   *     window.GreenSockGlobals = window._gsQueue = window._gsDefine = null; //reset it back to null (along with the special _gsQueue variable) so that the next load of TweenMax affects the window and we can reference things directly like TweenLite.to(...)
   * </script>
   * <script src="js/greensock/v1.6/TweenMax.js"></script>
   * <script>
   *     gs.TweenLite.to(...); //would use v1.7
   *     TweenLite.to(...); //would use v1.6
   * </script>
   *
   * @param {!string} ns The namespace of the class definition, leaving off "com.greensock." as that's assumed. For example, "TweenLite" or "plugins.CSSPlugin" or "easing.Back".
   * @param {!Array.<string>} dependencies An array of dependencies (described as their namespaces minus "com.greensock." prefix). For example ["TweenLite","plugins.TweenPlugin","core.Animation"]
   * @param {!function():Object} func The function that should be called and passed the resolved dependencies which will return the actual class for this definition.
   * @param {boolean=} global If true, the class will be added to the global scope (typically window unless you define a window.GreenSockGlobals object)
   */
  Definition = function Definition(ns, dependencies, func, global) {
    this.sc = _defLookup[ns] ? _defLookup[ns].sc : []; //subclasses

    _defLookup[ns] = this;
    this.gsClass = null;
    this.func = func;
    var _classes = [];

    this.check = function (init) {
      var i = dependencies.length,
          missing = i,
          cur,
          a,
          n,
          cl;

      while (--i > -1) {
        if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {
          _classes[i] = cur.gsClass;
          missing--;
        } else if (init) {
          cur.sc.push(this);
        }
      }

      if (missing === 0 && func) {
        a = ("com.greensock." + ns).split(".");
        n = a.pop();
        cl = _namespace(a.join("."))[n] = this.gsClass = func.apply(func, _classes); //exports to multiple environments

        if (global) {
          _globals[n] = _exports[n] = cl; //provides a way to avoid global namespace pollution. By default, the main classes like TweenLite, Power1, Strong, etc. are added to window unless a GreenSockGlobals is defined. So if you want to have things added to a custom object instead, just do something like window.GreenSockGlobals = {} before loading any GreenSock files. You can even set up an alias like window.GreenSockGlobals = windows.gs = {} so that you can access everything like gs.TweenLite. Also remember that ALL classes are added to the window.com.greensock object (in their respective packages, like com.greensock.easing.Power1, com.greensock.TweenLite, etc.)

          /*
          if (typeof(module) !== "undefined" && module.exports) { //node
          	if (ns === moduleName) {
          		module.exports = _exports[moduleName] = cl;
          		for (i in _exports) {
          			cl[i] = _exports[i];
          		}
          	} else if (_exports[moduleName]) {
          		_exports[moduleName][n] = cl;
          	}
          } else if (typeof(define) === "function" && define.amd){ //AMD
          	define((window.GreenSockAMDPath ? window.GreenSockAMDPath + "/" : "") + ns.split(".").pop(), [], function() { return cl; });
          }
          */
        }

        for (i = 0; i < this.sc.length; i++) {
          this.sc[i].check();
        }
      }
    };

    this.check(true);
  },
      //used to create Definition instances (which basically registers a class that has dependencies).
  _gsDefine = window._gsDefine = function (ns, dependencies, func, global) {
    return new Definition(ns, dependencies, func, global);
  },
      //a quick way to create a class that doesn't have any dependencies. Returns the class, but first registers it in the GreenSock namespace so that other classes can grab it (other classes might be dependent on the class).
  _class = gs._class = function (ns, func, global) {
    func = func || function () {};

    _gsDefine(ns, [], function () {
      return func;
    }, global);

    return func;
  };

  _gsDefine.globals = _globals;
  /*
   * ----------------------------------------------------------------
   * Ease
   * ----------------------------------------------------------------
   */

  var _baseParams = [0, 0, 1, 1],
      Ease = _class("easing.Ease", function (func, extraParams, type, power) {
    this._func = func;
    this._type = type || 0;
    this._power = power || 0;
    this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;
  }, true),
      _easeMap = Ease.map = {},
      _easeReg = Ease.register = function (ease, names, types, create) {
    var na = names.split(","),
        i = na.length,
        ta = (types || "easeIn,easeOut,easeInOut").split(","),
        e,
        name,
        j,
        type;

    while (--i > -1) {
      name = na[i];
      e = create ? _class("easing." + name, null, true) : gs.easing[name] || {};
      j = ta.length;

      while (--j > -1) {
        type = ta[j];
        _easeMap[name + "." + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();
      }
    }
  };

  p = Ease.prototype;
  p._calcEnd = false;

  p.getRatio = function (p) {
    if (this._func) {
      this._params[0] = p;
      return this._func.apply(null, this._params);
    }

    var t = this._type,
        pw = this._power,
        r = t === 1 ? 1 - p : t === 2 ? p : p < 0.5 ? p * 2 : (1 - p) * 2;

    if (pw === 1) {
      r *= r;
    } else if (pw === 2) {
      r *= r * r;
    } else if (pw === 3) {
      r *= r * r * r;
    } else if (pw === 4) {
      r *= r * r * r * r;
    }

    return t === 1 ? 1 - r : t === 2 ? r : p < 0.5 ? r / 2 : 1 - r / 2;
  }; //create all the standard eases like Linear, Quad, Cubic, Quart, Quint, Strong, Power0, Power1, Power2, Power3, and Power4 (each with easeIn, easeOut, and easeInOut)


  a = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"];
  i = a.length;

  while (--i > -1) {
    p = a[i] + ",Power" + i;

    _easeReg(new Ease(null, null, 1, i), p, "easeOut", true);

    _easeReg(new Ease(null, null, 2, i), p, "easeIn" + (i === 0 ? ",easeNone" : ""));

    _easeReg(new Ease(null, null, 3, i), p, "easeInOut");
  }

  _easeMap.linear = gs.easing.Linear.easeIn;
  _easeMap.swing = gs.easing.Quad.easeInOut; //for jQuery folks

  /*
   * ----------------------------------------------------------------
   * EventDispatcher
   * ----------------------------------------------------------------
   */

  var EventDispatcher = _class("events.EventDispatcher", function (target) {
    this._listeners = {};
    this._eventTarget = target || this;
  });

  p = EventDispatcher.prototype;

  p.addEventListener = function (type, callback, scope, useParam, priority) {
    priority = priority || 0;
    var list = this._listeners[type],
        index = 0,
        listener,
        i;

    if (this === _ticker && !_tickerActive) {
      _ticker.wake();
    }

    if (list == null) {
      this._listeners[type] = list = [];
    }

    i = list.length;

    while (--i > -1) {
      listener = list[i];

      if (listener.c === callback && listener.s === scope) {
        list.splice(i, 1);
      } else if (index === 0 && listener.pr < priority) {
        index = i + 1;
      }
    }

    list.splice(index, 0, {
      c: callback,
      s: scope,
      up: useParam,
      pr: priority
    });
  };

  p.removeEventListener = function (type, callback) {
    var list = this._listeners[type],
        i;

    if (list) {
      i = list.length;

      while (--i > -1) {
        if (list[i].c === callback) {
          list.splice(i, 1);
          return;
        }
      }
    }
  };

  p.dispatchEvent = function (type) {
    var list = this._listeners[type],
        i,
        t,
        listener;

    if (list) {
      i = list.length;

      if (i > 1) {
        list = list.slice(0); //in case addEventListener() is called from within a listener/callback (otherwise the index could change, resulting in a skip)
      }

      t = this._eventTarget;

      while (--i > -1) {
        listener = list[i];

        if (listener) {
          if (listener.up) {
            listener.c.call(listener.s || t, {
              type: type,
              target: t
            });
          } else {
            listener.c.call(listener.s || t);
          }
        }
      }
    }
  };
  /*
   * ----------------------------------------------------------------
   * Ticker
   * ----------------------------------------------------------------
   */


  var _reqAnimFrame = window.requestAnimationFrame,
      _cancelAnimFrame = window.cancelAnimationFrame,
      _getTime = Date.now || function () {
    return new Date().getTime();
  },
      _lastUpdate = _getTime(); //now try to determine the requestAnimationFrame and cancelAnimationFrame functions and if none are found, we'll use a setTimeout()/clearTimeout() polyfill.


  a = ["ms", "moz", "webkit", "o"];
  i = a.length;

  while (--i > -1 && !_reqAnimFrame) {
    _reqAnimFrame = window[a[i] + "RequestAnimationFrame"];
    _cancelAnimFrame = window[a[i] + "CancelAnimationFrame"] || window[a[i] + "CancelRequestAnimationFrame"];
  }

  _class("Ticker", function (fps, useRAF) {
    var _self = this,
        _startTime = _getTime(),
        _useRAF = useRAF !== false && _reqAnimFrame ? "auto" : false,
        _lagThreshold = 500,
        _adjustedLag = 33,
        _tickWord = "tick",
        //helps reduce gc burden
    _fps,
        _req,
        _id,
        _gap,
        _nextTime,
        _tick = function _tick(manual) {
      var elapsed = _getTime() - _lastUpdate,
          overlap,
          dispatch;

      if (elapsed > _lagThreshold) {
        _startTime += elapsed - _adjustedLag;
      }

      _lastUpdate += elapsed;
      _self.time = (_lastUpdate - _startTime) / 1000;
      overlap = _self.time - _nextTime;

      if (!_fps || overlap > 0 || manual === true) {
        _self.frame++;
        _nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);
        dispatch = true;
      }

      if (manual !== true) {
        //make sure the request is made before we dispatch the "tick" event so that timing is maintained. Otherwise, if processing the "tick" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.
        _id = _req(_tick);
      }

      if (dispatch) {
        _self.dispatchEvent(_tickWord);
      }
    };

    EventDispatcher.call(_self);
    _self.time = _self.frame = 0;

    _self.tick = function () {
      _tick(true);
    };

    _self.lagSmoothing = function (threshold, adjustedLag) {
      if (!arguments.length) {
        //if lagSmoothing() is called with no arguments, treat it like a getter that returns a boolean indicating if it's enabled or not. This is purposely undocumented and is for internal use.
        return _lagThreshold < 1 / _tinyNum;
      }

      _lagThreshold = threshold || 1 / _tinyNum; //zero should be interpreted as basically unlimited

      _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);
    };

    _self.sleep = function () {
      if (_id == null) {
        return;
      }

      if (!_useRAF || !_cancelAnimFrame) {
        clearTimeout(_id);
      } else {
        _cancelAnimFrame(_id);
      }

      _req = _emptyFunc;
      _id = null;

      if (_self === _ticker) {
        _tickerActive = false;
      }
    };

    _self.wake = function (seamless) {
      if (_id !== null) {
        _self.sleep();
      } else if (seamless) {
        _startTime += -_lastUpdate + (_lastUpdate = _getTime());
      } else if (_self.frame > 10) {
        //don't trigger lagSmoothing if we're just waking up, and make sure that at least 10 frames have elapsed because of the iOS bug that we work around below with the 1.5-second setTimout().
        _lastUpdate = _getTime() - _lagThreshold + 5;
      }

      _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function (f) {
        return setTimeout(f, (_nextTime - _self.time) * 1000 + 1 | 0);
      } : _reqAnimFrame;

      if (_self === _ticker) {
        _tickerActive = true;
      }

      _tick(2);
    };

    _self.fps = function (value) {
      if (!arguments.length) {
        return _fps;
      }

      _fps = value;
      _gap = 1 / (_fps || 60);
      _nextTime = this.time + _gap;

      _self.wake();
    };

    _self.useRAF = function (value) {
      if (!arguments.length) {
        return _useRAF;
      }

      _self.sleep();

      _useRAF = value;

      _self.fps(_fps);
    };

    _self.fps(fps); //a bug in iOS 6 Safari occasionally prevents the requestAnimationFrame from working initially, so we use a 1.5-second timeout that automatically falls back to setTimeout() if it senses this condition.


    setTimeout(function () {
      if (_useRAF === "auto" && _self.frame < 5 && (_doc || {}).visibilityState !== "hidden") {
        _self.useRAF(false);
      }
    }, 1500);
  });

  p = gs.Ticker.prototype = new gs.events.EventDispatcher();
  p.constructor = gs.Ticker;
  /*
   * ----------------------------------------------------------------
   * Animation
   * ----------------------------------------------------------------
   */

  var Animation = _class("core.Animation", function (duration, vars) {
    this.vars = vars = vars || {};
    this._duration = this._totalDuration = duration || 0;
    this._delay = Number(vars.delay) || 0;
    this._timeScale = 1;
    this._active = !!vars.immediateRender;
    this.data = vars.data;
    this._reversed = !!vars.reversed;

    if (!_rootTimeline) {
      return;
    }

    if (!_tickerActive) {
      //some browsers (like iOS 6 Safari) shut down JavaScript execution when the tab is disabled and they [occasionally] neglect to start up requestAnimationFrame again when returning - this code ensures that the engine starts up again properly.
      _ticker.wake();
    }

    var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;
    tl.add(this, tl._time);

    if (this.vars.paused) {
      this.paused(true);
    }
  });

  _ticker = Animation.ticker = new gs.Ticker();
  p = Animation.prototype;
  p._dirty = p._gc = p._initted = p._paused = false;
  p._totalTime = p._time = 0;
  p._rawPrevTime = -1;
  p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;
  p._paused = false; //some browsers (like iOS) occasionally drop the requestAnimationFrame event when the user switches to a different tab and then comes back again, so we use a 2-second setTimeout() to sense if/when that condition occurs and then wake() the ticker.

  var _checkTimeout = function _checkTimeout() {
    if (_tickerActive && _getTime() - _lastUpdate > 2000 && ((_doc || {}).visibilityState !== "hidden" || !_ticker.lagSmoothing())) {
      //note: if the tab is hidden, we should still wake if lagSmoothing has been disabled.
      _ticker.wake();
    }

    var t = setTimeout(_checkTimeout, 2000);

    if (t.unref) {
      // allows a node process to exit even if the timeout’s callback hasn't been invoked. Without it, the node process could hang as this function is called every two seconds.
      t.unref();
    }
  };

  _checkTimeout();

  p.play = function (from, suppressEvents) {
    if (from != null) {
      this.seek(from, suppressEvents);
    }

    return this.reversed(false).paused(false);
  };

  p.pause = function (atTime, suppressEvents) {
    if (atTime != null) {
      this.seek(atTime, suppressEvents);
    }

    return this.paused(true);
  };

  p.resume = function (from, suppressEvents) {
    if (from != null) {
      this.seek(from, suppressEvents);
    }

    return this.paused(false);
  };

  p.seek = function (time, suppressEvents) {
    return this.totalTime(Number(time), suppressEvents !== false);
  };

  p.restart = function (includeDelay, suppressEvents) {
    return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);
  };

  p.reverse = function (from, suppressEvents) {
    if (from != null) {
      this.seek(from || this.totalDuration(), suppressEvents);
    }

    return this.reversed(true).paused(false);
  };

  p.render = function (time, suppressEvents, force) {//stub - we override this method in subclasses.
  };

  p.invalidate = function () {
    this._time = this._totalTime = 0;
    this._initted = this._gc = false;
    this._rawPrevTime = -1;

    if (this._gc || !this.timeline) {
      this._enabled(true);
    }

    return this;
  };

  p.isActive = function () {
    var tl = this._timeline,
        //the 2 root timelines won't have a _timeline; they're always active.
    startTime = this._startTime,
        rawTime;
    return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime(true)) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale - _tinyNum;
  };

  p._enabled = function (enabled, ignoreTimeline) {
    if (!_tickerActive) {
      _ticker.wake();
    }

    this._gc = !enabled;
    this._active = this.isActive();

    if (ignoreTimeline !== true) {
      if (enabled && !this.timeline) {
        this._timeline.add(this, this._startTime - this._delay);
      } else if (!enabled && this.timeline) {
        this._timeline._remove(this, true);
      }
    }

    return false;
  };

  p._kill = function (vars, target) {
    return this._enabled(false, false);
  };

  p.kill = function (vars, target) {
    this._kill(vars, target);

    return this;
  };

  p._uncache = function (includeSelf) {
    var tween = includeSelf ? this : this.timeline;

    while (tween) {
      tween._dirty = true;
      tween = tween.timeline;
    }

    return this;
  };

  p._swapSelfInParams = function (params) {
    var i = params.length,
        copy = params.concat();

    while (--i > -1) {
      if (params[i] === "{self}") {
        copy[i] = this;
      }
    }

    return copy;
  };

  p._callback = function (type) {
    var v = this.vars,
        callback = v[type],
        params = v[type + "Params"],
        scope = v[type + "Scope"] || v.callbackScope || this,
        l = params ? params.length : 0;

    switch (l) {
      //speed optimization; call() is faster than apply() so use it when there are only a few parameters (which is by far most common). Previously we simply did var v = this.vars; v[type].apply(v[type + "Scope"] || v.callbackScope || this, v[type + "Params"] || _blankArray);
      case 0:
        callback.call(scope);
        break;

      case 1:
        callback.call(scope, params[0]);
        break;

      case 2:
        callback.call(scope, params[0], params[1]);
        break;

      default:
        callback.apply(scope, params);
    }
  }; //----Animation getters/setters --------------------------------------------------------


  p.eventCallback = function (type, callback, params, scope) {
    if ((type || "").substr(0, 2) === "on") {
      var v = this.vars;

      if (arguments.length === 1) {
        return v[type];
      }

      if (callback == null) {
        delete v[type];
      } else {
        v[type] = callback;
        v[type + "Params"] = _isArray(params) && params.join("").indexOf("{self}") !== -1 ? this._swapSelfInParams(params) : params;
        v[type + "Scope"] = scope;
      }

      if (type === "onUpdate") {
        this._onUpdate = callback;
      }
    }

    return this;
  };

  p.delay = function (value) {
    if (!arguments.length) {
      return this._delay;
    }

    if (this._timeline.smoothChildTiming) {
      this.startTime(this._startTime + value - this._delay);
    }

    this._delay = value;
    return this;
  };

  p.duration = function (value) {
    if (!arguments.length) {
      this._dirty = false;
      return this._duration;
    }

    this._duration = this._totalDuration = value;

    this._uncache(true); //true in case it's a TweenMax or TimelineMax that has a repeat - we'll need to refresh the totalDuration.


    if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {
      this.totalTime(this._totalTime * (value / this._duration), true);
    }
    return this;
  };

  p.totalDuration = function (value) {
    this._dirty = false;
    return !arguments.length ? this._totalDuration : this.duration(value);
  };

  p.time = function (value, suppressEvents) {
    if (!arguments.length) {
      return this._time;
    }

    if (this._dirty) {
      this.totalDuration();
    }

    return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);
  };

  p.totalTime = function (time, suppressEvents, uncapped) {
    if (!_tickerActive) {
      _ticker.wake();
    }

    if (!arguments.length) {
      return this._totalTime;
    }

    if (this._timeline) {
      if (time < 0 && !uncapped) {
        time += this.totalDuration();
      }

      if (this._timeline.smoothChildTiming) {
        if (this._dirty) {
          this.totalDuration();
        }

        var totalDuration = this._totalDuration,
            tl = this._timeline;

        if (time > totalDuration && !uncapped) {
          time = totalDuration;
        }

        this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;

        if (!tl._dirty) {
          //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.
          this._uncache(false);
        } //in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The startTime of that child would get pushed out, but one of the ancestors may have completed.


        if (tl._timeline) {
          while (tl._timeline) {
            if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {
              tl.totalTime(tl._totalTime, true);
            }

            tl = tl._timeline;
          }
        }
      }

      if (this._gc) {
        this._enabled(true, false);
      }

      if (this._totalTime !== time || this._duration === 0) {
        if (_lazyTweens.length) {
          _lazyRender();
        }

        this.render(time, suppressEvents, false);

        if (_lazyTweens.length) {
          //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.
          _lazyRender();
        }
      }
    }

    return this;
  };

  p.progress = p.totalProgress = function (value, suppressEvents) {
    var duration = this.duration();
    return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);
  };

  p.startTime = function (value) {
    if (!arguments.length) {
      return this._startTime;
    }

    if (value !== this._startTime) {
      this._startTime = value;
      if (this.timeline) if (this.timeline._sortChildren) {
        this.timeline.add(this, value - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.
      }
    }

    return this;
  };

  p.endTime = function (includeRepeats) {
    return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;
  };

  p.timeScale = function (value) {
    if (!arguments.length) {
      return this._timeScale;
    }

    var pauseTime, t;
    value = value || _tinyNum; //can't allow zero because it'll throw the math off

    if (this._timeline && this._timeline.smoothChildTiming) {
      pauseTime = this._pauseTime;
      t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();
      this._startTime = t - (t - this._startTime) * this._timeScale / value;
    }

    this._timeScale = value;
    t = this.timeline;

    while (t && t.timeline) {
      //must update the duration/totalDuration of all ancestor timelines immediately in case in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.
      t._dirty = true;
      t.totalDuration();
      t = t.timeline;
    }

    return this;
  };

  p.reversed = function (value) {
    if (!arguments.length) {
      return this._reversed;
    }

    if (value != this._reversed) {
      this._reversed = value;
      this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);
    }

    return this;
  };

  p.paused = function (value) {
    if (!arguments.length) {
      return this._paused;
    }

    var tl = this._timeline,
        raw,
        elapsed;
    if (value != this._paused) if (tl) {
      if (!_tickerActive && !value) {
        _ticker.wake();
      }

      raw = tl.rawTime();
      elapsed = raw - this._pauseTime;

      if (!value && tl.smoothChildTiming) {
        this._startTime += elapsed;

        this._uncache(false);
      }

      this._pauseTime = value ? raw : null;
      this._paused = value;
      this._active = this.isActive();

      if (!value && elapsed !== 0 && this._initted && this.duration()) {
        raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;
        this.render(raw, raw === this._totalTime, true); //in case the target's properties changed via some other tween or manual update by the user, we should force a render.
      }
    }

    if (this._gc && !value) {
      this._enabled(true, false);
    }

    return this;
  };
  /*
   * ----------------------------------------------------------------
   * SimpleTimeline
   * ----------------------------------------------------------------
   */


  var SimpleTimeline = _class("core.SimpleTimeline", function (vars) {
    Animation.call(this, 0, vars);
    this.autoRemoveChildren = this.smoothChildTiming = true;
  });

  p = SimpleTimeline.prototype = new Animation();
  p.constructor = SimpleTimeline;
  p.kill()._gc = false;
  p._first = p._last = p._recent = null;
  p._sortChildren = false;

  p.add = p.insert = function (child, position, align, stagger) {
    var prevTween, st;
    child._startTime = Number(position || 0) + child._delay;
    if (child._paused) if (this !== child._timeline) {
      //we only adjust the _pauseTime if it wasn't in this timeline already. Remember, sometimes a tween will be inserted again into the same timeline when its startTime is changed so that the tweens in the TimelineLite/Max are re-ordered properly in the linked list (so everything renders in the proper order).
      child._pauseTime = this.rawTime() - (child._timeline.rawTime() - child._pauseTime);
    }

    if (child.timeline) {
      child.timeline._remove(child, true); //removes from existing timeline so that it can be properly added to this one.

    }

    child.timeline = child._timeline = this;

    if (child._gc) {
      child._enabled(true, true);
    }

    prevTween = this._last;

    if (this._sortChildren) {
      st = child._startTime;

      while (prevTween && prevTween._startTime > st) {
        prevTween = prevTween._prev;
      }
    }

    if (prevTween) {
      child._next = prevTween._next;
      prevTween._next = child;
    } else {
      child._next = this._first;
      this._first = child;
    }

    if (child._next) {
      child._next._prev = child;
    } else {
      this._last = child;
    }

    child._prev = prevTween;
    this._recent = child;

    if (this._timeline) {
      this._uncache(true);
    }

    return this;
  };

  p._remove = function (tween, skipDisable) {
    if (tween.timeline === this) {
      if (!skipDisable) {
        tween._enabled(false, true);
      }

      if (tween._prev) {
        tween._prev._next = tween._next;
      } else if (this._first === tween) {
        this._first = tween._next;
      }

      if (tween._next) {
        tween._next._prev = tween._prev;
      } else if (this._last === tween) {
        this._last = tween._prev;
      }

      tween._next = tween._prev = tween.timeline = null;

      if (tween === this._recent) {
        this._recent = this._last;
      }

      if (this._timeline) {
        this._uncache(true);
      }
    }

    return this;
  };

  p.render = function (time, suppressEvents, force) {
    var tween = this._first,
        next;
    this._totalTime = this._time = this._rawPrevTime = time;

    while (tween) {
      next = tween._next; //record it here because the value could change after rendering...

      if (tween._active || time >= tween._startTime && !tween._paused && !tween._gc) {
        if (!tween._reversed) {
          tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
        } else {
          tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);
        }
      }

      tween = next;
    }
  };

  p.rawTime = function () {
    if (!_tickerActive) {
      _ticker.wake();
    }

    return this._totalTime;
  };
  /*
   * ----------------------------------------------------------------
   * TweenLite
   * ----------------------------------------------------------------
   */


  var TweenLite = _class("TweenLite", function (target, duration, vars) {
    Animation.call(this, duration, vars);
    this.render = TweenLite.prototype.render; //speed optimization (avoid prototype lookup on this "hot" method)

    if (target == null) {
      throw "Cannot tween a null target.";
    }

    this.target = target = typeof target !== "string" ? target : TweenLite.selector(target) || target;
    var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType),
        overwrite = this.vars.overwrite,
        i,
        targ,
        targets;
    this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === "number" ? overwrite >> 0 : _overwriteLookup[overwrite];

    if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== "number") {
      this._targets = targets = _slice(target); //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()

      this._propLookup = [];
      this._siblings = [];

      for (i = 0; i < targets.length; i++) {
        targ = targets[i];

        if (!targ) {
          targets.splice(i--, 1);
          continue;
        } else if (typeof targ === "string") {
          targ = targets[i--] = TweenLite.selector(targ); //in case it's an array of strings

          if (typeof targ === "string") {
            targets.splice(i + 1, 1); //to avoid an endless loop (can't imagine why the selector would return a string, but just in case)
          }

          continue;
        } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {
          //in case the user is passing in an array of selector objects (like jQuery objects), we need to check one more level and pull things out if necessary. Also note that <select> elements pass all the criteria regarding length and the first child having style, so we must also check to ensure the target isn't an HTML node itself.
          targets.splice(i--, 1);
          this._targets = targets = targets.concat(_slice(targ));
          continue;
        }

        this._siblings[i] = _register(targ, this, false);
        if (overwrite === 1) if (this._siblings[i].length > 1) {
          _applyOverwrite(targ, this, null, 1, this._siblings[i]);
        }
      }
    } else {
      this._propLookup = {};
      this._siblings = _register(target, this, false);
      if (overwrite === 1) if (this._siblings.length > 1) {
        _applyOverwrite(target, this, null, 1, this._siblings);
      }
    }

    if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {
      this._time = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)

      this.render(Math.min(0, -this._delay)); //in case delay is negative
    }
  }, true),
      _isSelector = function _isSelector(v) {
    return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType); //we cannot check "nodeType" if the target is window from within an iframe, otherwise it will trigger a security error in some browsers like Firefox.
  },
      _autoCSS = function _autoCSS(vars, target) {
    var css = {},
        p;

    for (p in vars) {
      if (!_reservedProps[p] && (!(p in target) || p === "transform" || p === "x" || p === "y" || p === "width" || p === "height" || p === "className" || p === "border") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {
        //note: <img> elements contain read-only "x" and "y" properties. We should also prioritize editing css width/height rather than the element's properties.
        css[p] = vars[p];
        delete vars[p];
      }
    }

    vars.css = css;
  };

  p = TweenLite.prototype = new Animation();
  p.constructor = TweenLite;
  p.kill()._gc = false; //----TweenLite defaults, overwrite management, and root updates ----------------------------------------------------

  p.ratio = 0;
  p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;
  p._notifyPluginsOfEnabled = p._lazy = false;
  TweenLite.version = "2.1.3";
  TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);
  TweenLite.defaultOverwrite = "auto";
  TweenLite.ticker = _ticker;
  TweenLite.autoSleep = 120;

  TweenLite.lagSmoothing = function (threshold, adjustedLag) {
    _ticker.lagSmoothing(threshold, adjustedLag);
  };

  TweenLite.selector = window.$ || window.jQuery || function (e) {
    var selector = window.$ || window.jQuery;

    if (selector) {
      TweenLite.selector = selector;
      return selector(e);
    }

    if (!_doc) {
      //in some dev environments (like Angular 6), GSAP gets loaded before the document is defined! So re-query it here if/when necessary.
      _doc = window.document;
    }

    return !_doc ? e : _doc.querySelectorAll ? _doc.querySelectorAll(e) : _doc.getElementById(e.charAt(0) === "#" ? e.substr(1) : e);
  };

  var _lazyTweens = [],
      _lazyLookup = {},
      _numbersExp = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig,
      _relExp = /[\+-]=-?[\.\d]/,
      //_nonNumbersExp = /(?:([\-+](?!(\d|=)))|[^\d\-+=e]|(e(?![\-+][\d])))+/ig,
  _setRatio = function _setRatio(v) {
    var pt = this._firstPT,
        min = 0.000001,
        val;

    while (pt) {
      val = !pt.blob ? pt.c * v + pt.s : v === 1 && this.end != null ? this.end : v ? this.join("") : this.start;

      if (pt.m) {
        val = pt.m.call(this._tween, val, this._target || pt.t, this._tween);
      } else if (val < min) if (val > -min && !pt.blob) {
        //prevents issues with converting very small numbers to strings in the browser
        val = 0;
      }

      if (!pt.f) {
        pt.t[pt.p] = val;
      } else if (pt.fp) {
        pt.t[pt.p](pt.fp, val);
      } else {
        pt.t[pt.p](val);
      }

      pt = pt._next;
    }
  },
      _blobRound = function _blobRound(v) {
    return (v * 1000 | 0) / 1000 + "";
  },
      //compares two strings (start/end), finds the numbers that are different and spits back an array representing the whole value but with the changing values isolated as elements. For example, "rgb(0,0,0)" and "rgb(100,50,0)" would become ["rgb(", 0, ",", 50, ",0)"]. Notice it merges the parts that are identical (performance optimization). The array also has a linked list of PropTweens attached starting with _firstPT that contain the tweening data (t, p, s, c, f, etc.). It also stores the starting value as a "start" property so that we can revert to it if/when necessary, like when a tween rewinds fully. If the quantity of numbers differs between the start and end, it will always prioritize the end value(s). The pt parameter is optional - it's for a PropTween that will be appended to the end of the linked list and is typically for actually setting the value after all of the elements have been updated (with array.join("")).
  _blobDif = function _blobDif(start, end, filter, pt) {
    var a = [],
        charIndex = 0,
        s = "",
        color = 0,
        startNums,
        endNums,
        num,
        i,
        l,
        nonNumbers,
        currentNum;
    a.start = start;
    a.end = end;
    start = a[0] = start + ""; //ensure values are strings

    end = a[1] = end + "";

    if (filter) {
      filter(a); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.

      start = a[0];
      end = a[1];
    }

    a.length = 0;
    startNums = start.match(_numbersExp) || [];
    endNums = end.match(_numbersExp) || [];

    if (pt) {
      pt._next = null;
      pt.blob = 1;
      a._firstPT = a._applyPT = pt; //apply last in the linked list (which means inserting it first)
    }

    l = endNums.length;

    for (i = 0; i < l; i++) {
      currentNum = endNums[i];
      nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);
      s += nonNumbers || !i ? nonNumbers : ","; //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.

      charIndex += nonNumbers.length;

      if (color) {
        //sense rgba() values and round them.
        color = (color + 1) % 5;
      } else if (nonNumbers.substr(-5) === "rgba(") {
        color = 1;
      }

      if (currentNum === startNums[i] || startNums.length <= i) {
        s += currentNum;
      } else {
        if (s) {
          a.push(s);
          s = "";
        }

        num = parseFloat(startNums[i]);
        a.push(num);
        a._firstPT = {
          _next: a._firstPT,
          t: a,
          p: a.length - 1,
          s: num,
          c: (currentNum.charAt(1) === "=" ? parseInt(currentNum.charAt(0) + "1", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,
          f: 0,
          m: color && color < 4 ? Math.round : _blobRound
        }; //limiting to 3 decimal places and casting as a string can really help performance when array.join() is called!
        //note: we don't set _prev because we'll never need to remove individual PropTweens from this list.
      }

      charIndex += currentNum.length;
    }

    s += end.substr(charIndex);

    if (s) {
      a.push(s);
    }

    a.setRatio = _setRatio;

    if (_relExp.test(end)) {
      //if the end string contains relative values, delete it so that on the final render (in _setRatio()), we don't actually set it to the string with += or -= characters (forces it to use the calculated value).
      a.end = null;
    }

    return a;
  },
      //note: "funcParam" is only necessary for function-based getters/setters that require an extra parameter like getAttribute("width") and setAttribute("width", value). In this example, funcParam would be "width". Used by AttrPlugin for example.
  _addPropTween = function _addPropTween(target, prop, start, end, overwriteProp, mod, funcParam, stringFilter, index) {
    if (typeof end === "function") {
      end = end(index || 0, target);
    }

    var type = typeof target[prop],
        getterName = type !== "function" ? "" : prop.indexOf("set") || typeof target["get" + prop.substr(3)] !== "function" ? prop : "get" + prop.substr(3),
        s = start !== "get" ? start : !getterName ? target[prop] : funcParam ? target[getterName](funcParam) : target[getterName](),
        isRelative = typeof end === "string" && end.charAt(1) === "=",
        pt = {
      t: target,
      p: prop,
      s: s,
      f: type === "function",
      pg: 0,
      n: overwriteProp || prop,
      m: !mod ? 0 : typeof mod === "function" ? mod : Math.round,
      pr: 0,
      c: isRelative ? parseInt(end.charAt(0) + "1", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0
    },
        blob;

    if (typeof s !== "number" || typeof end !== "number" && !isRelative) {
      if (funcParam || isNaN(s) || !isRelative && isNaN(end) || typeof s === "boolean" || typeof end === "boolean") {
        //a blob (string that has multiple numbers in it)
        pt.fp = funcParam;
        blob = _blobDif(s, isRelative ? parseFloat(pt.s) + pt.c + (pt.s + "").replace(/[0-9\-\.]/g, "") : end, stringFilter || TweenLite.defaultStringFilter, pt);
        pt = {
          t: blob,
          p: "setRatio",
          s: 0,
          c: 1,
          f: 2,
          pg: 0,
          n: overwriteProp || prop,
          pr: 0,
          m: 0
        }; //"2" indicates it's a Blob property tween. Needed for RoundPropsPlugin for example.
      } else {
        pt.s = parseFloat(s);

        if (!isRelative) {
          pt.c = parseFloat(end) - pt.s || 0;
        }
      }
    }

    if (pt.c) {
      //only add it to the linked list if there's a change.
      if (pt._next = this._firstPT) {
        pt._next._prev = pt;
      }

      this._firstPT = pt;
      return pt;
    }
  },
      _internals = TweenLite._internals = {
    isArray: _isArray,
    isSelector: _isSelector,
    lazyTweens: _lazyTweens,
    blobDif: _blobDif
  },
      //gives us a way to expose certain private values to other GreenSock classes without contaminating tha main TweenLite object.
  _plugins = TweenLite._plugins = {},
      _tweenLookup = _internals.tweenLookup = {},
      _tweenLookupNum = 0,
      _reservedProps = _internals.reservedProps = {
    ease: 1,
    delay: 1,
    overwrite: 1,
    onComplete: 1,
    onCompleteParams: 1,
    onCompleteScope: 1,
    useFrames: 1,
    runBackwards: 1,
    startAt: 1,
    onUpdate: 1,
    onUpdateParams: 1,
    onUpdateScope: 1,
    onStart: 1,
    onStartParams: 1,
    onStartScope: 1,
    onReverseComplete: 1,
    onReverseCompleteParams: 1,
    onReverseCompleteScope: 1,
    onRepeat: 1,
    onRepeatParams: 1,
    onRepeatScope: 1,
    easeParams: 1,
    yoyo: 1,
    immediateRender: 1,
    repeat: 1,
    repeatDelay: 1,
    data: 1,
    paused: 1,
    reversed: 1,
    autoCSS: 1,
    lazy: 1,
    onOverwrite: 1,
    callbackScope: 1,
    stringFilter: 1,
    id: 1,
    yoyoEase: 1,
    stagger: 1
  },
      _overwriteLookup = {
    none: 0,
    all: 1,
    auto: 2,
    concurrent: 3,
    allOnStart: 4,
    preexisting: 5,
    "true": 1,
    "false": 0
  },
      _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(),
      _rootTimeline = Animation._rootTimeline = new SimpleTimeline(),
      _nextGCFrame = 30,
      _lazyRender = _internals.lazyRender = function () {
    var l = _lazyTweens.length,
        i,
        tween;
    _lazyLookup = {};

    for (i = 0; i < l; i++) {
      tween = _lazyTweens[i];

      if (tween && tween._lazy !== false) {
        tween.render(tween._lazy[0], tween._lazy[1], true);
        tween._lazy = false;
      }
    }

    _lazyTweens.length = 0;
  };

  _rootTimeline._startTime = _ticker.time;
  _rootFramesTimeline._startTime = _ticker.frame;
  _rootTimeline._active = _rootFramesTimeline._active = true;
  setTimeout(_lazyRender, 1); //on some mobile devices, there isn't a "tick" before code runs which means any lazy renders wouldn't run before the next official "tick".

  Animation._updateRoot = TweenLite.render = function () {
    var i, a, p;

    if (_lazyTweens.length) {
      //if code is run outside of the requestAnimationFrame loop, there may be tweens queued AFTER the engine refreshed, so we need to ensure any pending renders occur before we refresh again.
      _lazyRender();
    }

    _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);

    _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);

    if (_lazyTweens.length) {
      _lazyRender();
    }

    if (_ticker.frame >= _nextGCFrame) {
      //dump garbage every 120 frames or whatever the user sets TweenLite.autoSleep to
      _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);

      for (p in _tweenLookup) {
        a = _tweenLookup[p].tweens;
        i = a.length;

        while (--i > -1) {
          if (a[i]._gc) {
            a.splice(i, 1);
          }
        }

        if (a.length === 0) {
          delete _tweenLookup[p];
        }
      } //if there are no more tweens in the root timelines, or if they're all paused, make the _timer sleep to reduce load on the CPU slightly


      p = _rootTimeline._first;
      if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {
        while (p && p._paused) {
          p = p._next;
        }

        if (!p) {
          _ticker.sleep();
        }
      }
    }
  };

  _ticker.addEventListener("tick", Animation._updateRoot);

  var _register = function _register(target, tween, scrub) {
    var id = target._gsTweenID,
        a,
        i;

    if (!_tweenLookup[id || (target._gsTweenID = id = "t" + _tweenLookupNum++)]) {
      _tweenLookup[id] = {
        target: target,
        tweens: []
      };
    }

    if (tween) {
      a = _tweenLookup[id].tweens;
      a[i = a.length] = tween;

      if (scrub) {
        while (--i > -1) {
          if (a[i] === tween) {
            a.splice(i, 1);
          }
        }
      }
    }

    return _tweenLookup[id].tweens;
  },
      _onOverwrite = function _onOverwrite(overwrittenTween, overwritingTween, target, killedProps) {
    var func = overwrittenTween.vars.onOverwrite,
        r1,
        r2;

    if (func) {
      r1 = func(overwrittenTween, overwritingTween, target, killedProps);
    }

    func = TweenLite.onOverwrite;

    if (func) {
      r2 = func(overwrittenTween, overwritingTween, target, killedProps);
    }

    return r1 !== false && r2 !== false;
  },
      _applyOverwrite = function _applyOverwrite(target, tween, props, mode, siblings) {
    var i, changed, curTween, l;

    if (mode === 1 || mode >= 4) {
      l = siblings.length;

      for (i = 0; i < l; i++) {
        if ((curTween = siblings[i]) !== tween) {
          if (!curTween._gc) {
            if (curTween._kill(null, target, tween)) {
              changed = true;
            }
          }
        } else if (mode === 5) {
          break;
        }
      }

      return changed;
    } //NOTE: Add tiny amount to overcome floating point errors that can cause the startTime to be VERY slightly off (when a tween's time() is set for example)


    var startTime = tween._startTime + _tinyNum,
        overlaps = [],
        oCount = 0,
        zeroDur = tween._duration === 0,
        globalStart;
    i = siblings.length;

    while (--i > -1) {
      if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {//ignore
      } else if (curTween._timeline !== tween._timeline) {
        globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);

        if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {
          overlaps[oCount++] = curTween;
        }
      } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= _tinyNum * 2)) {
        overlaps[oCount++] = curTween;
      }
    }

    i = oCount;

    while (--i > -1) {
      curTween = overlaps[i];
      l = curTween._firstPT; //we need to discern if there were property tweens originally; if they all get removed in the next line's _kill() call, the tween should be killed. See https://github.com/greensock/GreenSock-JS/issues/278

      if (mode === 2) if (curTween._kill(props, target, tween)) {
        changed = true;
      }

      if (mode !== 2 || !curTween._firstPT && curTween._initted && l) {
        if (mode !== 2 && !_onOverwrite(curTween, tween)) {
          continue;
        }

        if (curTween._enabled(false, false)) {
          //if all property tweens have been overwritten, kill the tween.
          changed = true;
        }
      }
    }

    return changed;
  },
      _checkOverlap = function _checkOverlap(tween, reference, zeroDur) {
    var tl = tween._timeline,
        ts = tl._timeScale,
        t = tween._startTime;

    while (tl._timeline) {
      t += tl._startTime;
      ts *= tl._timeScale;

      if (tl._paused) {
        return -100;
      }

      tl = tl._timeline;
    }

    t /= ts;
    return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;
  }; //---- TweenLite instance methods -----------------------------------------------------------------------------


  p._init = function () {
    var v = this.vars,
        op = this._overwrittenProps,
        dur = this._duration,
        immediate = !!v.immediateRender,
        ease = v.ease,
        startAt = this._startAt,
        i,
        initPlugins,
        pt,
        p,
        startVars,
        l;

    if (v.startAt) {
      if (startAt) {
        startAt.render(-1, true); //if we've run a startAt previously (when the tween instantiated), we should revert it so that the values re-instantiate correctly particularly for relative tweens. Without this, a TweenLite.fromTo(obj, 1, {x:"+=100"}, {x:"-=100"}), for example, would actually jump to +=200 because the startAt would run twice, doubling the relative change.

        startAt.kill();
      }

      startVars = {};

      for (p in v.startAt) {
        //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, 1, from, to).fromTo(e, 1, to, from);
        startVars[p] = v.startAt[p];
      }

      startVars.data = "isStart";
      startVars.overwrite = false;
      startVars.immediateRender = true;
      startVars.lazy = immediate && v.lazy !== false;
      startVars.startAt = startVars.delay = null; //no nesting of startAt objects allowed (otherwise it could cause an infinite loop).

      startVars.onUpdate = v.onUpdate;
      startVars.onUpdateParams = v.onUpdateParams;
      startVars.onUpdateScope = v.onUpdateScope || v.callbackScope || this;
      this._startAt = TweenLite.to(this.target || {}, 0, startVars);

      if (immediate) {
        if (this._time > 0) {
          this._startAt = null; //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in TimelineLite/Max instances where immediateRender was false (which is the default in the convenience methods like from()).
        } else if (dur !== 0) {
          return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a TimelineLite or TimelineMax, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.
        }
      }
    } else if (v.runBackwards && dur !== 0) {
      //from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)
      if (startAt) {
        startAt.render(-1, true);
        startAt.kill();
        this._startAt = null;
      } else {
        if (this._time !== 0) {
          //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0
          immediate = false;
        }

        pt = {};

        for (p in v) {
          //copy props into a new object and skip any reserved props, otherwise onComplete or onUpdate or onStart could fire. We should, however, permit autoCSS to go through.
          if (!_reservedProps[p] || p === "autoCSS") {
            pt[p] = v[p];
          }
        }

        pt.overwrite = 0;
        pt.data = "isFromStart"; //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.

        pt.lazy = immediate && v.lazy !== false;
        pt.immediateRender = immediate; //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)

        this._startAt = TweenLite.to(this.target, 0, pt);

        if (!immediate) {
          this._startAt._init(); //ensures that the initial values are recorded


          this._startAt._enabled(false); //no need to have the tween render on the next cycle. Disable it because we'll always manually control the renders of the _startAt tween.


          if (this.vars.immediateRender) {
            this._startAt = null;
          }
        } else if (this._time === 0) {
          return;
        }
      }
    }

    this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === "function" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;

    if (v.easeParams instanceof Array && ease.config) {
      this._ease = ease.config.apply(ease, v.easeParams);
    }

    this._easeType = this._ease._type;
    this._easePower = this._ease._power;
    this._firstPT = null;

    if (this._targets) {
      l = this._targets.length;

      for (i = 0; i < l; i++) {
        if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null, i)) {
          initPlugins = true;
        }
      }
    } else {
      initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op, 0);
    }

    if (initPlugins) {
      TweenLite._onPluginEvent("_onInitAllProps", this); //reorders the array in order of priority. Uses a static TweenPlugin method in order to minimize file size in TweenLite

    }

    if (op) if (!this._firstPT) if (typeof this.target !== "function") {
      //if all tweening properties have been overwritten, kill the tween. If the target is a function, it's probably a delayedCall so let it live.
      this._enabled(false, false);
    }

    if (v.runBackwards) {
      pt = this._firstPT;

      while (pt) {
        pt.s += pt.c;
        pt.c = -pt.c;
        pt = pt._next;
      }
    }

    this._onUpdate = v.onUpdate;
    this._initted = true;
  };

  p._initProps = function (target, propLookup, siblings, overwrittenProps, index) {
    var p, i, initPlugins, plugin, pt, v;

    if (target == null) {
      return false;
    }

    if (_lazyLookup[target._gsTweenID]) {
      _lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)

    }

    if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {
      //it's so common to use TweenLite/Max to animate the css of DOM elements, we assume that if the target is a DOM element, that's what is intended (a convenience so that users don't have to wrap things in css:{}, although we still recommend it for a slight performance boost and better specificity). Note: we cannot check "nodeType" on the window inside an iframe.
      _autoCSS(this.vars, target);
    }

    for (p in this.vars) {
      v = this.vars[p];

      if (_reservedProps[p]) {
        if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join("").indexOf("{self}") !== -1) {
          this.vars[p] = v = this._swapSelfInParams(v, this);
        }
      } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this, index)) {
        //t - target 		[object]
        //p - property 		[string]
        //s - start			[number]
        //c - change		[number]
        //f - isFunction	[boolean]
        //n - name			[string]
        //pg - isPlugin 	[boolean]
        //pr - priority		[number]
        //m - mod           [function | 0]
        this._firstPT = pt = {
          _next: this._firstPT,
          t: plugin,
          p: "setRatio",
          s: 0,
          c: 1,
          f: 1,
          n: p,
          pg: 1,
          pr: plugin._priority,
          m: 0
        };
        i = plugin._overwriteProps.length;

        while (--i > -1) {
          propLookup[plugin._overwriteProps[i]] = this._firstPT;
        }

        if (plugin._priority || plugin._onInitAllProps) {
          initPlugins = true;
        }

        if (plugin._onDisable || plugin._onEnable) {
          this._notifyPluginsOfEnabled = true;
        }

        if (pt._next) {
          pt._next._prev = pt;
        }
      } else {
        propLookup[p] = _addPropTween.call(this, target, p, "get", v, p, 0, null, this.vars.stringFilter, index);
      }
    }

    if (overwrittenProps) if (this._kill(overwrittenProps, target)) {
      //another tween may have tried to overwrite properties of this tween before init() was called (like if two tweens start at the same time, the one created second will run first)
      return this._initProps(target, propLookup, siblings, overwrittenProps, index);
    }
    if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {
      this._kill(propLookup, target);

      return this._initProps(target, propLookup, siblings, overwrittenProps, index);
    }
    if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {
      //zero duration tweens don't lazy render by default; everything else does.
      _lazyLookup[target._gsTweenID] = true;
    }
    return initPlugins;
  };

  p.render = function (time, suppressEvents, force) {
    var self = this,
        prevTime = self._time,
        duration = self._duration,
        prevRawPrevTime = self._rawPrevTime,
        isComplete,
        callback,
        pt,
        rawPrevTime;

    if (time >= duration - _tinyNum && time >= 0) {
      //to work around occasional floating point math artifacts.
      self._totalTime = self._time = duration;
      self.ratio = self._ease._calcEnd ? self._ease.getRatio(1) : 1;

      if (!self._reversed) {
        isComplete = true;
        callback = "onComplete";
        force = force || self._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.
      }

      if (duration === 0) if (self._initted || !self.vars.lazy || force) {
        //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the "playhead" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's "playhead" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.
        if (self._startTime === self._timeline._duration) {
          //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.
          time = 0;
        }

        if (prevRawPrevTime < 0 || time <= 0 && time >= -_tinyNum || prevRawPrevTime === _tinyNum && self.data !== "isPause") if (prevRawPrevTime !== time) {
          //note: when this.data is "isPause", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.
          force = true;

          if (prevRawPrevTime > _tinyNum) {
            callback = "onReverseComplete";
          }
        }
        self._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
      }
    } else if (time < _tinyNum) {
      //to work around occasional floating point math artifacts, round super small values to 0.
      self._totalTime = self._time = 0;
      self.ratio = self._ease._calcEnd ? self._ease.getRatio(0) : 0;

      if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {
        callback = "onReverseComplete";
        isComplete = self._reversed;
      }

      if (time > -_tinyNum) {
        time = 0;
      } else if (time < 0) {
        self._active = false;
        if (duration === 0) if (self._initted || !self.vars.lazy || force) {
          //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the "playhead" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's "playhead" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.
          if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && self.data === "isPause")) {
            force = true;
          }

          self._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
        }
      }

      if (!self._initted || self._startAt && self._startAt.progress()) {
        //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately. Also, we check progress() because if startAt has already rendered at its end, we should force a render at its beginning. Otherwise, if you put the playhead directly on top of where a fromTo({immediateRender:false}) starts, and then move it backwards, the from() won't revert its values.
        force = true;
      }
    } else {
      self._totalTime = self._time = time;

      if (self._easeType) {
        var r = time / duration,
            type = self._easeType,
            pow = self._easePower;

        if (type === 1 || type === 3 && r >= 0.5) {
          r = 1 - r;
        }

        if (type === 3) {
          r *= 2;
        }

        if (pow === 1) {
          r *= r;
        } else if (pow === 2) {
          r *= r * r;
        } else if (pow === 3) {
          r *= r * r * r;
        } else if (pow === 4) {
          r *= r * r * r * r;
        }

        self.ratio = type === 1 ? 1 - r : type === 2 ? r : time / duration < 0.5 ? r / 2 : 1 - r / 2;
      } else {
        self.ratio = self._ease.getRatio(time / duration);
      }
    }

    if (self._time === prevTime && !force) {
      return;
    } else if (!self._initted) {
      self._init();

      if (!self._initted || self._gc) {
        //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.
        return;
      } else if (!force && self._firstPT && (self.vars.lazy !== false && self._duration || self.vars.lazy && !self._duration)) {
        self._time = self._totalTime = prevTime;
        self._rawPrevTime = prevRawPrevTime;

        _lazyTweens.push(self);

        self._lazy = [time, suppressEvents];
        return;
      } //_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.


      if (self._time && !isComplete) {
        self.ratio = self._ease.getRatio(self._time / duration);
      } else if (isComplete && self._ease._calcEnd) {
        self.ratio = self._ease.getRatio(self._time === 0 ? 0 : 1);
      }
    }

    if (self._lazy !== false) {
      //in case a lazy render is pending, we should flush it because the new render is occurring now (imagine a lazy tween instantiating and then immediately the user calls tween.seek(tween.duration()), skipping to the end - the end render would be forced, and then if we didn't flush the lazy render, it'd fire AFTER the seek(), rendering it at the wrong time.
      self._lazy = false;
    }

    if (!self._active) if (!self._paused && self._time !== prevTime && time >= 0) {
      self._active = true; //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.
    }

    if (prevTime === 0) {
      if (self._startAt) {
        if (time >= 0) {
          self._startAt.render(time, true, force);
        } else if (!callback) {
          callback = "_dummyGS"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.
        }
      }

      if (self.vars.onStart) if (self._time !== 0 || duration === 0) if (!suppressEvents) {
        self._callback("onStart");
      }
    }

    pt = self._firstPT;

    while (pt) {
      if (pt.f) {
        pt.t[pt.p](pt.c * self.ratio + pt.s);
      } else {
        pt.t[pt.p] = pt.c * self.ratio + pt.s;
      }

      pt = pt._next;
    }

    if (self._onUpdate) {
      if (time < 0) if (self._startAt && time !== -0.0001) {
        //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.
        self._startAt.render(time, true, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.

      }
      if (!suppressEvents) if (self._time !== prevTime || isComplete || force) {
        self._callback("onUpdate");
      }
    }

    if (callback) if (!self._gc || force) {
      //check _gc because there's a chance that kill() could be called in an onUpdate
      if (time < 0 && self._startAt && !self._onUpdate && time !== -0.0001) {
        //-0.0001 is a special value that we use when looping back to the beginning of a repeated TimelineMax, in which case we shouldn't render the _startAt values.
        self._startAt.render(time, true, force);
      }

      if (isComplete) {
        if (self._timeline.autoRemoveChildren) {
          self._enabled(false, false);
        }

        self._active = false;
      }

      if (!suppressEvents && self.vars[callback]) {
        self._callback(callback);
      }

      if (duration === 0 && self._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {
        //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the "time" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.
        self._rawPrevTime = 0;
      }
    }
  };

  p._kill = function (vars, target, overwritingTween) {
    if (vars === "all") {
      vars = null;
    }

    if (vars == null) if (target == null || target === this.target) {
      this._lazy = false;
      return this._enabled(false, false);
    }
    target = typeof target !== "string" ? target || this._targets || this.target : TweenLite.selector(target) || target;
    var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline,
        firstPT = this._firstPT,
        i,
        overwrittenProps,
        p,
        pt,
        propLookup,
        changed,
        killProps,
        record,
        killed;

    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== "number") {
      i = target.length;

      while (--i > -1) {
        if (this._kill(vars, target[i], overwritingTween)) {
          changed = true;
        }
      }
    } else {
      if (this._targets) {
        i = this._targets.length;

        while (--i > -1) {
          if (target === this._targets[i]) {
            propLookup = this._propLookup[i] || {};
            this._overwrittenProps = this._overwrittenProps || [];
            overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : "all";
            break;
          }
        }
      } else if (target !== this.target) {
        return false;
      } else {
        propLookup = this._propLookup;
        overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : "all";
      }

      if (propLookup) {
        killProps = vars || propLookup;
        record = vars !== overwrittenProps && overwrittenProps !== "all" && vars !== propLookup && (typeof vars !== "object" || !vars._tempKill); //_tempKill is a super-secret way to delete a particular tweening property but NOT have it remembered as an official overwritten property (like in BezierPlugin)

        if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {
          for (p in killProps) {
            if (propLookup[p]) {
              if (!killed) {
                killed = [];
              }

              killed.push(p);
            }
          }

          if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {
            //if the onOverwrite returned false, that means the user wants to override the overwriting (cancel it).
            return false;
          }
        }

        for (p in killProps) {
          if (pt = propLookup[p]) {
            if (simultaneousOverwrite) {
              //if another tween overwrites this one and they both start at exactly the same time, yet this tween has already rendered once (for example, at 0.001) because it's first in the queue, we should revert the values to where they were at 0 so that the starting values aren't contaminated on the overwriting tween.
              if (pt.f) {
                pt.t[pt.p](pt.s);
              } else {
                pt.t[pt.p] = pt.s;
              }

              changed = true;
            }

            if (pt.pg && pt.t._kill(killProps)) {
              changed = true; //some plugins need to be notified so they can perform cleanup tasks first
            }

            if (!pt.pg || pt.t._overwriteProps.length === 0) {
              if (pt._prev) {
                pt._prev._next = pt._next;
              } else if (pt === this._firstPT) {
                this._firstPT = pt._next;
              }

              if (pt._next) {
                pt._next._prev = pt._prev;
              }

              pt._next = pt._prev = null;
            }

            delete propLookup[p];
          }

          if (record) {
            overwrittenProps[p] = 1;
          }
        }

        if (!this._firstPT && this._initted && firstPT) {
          //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.
          this._enabled(false, false);
        }
      }
    }

    return changed;
  };

  p.invalidate = function () {
    if (this._notifyPluginsOfEnabled) {
      TweenLite._onPluginEvent("_onDisable", this);
    }

    var t = this._time;
    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;
    this._notifyPluginsOfEnabled = this._active = this._lazy = false;
    this._propLookup = this._targets ? {} : [];
    Animation.prototype.invalidate.call(this);

    if (this.vars.immediateRender) {
      this._time = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)

      this.render(t, false, this.vars.lazy !== false);
    }

    return this;
  };

  p._enabled = function (enabled, ignoreTimeline) {
    if (!_tickerActive) {
      _ticker.wake();
    }

    if (enabled && this._gc) {
      var targets = this._targets,
          i;

      if (targets) {
        i = targets.length;

        while (--i > -1) {
          this._siblings[i] = _register(targets[i], this, true);
        }
      } else {
        this._siblings = _register(this.target, this, true);
      }
    }

    Animation.prototype._enabled.call(this, enabled, ignoreTimeline);

    if (this._notifyPluginsOfEnabled) if (this._firstPT) {
      return TweenLite._onPluginEvent(enabled ? "_onEnable" : "_onDisable", this);
    }
    return false;
  }; //----TweenLite static methods -----------------------------------------------------


  TweenLite.to = function (target, duration, vars) {
    return new TweenLite(target, duration, vars);
  };

  TweenLite.from = function (target, duration, vars) {
    vars.runBackwards = true;
    vars.immediateRender = vars.immediateRender != false;
    return new TweenLite(target, duration, vars);
  };

  TweenLite.fromTo = function (target, duration, fromVars, toVars) {
    toVars.startAt = fromVars;
    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;
    return new TweenLite(target, duration, toVars);
  };

  TweenLite.delayedCall = function (delay, callback, params, scope, useFrames) {
    return new TweenLite(callback, 0, {
      delay: delay,
      onComplete: callback,
      onCompleteParams: params,
      callbackScope: scope,
      onReverseComplete: callback,
      onReverseCompleteParams: params,
      immediateRender: false,
      lazy: false,
      useFrames: useFrames,
      overwrite: 0
    });
  };

  TweenLite.set = function (target, vars) {
    return new TweenLite(target, 0, vars);
  };

  TweenLite.getTweensOf = function (target, onlyActive) {
    if (target == null) {
      return [];
    }

    target = typeof target !== "string" ? target : TweenLite.selector(target) || target;
    var i, a, j, t;

    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== "number") {
      i = target.length;
      a = [];

      while (--i > -1) {
        a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));
      }

      i = a.length; //now get rid of any duplicates (tweens of arrays of objects could cause duplicates)

      while (--i > -1) {
        t = a[i];
        j = i;

        while (--j > -1) {
          if (t === a[j]) {
            a.splice(i, 1);
          }
        }
      }
    } else if (target._gsTweenID) {
      a = _register(target).concat();
      i = a.length;

      while (--i > -1) {
        if (a[i]._gc || onlyActive && !a[i].isActive()) {
          a.splice(i, 1);
        }
      }
    }

    return a || [];
  };

  TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function (target, onlyActive, vars) {
    if (typeof onlyActive === "object") {
      vars = onlyActive; //for backwards compatibility (before "onlyActive" parameter was inserted)

      onlyActive = false;
    }

    var a = TweenLite.getTweensOf(target, onlyActive),
        i = a.length;

    while (--i > -1) {
      a[i]._kill(vars, target);
    }
  };
  /*
   * ----------------------------------------------------------------
   * TweenPlugin   (could easily be split out as a separate file/class, but included for ease of use (so that people don't need to include another script call before loading plugins which is easy to forget)
   * ----------------------------------------------------------------
   */


  var TweenPlugin = _class("plugins.TweenPlugin", function (props, priority) {
    this._overwriteProps = (props || "").split(",");
    this._propName = this._overwriteProps[0];
    this._priority = priority || 0;
    this._super = TweenPlugin.prototype;
  }, true);

  p = TweenPlugin.prototype;
  TweenPlugin.version = "1.19.0";
  TweenPlugin.API = 2;
  p._firstPT = null;
  p._addTween = _addPropTween;
  p.setRatio = _setRatio;

  p._kill = function (lookup) {
    var a = this._overwriteProps,
        pt = this._firstPT,
        i;

    if (lookup[this._propName] != null) {
      this._overwriteProps = [];
    } else {
      i = a.length;

      while (--i > -1) {
        if (lookup[a[i]] != null) {
          a.splice(i, 1);
        }
      }
    }

    while (pt) {
      if (lookup[pt.n] != null) {
        if (pt._next) {
          pt._next._prev = pt._prev;
        }

        if (pt._prev) {
          pt._prev._next = pt._next;
          pt._prev = null;
        } else if (this._firstPT === pt) {
          this._firstPT = pt._next;
        }
      }

      pt = pt._next;
    }

    return false;
  };

  p._mod = p._roundProps = function (lookup) {
    var pt = this._firstPT,
        val;

    while (pt) {
      val = lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + "_").join("")];

      if (val && typeof val === "function") {
        //some properties that are very plugin-specific add a prefix named after the _propName plus an underscore, so we need to ignore that extra stuff here.
        if (pt.f === 2) {
          pt.t._applyPT.m = val;
        } else {
          pt.m = val;
        }
      }

      pt = pt._next;
    }
  };

  TweenLite._onPluginEvent = function (type, tween) {
    var pt = tween._firstPT,
        changed,
        pt2,
        first,
        last,
        next;

    if (type === "_onInitAllProps") {
      //sorts the PropTween linked list in order of priority because some plugins need to render earlier/later than others, like MotionBlurPlugin applies its effects after all x/y/alpha tweens have rendered on each frame.
      while (pt) {
        next = pt._next;
        pt2 = first;

        while (pt2 && pt2.pr > pt.pr) {
          pt2 = pt2._next;
        }

        if (pt._prev = pt2 ? pt2._prev : last) {
          pt._prev._next = pt;
        } else {
          first = pt;
        }

        if (pt._next = pt2) {
          pt2._prev = pt;
        } else {
          last = pt;
        }

        pt = next;
      }

      pt = tween._firstPT = first;
    }

    while (pt) {
      if (pt.pg) if (typeof pt.t[type] === "function") if (pt.t[type]()) {
        changed = true;
      }
      pt = pt._next;
    }

    return changed;
  };

  TweenPlugin.activate = function (plugins) {
    var i = plugins.length;

    while (--i > -1) {
      if (plugins[i].API === TweenPlugin.API) {
        _plugins[new plugins[i]()._propName] = plugins[i];
      }
    }

    return true;
  }; //provides a more concise way to define plugins that have no dependencies besides TweenPlugin and TweenLite, wrapping common boilerplate stuff into one function (added in 1.9.0). You don't NEED to use this to define a plugin - the old way still works and can be useful in certain (rare) situations.


  _gsDefine.plugin = function (config) {
    if (!config || !config.propName || !config.init || !config.API) {
      throw "illegal plugin definition.";
    }

    var propName = config.propName,
        priority = config.priority || 0,
        overwriteProps = config.overwriteProps,
        map = {
      init: "_onInitTween",
      set: "setRatio",
      kill: "_kill",
      round: "_mod",
      mod: "_mod",
      initAll: "_onInitAllProps"
    },
        Plugin = _class("plugins." + propName.charAt(0).toUpperCase() + propName.substr(1) + "Plugin", function () {
      TweenPlugin.call(this, propName, priority);
      this._overwriteProps = overwriteProps || [];
    }, config.global === true),
        p = Plugin.prototype = new TweenPlugin(propName),
        prop;

    p.constructor = Plugin;
    Plugin.API = config.API;

    for (prop in map) {
      if (typeof config[prop] === "function") {
        p[map[prop]] = config[prop];
      }
    }

    Plugin.version = config.version;
    TweenPlugin.activate([Plugin]);
    return Plugin;
  }; //now run through all the dependencies discovered and if any are missing, log that to the console as a warning. This is why it's best to have TweenLite load last - it can check all the dependencies for you.


  a = window._gsQueue;

  if (a) {
    for (i = 0; i < a.length; i++) {
      a[i]();
    }

    for (p in _defLookup) {
      if (!_defLookup[p].func) {
        window.console.log("GSAP encountered missing dependency: " + p);
      }
    }
  }

  _tickerActive = false; //ensures that the first official animation forces a ticker.tick() to update the time when it is instantiated

  return TweenLite;
}(_gsScope, "TweenLite");
var globals = _gsScope.GreenSockGlobals;
var nonGlobals = globals.com.greensock;

var SimpleTimeline = nonGlobals.core.SimpleTimeline;
var Animation = nonGlobals.core.Animation;
var Ease = globals.Ease;
var Linear = globals.Linear;
var Power0 = Linear;
var Power1 = globals.Power1;
var Power2 = globals.Power2;
var Power3 = globals.Power3;
var Power4 = globals.Power4;
var TweenPlugin = globals.TweenPlugin;
var EventDispatcher = nonGlobals.events.EventDispatcher;
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(143)(module), __webpack_require__(14)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

!function (e, t) {
   true ? module.exports = t() : "function" == typeof define && define.amd ? define("kapla", [], t) : "object" == typeof exports ? exports.kapla = t() : e.kapla = t();
}(window, function () {
  return function (e) {
    var t = {};

    function n(o) {
      if (t[o]) return t[o].exports;
      var r = t[o] = {
        i: o,
        l: !1,
        exports: {}
      };
      return e[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
    }

    return n.m = e, n.c = t, n.d = function (e, t, o) {
      n.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: o
      });
    }, n.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, n.t = function (e, t) {
      if (1 & t && (e = n(e)), 8 & t) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var o = Object.create(null);
      if (n.r(o), Object.defineProperty(o, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var r in e) n.d(o, r, function (t) {
        return e[t];
      }.bind(null, r));
      return o;
    }, n.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return n.d(t, "a", t), t;
    }, n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, n.p = "", n(n.s = 9);
  }([function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = n(2);
    Object.keys(o).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return o[e];
        }
      });
    });
    var r = n(20);
    Object.keys(r).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return r[e];
        }
      });
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = n(22);
    Object.keys(o).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return o[e];
        }
      });
    });
    var r = n(25);
    Object.keys(r).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return r[e];
        }
      });
    });
    var i = n(26);
    Object.keys(i).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return i[e];
        }
      });
    });
    var a = n(27);
    Object.keys(a).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return a[e];
        }
      });
    });
    var l = n(28);
    Object.keys(l).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return l[e];
        }
      });
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Multimap = void 0;
    var o = n(4);

    function r(e, t) {
      return function (e) {
        if (Array.isArray(e)) return e;
      }(e) || function (e, t) {
        var n = [],
            o = !0,
            r = !1,
            i = void 0;

        try {
          for (var a, l = e[Symbol.iterator](); !(o = (a = l.next()).done) && (n.push(a.value), !t || n.length !== t); o = !0);
        } catch (e) {
          r = !0, i = e;
        } finally {
          try {
            o || null == l.return || l.return();
          } finally {
            if (r) throw i;
          }
        }

        return n;
      }(e, t) || function () {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }();
    }

    function i(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var a = function () {
      function e() {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.valuesByKey = new Map();
      }

      var t, n, a;
      return t = e, (n = [{
        key: "add",
        value: function value(e, t) {
          (0, o.add)(this.valuesByKey, e, t);
        }
      }, {
        key: "delete",
        value: function value(e, t) {
          (0, o.del)(this.valuesByKey, e, t);
        }
      }, {
        key: "has",
        value: function value(e, t) {
          var n = this.valuesByKey.get(e);
          return n && n.has(t);
        }
      }, {
        key: "hasKey",
        value: function value(e) {
          return this.valuesByKey.has(e);
        }
      }, {
        key: "hasValue",
        value: function value(e) {
          return Array.from(this.valuesByKey.values()).some(function (t) {
            return t.has(e);
          });
        }
      }, {
        key: "getValuesForKey",
        value: function value(e) {
          var t = this.valuesByKey.get(e);
          return t ? Array.from(t) : [];
        }
      }, {
        key: "getKeysForValue",
        value: function value(e) {
          return Array.from(this.valuesByKey).filter(function (t) {
            return r(t, 2)[1].has(e);
          }).map(function (e) {
            return r(e, 1)[0];
          });
        }
      }, {
        key: "values",
        get: function get() {
          return Array.from(this.valuesByKey.values()).reduce(function (e, t) {
            return e.concat(Array.from(t));
          }, []);
        }
      }, {
        key: "size",
        get: function get() {
          return Array.from(this.valuesByKey.values()).reduce(function (e, t) {
            return e + t.size;
          }, 0);
        }
      }]) && i(t.prototype, n), a && i(t, a), e;
    }();

    t.Multimap = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = n(19);
    Object.keys(o).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return o[e];
        }
      });
    });
    var r = n(21);
    Object.keys(r).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return r[e];
        }
      });
    });
  }, function (e, t, n) {
    "use strict";

    function o(e, t) {
      var n = e.get(t);
      return n || (n = new Set(), e.set(t, n)), n;
    }

    function r(e, t) {
      var n = e.get(t);
      null !== n && 0 === n.size && e.delete(t);
    }

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.add = function (e, t, n) {
      o(e, t).add(n);
    }, t.del = function (e, t, n) {
      o(e, t).delete(n), r(e, t);
    }, t.fetch = o, t.prune = r;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.ee = void 0;
    var o,
        r = (o = n(23)) && o.__esModule ? o : {
      default: o
    };

    function i(e) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e;
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      })(e);
    }

    function a(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function l(e, t) {
      return !t || "object" !== i(t) && "function" != typeof t ? function (e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
      }(e) : t;
    }

    function u(e, t, n) {
      return (u = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (e, t, n) {
        var o = function (e, t) {
          for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = s(e)););

          return e;
        }(e, t);

        if (o) {
          var r = Object.getOwnPropertyDescriptor(o, t);
          return r.get ? r.get.call(n) : r.value;
        }
      })(e, t, n || e);
    }

    function s(e) {
      return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }

    function c(e, t) {
      return (c = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    var y = new (function (e) {
      function t() {
        var e;
        return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), (e = l(this, s(t).call(this)))._logs = new Set(), e;
      }

      var n, o, i;
      return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            writable: !0,
            configurable: !0
          }
        }), t && c(e, t);
      }(t, r.default), n = t, (o = [{
        key: "emit",
        value: function value() {
          for (var e, n = arguments.length, o = new Array(n), r = 0; r < n; r++) o[r] = arguments[r];

          var i = o[0],
              a = o.slice(1);
          this._logs.has(i) && console.info("💁‍♂️️", i, a), (e = u(s(t.prototype), "emit", this)).call.apply(e, [this].concat(o));
        }
      }, {
        key: "add",
        value: function value(e) {
          (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]) && this._logs.add(e);
        }
      }, {
        key: "remove",
        value: function value(e) {
          this._logs.has(e) && this._logs.delete(e);
        }
      }]) && a(n.prototype, o), i && a(n, i), t;
    }())();
    t.ee = y;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.CustomEvent = void 0;
    var o = n(7);

    function r(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var i = function () {
      function e(t, n) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.name = t, this.capitalizedName = (0, o.ucfirst)(t), this.scope = "global", this.log = n, this.eventByElement = new Map();
      }

      var t, n, i;
      return t = e, (n = [{
        key: "bind",
        value: function value(e, t) {
          var n = e.context.element;
          this.eventByElement.set(n, this.listener(e)), t.on(this.name, this.eventByElement.get(n));
        }
      }, {
        key: "unbind",
        value: function value(e, t) {
          var n = e.context.element;
          t.off(this.name, this.eventByElement.get(n));
        }
      }, {
        key: "listener",
        value: function value(e) {
          var t = "on".concat(this.capitalizedName);
          return function () {
            e[t].apply(e, arguments);
          };
        }
      }]) && r(t.prototype, n), i && r(t, i), e;
    }();

    t.CustomEvent = i;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = n(8);
    Object.keys(o).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return o[e];
        }
      });
    });
    var r = n(24);
    Object.keys(r).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return r[e];
        }
      });
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.autoLoad = function (e) {
      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
        stripFolders: 1
      };
      return e.keys().map(function (n) {
        return function (e, t, n) {
          var o = function (e, t) {
            var n = function (e, t) {
              return function (e) {
                if (Array.isArray(e)) return e;
              }(e) || function (e, t) {
                var n = [],
                    o = !0,
                    r = !1,
                    i = void 0;

                try {
                  for (var a, l = e[Symbol.iterator](); !(o = (a = l.next()).done) && (n.push(a.value), !t || n.length !== t); o = !0);
                } catch (e) {
                  r = !0, i = e;
                } finally {
                  try {
                    o || null == l.return || l.return();
                  } finally {
                    if (r) throw i;
                  }
                }

                return n;
              }(e, t) || function () {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }();
            }(e.match(/^(?:\.\/)?([A-Z]{1}[A-Za-z]+|[a-z\/]+\/[A-Z]{1}[A-Za-z]+)(?:\.js?)$/) || [], 2)[1];

            if (n) {
              for (var o = 0; o < t; o++) n = n.replace(/^([a-zA-Z]+\/)/, "");

              return n.replace(/([A-Z])/g, "-$1").replace(/^-/, "").replace(/\/-/g, "/").replace(/\//g, "--").toLowerCase();
            }

            return !1;
          }(t, n.stripFolders);

          if (o) return function (e, t) {
            var n = e.default;
            if ("function" == typeof n) return {
              slug: t,
              ComponentConstructor: n
            };
            return !1;
          }(e(t), o);
          return !1;
        }(e, n, t);
      }).filter(function (e) {
        return e;
      });
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = n(10);
    Object.keys(o).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return o[e];
        }
      });
    });
    var r = n(34);
    Object.keys(r).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return r[e];
        }
      });
    });
    var i = n(35);
    Object.keys(i).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return i[e];
        }
      });
    });
    var a = n(5);
    Object.keys(a).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return a[e];
        }
      });
    });
    var l = n(6);
    Object.keys(l).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return l[e];
        }
      });
    });
    var u = n(8);
    Object.keys(u).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return u[e];
        }
      });
    });
    var s = n(2);
    Object.keys(s).forEach(function (e) {
      "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
        enumerable: !0,
        get: function get() {
          return s[e];
        }
      });
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Application = void 0;
    var o,
        r = (o = n(11)) && o.__esModule ? o : {
      default: o
    },
        i = n(13),
        a = n(14),
        l = n(1);

    function u(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function s(e, t, n) {
      return t && u(e.prototype, t), n && u(e, n), e;
    }

    var c = function () {
      function e() {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document.body,
            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i.defaultSchema,
            o = arguments.length > 2 ? arguments[2] : void 0;
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.element = t, this.schema = n, this.props = o, this.manager = new a.Manager(this), this.customEvents = l.customEvents, this.plugins = new Set();
      }

      return s(e, null, [{
        key: "start",
        value: function value(t, n, o) {
          var r = new e(t, n, o);
          return r.start(), r;
        }
      }]), s(e, [{
        key: "start",
        value: function value() {
          this.manager.start();
        }
      }, {
        key: "stop",
        value: function value() {
          this.manager.stop();
        }
      }, {
        key: "register",
        value: function value(e, t) {
          for (var n = arguments.length, o = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++) o[r - 2] = arguments[r];

          this.manager.addModule({
            slug: e,
            ComponentConstructor: t
          }, !1, o);
        }
      }, {
        key: "load",
        value: function value(e) {
          var t = this;
          (Array.isArray(e) ? e : [e]).forEach(function (e) {
            return t.manager.addModule(e);
          });
        }
      }, {
        key: "init",
        value: function value(e, t) {
          for (var n = arguments.length, o = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++) o[r - 2] = arguments[r];

          return this.manager.addModule({
            slug: e,
            ComponentConstructor: t
          }, !0, o), this.components.find(function (e) {
            return e instanceof t;
          });
        }
      }, {
        key: "unload",
        value: function value(e) {
          var t = this;
          (Array.isArray(e) ? e : [e]).forEach(function (e) {
            return t.manager.removeModule(e);
          });
        }
      }, {
        key: "instanceByElement",
        value: function value(e) {
          return this._getInstanceByElement(e);
        }
      }, {
        key: "instanceByElementAsync",
        value: function value(e) {
          var t = this;
          return this._nextTask().then(function () {
            return t._getInstanceByElement(e);
          });
        }
      }, {
        key: "_getInstanceByElement",
        value: function value(e) {
          return this.components.find(function (t) {
            return t.$el === e;
          });
        }
      }, {
        key: "instancesByComponent",
        value: function value(e) {
          return this._getInstancesByComponent(e);
        }
      }, {
        key: "instancesByComponentAsync",
        value: function value(e) {
          var t = this;
          return this._nextTask().then(function () {
            return t._getInstancesByComponent(e);
          });
        }
      }, {
        key: "_getInstancesByComponent",
        value: function value(e) {
          return this.components.filter(function (t) {
            return t instanceof e;
          });
        }
      }, {
        key: "_nextTask",
        value: function value() {
          return new Promise(function (e) {
            setTimeout(function () {
              e();
            }, 0);
          });
        }
      }, {
        key: "use",
        value: function value(e, t, n) {
          this.customEvents.types.has(e) && this.handleError("oups", "This event type already exists [".concat(e, "]")), this.customEvents.add(e, t, n);
        }
      }, {
        key: "extend",
        value: function value(e) {
          e.init(), this.plugins.add(e);
        }
      }, {
        key: "handleError",
        value: function value(e, t) {
          throw new Error("🤦 ".concat(r.default.random(), "! ").concat(t, " \n ").concat(e));
        }
      }, {
        key: "components",
        get: function get() {
          return this.manager.contexts.map(function (e) {
            return e.component;
          });
        }
      }, {
        key: "events",
        get: function get() {
          return this.customEvents.events;
        }
      }]), e;
    }();

    t.Application = c;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.default = void 0;
    var o,
        r = (o = n(12)) && o.__esModule ? o : {
      default: o
    };
    var i = {
      all: r.default,
      random: function random() {
        return r.default[Math.floor(Math.random() * r.default.length)];
      }
    };
    t.default = i;
  }, function (e) {
    e.exports = ["Holy Agility", "Holy Almost", "Holy Alphabet", "Holy Alps", "Holy Alter Ego", "Holy Anagram", "Holy Apparition", "Holy Armadillo", "Holy Armour Plate", "Holy Ashtray", "Holy Asp", "Holy Astronomy", "Holy Astringent Plum-like Fruit", "Holy Audubon", "Holy Backfire", "Holy Ball And Chain", "Holy Bank Balance", "Holy Bankruptcy", "Holy Banks", "Holy Bargain Basements", "Holy Barracuda", "Holy Bat Logic", "Holy Bat Trap", "Holy Batman", "Holy Benedict Arnold", "Holy Bijou", "Holy Bikini", "Holy Bill Of Rights", "Holy Birthday Cake", "Holy Black Beard", "Holy Blackout", "Holy Blank Cartridge", "Holy Blizzard", "Holy Blonde Mackerel Ash", "Holy Bluebeard", "Holy Bouncing Boiler Plate", "Holy Bowler", "Holy Bullseye", "Holy Bunions", "Holy Caffeine", "Holy Camouflage", "Holy Captain Nemo", "Holy Caruso", "Holy Catastrophe", "Holy Cat(s)", "Holy Chicken Coop", "Holy Chilblains", "Holy Chocolate Eclair", "Holy Cinderella", "Holy Cinemascope", "Holy Cliche", "Holy Cliffhangers", "Holy Clockwork", "Holy Clockworks", "Holy Cofax You Mean", "Holy Coffin Nails", "Holy Cold Creeps", "Holy Complications", "Holy Conflagration", "Holy Contributing to the Delinquency of Minors", "Holy Corpuscles", "Holy Cosmos", "Holy Costume Party", "Holy Crack Up", "Holy Crickets", "Holy Crossfire", "Holy Crucial Moment", "Holy Cryptology", "Holy D'artagnan", "Holy Davy Jones", "Holy Detonator", "Holy Disappearing Act", "Holy Distortion", "Holy Diversionary Tactics", "Holy Dr. Jekyll and Mr. Hyde", "Holy Egg Shells", "Holy Encore", "Holy Endangered Species", "Holy Epigrams", "Holy Escape-hatch", "Holy Explosion", "Holy Fate-worse-than-death", "Holy Felony", "Holy Finishing-touches", "Holy Fireworks", "Holy Firing Squad", "Holy Fishbowl", "Holy Flight Plan", "Holy Flip-flop", "Holy Flood Gate", "Holy Floor Covering", "Holy Flypaper", "Holy Fly Trap", "Holy Fog", "Holy Forecast", "Holy Fork In The Road", "Holy Fourth Amendment", "Holy Fourth Of July", "Holy Frankenstein", "Holy Frankenstein It's Alive", "Holy Fratricide", "Holy Frogman", "Holy Fruit Salad", "Holy Frying Towels", "Holy Funny Bone", "Holy Gall", "Holy Gambles", "Holy Gemini", "Holy Geography", "Holy Ghost Writer", "Holy Giveaways", "Holy Glow Pot", "Holy Golden Gate", "Holy Graf Zeppelin", "Holy Grammar", "Holy Graveyards", "Holy Greed", "Holy Green Card", "Holy Greetings-cards", "Holy Guacamole", "Holy Guadalcanal", "Holy Gullibility", "Holy Gunpowder", "Holy Haberdashery", "Holy Hailstorm", "Holy Hairdo", "Holy Hallelujah", "Holy Halloween", "Holy Hallucination", "Holy Hamburger", "Holy Hamlet", "Holy Hamstrings", "Holy Happenstance", "Holy Hardest Metal In The World", "Holy Harem", "Holy Harshin", "Holy Haziness", "Holy Headache", "Holy Headline", "Holy Heart Failure", "Holy Heartbreak", "Holy Heidelberg", "Holy Helmets", "Holy Helplessness", "Holy Here We Go Again", "Holy Hi-fi", "Holy Hieroglyphic", "Holy High-wire", "Holy Hijack", "Holy Hijackers", "Holy History", "Holy Hoaxes", "Holy Hole In A Donut", "Holy Hollywood", "Holy Holocaust", "Holy Homecoming", "Holy Homework", "Holy Homicide", "Holy Hoodwink", "Holy Hoof Beats", "Holy Hors D'Oeuvre", "Holy Horseshoes", "Holy Hostage", "Holy Hot Foot", "Holy Houdini", "Holy Human Collectors Item", "Holy Human Pearls", "Holy Human Pressure Cookers", "Holy Human Surfboards", "Holy Hunting Horn", "Holy Hurricane", "Holy Hutzpa", "Holy Hydraulics", "Holy Hypnotism", "Holy Hypodermics", "Holy Ice Picks", "Holy Ice Skates", "Holy Iceberg", "Holy Impossibility", "Holy Impregnability", "Holy Incantation", "Holy Inquisition", "Holy Interplanetary Yardstick", "Holy Interruptions", "Holy Iodine", "Holy IT and T", "Holy Jack In The Box", "Holy Jackpot", "Holy Jail Break", "Holy Jaw Breaker", "Holy Jelly Molds", "Holy Jet Set", "Holy Jigsaw Puzzles", "Holy Jitter Bugs", "Holy Joe", "Holy Journey To The Center Of The Earth", "Holy Jumble", "Holy Jumpin' Jiminy", "Holy Karats", "Holy Key Hole", "Holy Key Ring", "Holy Kilowatts", "Holy Kindergarten", "Holy Knit One Purl Two", "Holy Knock Out Drops", "Holy Known Unknown Flying Objects", "Holy Kofax", "Holy Las Vegas", "Holy Leopard", "Holy Levitation", "Holy Liftoff", "Holy Living End", "Holy Lodestone", "Holy Long John Silver", "Holy Looking Glass", "Holy Love Birds", "Holy Luther Burbank", "Holy Madness", "Holy Magic Lantern", "Holy Magician", "Holy Main Springs", "Holy Marathon", "Holy Mashed Potatoes", "Holy Masquerade", "Holy Matador", "Holy Mechanical Armies", "Holy Memory Bank", "Holy Merlin Magician", "Holy Mermaid", "Holy Merry Go Around", "Holy Mesmerism", "Holy Metronome", "Holy Miracles", "Holy Miscast", "Holy Missing Relatives", "Holy Molars", "Holy Mole Hill", "Holy Mucilage", "Holy Multitudes", "Holy Murder", "Holy Mush", "Holy Naive", "Holy New Year's Eve", "Holy Nick Of Time", "Holy Nightmare", "Holy Non Sequiturs", "Holy Oleo", "Holy Olfactory", "Holy One Track Bat Computer Mind", "Holy Oversight", "Holy Oxygen", "Holy Paderewski", "Holy Paraffin", "Holy Perfect Pitch", "Holy Pianola", "Holy Pin Cushions", "Holy Polar Front", "Holy Polar Ice Sheet", "Holy Polaris", "Holy Popcorn", "Holy Potluck", "Holy Pressure Cooker", "Holy Priceless Collection of Etruscan Snoods", "Holy Pseudonym", "Holy Purple Cannibals", "Holy Puzzlers", "Holy Rainbow", "Holy Rats In A Trap", "Holy Ravioli", "Holy Razors Edge", "Holy Recompense", "Holy Red Herring", "Holy Red Snapper", "Holy Reincarnation", "Holy Relief", "Holy Remote Control Robot", "Holy Reshevsky", "Holy Return From Oblivion", "Holy Reverse Polarity", "Holy Rheostat", "Holy Ricochet", "Holy Rip Van Winkle", "Holy Rising Hemlines", "Holy Roadblocks", "Holy Robert Louis Stevenson", "Holy Rock Garden", "Holy Rocking Chair", "Holy Romeo And Juliet", "Holy Rudder", "Holy Safari", "Holy Sarcophagus", "Holy Sardine", "Holy Scalding", "Holy Schizophrenia", "Holy Sedatives", "Holy Self Service", "Holy Semantics", "Holy Serpentine", "Holy Sewer Pipe", "Holy Shamrocks", "Holy Sherlock Holmes", "Holy Show-Ups", "Holy Showcase", "Holy Shrinkage", "Holy Shucks", "Holy Skull Tap", "Holy Sky Rocket", "Holy Slipped Disc", "Holy Smoke", "Holy Smokes", "Holy Smokestack", "Holy Snowball", "Holy Sonic Booms", "Holy Special Delivery", "Holy Spider Webs", "Holy Split Seconds", "Holy Squirrel Cage", "Holy Stalactites", "Holy Stampede", "Holy Standstills", "Holy Steam Valve", "Holy Stew Pot", "Holy Stomach Aches", "Holy Stratosphere", "Holy Stuffing", "Holy Subliminal", "Holy Sudden Incapacitation", "Holy Sundials", "Holy Surprise Party", "Holy Switch A Roo", "Holy Taj Mahal", "Holy Tartars", "Holy Taxation", "Holy Taxidermy", "Holy Tee Shot", "Holy Ten Toes", "Holy Terminology", "Holy Time Bomb", "Holy Tintinnabulation", "Holy Tipoffs", "Holy Titanic", "Holy Tome", "Holy Toreador", "Holy Trampoline", "Holy Transistors", "Holy Travel Agent", "Holy Trickery", "Holy Triple Feature", "Holy Trolls And Goblins", "Holy Tuxedo", "Holy Uncanny Photographic Mental Processes", "Holy Understatements", "Holy Underwritten Metropolis", "Holy Unlikelihood", "Holy Unrefillable Prescriptions", "Holy Vat", "Holy Venezuela", "Holy Vertebrae", "Holy Voltage", "Holy Waste Of Energy", "Holy Wayne Manor", "Holy Weaponry", "Holy Wedding Cake", "Holy Wernher von Braun", "Holy Whiskers", "Holy Wigs", "Holy Zorro"];
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.defaultSchema = void 0;
    t.defaultSchema = {
      componentAttribute: "data-component",
      refAttribute: "data-ref"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Manager = void 0;
    var o = n(15),
        r = n(3);

    function i(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var a = function () {
      function e(t) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.application = t, this.observer = new r.TokenObserver(this.element, this.componentAttribute, this), this.modulesBySlug = new Map();
      }

      var t, n, a;
      return t = e, (n = [{
        key: "start",
        value: function value() {
          this.observer.start();
        }
      }, {
        key: "stop",
        value: function value() {
          this.observer.stop();
        }
      }, {
        key: "addModule",
        value: function value(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n = arguments.length > 2 ? arguments[2] : void 0,
              r = e.slug;
          this.removeModule(r);
          var i = new o.Module(this.application, e, n);
          this.modulesBySlug.set(r, i), this._initModule(i, t);
        }
      }, {
        key: "removeModule",
        value: function value(e) {
          var t = this.modulesBySlug.get(e);
          t && (this.modulesBySlug.delete(e), this._destroyModule(t));
        }
      }, {
        key: "elementMatchedToken",
        value: function value(e, t) {
          this._initModuleBySlug(t, e);
        }
      }, {
        key: "elementUnmatchedToken",
        value: function value(e, t) {
          this._destroyModuleBySlug(t, e);
        }
      }, {
        key: "_initModule",
        value: function value(e, t) {
          var n = this.observer.getElementsMatchingToken(e.slug);
          if (t) e.initNoElement(e.slug, e.args);else {
            var o = !0,
                r = !1,
                i = void 0;

            try {
              for (var a, l = n[Symbol.iterator](); !(o = (a = l.next()).done); o = !0) {
                var u = a.value;
                e.initElement(u, e.args);
              }
            } catch (e) {
              r = !0, i = e;
            } finally {
              try {
                o || null == l.return || l.return();
              } finally {
                if (r) throw i;
              }
            }
          }
        }
      }, {
        key: "_destroyModule",
        value: function value(e) {
          var t = e.contexts,
              n = !0,
              o = !1,
              r = void 0;

          try {
            for (var i, a = t[Symbol.iterator](); !(n = (i = a.next()).done); n = !0) {
              var l = i.value.element;
              e.destroyElement(l);
            }
          } catch (e) {
            o = !0, r = e;
          } finally {
            try {
              n || null == a.return || a.return();
            } finally {
              if (o) throw r;
            }
          }
        }
      }, {
        key: "_initModuleBySlug",
        value: function value(e, t) {
          var n = this.modulesBySlug.get(e);
          n && n.initElement(t, n.args);
        }
      }, {
        key: "_destroyModuleBySlug",
        value: function value(e, t) {
          var n = this.modulesBySlug.get(e);
          n && n.destroyElement(t);
        }
      }, {
        key: "schema",
        get: function get() {
          return this.application.schema;
        }
      }, {
        key: "element",
        get: function get() {
          return this.application.element;
        }
      }, {
        key: "componentAttribute",
        get: function get() {
          return this.schema.componentAttribute;
        }
      }, {
        key: "modules",
        get: function get() {
          return Array.from(this.modulesBySlug.values());
        }
      }, {
        key: "contexts",
        get: function get() {
          return this.modules.reduce(function (e, t) {
            return e.concat(Array.from(t.contexts));
          }, []);
        }
      }]) && i(t.prototype, n), a && i(t, a), e;
    }();

    t.Manager = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Module = void 0;
    var o = n(16);

    function r(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var i = function () {
      function e(t, n, o) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.application = t, this.definition = n, this.args = o, this.contextsByElement = new WeakMap(), this.contextsByNoElement = new Map(), this.initializedContexts = new Set();
      }

      var t, n, i;
      return t = e, (n = [{
        key: "initElement",
        value: function value(e, t) {
          var n = this._fetchContextForElement(e, t);

          n && !this.initializedContexts.has(n) && (this.initializedContexts.add(n), n.init(), n.bindAll());
        }
      }, {
        key: "initNoElement",
        value: function value(e, t) {
          var n = this._fetchContextForNoElement(e, t);

          n && !this.initializedContexts.has(n) && (this.initializedContexts.add(n), n.bindAll());
        }
      }, {
        key: "destroyElement",
        value: function value(e) {
          var t = this._fetchContextForElement(e);

          t && this.initializedContexts.has(t) && (this.initializedContexts.delete(t), t.unbindAll(), t.unsubscribeAll(), t.destroy());
        }
      }, {
        key: "destroyNoElement",
        value: function value(e) {
          var t = this._fetchContextForNoElement(e);

          t && this.initializedContexts.has(t) && (this.initializedContexts.delete(t), t.unbindAll(), t.unsubscribeAll(), t.destroy());
        }
      }, {
        key: "_fetchContextForElement",
        value: function value(e, t) {
          var n = this.contextsByElement.get(e);
          return n || (n = new o.Context(this, e, t), this.contextsByElement.set(e, n)), n;
        }
      }, {
        key: "_fetchContextForNoElement",
        value: function value(e, t) {
          var n = this.contextsByNoElement.get(e);
          return n || (n = new o.Context(this, null, t), this.contextsByNoElement.set(e, n)), n;
        }
      }, {
        key: "slug",
        get: function get() {
          return this.definition.slug;
        }
      }, {
        key: "ComponentConstructor",
        get: function get() {
          return this.definition.ComponentConstructor;
        }
      }, {
        key: "contexts",
        get: function get() {
          return Array.from(this.initializedContexts);
        }
      }]) && r(t.prototype, n), i && r(t, i), e;
    }();

    t.Module = i;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Context = void 0;
    var o = n(17);

    function r(e, t, n) {
      return (r = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (e) {
          return !1;
        }
      }() ? Reflect.construct : function (e, t, n) {
        var o = [null];
        o.push.apply(o, t);
        var r = new (Function.bind.apply(e, o))();
        return n && i(r, n.prototype), r;
      }).apply(null, arguments);
    }

    function i(e, t) {
      return (i = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    function a(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];

          return n;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }

    function l(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var u = function () {
      function e(t, n, i) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.module = t, this.element = n;
        var l = i || [null],
            u = this.module.application.props;
        if (this.scope = new o.Scope(this.schema, this.slug, n, u), n) try {
          this.component = r(t.ComponentConstructor, [this].concat(a(l))), this.component.load();
        } catch (e) {
          this.handleError(e, "loading component [".concat(this.slug, "]"));
        } else this.component = r(t.ComponentConstructor, [this].concat(a(l))), this.init();
      }

      var t, n, i;
      return t = e, (n = [{
        key: "init",
        value: function value() {
          try {
            this.component.init();
          } catch (e) {
            this.handleError(e, "initializing component [".concat(this.slug, "]"));
          }
        }
      }, {
        key: "destroy",
        value: function value() {
          try {
            this.component.destroy();
          } catch (e) {
            this.handleError(e, "destroying component [".concat(this.slug, "]"));
          }
        }
      }, {
        key: "bindAll",
        value: function value() {
          try {
            this.component.bindAll();
          } catch (e) {
            this.handleError(e, "binding component [".concat(this.slug, "]"));
          }
        }
      }, {
        key: "unbindAll",
        value: function value() {
          try {
            this.component.unbindAll();
          } catch (e) {
            this.handleError(e, "unbinding component [".concat(this.slug, "]"));
          }
        }
      }, {
        key: "unsubscribeAll",
        value: function value() {
          try {
            this.component.unsubscribeAll();
          } catch (e) {
            this.handleError(e, "unsubscribing component [".concat(this.slug, "]"));
          }
        }
      }, {
        key: "handleError",
        value: function value(e, t) {
          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
              o = this.identifier,
              r = this.component,
              i = this.element;
          n = Object.assign({
            identifier: o,
            component: r,
            element: i
          }, n), this.application.handleError(e, t, n);
        }
      }, {
        key: "application",
        get: function get() {
          return this.module.application;
        }
      }, {
        key: "slug",
        get: function get() {
          return this.module.slug;
        }
      }, {
        key: "schema",
        get: function get() {
          return this.application.schema;
        }
      }]) && l(t.prototype, n), i && l(t, i), e;
    }();

    t.Context = u;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Scope = void 0;
    var o = n(18);

    function r(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var i = function () {
      function e(t, n, r, i) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.schema = t, this.slug = n, this.element = r, this.props = i, this.data = new o.Data(this);
      }

      var t, n, i;
      return t = e, (n = [{
        key: "getRefs",
        value: function value() {
          for (var e = {}, t = this.element.querySelectorAll(this.refSelector), n = Array.from(t), o = 0; o < n.length; o++) {
            var r = n[o],
                i = this.getRefName(r);
            e[i] ? Array.isArray(e[i]) ? e[i].push(r) : e[i] = [e[i], r] : e[i] = r;
          }

          return e;
        }
      }, {
        key: "getRefName",
        value: function value(e) {
          var t = this;
          return e.getAttribute(this.refAttribute).split(" ").find(function (e) {
            return e.match("".concat(t.slug, "."));
          }).replace("".concat(this.slug, "."), "");
        }
      }, {
        key: "refs",
        get: function get() {
          return this.getRefs();
        }
      }, {
        key: "refAttribute",
        get: function get() {
          return this.schema.refAttribute;
        }
      }, {
        key: "refSelector",
        get: function get() {
          return "[".concat(this.refAttribute, "*='").concat(this.slug, ".']");
        }
      }]) && r(t.prototype, n), i && r(t, i), e;
    }();

    t.Scope = i;
  }, function (e, t, n) {
    "use strict";

    function o(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Data = void 0;

    var r = function () {
      function e(t) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.scope = t;
      }

      var t, n, r;
      return t = e, (n = [{
        key: "get",
        value: function value(e) {
          var t = this._getFormattedKey(e);

          return this.element.getAttribute(t);
        }
      }, {
        key: "set",
        value: function value(e, t) {
          var n = this._getFormattedKey(e);

          return this.element.setAttribute(n, t), this.get(e);
        }
      }, {
        key: "has",
        value: function value(e) {
          var t = this._getFormattedKey(e);

          return this.element.hasAttribute(t);
        }
      }, {
        key: "delete",
        value: function value(e) {
          if (this.has(e)) {
            var t = this._getFormattedKey(e);

            return this.element.removeAttribute(t), !0;
          }

          return !1;
        }
      }, {
        key: "_getFormattedKey",
        value: function value(e) {
          return "data-".concat(this.slug, "-").concat(e.toString().replace(/([A-Z])/g, function (e, t) {
            return "-".concat(t.toLowerCase());
          }));
        }
      }, {
        key: "element",
        get: function get() {
          return this.scope.element;
        }
      }, {
        key: "slug",
        get: function get() {
          return this.scope.slug;
        }
      }]) && o(t.prototype, n), r && o(t, r), e;
    }();

    t.Data = r;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.TokenObserver = void 0;
    var o = n(3),
        r = n(0);

    function i(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var a = function () {
      function e(t, n, i) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.attributeName = n, this.delegate = i, this.elementObserver = new o.ElementObserver(t, this), this.tokensByElement = new r.IndexedMultimap();
      }

      var t, n, a;
      return t = e, (n = [{
        key: "start",
        value: function value() {
          this.elementObserver.start();
        }
      }, {
        key: "stop",
        value: function value() {
          this.elementObserver.stop();
        }
      }, {
        key: "refresh",
        value: function value() {
          this.elementObserver.refresh();
        }
      }, {
        key: "getElementsMatchingToken",
        value: function value(e) {
          return this.tokensByElement.getKeysForValue(e);
        }
      }, {
        key: "matchElement",
        value: function value(e) {
          return e.hasAttribute(this.attributeName);
        }
      }, {
        key: "matchElementsInTree",
        value: function value() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.element,
              t = this.matchElement(e) ? [e] : [],
              n = Array.from(e.querySelectorAll(this.selector));
          return t.concat(n);
        }
      }, {
        key: "elementMatched",
        value: function value(e) {
          for (var t = Array.from(this._readTokenSetForElement(e)), n = 0; n < t.length; n++) {
            var o = t[n];

            this._elementMatchedToken(e, o);
          }
        }
      }, {
        key: "elementUnmatched",
        value: function value(e) {
          var t = this._getTokensForElement(e),
              n = !0,
              o = !1,
              r = void 0;

          try {
            for (var i, a = t[Symbol.iterator](); !(n = (i = a.next()).done); n = !0) {
              var l = i.value;

              this._elementUnmatchedToken(e, l);
            }
          } catch (e) {
            o = !0, r = e;
          } finally {
            try {
              n || null == a.return || a.return();
            } finally {
              if (o) throw r;
            }
          }
        }
      }, {
        key: "elementAttributeChanged",
        value: function value(e) {
          for (var t = this._readTokenSetForElement(e), n = Array.from(t), o = 0; o < n.length; o++) {
            var r = n[o];
            this.elementMatched(e, r);
          }

          var i = !0,
              a = !1,
              l = void 0;

          try {
            for (var u, s = this._getTokensForElement(e)[Symbol.iterator](); !(i = (u = s.next()).done); i = !0) {
              var c = u.value;
              t.has(c) || this.elementUnmatched(e, c);
            }
          } catch (e) {
            a = !0, l = e;
          } finally {
            try {
              i || null == s.return || s.return();
            } finally {
              if (a) throw l;
            }
          }
        }
      }, {
        key: "_elementMatchedToken",
        value: function value(e, t) {
          this.tokensByElement.has(e, t) || (this.tokensByElement.add(e, t), this.delegate.elementMatchedToken && this.delegate.elementMatchedToken(e, t, this.attributeName));
        }
      }, {
        key: "_elementUnmatchedToken",
        value: function value(e, t) {
          this.tokensByElement.has(e, t) && (this.tokensByElement.delete(e, t), this.delegate.elementUnmatchedToken && this.delegate.elementUnmatchedToken(e, t, this.attributeName));
        }
      }, {
        key: "_getTokensForElement",
        value: function value(e) {
          return this.tokensByElement.getValuesForKey(e);
        }
      }, {
        key: "_readTokenSetForElement",
        value: function value(e) {
          var t = new Set(),
              n = e.getAttribute(this.attributeName) || "",
              o = !0,
              r = !1,
              i = void 0;

          try {
            for (var a, l = n.split(/\s+/)[Symbol.iterator](); !(o = (a = l.next()).done); o = !0) {
              var u = a.value;
              u.length && t.add(u);
            }
          } catch (e) {
            r = !0, i = e;
          } finally {
            try {
              o || null == l.return || l.return();
            } finally {
              if (r) throw i;
            }
          }

          return t;
        }
      }, {
        key: "selector",
        get: function get() {
          return "[".concat(this.attributeName, "]");
        }
      }]) && i(t.prototype, n), a && i(t, a), e;
    }();

    t.TokenObserver = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.IndexedMultimap = void 0;
    var o = n(2),
        r = n(4);

    function i(e) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e;
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      })(e);
    }

    function a(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function l(e, t) {
      return !t || "object" !== i(t) && "function" != typeof t ? function (e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
      }(e) : t;
    }

    function u(e, t, n) {
      return (u = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (e, t, n) {
        var o = function (e, t) {
          for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = s(e)););

          return e;
        }(e, t);

        if (o) {
          var r = Object.getOwnPropertyDescriptor(o, t);
          return r.get ? r.get.call(n) : r.value;
        }
      })(e, t, n || e);
    }

    function s(e) {
      return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }

    function c(e, t) {
      return (c = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    var y = function (e) {
      function t() {
        var e;
        return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), (e = l(this, s(t).call(this))).keysByValue = new Map(), e;
      }

      var n, i, y;
      return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            writable: !0,
            configurable: !0
          }
        }), t && c(e, t);
      }(t, o.Multimap), n = t, (i = [{
        key: "add",
        value: function value(e, n) {
          u(s(t.prototype), "add", this).call(this, e, n), (0, r.add)(this.keysByValue, n, e);
        }
      }, {
        key: "delete",
        value: function value(e, n) {
          u(s(t.prototype), "delete", this).call(this, e, n), (0, r.del)(this.keysByValue, n, e);
        }
      }, {
        key: "hasValue",
        value: function value(e) {
          return this.keysByValue.has(e);
        }
      }, {
        key: "getKeysForValue",
        value: function value(e) {
          var t = this.keysByValue.get(e);
          return t ? Array.from(t) : [];
        }
      }, {
        key: "values",
        get: function get() {
          return Array.from(this.keysByValue.keys());
        }
      }]) && a(n.prototype, i), y && a(n, y), t;
    }();

    t.IndexedMultimap = y;
  }, function (e, t, n) {
    "use strict";

    function o(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.ElementObserver = void 0;

    var r = function () {
      function e(t, n) {
        var o = this;
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.element = t, this.delegate = n, this.started = !1, this.elements = new Set(), this.mutationObserver = new MutationObserver(function (e) {
          return o._processMutations(e);
        });
      }

      var t, n, r;
      return t = e, r = [{
        key: "elementFromNode",
        value: function value(e) {
          return e.nodeType === Node.ELEMENT_NODE && e;
        }
      }], (n = [{
        key: "start",
        value: function value() {
          this.started || (this.mutationObserver.observe(this.element, {
            attributes: !0,
            childList: !0,
            subtree: !0
          }), this.started = !0, this.refresh());
        }
      }, {
        key: "stop",
        value: function value() {
          this.started && (this.mutationObserver.takeRecords(), this.mutationObserver.disconnect(), this.started = !1);
        }
      }, {
        key: "refresh",
        value: function value() {
          if (this.started) {
            for (var e = new Set(this._matchElementsInTree()), t = Array.from(this.elements), n = 0; n < t.length; n++) {
              var o = t[n];
              e.has(o) || this._removeElement(o);
            }

            for (var r = Array.from(e), i = 0; i < r.length; i++) {
              var a = r[i];

              this._addElement(a);
            }
          }
        }
      }, {
        key: "_matchElement",
        value: function value(e) {
          return this.delegate.matchElement(e);
        }
      }, {
        key: "_matchElementsInTree",
        value: function value() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.element;
          return this.delegate.matchElementsInTree(e);
        }
      }, {
        key: "_processMutations",
        value: function value(e) {
          var t = !0,
              n = !1,
              o = void 0;

          try {
            for (var r, i = e[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
              var a = r.value;

              this._processMutation(a);
            }
          } catch (e) {
            n = !0, o = e;
          } finally {
            try {
              t || null == i.return || i.return();
            } finally {
              if (n) throw o;
            }
          }
        }
      }, {
        key: "_processMutation",
        value: function value(e) {
          "attributes" === e.type ? this._processAttributeChange(e.target, e.attributeName) : "childList" === e.type && (this._processRemovedNodes(e.removedNodes), this._processAddedNodes(e.addedNodes));
        }
      }, {
        key: "_processAttributeChange",
        value: function value(e, t) {
          var n = e;
          this.elements.has(n) ? this.delegate.elementAttributeChanged && this._matchElement(n) ? this.delegate.elementAttributeChanged(n, t) : this._removeElement(n) : this._matchElement(n) && this._addElement(n);
        }
      }, {
        key: "_processRemovedNodes",
        value: function value(e) {
          for (var t = Array.from(e), n = 0; n < t.length; n++) {
            var o = t[n];

            this._processNode(o, this._removeElement);
          }
        }
      }, {
        key: "_processAddedNodes",
        value: function value(e) {
          for (var t = Array.from(e), n = 0; n < t.length; n++) {
            var o = t[n];

            this._processNode(o, this._addElement);
          }
        }
      }, {
        key: "_processNode",
        value: function value(t, n) {
          var o = e.elementFromNode(t);

          if (o) {
            var r = !0,
                i = !1,
                a = void 0;

            try {
              for (var l, u = this._matchElementsInTree(o)[Symbol.iterator](); !(r = (l = u.next()).done); r = !0) {
                var s = l.value;
                n.call(this, s);
              }
            } catch (e) {
              i = !0, a = e;
            } finally {
              try {
                r || null == u.return || u.return();
              } finally {
                if (i) throw a;
              }
            }
          }
        }
      }, {
        key: "_addElement",
        value: function value(e) {
          this.elements.has(e) || (this.elements.add(e), this.delegate.elementMatched && this.delegate.elementMatched(e));
        }
      }, {
        key: "_removeElement",
        value: function value(e) {
          this.elements.has(e) && (this.elements.delete(e), this.delegate.elementUnmatched && this.delegate.elementUnmatched(e));
        }
      }]) && o(t.prototype, n), r && o(t, r), e;
    }();

    t.ElementObserver = r;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.customEvents = void 0;
    var o = n(0),
        r = n(5),
        i = n(6);

    function a(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    var l = new (function () {
      function e() {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this._types = new Set(), this._typesByScope = new o.Multimap(), this._eventByType = new Map(), this._componentsByType = new o.Multimap();
      }

      var t, n, l;
      return t = e, (n = [{
        key: "getScope",
        value: function value(e) {
          return this._typesByScope.getKeysForValue(e)[0];
        }
      }, {
        key: "getEvent",
        value: function value(e) {
          return this._eventByType.get(e);
        }
      }, {
        key: "add",
        value: function value(e, t) {
          var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              o = t || new i.CustomEvent(e, n),
              a = o.scope || "component";
          this._types.add(e), this._typesByScope.add(a, e), this._eventByType.set(e, o), "global" === a && r.ee.add(e, o.log);
        }
      }, {
        key: "bind",
        value: function value(e, t, n) {
          var o = this.getScope(e),
              i = this.getEvent(e);
          "global" === o ? (this._componentsByType.getValuesForKey(e).includes(t) || i.bind(t, r.ee, n), this._componentsByType.add(e, t)) : i.bind(t, r.ee, n);
        }
      }, {
        key: "unbind",
        value: function value(e, t) {
          var n = this.getScope(e),
              o = this.getEvent(e);
          "global" === n ? (this._componentsByType.delete(e, t), this._componentsByType.hasValue(t) || o.unbind(t, r.ee)) : o.unbind(t, r.ee);
        }
      }, {
        key: "events",
        get: function get() {
          return Array.from(this.types);
        }
      }, {
        key: "types",
        get: function get() {
          return this._types;
        }
      }]) && a(t.prototype, n), l && a(t, l), e;
    }())();
    t.customEvents = l;
  }, function (e, t, n) {
    "use strict";

    var o = Object.prototype.hasOwnProperty,
        r = "~";

    function i() {}

    function a(e, t, n) {
      this.fn = e, this.context = t, this.once = n || !1;
    }

    function l(e, t, n, o, i) {
      if ("function" != typeof n) throw new TypeError("The listener must be a function");
      var l = new a(n, o || e, i),
          u = r ? r + t : t;
      return e._events[u] ? e._events[u].fn ? e._events[u] = [e._events[u], l] : e._events[u].push(l) : (e._events[u] = l, e._eventsCount++), e;
    }

    function u(e, t) {
      0 == --e._eventsCount ? e._events = new i() : delete e._events[t];
    }

    function s() {
      this._events = new i(), this._eventsCount = 0;
    }

    Object.create && (i.prototype = Object.create(null), new i().__proto__ || (r = !1)), s.prototype.eventNames = function () {
      var e,
          t,
          n = [];
      if (0 === this._eventsCount) return n;

      for (t in e = this._events) o.call(e, t) && n.push(r ? t.slice(1) : t);

      return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(e)) : n;
    }, s.prototype.listeners = function (e) {
      var t = r ? r + e : e,
          n = this._events[t];
      if (!n) return [];
      if (n.fn) return [n.fn];

      for (var o = 0, i = n.length, a = new Array(i); o < i; o++) a[o] = n[o].fn;

      return a;
    }, s.prototype.listenerCount = function (e) {
      var t = r ? r + e : e,
          n = this._events[t];
      return n ? n.fn ? 1 : n.length : 0;
    }, s.prototype.emit = function (e, t, n, o, i, a) {
      var l = r ? r + e : e;
      if (!this._events[l]) return !1;
      var u,
          s,
          c = this._events[l],
          y = arguments.length;

      if (c.fn) {
        switch (c.once && this.removeListener(e, c.fn, void 0, !0), y) {
          case 1:
            return c.fn.call(c.context), !0;

          case 2:
            return c.fn.call(c.context, t), !0;

          case 3:
            return c.fn.call(c.context, t, n), !0;

          case 4:
            return c.fn.call(c.context, t, n, o), !0;

          case 5:
            return c.fn.call(c.context, t, n, o, i), !0;

          case 6:
            return c.fn.call(c.context, t, n, o, i, a), !0;
        }

        for (s = 1, u = new Array(y - 1); s < y; s++) u[s - 1] = arguments[s];

        c.fn.apply(c.context, u);
      } else {
        var f,
            h = c.length;

        for (s = 0; s < h; s++) switch (c[s].once && this.removeListener(e, c[s].fn, void 0, !0), y) {
          case 1:
            c[s].fn.call(c[s].context);
            break;

          case 2:
            c[s].fn.call(c[s].context, t);
            break;

          case 3:
            c[s].fn.call(c[s].context, t, n);
            break;

          case 4:
            c[s].fn.call(c[s].context, t, n, o);
            break;

          default:
            if (!u) for (f = 1, u = new Array(y - 1); f < y; f++) u[f - 1] = arguments[f];
            c[s].fn.apply(c[s].context, u);
        }
      }

      return !0;
    }, s.prototype.on = function (e, t, n) {
      return l(this, e, t, n, !1);
    }, s.prototype.once = function (e, t, n) {
      return l(this, e, t, n, !0);
    }, s.prototype.removeListener = function (e, t, n, o) {
      var i = r ? r + e : e;
      if (!this._events[i]) return this;
      if (!t) return u(this, i), this;
      var a = this._events[i];
      if (a.fn) a.fn !== t || o && !a.once || n && a.context !== n || u(this, i);else {
        for (var l = 0, s = [], c = a.length; l < c; l++) (a[l].fn !== t || o && !a[l].once || n && a[l].context !== n) && s.push(a[l]);

        s.length ? this._events[i] = 1 === s.length ? s[0] : s : u(this, i);
      }
      return this;
    }, s.prototype.removeAllListeners = function (e) {
      var t;
      return e ? (t = r ? r + e : e, this._events[t] && u(this, t)) : (this._events = new i(), this._eventsCount = 0), this;
    }, s.prototype.off = s.prototype.removeListener, s.prototype.addListener = s.prototype.on, s.prefixed = r, s.EventEmitter = s, e.exports = s;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.ucfirst = function (e) {
      return e.charAt(0).toUpperCase() + e.slice(1);
    }, t.lcfirst = function (e) {
      return e.charAt(0).toLowerCase() + e.slice(1);
    }, t.$parent = function e(t, n) {
      if (!t.parentNode || "function" != typeof t.parentNode.matches) return;
      if (t.parentNode.matches(n)) return t.parentNode;
      return e(t.parentNode, n);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.mixedEvents = void 0;
    var o = n(0),
        r = {
      enter: ["mouseenter", "touchstart"],
      leave: ["mouseleave", "touchend"],
      move: ["mousemove", "touchmove"],
      over: ["mouseover", "touchmove"],
      out: ["mouseout", "touchmove"]
    },
        i = new o.Multimap();
    t.mixedEvents = i, Object.keys(r).forEach(function (e) {
      r[e].forEach(function (t) {
        i.add(e, t);
      });
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.passiveEvents = void 0;
    t.passiveEvents = ["scroll", "wheel", "touchstart", "touchmove", "touchend"];
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.subscribers = void 0;
    var o = n(0);

    function r(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }

    function i(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function a(e, t, n) {
      return t && i(e.prototype, t), n && i(e, n), e;
    }

    var l = function () {
      function e(t) {
        r(this, e), this._component = t, this._callbacksByName = new o.Multimap();
      }

      return a(e, [{
        key: "on",
        value: function value(e, t) {
          return this._callbacksByName.add(e, t), this;
        }
      }, {
        key: "trigger",
        value: function value(e) {
          for (var t = this, n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++) o[r - 1] = arguments[r];

          this._callbacksByName.getValuesForKey(e).forEach(function (e) {
            e.apply.apply(e, [t._component].concat(o));
          });
        }
      }, {
        key: "component",
        get: function get() {
          return this._component;
        }
      }]), e;
    }(),
        u = new (function () {
      function e() {
        r(this, e), this._componentsBySlug = new o.Multimap(), this._subscribersBySlug = new o.Multimap();
      }

      return a(e, [{
        key: "add",
        value: function value(e, t) {
          if (this._componentsBySlug.has(t, e)) return this._subscribersBySlug.getValuesForKey(t).filter(function (t) {
            return t.component === e;
          })[0];
          var n = new l(e);
          return this._componentsBySlug.add(t, e), this._subscribersBySlug.add(t, n), n;
        }
      }, {
        key: "remove",
        value: function value(e) {
          var t = this;
          this._componentsBySlug.hasValue(e) && this._componentsBySlug.getKeysForValue(e).forEach(function (n) {
            t._componentsBySlug.delete(n, e), t._subscribersBySlug.getValuesForKey(n).forEach(function (o) {
              o.component === e && t._subscribersBySlug.delete(n, o);
            });
          });
        }
      }, {
        key: "emit",
        value: function value(e) {
          for (var t = e.slug, n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++) o[r - 1] = arguments[r];

          var i = o[0],
              a = o.slice(1);
          this._subscribersBySlug.hasKey(t) && this._subscribersBySlug.getValuesForKey(t).forEach(function (e) {
            e.trigger(i, a);
          });
        }
      }]), e;
    }())();

    t.subscribers = u;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Handler = void 0;
    var o,
        r = (o = n(29)) && o.__esModule ? o : {
      default: o
    },
        i = n(7),
        a = n(1);

    function l(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];

          return n;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }

    function u(e, t) {
      return function (e) {
        if (Array.isArray(e)) return e;
      }(e) || function (e, t) {
        var n = [],
            o = !0,
            r = !1,
            i = void 0;

        try {
          for (var a, l = e[Symbol.iterator](); !(o = (a = l.next()).done) && (n.push(a.value), !t || n.length !== t); o = !0);
        } catch (e) {
          r = !0, i = e;
        } finally {
          try {
            o || null == l.return || l.return();
          } finally {
            if (r) throw i;
          }
        }

        return n;
      }(e, t) || function () {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }();
    }

    function s(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function c(e, t, n) {
      return t && s(e.prototype, t), n && s(e, n), e;
    }

    var y = function () {
      function e(t) {
        !function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, e), this.context = t, this.plugins = t.module.application.plugins;
      }

      return c(e, null, [{
        key: "events",
        get: function get() {
          return this._events || Object.defineProperty(this, "_events", {
            value: Object.getOwnPropertyNames(this.prototype).filter(function (e) {
              return /^on/.test(e);
            }).map(function (e) {
              return (0, i.lcfirst)(e.slice(2));
            })
          })._events;
        }
      }]), c(e, [{
        key: "getMethod",
        value: function value(e) {
          var t = e;
          a.mixedEvents.hasValue(e) && this.constructor.events.includes(a.mixedEvents.getKeysForValue(e)[0]) && (t = u(a.mixedEvents.getKeysForValue(e), 1)[0]);
          var n = (0, i.ucfirst)(t);
          return "on".concat(n);
        }
      }, {
        key: "getCustomOptions",
        value: function value(e) {
          return this["options".concat((0, i.ucfirst)(e))] || !1;
        }
      }, {
        key: "getCategory",
        value: function value(e) {
          return a.customEvents.getScope(e) ? "custom" : a.mixedEvents.hasKey(e) ? "mixed" : !!this[this.getMethod(e)] && "native";
        }
      }, {
        key: "_bindEvent",
        value: function value(t) {
          var n = this,
              o = this.getCategory(t);

          switch (o || this.context.handleError(new Error(), "Unknown event type [".concat(t, "]")), o) {
            case "custom":
              a.customEvents.bind(t, this, this.getCustomOptions(t));
              break;

            case "mixed":
              a.mixedEvents.getValuesForKey(t).forEach(function (t) {
                n.context.element.addEventListener(t, n, e.getOptions(t));
              });
              break;

            case "native":
            default:
              this.context.element.addEventListener(t, this, e.getOptions(t));
          }
        }
      }, {
        key: "_unbindEvent",
        value: function value(t) {
          var n = this,
              o = this.getCategory(t);

          switch (o || this.context.handleError(new Error(), "Unknown event type [".concat(t, "]")), o) {
            case "custom":
              a.customEvents.unbind(t, this);
              break;

            case "mixed":
              a.mixedEvents.getValuesForKey(t).forEach(function (t) {
                n.context.element.removeEventListener(t, n, e.getOptions(t));
              });
              break;

            case "native":
            default:
              this.context.element.removeEventListener(t, this, e.getOptions(t));
          }
        }
      }, {
        key: "handleEvent",
        value: function value(e) {
          var t = this,
              n = a.mixedEvents.getKeysForValue(e.type)[0] || e.type,
              o = this["delegate".concat((0, i.ucfirst)(n))];

          if (o) {
            var r = !1,
                u = null;

            if ("string" == typeof o) {
              var s = l(this.context.element.querySelectorAll(o));
              u = e.target.matches(o) ? e.target : (0, i.$parent)(e.target, o), r = s.indexOf(u) >= 0;
            } else {
              r = (Array.isArray(o) || o instanceof NodeList ? l(o) : [o]).some(function (t) {
                return !(t !== e.target && !t.contains(e.target)) && (u = t, !0);
              });
            }

            r && (this[this.getMethod(e.type)](e, u), this.plugins.forEach(function (n) {
              n.handleEvent && n.handleEvent(t, e);
            }));
          } else this[this.getMethod(e.type)](e), this.plugins.forEach(function (n) {
            n.handleEvent && n.handleEvent(t, e);
          });
        }
      }, {
        key: "bindAll",
        value: function value() {
          var e = this,
              t = this.constructor.events || [];
          t.forEach(function (t) {
            e._bindEvent(t);
          }), this.plugins.forEach(function (n) {
            n.bindAll && n.bindAll(e, t);
          });
        }
      }, {
        key: "unbindAll",
        value: function value() {
          var e = this,
              t = this.constructor.events;
          t.forEach(function (t) {
            e._unbindEvent(t);
          }), this.plugins.forEach(function (n) {
            n.unbindAll && n.unbindAll(e, t);
          });
        }
      }, {
        key: "bind",
        value: function value(e) {
          this._bindEvent(e);
        }
      }, {
        key: "unbind",
        value: function value(e) {
          this._unbindEvent(e);
        }
      }, {
        key: "subscribe",
        value: function value(e) {
          return a.subscribers.add(this, e);
        }
      }, {
        key: "emit",
        value: function value() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];

          a.subscribers.emit.apply(a.subscribers, [this].concat(t));
        }
      }, {
        key: "unsubscribeAll",
        value: function value() {
          a.subscribers.remove(this);
        }
      }], [{
        key: "getOptions",
        value: function value(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
            capture: !1
          };
          return a.passiveEvents.includes(e) && (t.passive = !0), !0 === r.default.passiveEvents ? t : t.capture;
        }
      }]), e;
    }();

    t.Handler = y;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(30)),
        r = l(n(31)),
        i = l(n(32)),
        a = l(n(33));

    function l(e) {
      return e && e.__esModule ? e : {
        default: e
      };
    }

    var u = {
      state: {
        detectHover: o.default,
        detectPointer: r.default,
        detectTouchEvents: i.default,
        detectPassiveEvents: a.default
      },
      update: function update() {
        u.state.detectHover.update(), u.state.detectPointer.update(), u.state.detectTouchEvents.update(), u.state.detectPassiveEvents.update(), u.updateOnlyOwnProperties();
      },
      updateOnlyOwnProperties: function updateOnlyOwnProperties() {
        if ("undefined" != typeof window) {
          u.passiveEvents = u.state.detectPassiveEvents.hasSupport || !1, u.hasTouch = u.state.detectTouchEvents.hasSupport || !1, u.deviceType = (t = u.hasTouch, n = u.state.detectHover.anyHover, o = u.state.detectPointer.anyFine, r = u.state, t && (n || o) ? "hybrid" : t && Object.keys(r.detectHover).filter(function (e) {
            return "update" !== e;
          }).every(function (e) {
            return !1 === r.detectHover[e];
          }) && Object.keys(r.detectPointer).filter(function (e) {
            return "update" !== e;
          }).every(function (e) {
            return !1 === r.detectPointer[e];
          }) ? window.navigator && /android/.test(window.navigator.userAgent.toLowerCase()) ? "touchOnly" : "hybrid" : t ? "touchOnly" : "mouseOnly"), u.hasMouse = "touchOnly" !== u.deviceType, u.primaryInput = ("mouseOnly" === u.deviceType ? "mouse" : "touchOnly" === u.deviceType && "touch") || u.state.detectPointer.fine && "mouse" || u.state.detectPointer.coarse && "touch" || "mouse";
          /windows/.test(window.navigator.userAgent.toLowerCase()) && /chrome/.test(window.navigator.userAgent.toLowerCase()) && (e = parseInt(/Chrome\/([0-9.]+)/.exec(navigator.userAgent)[1], 10)) >= 59 && e < 62 && u.hasTouch && (u.deviceType = "hybrid", u.hasMouse = !0, u.primaryInput = "mouse");
        }

        var e, t, n, o, r;
      }
    };
    u.updateOnlyOwnProperties(), t.default = u;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = {
      update: function update() {
        "undefined" != typeof window && "function" == typeof window.matchMedia && (o.hover = window.matchMedia("(hover: hover)").matches, o.none = window.matchMedia("(hover: none)").matches || window.matchMedia("(hover: on-demand)").matches, o.anyHover = window.matchMedia("(any-hover: hover)").matches, o.anyNone = window.matchMedia("(any-hover: none)").matches || window.matchMedia("(any-hover: on-demand)").matches);
      }
    };
    o.update(), t.default = o;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = {
      update: function update() {
        "undefined" != typeof window && "function" == typeof window.matchMedia && (o.fine = window.matchMedia("(pointer: fine)").matches, o.coarse = window.matchMedia("(pointer: coarse)").matches, o.none = window.matchMedia("(pointer: none)").matches, o.anyFine = window.matchMedia("(any-pointer: fine)").matches, o.anyCoarse = window.matchMedia("(any-pointer: coarse)").matches, o.anyNone = window.matchMedia("(any-pointer: none)").matches);
      }
    };
    o.update(), t.default = o;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = {
      update: function update() {
        "undefined" != typeof window && (o.hasSupport = "ontouchstart" in window, o.browserSupportsApi = Boolean(window.TouchEvent));
      }
    };
    o.update(), t.default = o;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = {
      update: function update() {
        if ("undefined" != typeof window && "function" == typeof window.addEventListener) {
          var e = !1,
              t = Object.defineProperty({}, "passive", {
            get: function get() {
              e = !0;
            }
          }),
              n = function n() {};

          window.addEventListener("testPassiveEventSupport", n, t), window.removeEventListener("testPassiveEventSupport", n, t), o.hasSupport = e;
        }
      }
    };
    o.update(), t.default = o;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.mixComponent = t.Component = void 0;
    var o = n(1);

    function r(e) {
      return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e;
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      })(e);
    }

    function i(e, t, n) {
      return (i = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (e) {
          return !1;
        }
      }() ? Reflect.construct : function (e, t, n) {
        var o = [null];
        o.push.apply(o, t);
        var r = new (Function.bind.apply(e, o))();
        return n && h(r, n.prototype), r;
      }).apply(null, arguments);
    }

    function a(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];

          return n;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }

    function l(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }

    function u(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function s(e, t) {
      return !t || "object" !== r(t) && "function" != typeof t ? c(e) : t;
    }

    function c(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }

    function y(e) {
      return (y = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }

    function f(e, t) {
      if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, {
        constructor: {
          value: e,
          writable: !0,
          configurable: !0
        }
      }), t && h(e, t);
    }

    function h(e, t) {
      return (h = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    var d = function (e) {
      function t(e) {
        var n;
        l(this, t), (n = s(this, y(t).call(this, e))).context = e;
        var o = n.scope.props;
        if (o) for (var r in o) Object.prototype.hasOwnProperty.call(o, r) && (n[r] ? n.context.handleError("[".concat(r, "] already exists!"), "initializing props") : n[r] = o[r]);
        return n;
      }

      var n, r, i;
      return f(t, o.Handler), n = t, (r = [{
        key: "load",
        value: function value() {}
      }, {
        key: "init",
        value: function value() {}
      }, {
        key: "destroy",
        value: function value() {}
      }, {
        key: "scope",
        get: function get() {
          return this.context.scope;
        }
      }, {
        key: "$el",
        get: function get() {
          return this.scope.element;
        }
      }, {
        key: "$refs",
        get: function get() {
          return this.scope.refs;
        }
      }, {
        key: "slug",
        get: function get() {
          return this.scope.slug;
        }
      }, {
        key: "data",
        get: function get() {
          return this.scope.data;
        }
      }]) && u(n.prototype, r), i && u(n, i), t;
    }();

    t.Component = d;

    t.mixComponent = function () {
      for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];

      var o = function (e) {
        function n() {
          var e;
          l(this, n);

          for (var o = arguments.length, u = new Array(o), f = 0; f < o; f++) u[f] = arguments[f];

          var h = u[0],
              d = u.slice(1);
          return e = s(this, y(n).call(this, h)), t.forEach(function (t) {
            r(c(e), i(t, a(d)));
          }), e;
        }

        return f(n, d), n;
      }(),
          r = function r(e, t) {
        Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t)).forEach(function (n) {
          n.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/) || Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));
        });
      };

      return t.forEach(function (e) {
        r(o.prototype, e.prototype), r(o, e);
      }), o;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.mixNoComponent = t.NoComponent = void 0;
    var o = n(1);

    function r(e) {
      return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e;
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      })(e);
    }

    function i(e, t, n) {
      return (i = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (e) {
          return !1;
        }
      }() ? Reflect.construct : function (e, t, n) {
        var o = [null];
        o.push.apply(o, t);
        var r = new (Function.bind.apply(e, o))();
        return n && h(r, n.prototype), r;
      }).apply(null, arguments);
    }

    function a(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];

          return n;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }

    function l(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }

    function u(e, t) {
      for (var n = 0; n < t.length; n++) {
        var o = t[n];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }

    function s(e, t) {
      return !t || "object" !== r(t) && "function" != typeof t ? c(e) : t;
    }

    function c(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }

    function y(e) {
      return (y = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }

    function f(e, t) {
      if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, {
        constructor: {
          value: e,
          writable: !0,
          configurable: !0
        }
      }), t && h(e, t);
    }

    function h(e, t) {
      return (h = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    var d = function (e) {
      function t(e) {
        var n;
        l(this, t), (n = s(this, y(t).call(this, e))).context = e;
        var o = n.scope.props;
        if (o) for (var r in o) Object.prototype.hasOwnProperty.call(o, r) && (n[r] ? n.context.handleError("[".concat(r, "] already exists!"), "initializing props") : n[r] = o[r]);
        return n;
      }

      var n, r, i;
      return f(t, o.Handler), n = t, (r = [{
        key: "remove",
        value: function value() {
          this.context.module.destroyNoElement(this.slug);
        }
      }, {
        key: "init",
        value: function value() {}
      }, {
        key: "destroy",
        value: function value() {}
      }, {
        key: "scope",
        get: function get() {
          return this.context.scope;
        }
      }, {
        key: "slug",
        get: function get() {
          return this.scope.slug;
        }
      }]) && u(n.prototype, r), i && u(n, i), t;
    }();

    t.NoComponent = d;

    t.mixNoComponent = function () {
      for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];

      var o = function (e) {
        function n() {
          var e;
          l(this, n);

          for (var o = arguments.length, u = new Array(o), f = 0; f < o; f++) u[f] = arguments[f];

          var h = u[0],
              d = u.slice(1);
          return e = s(this, y(n).call(this, h)), t.forEach(function (t) {
            r(c(e), i(t, a(d)));
          }), e;
        }

        return f(n, d), n;
      }(),
          r = function r(e, t) {
        Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t)).forEach(function (n) {
          n.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/) || Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));
        });
      };

      return t.forEach(function (e) {
        r(o.prototype, e.prototype), r(o, e);
      }), o;
    };
  }]);
});

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(35);
/** Detect free variable `self`. */


var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */

var root = freeGlobal || freeSelf || Function('return this')();
module.exports = root;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(87),
    getValue = __webpack_require__(100);
/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */


function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["__extends"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return _assign; });
/* harmony export (immutable) */ __webpack_exports__["__rest"] = __rest;
/* harmony export (immutable) */ __webpack_exports__["__decorate"] = __decorate;
/* harmony export (immutable) */ __webpack_exports__["__param"] = __param;
/* harmony export (immutable) */ __webpack_exports__["__metadata"] = __metadata;
/* harmony export (immutable) */ __webpack_exports__["__awaiter"] = __awaiter;
/* harmony export (immutable) */ __webpack_exports__["__generator"] = __generator;
/* harmony export (immutable) */ __webpack_exports__["__exportStar"] = __exportStar;
/* harmony export (immutable) */ __webpack_exports__["__values"] = __values;
/* harmony export (immutable) */ __webpack_exports__["__read"] = __read;
/* harmony export (immutable) */ __webpack_exports__["__spread"] = __spread;
/* harmony export (immutable) */ __webpack_exports__["__spreadArrays"] = __spreadArrays;
/* harmony export (immutable) */ __webpack_exports__["__await"] = __await;
/* harmony export (immutable) */ __webpack_exports__["__asyncGenerator"] = __asyncGenerator;
/* harmony export (immutable) */ __webpack_exports__["__asyncDelegator"] = __asyncDelegator;
/* harmony export (immutable) */ __webpack_exports__["__asyncValues"] = __asyncValues;
/* harmony export (immutable) */ __webpack_exports__["__makeTemplateObject"] = __makeTemplateObject;
/* harmony export (immutable) */ __webpack_exports__["__importStar"] = __importStar;
/* harmony export (immutable) */ __webpack_exports__["__importDefault"] = __importDefault;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : new P(function (resolve) {
        resolve(result.value);
      }).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
function __exportStar(m, exports) {
  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
function __values(o) {
  var m = typeof Symbol === "function" && o[Symbol.iterator],
      i = 0;
  if (m) return m.call(o);
  return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));

  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = getInstance;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);


class App {
  constructor() {
    return __WEBPACK_IMPORTED_MODULE_0_kapla__["Application"].start();
  }

}

const instance = new App();
/**
 * Get Kapla instance from DOM element.
 *
 * @param {HTMLElement} parent DOM parent
 * @param {string} name Component name
 * @returns {Component} Kapla component instance
 */

function getInstance(parent, name) {
  const el = parent.querySelector("[data-component=\"".concat(name, "\"]"));
  return instance.instanceByElement(el);
}
/* harmony default export */ __webpack_exports__["a"] = (instance);

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export CSSPlugin */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CSSPlugin; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */


__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function () {
  /** @constructor **/
  var CSSPlugin = function CSSPlugin() {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["h" /* TweenPlugin */].call(this, "css");
    this._overwriteProps.length = 0;
    this.setRatio = CSSPlugin.prototype.setRatio; //speed optimization (avoid prototype lookup on this "hot" method)
  },
      _globals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.globals,
      _hasPriority,
      //turns true whenever a CSSPropTween instance is created that has a priority other than 0. This helps us discern whether or not we should spend the time organizing the linked list or not after a CSSPlugin's _onInitTween() method is called.
  _suffixMap,
      //we set this in _onInitTween() each time as a way to have a persistent variable we can use in other methods like _parse() without having to pass it around as a parameter and we keep _parse() decoupled from a particular CSSPlugin instance
  _cs,
      //computed style (we store this in a shared variable to conserve memory and make minification tighter
  _overwriteProps,
      //alias to the currently instantiating CSSPlugin's _overwriteProps array. We use this closure in order to avoid having to pass a reference around from method to method and aid in minification.
  _specialProps = {},
      p = CSSPlugin.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["h" /* TweenPlugin */]("css");

  p.constructor = CSSPlugin;
  CSSPlugin.version = "2.1.3";
  CSSPlugin.API = 2;
  CSSPlugin.defaultTransformPerspective = 0;
  CSSPlugin.defaultSkewType = "compensated";
  CSSPlugin.defaultSmoothOrigin = true;
  p = "px"; //we'll reuse the "p" variable to keep file size down

  CSSPlugin.suffixMap = {
    top: p,
    right: p,
    bottom: p,
    left: p,
    width: p,
    height: p,
    fontSize: p,
    padding: p,
    margin: p,
    perspective: p,
    lineHeight: ""
  };

  var _numExp = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
      _relNumExp = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
      _valuesExp = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
      //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like "1px 5px 20px rgb(255,102,51)"
  _valuesExpWithCommas = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b),?/gi,
      //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like "1px 5px 20px rgb(255,102,51)"
  _NaNExp = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
      //also allows scientific notation and doesn't kill the leading -/+ in -= and +=
  _suffixExp = /(?:\d|\-|\+|=|#|\.)*/g,
      _opacityExp = /opacity *= *([^)]*)/i,
      _opacityValExp = /opacity:([^;]*)/i,
      _alphaFilterExp = /alpha\(opacity *=.+?\)/i,
      _rgbhslExp = /^(rgb|hsl)/,
      _capsExp = /([A-Z])/g,
      _camelExp = /-([a-z])/gi,
      _urlExp = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
      //for pulling out urls from url(...) or url("...") strings (some browsers wrap urls in quotes, some don't when reporting things like backgroundImage)
  _camelFunc = function _camelFunc(s, g) {
    return g.toUpperCase();
  },
      _horizExp = /(?:Left|Right|Width)/i,
      _ieGetMatrixExp = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
      _ieSetMatrixExp = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
      _commasOutsideParenExp = /,(?=[^\)]*(?:\(|$))/gi,
      //finds any commas that are not within parenthesis
  _complexExp = /[\s,\(]/i,
      //for testing a string to find if it has a space, comma, or open parenthesis (clues that it's a complex value)
  _DEG2RAD = Math.PI / 180,
      _RAD2DEG = 180 / Math.PI,
      _forcePT = {},
      _dummyElement = {
    style: {}
  },
      _doc = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].document || {
    createElement: function createElement() {
      return _dummyElement;
    }
  },
      _createElement = function _createElement(type, ns) {
    var e = _doc.createElementNS ? _doc.createElementNS(ns || "http://www.w3.org/1999/xhtml", type) : _doc.createElement(type);
    return e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://greensock.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).
  },
      _tempDiv = _createElement("div"),
      _tempImg = _createElement("img"),
      _internals = CSSPlugin._internals = {
    _specialProps: _specialProps
  },
      //provides a hook to a few internal methods that we need to access from inside other plugins
  _agent = (__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].navigator || {}).userAgent || "",
      _autoRound,
      _reqSafariFix,
      //we won't apply the Safari transform fix until we actually come across a tween that affects a transform property (to maintain best performance).
  _isSafari,
      _isFirefox,
      //Firefox has a bug that causes 3D transformed elements to randomly disappear unless a repaint is forced after each update on each element.
  _isSafariLT6,
      //Safari (and Android 4 which uses a flavor of Safari) has a bug that prevents changes to "top" and "left" properties from rendering properly if changed on the same frame as a transform UNLESS we set the element's WebkitBackfaceVisibility to hidden (weird, I know). Doing this for Android 3 and earlier seems to actually cause other problems, though (fun!)
  _ieVers,
      _supportsOpacity = function () {
    //we set _isSafari, _ieVers, _isFirefox, and _supportsOpacity all in one function here to reduce file size slightly, especially in the minified version.
    var i = _agent.indexOf("Android"),
        a = _createElement("a");

    _isSafari = _agent.indexOf("Safari") !== -1 && _agent.indexOf("Chrome") === -1 && (i === -1 || parseFloat(_agent.substr(i + 8, 2)) > 3);
    _isSafariLT6 = _isSafari && parseFloat(_agent.substr(_agent.indexOf("Version/") + 8, 2)) < 6;
    _isFirefox = _agent.indexOf("Firefox") !== -1;

    if (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(_agent) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(_agent)) {
      _ieVers = parseFloat(RegExp.$1);
    }

    if (!a) {
      return false;
    }

    a.style.cssText = "top:1px;opacity:.55;";
    return /^0.55/.test(a.style.opacity);
  }(),
      _getIEOpacity = function _getIEOpacity(v) {
    return _opacityExp.test(typeof v === "string" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1;
  },
      _log = function _log(s) {
    //for logging messages, but in a way that won't throw errors in old versions of IE.
    if (__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].console) {
      console.log(s);
    }
  },
      _target,
      //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params
  _index,
      //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params
  _prefixCSS = "",
      //the non-camelCase vendor prefix like "-o-", "-moz-", "-ms-", or "-webkit-"
  _prefix = "",
      //camelCase vendor prefix like "O", "ms", "Webkit", or "Moz".
  // @private feed in a camelCase property name like "transform" and it will check to see if it is valid as-is or if it needs a vendor prefix. It returns the corrected camelCase property name (i.e. "WebkitTransform" or "MozTransform" or "transform" or null if no such property is found, like if the browser is IE8 or before, "transform" won't be found at all)
  _checkPropPrefix = function _checkPropPrefix(p, e) {
    e = e || _tempDiv;
    var s = e.style,
        a,
        i;

    if (s[p] !== undefined) {
      return p;
    }

    p = p.charAt(0).toUpperCase() + p.substr(1);
    a = ["O", "Moz", "ms", "Ms", "Webkit"];
    i = 5;

    while (--i > -1 && s[a[i] + p] === undefined) {}

    if (i >= 0) {
      _prefix = i === 3 ? "ms" : a[i];
      _prefixCSS = "-" + _prefix.toLowerCase() + "-";
      return _prefix + p;
    }

    return null;
  },
      _computedStyleScope = typeof window !== "undefined" ? window : _doc.defaultView || {
    getComputedStyle: function getComputedStyle() {}
  },
      _getComputedStyle = function _getComputedStyle(e) {
    return _computedStyleScope.getComputedStyle(e); //to avoid errors in Microsoft Edge, we need to call getComputedStyle() from a specific scope, typically window.
  },

  /**
   * @private Returns the css style for a particular property of an element. For example, to get whatever the current "left" css value for an element with an ID of "myElement", you could do:
   * var currentLeft = CSSPlugin.getStyle( document.getElementById("myElement"), "left");
   *
   * @param {!Object} t Target element whose style property you want to query
   * @param {!string} p Property name (like "left" or "top" or "marginTop", etc.)
   * @param {Object=} cs Computed style object. This just provides a way to speed processing if you're going to get several properties on the same element in quick succession - you can reuse the result of the getComputedStyle() call.
   * @param {boolean=} calc If true, the value will not be read directly from the element's "style" property (if it exists there), but instead the getComputedStyle() result will be used. This can be useful when you want to ensure that the browser itself is interpreting the value.
   * @param {string=} dflt Default value that should be returned in the place of null, "none", "auto" or "auto auto".
   * @return {?string} The current property value
   */
  _getStyle = CSSPlugin.getStyle = function (t, p, cs, calc, dflt) {
    var rv;
    if (!_supportsOpacity) if (p === "opacity") {
      //several versions of IE don't use the standard "opacity" property - they use things like filter:alpha(opacity=50), so we parse that here.
      return _getIEOpacity(t);
    }

    if (!calc && t.style[p]) {
      rv = t.style[p];
    } else if (cs = cs || _getComputedStyle(t)) {
      rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, "-$1").toLowerCase());
    } else if (t.currentStyle) {
      rv = t.currentStyle[p];
    }

    return dflt != null && (!rv || rv === "none" || rv === "auto" || rv === "auto auto") ? dflt : rv;
  },

  /**
   * @private Pass the target element, the property name, the numeric value, and the suffix (like "%", "em", "px", etc.) and it will spit back the equivalent pixel number.
   * @param {!Object} t Target element
   * @param {!string} p Property name (like "left", "top", "marginLeft", etc.)
   * @param {!number} v Value
   * @param {string=} sfx Suffix (like "px" or "%" or "em")
   * @param {boolean=} recurse If true, the call is a recursive one. In some browsers (like IE7/8), occasionally the value isn't accurately reported initially, but if we run the function again it will take effect.
   * @return {number} value in pixels
   */
  _convertToPixels = _internals.convertToPixels = function (t, p, v, sfx, recurse) {
    if (sfx === "px" || !sfx && p !== "lineHeight") {
      return v;
    }

    if (sfx === "auto" || !v) {
      return 0;
    }

    var horiz = _horizExp.test(p),
        node = t,
        style = _tempDiv.style,
        neg = v < 0,
        precise = v === 1,
        pix,
        cache,
        time;

    if (neg) {
      v = -v;
    }

    if (precise) {
      v *= 100;
    }

    if (p === "lineHeight" && !sfx) {
      //special case of when a simple lineHeight (without a unit) is used. Set it to the value, read back the computed value, and then revert.
      cache = _getComputedStyle(t).lineHeight;
      t.style.lineHeight = v;
      pix = parseFloat(_getComputedStyle(t).lineHeight);
      t.style.lineHeight = cache;
    } else if (sfx === "%" && p.indexOf("border") !== -1) {
      pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);
    } else {
      style.cssText = "border:0 solid red;position:" + _getStyle(t, "position") + ";line-height:0;";

      if (sfx === "%" || !node.appendChild || sfx.charAt(0) === "v" || sfx === "rem") {
        node = t.parentNode || _doc.body;

        if (_getStyle(node, "display").indexOf("flex") !== -1) {
          //Edge and IE11 have a bug that causes offsetWidth to report as 0 if the container has display:flex and the child is position:relative. Switching to position: absolute solves it.
          style.position = "absolute";
        }

        cache = node._gsCache;
        time = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.frame;

        if (cache && horiz && cache.time === time) {
          //performance optimization: we record the width of elements along with the ticker frame so that we can quickly get it again on the same tick (seems relatively safe to assume it wouldn't change on the same tick)
          return cache.width * v / 100;
        }

        style[horiz ? "width" : "height"] = v + sfx;
      } else {
        style[horiz ? "borderLeftWidth" : "borderTopWidth"] = v + sfx;
      }

      node.appendChild(_tempDiv);
      pix = parseFloat(_tempDiv[horiz ? "offsetWidth" : "offsetHeight"]);
      node.removeChild(_tempDiv);

      if (horiz && sfx === "%" && CSSPlugin.cacheWidths !== false) {
        cache = node._gsCache = node._gsCache || {};
        cache.time = time;
        cache.width = pix / v * 100;
      }

      if (pix === 0 && !recurse) {
        pix = _convertToPixels(t, p, v, sfx, true);
      }
    }

    if (precise) {
      pix /= 100;
    }

    return neg ? -pix : pix;
  },
      _calculateOffset = _internals.calculateOffset = function (t, p, cs) {
    //for figuring out "top" or "left" in px when it's "auto". We need to factor in margin with the offsetLeft/offsetTop
    if (_getStyle(t, "position", cs) !== "absolute") {
      return 0;
    }

    var dim = p === "left" ? "Left" : "Top",
        v = _getStyle(t, "margin" + dim, cs);

    return t["offset" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, "")) || 0);
  },
      // @private returns at object containing ALL of the style properties in camelCase and their associated values.
  _getAllStyles = function _getAllStyles(t, cs) {
    var s = {},
        i,
        tr,
        p;

    if (cs = cs || _getComputedStyle(t, null)) {
      if (i = cs.length) {
        while (--i > -1) {
          p = cs[i];

          if (p.indexOf("-transform") === -1 || _transformPropCSS === p) {
            //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed ("transform" and "WebkitTransform"), so we must weed out the extra one here.
            s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);
          }
        }
      } else {
        //some browsers behave differently - cs.length is always 0, so we must do a for...in loop.
        for (i in cs) {
          if (i.indexOf("Transform") === -1 || _transformProp === i) {
            //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed ("transform" and "WebkitTransform"), so we must weed out the extra one here.
            s[i] = cs[i];
          }
        }
      }
    } else if (cs = t.currentStyle || t.style) {
      for (i in cs) {
        if (typeof i === "string" && s[i] === undefined) {
          s[i.replace(_camelExp, _camelFunc)] = cs[i];
        }
      }
    }

    if (!_supportsOpacity) {
      s.opacity = _getIEOpacity(t);
    }

    tr = _getTransform(t, cs, false);
    s.rotation = tr.rotation;
    s.skewX = tr.skewX;
    s.scaleX = tr.scaleX;
    s.scaleY = tr.scaleY;
    s.x = tr.x;
    s.y = tr.y;

    if (_supports3D) {
      s.z = tr.z;
      s.rotationX = tr.rotationX;
      s.rotationY = tr.rotationY;
      s.scaleZ = tr.scaleZ;
    }

    if (s.filters) {
      delete s.filters;
    }

    return s;
  },
      // @private analyzes two style objects (as returned by _getAllStyles()) and only looks for differences between them that contain tweenable values (like a number or color). It returns an object with a "difs" property which refers to an object containing only those isolated properties and values for tweening, and a "firstMPT" property which refers to the first MiniPropTween instance in a linked list that recorded all the starting values of the different properties so that we can revert to them at the end or beginning of the tween - we don't want the cascading to get messed up. The forceLookup parameter is an optional generic object with properties that should be forced into the results - this is necessary for className tweens that are overwriting others because imagine a scenario where a rollover/rollout adds/removes a class and the user swipes the mouse over the target SUPER fast, thus nothing actually changed yet and the subsequent comparison of the properties would indicate they match (especially when px rounding is taken into consideration), thus no tweening is necessary even though it SHOULD tween and remove those properties after the tween (otherwise the inline styles will contaminate things). See the className SpecialProp code for details.
  _cssDif = function _cssDif(t, s1, s2, vars, forceLookup) {
    var difs = {},
        style = t.style,
        val,
        p,
        mpt;

    for (p in s2) {
      if (p !== "cssText") if (p !== "length") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf("Origin") === -1) if (typeof val === "number" || typeof val === "string") {
        difs[p] = val === "auto" && (p === "left" || p === "top") ? _calculateOffset(t, p) : (val === "" || val === "auto" || val === "none") && typeof s1[p] === "string" && s1[p].replace(_NaNExp, "") !== "" ? 0 : val; //if the ending value is defaulting ("" or "auto"), we check the starting value and if it can be parsed into a number (a string which could have a suffix too, like 700px), then we swap in 0 for "" or "auto" so that things actually tween.

        if (style[p] !== undefined) {
          //for className tweens, we must remember which properties already existed inline - the ones that didn't should be removed when the tween isn't in progress because they were only introduced to facilitate the transition between classes.
          mpt = new MiniPropTween(style, p, style[p], mpt);
        }
      }
    }

    if (vars) {
      for (p in vars) {
        //copy properties (except className)
        if (p !== "className") {
          difs[p] = vars[p];
        }
      }
    }

    return {
      difs: difs,
      firstMPT: mpt
    };
  },
      _dimensions = {
    width: ["Left", "Right"],
    height: ["Top", "Bottom"]
  },
      _margins = ["marginLeft", "marginRight", "marginTop", "marginBottom"],

  /**
   * @private Gets the width or height of an element
   * @param {!Object} t Target element
   * @param {!string} p Property name ("width" or "height")
   * @param {Object=} cs Computed style object (if one exists). Just a speed optimization.
   * @return {number} Dimension (in pixels)
   */
  _getDimension = function _getDimension(t, p, cs) {
    if ((t.nodeName + "").toLowerCase() === "svg") {
      //Chrome no longer supports offsetWidth/offsetHeight on SVG elements.
      return (cs || _getComputedStyle(t))[p] || 0;
    } else if (t.getCTM && _isSVG(t)) {
      return t.getBBox()[p] || 0;
    }

    var v = parseFloat(p === "width" ? t.offsetWidth : t.offsetHeight),
        a = _dimensions[p],
        i = a.length;
    cs = cs || _getComputedStyle(t, null);

    while (--i > -1) {
      v -= parseFloat(_getStyle(t, "padding" + a[i], cs, true)) || 0;
      v -= parseFloat(_getStyle(t, "border" + a[i] + "Width", cs, true)) || 0;
    }

    return v;
  },
      // @private Parses position-related complex strings like "top left" or "50px 10px" or "70% 20%", etc. which are used for things like transformOrigin or backgroundPosition. Optionally decorates a supplied object (recObj) with the following properties: "ox" (offsetX), "oy" (offsetY), "oxp" (if true, "ox" is a percentage not a pixel value), and "oxy" (if true, "oy" is a percentage not a pixel value)
  _parsePosition = function _parsePosition(v, recObj) {
    if (v === "contain" || v === "auto" || v === "auto auto") {
      //note: Firefox uses "auto auto" as default whereas Chrome uses "auto".
      return v + " ";
    }

    if (v == null || v === "") {
      v = "0 0";
    }

    var a = v.split(" "),
        x = v.indexOf("left") !== -1 ? "0%" : v.indexOf("right") !== -1 ? "100%" : a[0],
        y = v.indexOf("top") !== -1 ? "0%" : v.indexOf("bottom") !== -1 ? "100%" : a[1],
        i;

    if (a.length > 3 && !recObj) {
      //multiple positions
      a = v.split(", ").join(",").split(",");
      v = [];

      for (i = 0; i < a.length; i++) {
        v.push(_parsePosition(a[i]));
      }

      return v.join(",");
    }

    if (y == null) {
      y = x === "center" ? "50%" : "0";
    } else if (y === "center") {
      y = "50%";
    }

    if (x === "center" || isNaN(parseFloat(x)) && (x + "").indexOf("=") === -1) {
      //remember, the user could flip-flop the values and say "bottom center" or "center bottom", etc. "center" is ambiguous because it could be used to describe horizontal or vertical, hence the isNaN(). If there's an "=" sign in the value, it's relative.
      x = "50%";
    }

    v = x + " " + y + (a.length > 2 ? " " + a[2] : "");

    if (recObj) {
      recObj.oxp = x.indexOf("%") !== -1;
      recObj.oyp = y.indexOf("%") !== -1;
      recObj.oxr = x.charAt(1) === "=";
      recObj.oyr = y.charAt(1) === "=";
      recObj.ox = parseFloat(x.replace(_NaNExp, ""));
      recObj.oy = parseFloat(y.replace(_NaNExp, ""));
      recObj.v = v;
    }

    return recObj || v;
  },

  /**
   * @private Takes an ending value (typically a string, but can be a number) and a starting value and returns the change between the two, looking for relative value indicators like += and -= and it also ignores suffixes (but make sure the ending value starts with a number or +=/-= and that the starting value is a NUMBER!)
   * @param {(number|string)} e End value which is typically a string, but could be a number
   * @param {(number|string)} b Beginning value which is typically a string but could be a number
   * @return {number} Amount of change between the beginning and ending values (relative values that have a "+=" or "-=" are recognized)
   */
  _parseChange = function _parseChange(e, b) {
    if (typeof e === "function") {
      e = e(_index, _target);
    }

    return typeof e === "string" && e.charAt(1) === "=" ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;
  },

  /**
   * @private Takes a value and a default number, checks if the value is relative, null, or numeric and spits back a normalized number accordingly. Primarily used in the _parseTransform() function.
   * @param {Object} v Value to be parsed
   * @param {!number} d Default value (which is also used for relative calculations if "+=" or "-=" is found in the first parameter)
   * @return {number} Parsed value
   */
  _parseVal = function _parseVal(v, d) {
    if (typeof v === "function") {
      v = v(_index, _target);
    }

    var isRelative = typeof v === "string" && v.charAt(1) === "=";

    if (typeof v === "string" && v.charAt(v.length - 2) === "v") {
      //convert vw and vh into px-equivalents.
      v = (isRelative ? v.substr(0, 2) : 0) + window["inner" + (v.substr(-2) === "vh" ? "Height" : "Width")] * (parseFloat(isRelative ? v.substr(2) : v) / 100);
    }

    return v == null ? d : isRelative ? parseInt(v.charAt(0) + "1", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;
  },

  /**
   * @private Translates strings like "40deg" or "40" or 40rad" or "+=40deg" or "270_short" or "-90_cw" or "+=45_ccw" to a numeric radian angle. Of course a starting/default value must be fed in too so that relative values can be calculated properly.
   * @param {Object} v Value to be parsed
   * @param {!number} d Default value (which is also used for relative calculations if "+=" or "-=" is found in the first parameter)
   * @param {string=} p property name for directionalEnd (optional - only used when the parsed value is directional ("_short", "_cw", or "_ccw" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation). Property name would be "rotation", "rotationX", or "rotationY"
   * @param {Object=} directionalEnd An object that will store the raw end values for directional angles ("_short", "_cw", or "_ccw" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation.
   * @return {number} parsed angle in radians
   */
  _parseAngle = function _parseAngle(v, d, p, directionalEnd) {
    var min = 0.000001,
        cap,
        split,
        dif,
        result,
        isRelative;

    if (typeof v === "function") {
      v = v(_index, _target);
    }

    if (v == null) {
      result = d;
    } else if (typeof v === "number") {
      result = v;
    } else {
      cap = 360;
      split = v.split("_");
      isRelative = v.charAt(1) === "=";
      dif = (isRelative ? parseInt(v.charAt(0) + "1", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf("rad") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);

      if (split.length) {
        if (directionalEnd) {
          directionalEnd[p] = d + dif;
        }

        if (v.indexOf("short") !== -1) {
          dif = dif % cap;

          if (dif !== dif % (cap / 2)) {
            dif = dif < 0 ? dif + cap : dif - cap;
          }
        }

        if (v.indexOf("_cw") !== -1 && dif < 0) {
          dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;
        } else if (v.indexOf("ccw") !== -1 && dif > 0) {
          dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;
        }
      }

      result = d + dif;
    }

    if (result < min && result > -min) {
      result = 0;
    }

    return result;
  },
      _colorLookup = {
    aqua: [0, 255, 255],
    lime: [0, 255, 0],
    silver: [192, 192, 192],
    black: [0, 0, 0],
    maroon: [128, 0, 0],
    teal: [0, 128, 128],
    blue: [0, 0, 255],
    navy: [0, 0, 128],
    white: [255, 255, 255],
    fuchsia: [255, 0, 255],
    olive: [128, 128, 0],
    yellow: [255, 255, 0],
    orange: [255, 165, 0],
    gray: [128, 128, 128],
    purple: [128, 0, 128],
    green: [0, 128, 0],
    red: [255, 0, 0],
    pink: [255, 192, 203],
    cyan: [0, 255, 255],
    transparent: [255, 255, 255, 0]
  },
      _hue = function _hue(h, m1, m2) {
    h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < 0.5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + 0.5 | 0;
  },

  /**
   * @private Parses a color (like #9F0, #FF9900, rgb(255,51,153) or hsl(108, 50%, 10%)) into an array with 3 elements for red, green, and blue or if toHSL parameter is true, it will populate the array with hue, saturation, and lightness values. If a relative value is found in an hsl() or hsla() string, it will preserve those relative prefixes and all the values in the array will be strings instead of numbers (in all other cases it will be populated with numbers).
   * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.
   * @param {(boolean)} toHSL If true, an hsl() or hsla() value will be returned instead of rgb() or rgba()
   * @return {Array.<number>} An array containing red, green, and blue (and optionally alpha) in that order, or if the toHSL parameter was true, the array will contain hue, saturation and lightness (and optionally alpha) in that order. Always numbers unless there's a relative prefix found in an hsl() or hsla() string and toHSL is true.
   */
  _parseColor = CSSPlugin.parseColor = function (v, toHSL) {
    var a, r, g, b, h, s, l, max, min, d, wasHSL;

    if (!v) {
      a = _colorLookup.black;
    } else if (typeof v === "number") {
      a = [v >> 16, v >> 8 & 255, v & 255];
    } else {
      if (v.charAt(v.length - 1) === ",") {
        //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
        v = v.substr(0, v.length - 1);
      }

      if (_colorLookup[v]) {
        a = _colorLookup[v];
      } else if (v.charAt(0) === "#") {
        if (v.length === 4) {
          //for shorthand like #9F0
          r = v.charAt(1);
          g = v.charAt(2);
          b = v.charAt(3);
          v = "#" + r + r + g + g + b + b;
        }

        v = parseInt(v.substr(1), 16);
        a = [v >> 16, v >> 8 & 255, v & 255];
      } else if (v.substr(0, 3) === "hsl") {
        a = wasHSL = v.match(_numExp);

        if (!toHSL) {
          h = Number(a[0]) % 360 / 360;
          s = Number(a[1]) / 100;
          l = Number(a[2]) / 100;
          g = l <= 0.5 ? l * (s + 1) : l + s - l * s;
          r = l * 2 - g;

          if (a.length > 3) {
            a[3] = Number(a[3]);
          }

          a[0] = _hue(h + 1 / 3, r, g);
          a[1] = _hue(h, r, g);
          a[2] = _hue(h - 1 / 3, r, g);
        } else if (v.indexOf("=") !== -1) {
          //if relative values are found, just return the raw strings with the relative prefixes in place.
          return v.match(_relNumExp);
        }
      } else {
        a = v.match(_numExp) || _colorLookup.transparent;
      }

      a[0] = Number(a[0]);
      a[1] = Number(a[1]);
      a[2] = Number(a[2]);

      if (a.length > 3) {
        a[3] = Number(a[3]);
      }
    }

    if (toHSL && !wasHSL) {
      r = a[0] / 255;
      g = a[1] / 255;
      b = a[2] / 255;
      max = Math.max(r, g, b);
      min = Math.min(r, g, b);
      l = (max + min) / 2;

      if (max === min) {
        h = s = 0;
      } else {
        d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
        h *= 60;
      }

      a[0] = h + 0.5 | 0;
      a[1] = s * 100 + 0.5 | 0;
      a[2] = l * 100 + 0.5 | 0;
    }

    return a;
  },
      _formatColors = function _formatColors(s, toHSL) {
    var colors = s.match(_colorExp) || [],
        charIndex = 0,
        parsed = "",
        i,
        color,
        temp;

    if (!colors.length) {
      return s;
    }

    for (i = 0; i < colors.length; i++) {
      color = colors[i];
      temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);
      charIndex += temp.length + color.length;
      color = _parseColor(color, toHSL);

      if (color.length === 3) {
        color.push(1);
      }

      parsed += temp + (toHSL ? "hsla(" + color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : "rgba(" + color.join(",")) + ")";
    }

    return parsed + s.substr(charIndex);
  },
      _colorExp = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b"; //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.


  for (p in _colorLookup) {
    _colorExp += "|" + p + "\\b";
  }

  _colorExp = new RegExp(_colorExp + ")", "gi");

  CSSPlugin.colorStringFilter = function (a) {
    var combined = a[0] + " " + a[1],
        toHSL;

    if (_colorExp.test(combined)) {
      toHSL = combined.indexOf("hsl(") !== -1 || combined.indexOf("hsla(") !== -1;
      a[0] = _formatColors(a[0], toHSL);
      a[1] = _formatColors(a[1], toHSL);
    }

    _colorExp.lastIndex = 0;
  };

  if (!__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].defaultStringFilter) {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].defaultStringFilter = CSSPlugin.colorStringFilter;
  }
  /**
   * @private Returns a formatter function that handles taking a string (or number in some cases) and returning a consistently formatted one in terms of delimiters, quantity of values, etc. For example, we may get boxShadow values defined as "0px red" or "0px 0px 10px rgb(255,0,0)" or "0px 0px 20px 20px #F00" and we need to ensure that what we get back is described with 4 numbers and a color. This allows us to feed it into the _parseComplex() method and split the values up appropriately. The neat thing about this _getFormatter() function is that the dflt defines a pattern as well as a default, so for example, _getFormatter("0px 0px 0px 0px #777", true) not only sets the default as 0px for all distances and #777 for the color, but also sets the pattern such that 4 numbers and a color will always get returned.
   * @param {!string} dflt The default value and pattern to follow. So "0px 0px 0px 0px #777" will ensure that 4 numbers and a color will always get returned.
   * @param {boolean=} clr If true, the values should be searched for color-related data. For example, boxShadow values typically contain a color whereas borderRadius don't.
   * @param {boolean=} collapsible If true, the value is a top/left/right/bottom style one that acts like margin or padding, where if only one value is received, it's used for all 4; if 2 are received, the first is duplicated for 3rd (bottom) and the 2nd is duplicated for the 4th spot (left), etc.
   * @return {Function} formatter function
   */


  var _getFormatter = function _getFormatter(dflt, clr, collapsible, multi) {
    if (dflt == null) {
      return function (v) {
        return v;
      };
    }

    var dColor = clr ? (dflt.match(_colorExp) || [""])[0] : "",
        dVals = dflt.split(dColor).join("").match(_valuesExp) || [],
        pfx = dflt.substr(0, dflt.indexOf(dVals[0])),
        sfx = dflt.charAt(dflt.length - 1) === ")" ? ")" : "",
        delim = dflt.indexOf(" ") !== -1 ? " " : ",",
        numVals = dVals.length,
        dSfx = numVals > 0 ? dVals[0].replace(_numExp, "") : "",
        _formatter2;

    if (!numVals) {
      return function (v) {
        return v;
      };
    }

    if (clr) {
      _formatter2 = function formatter(v) {
        var color, vals, i, a;

        if (typeof v === "number") {
          v += dSfx;
        } else if (multi && _commasOutsideParenExp.test(v)) {
          a = v.replace(_commasOutsideParenExp, "|").split("|");

          for (i = 0; i < a.length; i++) {
            a[i] = _formatter2(a[i]);
          }

          return a.join(",");
        }

        color = (v.match(_colorExp) || [dColor])[0];
        vals = v.split(color).join("").match(_valuesExp) || [];
        i = vals.length;

        if (numVals > i--) {
          while (++i < numVals) {
            vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];
          }
        }

        return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf("inset") !== -1 ? " inset" : "");
      };

      return _formatter2;
    }

    _formatter2 = function _formatter(v) {
      var vals, a, i;

      if (typeof v === "number") {
        v += dSfx;
      } else if (multi && _commasOutsideParenExp.test(v)) {
        a = v.replace(_commasOutsideParenExp, "|").split("|");

        for (i = 0; i < a.length; i++) {
          a[i] = _formatter2(a[i]);
        }

        return a.join(",");
      }

      vals = v.match(delim === "," ? _valuesExp : _valuesExpWithCommas) || [];
      i = vals.length;

      if (numVals > i--) {
        while (++i < numVals) {
          vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];
        }
      }

      return (pfx && v !== "none" ? v.substr(0, v.indexOf(vals[0])) || pfx : pfx) + vals.join(delim) + sfx; //note: prefix might be different, like for clipPath it could start with inset( or polygon(
    };

    return _formatter2;
  },

  /**
   * @private returns a formatter function that's used for edge-related values like marginTop, marginLeft, paddingBottom, paddingRight, etc. Just pass a comma-delimited list of property names related to the edges.
   * @param {!string} props a comma-delimited list of property names in order from top to left, like "marginTop,marginRight,marginBottom,marginLeft"
   * @return {Function} a formatter function
   */
  _getEdgeParser = function _getEdgeParser(props) {
    props = props.split(",");
    return function (t, e, p, cssp, pt, plugin, vars) {
      var a = (e + "").split(" "),
          i;
      vars = {};

      for (i = 0; i < 4; i++) {
        vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];
      }

      return cssp.parse(t, vars, pt, plugin);
    };
  },
      // @private used when other plugins must tween values first, like BezierPlugin or ThrowPropsPlugin, etc. That plugin's setRatio() gets called first so that the values are updated, and then we loop through the MiniPropTweens which handle copying the values into their appropriate slots so that they can then be applied correctly in the main CSSPlugin setRatio() method. Remember, we typically create a proxy object that has a bunch of uniquely-named properties that we feed to the sub-plugin and it does its magic normally, and then we must interpret those values and apply them to the css because often numbers must get combined/concatenated, suffixes added, etc. to work with css, like boxShadow could have 4 values plus a color.
  _setPluginRatio = _internals._setPluginRatio = function (v) {
    this.plugin.setRatio(v);
    var d = this.data,
        proxy = d.proxy,
        mpt = d.firstMPT,
        min = 0.000001,
        val,
        pt,
        i,
        str,
        p;

    while (mpt) {
      val = proxy[mpt.v];

      if (mpt.r) {
        val = mpt.r(val);
      } else if (val < min && val > -min) {
        val = 0;
      }

      mpt.t[mpt.p] = val;
      mpt = mpt._next;
    }

    if (d.autoRotate) {
      d.autoRotate.rotation = d.mod ? d.mod.call(this._tween, proxy.rotation, this.t, this._tween) : proxy.rotation; //special case for ModifyPlugin to hook into an auto-rotating bezier
    } //at the end, we must set the CSSPropTween's "e" (end) value dynamically here because that's what is used in the final setRatio() method. Same for "b" at the beginning.


    if (v === 1 || v === 0) {
      mpt = d.firstMPT;
      p = v === 1 ? "e" : "b";

      while (mpt) {
        pt = mpt.t;

        if (!pt.type) {
          pt[p] = pt.s + pt.xs0;
        } else if (pt.type === 1) {
          str = pt.xs0 + pt.s + pt.xs1;

          for (i = 1; i < pt.l; i++) {
            str += pt["xn" + i] + pt["xs" + (i + 1)];
          }

          pt[p] = str;
        }

        mpt = mpt._next;
      }
    }
  },

  /**
   * @private @constructor Used by a few SpecialProps to hold important values for proxies. For example, _parseToProxy() creates a MiniPropTween instance for each property that must get tweened on the proxy, and we record the original property name as well as the unique one we create for the proxy, plus whether or not the value needs to be rounded plus the original value.
   * @param {!Object} t target object whose property we're tweening (often a CSSPropTween)
   * @param {!string} p property name
   * @param {(number|string|object)} v value
   * @param {MiniPropTween=} next next MiniPropTween in the linked list
   * @param {boolean=} r if true, the tweened value should be rounded to the nearest integer
   */
  MiniPropTween = function MiniPropTween(t, p, v, next, r) {
    this.t = t;
    this.p = p;
    this.v = v;
    this.r = r;

    if (next) {
      next._prev = this;
      this._next = next;
    }
  },

  /**
   * @private Most other plugins (like BezierPlugin and ThrowPropsPlugin and others) can only tween numeric values, but CSSPlugin must accommodate special values that have a bunch of extra data (like a suffix or strings between numeric values, etc.). For example, boxShadow has values like "10px 10px 20px 30px rgb(255,0,0)" which would utterly confuse other plugins. This method allows us to split that data apart and grab only the numeric data and attach it to uniquely-named properties of a generic proxy object ({}) so that we can feed that to virtually any plugin to have the numbers tweened. However, we must also keep track of which properties from the proxy go with which CSSPropTween values and instances. So we create a linked list of MiniPropTweens. Each one records a target (the original CSSPropTween), property (like "s" or "xn1" or "xn2") that we're tweening and the unique property name that was used for the proxy (like "boxShadow_xn1" and "boxShadow_xn2") and whether or not they need to be rounded. That way, in the _setPluginRatio() method we can simply copy the values over from the proxy to the CSSPropTween instance(s). Then, when the main CSSPlugin setRatio() method runs and applies the CSSPropTween values accordingly, they're updated nicely. So the external plugin tweens the numbers, _setPluginRatio() copies them over, and setRatio() acts normally, applying css-specific values to the element.
   * This method returns an object that has the following properties:
   *  - proxy: a generic object containing the starting values for all the properties that will be tweened by the external plugin.  This is what we feed to the external _onInitTween() as the target
   *  - end: a generic object containing the ending values for all the properties that will be tweened by the external plugin. This is what we feed to the external plugin's _onInitTween() as the destination values
   *  - firstMPT: the first MiniPropTween in the linked list
   *  - pt: the first CSSPropTween in the linked list that was created when parsing. If shallow is true, this linked list will NOT attach to the one passed into the _parseToProxy() as the "pt" (4th) parameter.
   * @param {!Object} t target object to be tweened
   * @param {!(Object|string)} vars the object containing the information about the tweening values (typically the end/destination values) that should be parsed
   * @param {!CSSPlugin} cssp The CSSPlugin instance
   * @param {CSSPropTween=} pt the next CSSPropTween in the linked list
   * @param {TweenPlugin=} plugin the external TweenPlugin instance that will be handling tweening the numeric values
   * @param {boolean=} shallow if true, the resulting linked list from the parse will NOT be attached to the CSSPropTween that was passed in as the "pt" (4th) parameter.
   * @return An object containing the following properties: proxy, end, firstMPT, and pt (see above for descriptions)
   */
  _parseToProxy = _internals._parseToProxy = function (t, vars, cssp, pt, plugin, shallow) {
    var bpt = pt,
        start = {},
        end = {},
        transform = cssp._transform,
        oldForce = _forcePT,
        i,
        p,
        xp,
        mpt,
        firstPT;
    cssp._transform = null;
    _forcePT = vars;
    pt = firstPT = cssp.parse(t, vars, pt, plugin);
    _forcePT = oldForce; //break off from the linked list so the new ones are isolated.

    if (shallow) {
      cssp._transform = transform;

      if (bpt) {
        bpt._prev = null;

        if (bpt._prev) {
          bpt._prev._next = null;
        }
      }
    }

    while (pt && pt !== bpt) {
      if (pt.type <= 1) {
        p = pt.p;
        end[p] = pt.s + pt.c;
        start[p] = pt.s;

        if (!shallow) {
          mpt = new MiniPropTween(pt, "s", p, mpt, pt.r);
          pt.c = 0;
        }

        if (pt.type === 1) {
          i = pt.l;

          while (--i > 0) {
            xp = "xn" + i;
            p = pt.p + "_" + xp;
            end[p] = pt.data[xp];
            start[p] = pt[xp];

            if (!shallow) {
              mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);
            }
          }
        }
      }

      pt = pt._next;
    }

    return {
      proxy: start,
      end: end,
      firstMPT: mpt,
      pt: firstPT
    };
  },

  /**
   * @constructor Each property that is tweened has at least one CSSPropTween associated with it. These instances store important information like the target, property, starting value, amount of change, etc. They can also optionally have a number of "extra" strings and numeric values named xs1, xn1, xs2, xn2, xs3, xn3, etc. where "s" indicates string and "n" indicates number. These can be pieced together in a complex-value tween (type:1) that has alternating types of data like a string, number, string, number, etc. For example, boxShadow could be "5px 5px 8px rgb(102, 102, 51)". In that value, there are 6 numbers that may need to tween and then pieced back together into a string again with spaces, suffixes, etc. xs0 is special in that it stores the suffix for standard (type:0) tweens, -OR- the first string (prefix) in a complex-value (type:1) CSSPropTween -OR- it can be the non-tweening value in a type:-1 CSSPropTween. We do this to conserve memory.
   * CSSPropTweens have the following optional properties as well (not defined through the constructor):
   *  - l: Length in terms of the number of extra properties that the CSSPropTween has (default: 0). For example, for a boxShadow we may need to tween 5 numbers in which case l would be 5; Keep in mind that the start/end values for the first number that's tweened are always stored in the s and c properties to conserve memory. All additional values thereafter are stored in xn1, xn2, etc.
   *  - xfirst: The first instance of any sub-CSSPropTweens that are tweening properties of this instance. For example, we may split up a boxShadow tween so that there's a main CSSPropTween of type:1 that has various xs* and xn* values associated with the h-shadow, v-shadow, blur, color, etc. Then we spawn a CSSPropTween for each of those that has a higher priority and runs BEFORE the main CSSPropTween so that the values are all set by the time it needs to re-assemble them. The xfirst gives us an easy way to identify the first one in that chain which typically ends at the main one (because they're all prepende to the linked list)
   *  - plugin: The TweenPlugin instance that will handle the tweening of any complex values. For example, sometimes we don't want to use normal subtweens (like xfirst refers to) to tween the values - we might want ThrowPropsPlugin or BezierPlugin some other plugin to do the actual tweening, so we create a plugin instance and store a reference here. We need this reference so that if we get a request to round values or disable a tween, we can pass along that request.
   *  - data: Arbitrary data that needs to be stored with the CSSPropTween. Typically if we're going to have a plugin handle the tweening of a complex-value tween, we create a generic object that stores the END values that we're tweening to and the CSSPropTween's xs1, xs2, etc. have the starting values. We store that object as data. That way, we can simply pass that object to the plugin and use the CSSPropTween as the target.
   *  - setRatio: Only used for type:2 tweens that require custom functionality. In this case, we call the CSSPropTween's setRatio() method and pass the ratio each time the tween updates. This isn't quite as efficient as doing things directly in the CSSPlugin's setRatio() method, but it's very convenient and flexible.
   * @param {!Object} t Target object whose property will be tweened. Often a DOM element, but not always. It could be anything.
   * @param {string} p Property to tween (name). For example, to tween element.width, p would be "width".
   * @param {number} s Starting numeric value
   * @param {number} c Change in numeric value over the course of the entire tween. For example, if element.width starts at 5 and should end at 100, c would be 95.
   * @param {CSSPropTween=} next The next CSSPropTween in the linked list. If one is defined, we will define its _prev as the new instance, and the new instance's _next will be pointed at it.
   * @param {number=} type The type of CSSPropTween where -1 = a non-tweening value, 0 = a standard simple tween, 1 = a complex value (like one that has multiple numbers in a comma- or space-delimited string like border:"1px solid red"), and 2 = one that uses a custom setRatio function that does all of the work of applying the values on each update.
   * @param {string=} n Name of the property that should be used for overwriting purposes which is typically the same as p but not always. For example, we may need to create a subtween for the 2nd part of a "clip:rect(...)" tween in which case "p" might be xs1 but "n" is still "clip"
   * @param {boolean=} r If true, the value(s) should be rounded
   * @param {number=} pr Priority in the linked list order. Higher priority CSSPropTweens will be updated before lower priority ones. The default priority is 0.
   * @param {string=} b Beginning value. We store this to ensure that it is EXACTLY what it was when the tween began without any risk of interpretation issues.
   * @param {string=} e Ending value. We store this to ensure that it is EXACTLY what the user defined at the end of the tween without any risk of interpretation issues.
   */
  CSSPropTween = _internals.CSSPropTween = function (t, p, s, c, next, type, n, r, pr, b, e) {
    this.t = t; //target

    this.p = p; //property

    this.s = s; //starting value

    this.c = c; //change value

    this.n = n || p; //name that this CSSPropTween should be associated to (usually the same as p, but not always - n is what overwriting looks at)

    if (!(t instanceof CSSPropTween)) {
      _overwriteProps.push(this.n);
    }

    this.r = !r ? r : typeof r === "function" ? r : Math.round; //round (boolean)

    this.type = type || 0; //0 = normal tween, -1 = non-tweening (in which case xs0 will be applied to the target's property, like tp.t[tp.p] = tp.xs0), 1 = complex-value SpecialProp, 2 = custom setRatio() that does all the work

    if (pr) {
      this.pr = pr;
      _hasPriority = true;
    }

    this.b = b === undefined ? s : b;
    this.e = e === undefined ? s + c : e;

    if (next) {
      this._next = next;
      next._prev = this;
    }
  },
      _addNonTweeningNumericPT = function _addNonTweeningNumericPT(target, prop, start, end, next, overwriteProp) {
    //cleans up some code redundancies and helps minification. Just a fast way to add a NUMERIC non-tweening CSSPropTween
    var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);
    pt.b = start;
    pt.e = pt.xs0 = end;
    return pt;
  },

  /**
   * Takes a target, the beginning value and ending value (as strings) and parses them into a CSSPropTween (possibly with child CSSPropTweens) that accommodates multiple numbers, colors, comma-delimited values, etc. For example:
   * sp.parseComplex(element, "boxShadow", "5px 10px 20px rgb(255,102,51)", "0px 0px 0px red", true, "0px 0px 0px rgb(0,0,0,0)", pt);
   * It will walk through the beginning and ending values (which should be in the same format with the same number and type of values) and figure out which parts are numbers, what strings separate the numeric/tweenable values, and then create the CSSPropTweens accordingly. If a plugin is defined, no child CSSPropTweens will be created. Instead, the ending values will be stored in the "data" property of the returned CSSPropTween like: {s:-5, xn1:-10, xn2:-20, xn3:255, xn4:0, xn5:0} so that it can be fed to any other plugin and it'll be plain numeric tweens but the recomposition of the complex value will be handled inside CSSPlugin's setRatio().
   * If a setRatio is defined, the type of the CSSPropTween will be set to 2 and recomposition of the values will be the responsibility of that method.
   *
   * @param {!Object} t Target whose property will be tweened
   * @param {!string} p Property that will be tweened (its name, like "left" or "backgroundColor" or "boxShadow")
   * @param {string} b Beginning value
   * @param {string} e Ending value
   * @param {boolean} clrs If true, the value could contain a color value like "rgb(255,0,0)" or "#F00" or "red". The default is false, so no colors will be recognized (a performance optimization)
   * @param {(string|number|Object)} dflt The default beginning value that should be used if no valid beginning value is defined or if the number of values inside the complex beginning and ending values don't match
   * @param {?CSSPropTween} pt CSSPropTween instance that is the current head of the linked list (we'll prepend to this).
   * @param {number=} pr Priority in the linked list order. Higher priority properties will be updated before lower priority ones. The default priority is 0.
   * @param {TweenPlugin=} plugin If a plugin should handle the tweening of extra properties, pass the plugin instance here. If one is defined, then NO subtweens will be created for any extra properties (the properties will be created - just not additional CSSPropTween instances to tween them) because the plugin is expected to do so. However, the end values WILL be populated in the "data" property, like {s:100, xn1:50, xn2:300}
   * @param {function(number)=} setRatio If values should be set in a custom function instead of being pieced together in a type:1 (complex-value) CSSPropTween, define that custom function here.
   * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parseComplex() call.
   */
  _parseComplex = CSSPlugin.parseComplex = function (t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {
    //DEBUG: _log("parseComplex: "+p+", b: "+b+", e: "+e);
    b = b || dflt || "";

    if (typeof e === "function") {
      e = e(_index, _target);
    }

    pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);
    e += ""; //ensures it's a string

    if (clrs && _colorExp.test(e + b)) {
      //if colors are found, normalize the formatting to rgba() or hsla().
      e = [b, e];
      CSSPlugin.colorStringFilter(e);
      b = e[0];
      e = e[1];
    }

    var ba = b.split(", ").join(",").split(" "),
        //beginning array
    ea = e.split(", ").join(",").split(" "),
        //ending array
    l = ba.length,
        autoRound = _autoRound !== false,
        i,
        xi,
        ni,
        bv,
        ev,
        bnums,
        enums,
        bn,
        hasAlpha,
        temp,
        cv,
        str,
        useHSL;

    if (e.indexOf(",") !== -1 || b.indexOf(",") !== -1) {
      if ((e + b).indexOf("rgb") !== -1 || (e + b).indexOf("hsl") !== -1) {
        //keep rgb(), rgba(), hsl(), and hsla() values together! (remember, we're splitting on spaces)
        ba = ba.join(" ").replace(_commasOutsideParenExp, ", ").split(" ");
        ea = ea.join(" ").replace(_commasOutsideParenExp, ", ").split(" ");
      } else {
        ba = ba.join(" ").split(",").join(", ").split(" ");
        ea = ea.join(" ").split(",").join(", ").split(" ");
      }

      l = ba.length;
    }

    if (l !== ea.length) {
      //DEBUG: _log("mismatched formatting detected on " + p + " (" + b + " vs " + e + ")");
      ba = (dflt || "").split(" ");
      l = ba.length;
    }

    pt.plugin = plugin;
    pt.setRatio = setRatio;
    _colorExp.lastIndex = 0;

    for (i = 0; i < l; i++) {
      bv = ba[i];
      ev = ea[i] + "";
      bn = parseFloat(bv); //if the value begins with a number (most common). It's fine if it has a suffix like px

      if (bn || bn === 0) {
        pt.appendXtra("", bn, _parseChange(ev, bn), ev.replace(_relNumExp, ""), autoRound && ev.indexOf("px") !== -1 ? Math.round : false, true); //if the value is a color
      } else if (clrs && _colorExp.test(bv)) {
        str = ev.indexOf(")") + 1;
        str = ")" + (str ? ev.substr(str) : ""); //if there's a comma or ) at the end, retain it.

        useHSL = ev.indexOf("hsl") !== -1 && _supportsOpacity;
        temp = ev; //original string value so we can look for any prefix later.

        bv = _parseColor(bv, useHSL);
        ev = _parseColor(ev, useHSL);
        hasAlpha = bv.length + ev.length > 6;

        if (hasAlpha && !_supportsOpacity && ev[3] === 0) {
          //older versions of IE don't support rgba(), so if the destination alpha is 0, just use "transparent" for the end color
          pt["xs" + pt.l] += pt.l ? " transparent" : "transparent";
          pt.e = pt.e.split(ea[i]).join("transparent");
        } else {
          if (!_supportsOpacity) {
            //old versions of IE don't support rgba().
            hasAlpha = false;
          }

          if (useHSL) {
            pt.appendXtra(temp.substr(0, temp.indexOf("hsl")) + (hasAlpha ? "hsla(" : "hsl("), bv[0], _parseChange(ev[0], bv[0]), ",", false, true).appendXtra("", bv[1], _parseChange(ev[1], bv[1]), "%,", false).appendXtra("", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? "%," : "%" + str, false);
          } else {
            pt.appendXtra(temp.substr(0, temp.indexOf("rgb")) + (hasAlpha ? "rgba(" : "rgb("), bv[0], ev[0] - bv[0], ",", Math.round, true).appendXtra("", bv[1], ev[1] - bv[1], ",", Math.round).appendXtra("", bv[2], ev[2] - bv[2], hasAlpha ? "," : str, Math.round);
          }

          if (hasAlpha) {
            bv = bv.length < 4 ? 1 : bv[3];
            pt.appendXtra("", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);
          }
        }

        _colorExp.lastIndex = 0; //otherwise the test() on the RegExp could move the lastIndex and taint future results.
      } else {
        bnums = bv.match(_numExp); //gets each group of numbers in the beginning value string and drops them into an array
        //if no number is found, treat it as a non-tweening value and just append the string to the current xs.

        if (!bnums) {
          pt["xs" + pt.l] += pt.l || pt["xs" + pt.l] ? " " + ev : ev; //loop through all the numbers that are found and construct the extra values on the pt.
        } else {
          enums = ev.match(_relNumExp); //get each group of numbers in the end value string and drop them into an array. We allow relative values too, like +=50 or -=.5

          if (!enums || enums.length !== bnums.length) {
            //DEBUG: _log("mismatched formatting detected on " + p + " (" + b + " vs " + e + ")");
            return pt;
          }

          ni = 0;

          for (xi = 0; xi < bnums.length; xi++) {
            cv = bnums[xi];
            temp = bv.indexOf(cv, ni);
            pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), "", autoRound && bv.substr(temp + cv.length, 2) === "px" ? Math.round : false, xi === 0);
            ni = temp + cv.length;
          }

          pt["xs" + pt.l] += bv.substr(ni);
        }
      }
    } //if there are relative values ("+=" or "-=" prefix), we need to adjust the ending value to eliminate the prefixes and combine the values properly.


    if (e.indexOf("=") !== -1) if (pt.data) {
      str = pt.xs0 + pt.data.s;

      for (i = 1; i < pt.l; i++) {
        str += pt["xs" + i] + pt.data["xn" + i];
      }

      pt.e = str + pt["xs" + i];
    }

    if (!pt.l) {
      pt.type = -1;
      pt.xs0 = pt.e;
    }

    return pt.xfirst || pt;
  },
      i = 9;

  p = CSSPropTween.prototype;
  p.l = p.pr = 0; //length (number of extra properties like xn1, xn2, xn3, etc.

  while (--i > 0) {
    p["xn" + i] = 0;
    p["xs" + i] = "";
  }

  p.xs0 = "";
  p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;
  /**
   * Appends and extra tweening value to a CSSPropTween and automatically manages any prefix and suffix strings. The first extra value is stored in the s and c of the main CSSPropTween instance, but thereafter any extras are stored in the xn1, xn2, xn3, etc. The prefixes and suffixes are stored in the xs0, xs1, xs2, etc. properties. For example, if I walk through a clip value like "rect(10px, 5px, 0px, 20px)", the values would be stored like this:
   * xs0:"rect(", s:10, xs1:"px, ", xn1:5, xs2:"px, ", xn2:0, xs3:"px, ", xn3:20, xn4:"px)"
   * And they'd all get joined together when the CSSPlugin renders (in the setRatio() method).
   * @param {string=} pfx Prefix (if any)
   * @param {!number} s Starting value
   * @param {!number} c Change in numeric value over the course of the entire tween. For example, if the start is 5 and the end is 100, the change would be 95.
   * @param {string=} sfx Suffix (if any)
   * @param {boolean=} r Round (if true).
   * @param {boolean=} pad If true, this extra value should be separated by the previous one by a space. If there is no previous extra and pad is true, it will automatically drop the space.
   * @return {CSSPropTween} returns itself so that multiple methods can be chained together.
   */

  p.appendXtra = function (pfx, s, c, sfx, r, pad) {
    var pt = this,
        l = pt.l;
    pt["xs" + l] += pad && (l || pt["xs" + l]) ? " " + pfx : pfx || "";
    if (!c) if (l !== 0 && !pt.plugin) {
      //typically we'll combine non-changing values right into the xs to optimize performance, but we don't combine them when there's a plugin that will be tweening the values because it may depend on the values being split apart, like for a bezier, if a value doesn't change between the first and second iteration but then it does on the 3rd, we'll run into trouble because there's no xn slot for that value!
      pt["xs" + l] += s + (sfx || "");
      return pt;
    }
    pt.l++;
    pt.type = pt.setRatio ? 2 : 1;
    pt["xs" + pt.l] = sfx || "";

    if (l > 0) {
      pt.data["xn" + l] = s + c;
      pt.rxp["xn" + l] = r; //round extra property (we need to tap into this in the _parseToProxy() method)

      pt["xn" + l] = s;

      if (!pt.plugin) {
        pt.xfirst = new CSSPropTween(pt, "xn" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);
        pt.xfirst.xs0 = 0; //just to ensure that the property stays numeric which helps modern browsers speed up processing. Remember, in the setRatio() method, we do pt.t[pt.p] = val + pt.xs0 so if pt.xs0 is "" (the default), it'll cast the end value as a string. When a property is a number sometimes and a string sometimes, it prevents the compiler from locking in the data type, slowing things down slightly.
      }

      return pt;
    }

    pt.data = {
      s: s + c
    };
    pt.rxp = {};
    pt.s = s;
    pt.c = c;
    pt.r = r;
    return pt;
  };
  /**
   * @constructor A SpecialProp is basically a css property that needs to be treated in a non-standard way, like if it may contain a complex value like boxShadow:"5px 10px 15px rgb(255, 102, 51)" or if it is associated with another plugin like ThrowPropsPlugin or BezierPlugin. Every SpecialProp is associated with a particular property name like "boxShadow" or "throwProps" or "bezier" and it will intercept those values in the vars object that's passed to the CSSPlugin and handle them accordingly.
   * @param {!string} p Property name (like "boxShadow" or "throwProps")
   * @param {Object=} options An object containing any of the following configuration options:
   *                      - defaultValue: the default value
   *                      - parser: A function that should be called when the associated property name is found in the vars. This function should return a CSSPropTween instance and it should ensure that it is properly inserted into the linked list. It will receive 4 paramters: 1) The target, 2) The value defined in the vars, 3) The CSSPlugin instance (whose _firstPT should be used for the linked list), and 4) A computed style object if one was calculated (this is a speed optimization that allows retrieval of starting values quicker)
   *                      - formatter: a function that formats any value received for this special property (for example, boxShadow could take "5px 5px red" and format it to "5px 5px 0px 0px red" so that both the beginning and ending values have a common order and quantity of values.)
   *                      - prefix: if true, we'll determine whether or not this property requires a vendor prefix (like Webkit or Moz or ms or O)
   *                      - color: set this to true if the value for this SpecialProp may contain color-related values like rgb(), rgba(), etc.
   *                      - priority: priority in the linked list order. Higher priority SpecialProps will be updated before lower priority ones. The default priority is 0.
   *                      - multi: if true, the formatter should accommodate a comma-delimited list of values, like boxShadow could have multiple boxShadows listed out.
   *                      - collapsible: if true, the formatter should treat the value like it's a top/right/bottom/left value that could be collapsed, like "5px" would apply to all, "5px, 10px" would use 5px for top/bottom and 10px for right/left, etc.
   *                      - keyword: a special keyword that can [optionally] be found inside the value (like "inset" for boxShadow). This allows us to validate beginning/ending values to make sure they match (if the keyword is found in one, it'll be added to the other for consistency by default).
   */


  var SpecialProp = function SpecialProp(p, options) {
    options = options || {};
    this.p = options.prefix ? _checkPropPrefix(p) || p : p;
    _specialProps[p] = _specialProps[this.p] = this;
    this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);

    if (options.parser) {
      this.parse = options.parser;
    }

    this.clrs = options.color;
    this.multi = options.multi;
    this.keyword = options.keyword;
    this.dflt = options.defaultValue;
    this.allowFunc = options.allowFunc;
    this.pr = options.priority || 0;
  },
      //shortcut for creating a new SpecialProp that can accept multiple properties as a comma-delimited list (helps minification). dflt can be an array for multiple values (we don't do a comma-delimited list because the default value may contain commas, like rect(0px,0px,0px,0px)). We attach this method to the SpecialProp class/object instead of using a private _createSpecialProp() method so that we can tap into it externally if necessary, like from another plugin.
  _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function (p, options, defaults) {
    if (typeof options !== "object") {
      options = {
        parser: defaults
      }; //to make backwards compatible with older versions of BezierPlugin and ThrowPropsPlugin
    }

    var a = p.split(","),
        d = options.defaultValue,
        i,
        temp;
    defaults = defaults || [d];

    for (i = 0; i < a.length; i++) {
      options.prefix = i === 0 && options.prefix;
      options.defaultValue = defaults[i] || d;
      temp = new SpecialProp(a[i], options);
    }
  },
      //creates a placeholder special prop for a plugin so that the property gets caught the first time a tween of it is attempted, and at that time it makes the plugin register itself, thus taking over for all future tweens of that property. This allows us to not mandate that things load in a particular order and it also allows us to log() an error that informs the user when they attempt to tween an external plugin-related property without loading its .js file.
  _registerPluginProp = _internals._registerPluginProp = function (p) {
    if (!_specialProps[p]) {
      var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + "Plugin";

      _registerComplexSpecialProp(p, {
        parser: function parser(t, e, p, cssp, pt, plugin, vars) {
          var pluginClass = _globals.com.greensock.plugins[pluginName];

          if (!pluginClass) {
            _log("Error: " + pluginName + " js file not loaded.");

            return pt;
          }

          pluginClass._cssRegister();

          return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);
        }
      });
    }
  };

  p = SpecialProp.prototype;
  /**
   * Alias for _parseComplex() that automatically plugs in certain values for this SpecialProp, like its property name, whether or not colors should be sensed, the default value, and priority. It also looks for any keyword that the SpecialProp defines (like "inset" for boxShadow) and ensures that the beginning and ending values have the same number of values for SpecialProps where multi is true (like boxShadow and textShadow can have a comma-delimited list)
   * @param {!Object} t target element
   * @param {(string|number|object)} b beginning value
   * @param {(string|number|object)} e ending (destination) value
   * @param {CSSPropTween=} pt next CSSPropTween in the linked list
   * @param {TweenPlugin=} plugin If another plugin will be tweening the complex value, that TweenPlugin instance goes here.
   * @param {function=} setRatio If a custom setRatio() method should be used to handle this complex value, that goes here.
   * @return {CSSPropTween=} First CSSPropTween in the linked list
   */

  p.parseComplex = function (t, b, e, pt, plugin, setRatio) {
    var kwd = this.keyword,
        i,
        ba,
        ea,
        l,
        bi,
        ei; //if this SpecialProp's value can contain a comma-delimited list of values (like boxShadow or textShadow), we must parse them in a special way, and look for a keyword (like "inset" for boxShadow) and ensure that the beginning and ending BOTH have it if the end defines it as such. We also must ensure that there are an equal number of values specified (we can't tween 1 boxShadow to 3 for example)

    if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {
      ba = b.replace(_commasOutsideParenExp, "|").split("|");
      ea = e.replace(_commasOutsideParenExp, "|").split("|");
    } else if (kwd) {
      ba = [b];
      ea = [e];
    }

    if (ea) {
      l = ea.length > ba.length ? ea.length : ba.length;

      for (i = 0; i < l; i++) {
        b = ba[i] = ba[i] || this.dflt;
        e = ea[i] = ea[i] || this.dflt;

        if (kwd) {
          bi = b.indexOf(kwd);
          ei = e.indexOf(kwd);

          if (bi !== ei) {
            if (ei === -1) {
              //if the keyword isn't in the end value, remove it from the beginning one.
              ba[i] = ba[i].split(kwd).join("");
            } else if (bi === -1) {
              //if the keyword isn't in the beginning, add it.
              ba[i] += " " + kwd;
            }
          }
        }
      }

      b = ba.join(", ");
      e = ea.join(", ");
    }

    return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);
  };
  /**
   * Accepts a target and end value and spits back a CSSPropTween that has been inserted into the CSSPlugin's linked list and conforms with all the conventions we use internally, like type:-1, 0, 1, or 2, setting up any extra property tweens, priority, etc. For example, if we have a boxShadow SpecialProp and call:
   * this._firstPT = sp.parse(element, "5px 10px 20px rgb(2550,102,51)", "boxShadow", this);
   * It should figure out the starting value of the element's boxShadow, compare it to the provided end value and create all the necessary CSSPropTweens of the appropriate types to tween the boxShadow. The CSSPropTween that gets spit back should already be inserted into the linked list (the 4th parameter is the current head, so prepend to that).
   * @param {!Object} t Target object whose property is being tweened
   * @param {Object} e End value as provided in the vars object (typically a string, but not always - like a throwProps would be an object).
   * @param {!string} p Property name
   * @param {!CSSPlugin} cssp The CSSPlugin instance that should be associated with this tween.
   * @param {?CSSPropTween} pt The CSSPropTween that is the current head of the linked list (we'll prepend to it)
   * @param {TweenPlugin=} plugin If a plugin will be used to tween the parsed value, this is the plugin instance.
   * @param {Object=} vars Original vars object that contains the data for parsing.
   * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parse() call.
   */


  p.parse = function (t, e, p, cssp, pt, plugin, vars) {
    return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);
  };
  /**
   * Registers a special property that should be intercepted from any "css" objects defined in tweens. This allows you to handle them however you want without CSSPlugin doing it for you. The 2nd parameter should be a function that accepts 3 parameters:
   *  1) Target object whose property should be tweened (typically a DOM element)
   *  2) The end/destination value (could be a string, number, object, or whatever you want)
   *  3) The tween instance (you probably don't need to worry about this, but it can be useful for looking up information like the duration)
   *
   * Then, your function should return a function which will be called each time the tween gets rendered, passing a numeric "ratio" parameter to your function that indicates the change factor (usually between 0 and 1). For example:
   *
   * CSSPlugin.registerSpecialProp("myCustomProp", function(target, value, tween) {
   *      var start = target.style.width;
   *      return function(ratio) {
   *              target.style.width = (start + value * ratio) + "px";
   *              console.log("set width to " + target.style.width);
   *          }
   * }, 0);
   *
   * Then, when I do this tween, it will trigger my special property:
   *
   * TweenLite.to(element, 1, {css:{myCustomProp:100}});
   *
   * In the example, of course, we're just changing the width, but you can do anything you want.
   *
   * @param {!string} name Property name (or comma-delimited list of property names) that should be intercepted and handled by your function. For example, if I define "myCustomProp", then it would handle that portion of the following tween: TweenLite.to(element, 1, {css:{myCustomProp:100}})
   * @param {!function(Object, Object, Object, string):function(number)} onInitTween The function that will be called when a tween of this special property is performed. The function will receive 4 parameters: 1) Target object that should be tweened, 2) Value that was passed to the tween, 3) The tween instance itself (rarely used), and 4) The property name that's being tweened. Your function should return a function that should be called on every update of the tween. That function will receive a single parameter that is a "change factor" value (typically between 0 and 1) indicating the amount of change as a ratio. You can use this to determine how to set the values appropriately in your function.
   * @param {number=} priority Priority that helps the engine determine the order in which to set the properties (default: 0). Higher priority properties will be updated before lower priority ones.
   */


  CSSPlugin.registerSpecialProp = function (name, onInitTween, priority) {
    _registerComplexSpecialProp(name, {
      parser: function parser(t, e, p, cssp, pt, plugin, vars) {
        var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);
        rv.plugin = plugin;
        rv.setRatio = onInitTween(t, e, cssp._tween, p);
        return rv;
      },
      priority: priority
    });
  }; //transform-related methods and properties


  CSSPlugin.useSVGTransformAttr = true; //Safari and Firefox both have some rendering bugs when applying CSS transforms to SVG elements, so default to using the "transform" attribute instead (users can override this).

  var _transformProps = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
      _transformProp = _checkPropPrefix("transform"),
      //the Javascript (camelCase) transform property, like msTransform, WebkitTransform, MozTransform, or OTransform.
  _transformPropCSS = _prefixCSS + "transform",
      _transformOriginProp = _checkPropPrefix("transformOrigin"),
      _supports3D = _checkPropPrefix("perspective") !== null,
      Transform = _internals.Transform = function () {
    this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;
    this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || "auto";
  },
      _SVGElement = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].SVGElement,
      _useSVGTransformAttr,
      //Some browsers (like Firefox and IE) don't honor transform-origin properly in SVG elements, so we need to manually adjust the matrix accordingly. We feature detect here rather than always doing the conversion for certain browsers because they may fix the problem at some point in the future.
  _createSVG = function _createSVG(type, container, attributes) {
    var element = _doc.createElementNS("http://www.w3.org/2000/svg", type),
        reg = /([a-z])([A-Z])/g,
        p;

    for (p in attributes) {
      element.setAttributeNS(null, p.replace(reg, "$1-$2").toLowerCase(), attributes[p]);
    }

    container.appendChild(element);
    return element;
  },
      _docElement = _doc.documentElement || {},
      _forceSVGTransformAttr = function () {
    //IE and Android stock don't support CSS transforms on SVG elements, so we must write them to the "transform" attribute. We populate this variable in the _parseTransform() method, and only if/when we come across an SVG element
    var force = _ieVers || /Android/i.test(_agent) && !__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].chrome,
        svg,
        rect,
        width;

    if (_doc.createElementNS && _docElement.appendChild && !force) {
      //IE8 and earlier doesn't support SVG anyway
      svg = _createSVG("svg", _docElement);
      rect = _createSVG("rect", svg, {
        width: 100,
        height: 50,
        x: 100
      });
      width = rect.getBoundingClientRect().width;
      rect.style[_transformOriginProp] = "50% 50%";
      rect.style[_transformProp] = "scaleX(0.5)";
      force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D); //note: Firefox fails the test even though it does support CSS transforms in 3D. Since we can't push 3D stuff into the transform attribute, we force Firefox to pass the test here (as long as it does truly support 3D).

      _docElement.removeChild(svg);
    }

    return force;
  }(),
      _parseSVGOrigin = function _parseSVGOrigin(e, local, decoratee, absolute, smoothOrigin, skipRecord) {
    var tm = e._gsTransform,
        m = _getMatrix(e, true),
        v,
        x,
        y,
        xOrigin,
        yOrigin,
        a,
        b,
        c,
        d,
        tx,
        ty,
        determinant,
        xOriginOld,
        yOriginOld;

    if (tm) {
      xOriginOld = tm.xOrigin; //record the original values before we alter them.

      yOriginOld = tm.yOrigin;
    }

    if (!absolute || (v = absolute.split(" ")).length < 2) {
      b = e.getBBox();

      if (b.x === 0 && b.y === 0 && b.width + b.height === 0) {
        //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.
        b = {
          x: parseFloat(e.hasAttribute("x") ? e.getAttribute("x") : e.hasAttribute("cx") ? e.getAttribute("cx") : 0) || 0,
          y: parseFloat(e.hasAttribute("y") ? e.getAttribute("y") : e.hasAttribute("cy") ? e.getAttribute("cy") : 0) || 0,
          width: 0,
          height: 0
        };
      }

      local = _parsePosition(local).split(" ");
      v = [(local[0].indexOf("%") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf("%") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y];
    }

    decoratee.xOrigin = xOrigin = parseFloat(v[0]);
    decoratee.yOrigin = yOrigin = parseFloat(v[1]);

    if (absolute && m !== _identity2DMatrix) {
      //if svgOrigin is being set, we must invert the matrix and determine where the absolute point is, factoring in the current transforms. Otherwise, the svgOrigin would be based on the element's non-transformed position on the canvas.
      a = m[0];
      b = m[1];
      c = m[2];
      d = m[3];
      tx = m[4];
      ty = m[5];
      determinant = a * d - b * c;

      if (determinant) {
        //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.
        x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
        y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
        xOrigin = decoratee.xOrigin = v[0] = x;
        yOrigin = decoratee.yOrigin = v[1] = y;
      }
    }

    if (tm) {
      //avoid jump when transformOrigin is changed - adjust the x/y values accordingly
      if (skipRecord) {
        decoratee.xOffset = tm.xOffset;
        decoratee.yOffset = tm.yOffset;
        tm = decoratee;
      }

      if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {
        x = xOrigin - xOriginOld;
        y = yOrigin - yOriginOld; //originally, we simply adjusted the x and y values, but that would cause problems if, for example, you created a rotational tween part-way through an x/y tween. Managing the offset in a separate variable gives us ultimate flexibility.
        //tm.x -= x - (x * m[0] + y * m[2]);
        //tm.y -= y - (x * m[1] + y * m[3]);

        tm.xOffset += x * m[0] + y * m[2] - x;
        tm.yOffset += x * m[1] + y * m[3] - y;
      } else {
        tm.xOffset = tm.yOffset = 0;
      }
    }

    if (!skipRecord) {
      e.setAttribute("data-svg-origin", v.join(" "));
    }
  },
      _getBBoxHack = function _getBBoxHack(swapIfPossible) {
    //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).
    var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
        oldParent = this.parentNode,
        oldSibling = this.nextSibling,
        oldCSS = this.style.cssText,
        bbox;

    _docElement.appendChild(svg);

    svg.appendChild(this);
    this.style.display = "block";

    if (swapIfPossible) {
      try {
        bbox = this.getBBox();
        this._originalGetBBox = this.getBBox;
        this.getBBox = _getBBoxHack;
      } catch (e) {}
    } else if (this._originalGetBBox) {
      bbox = this._originalGetBBox();
    }

    if (oldSibling) {
      oldParent.insertBefore(this, oldSibling);
    } else {
      oldParent.appendChild(this);
    }

    _docElement.removeChild(svg);

    this.style.cssText = oldCSS;
    return bbox;
  },
      _getBBox = function _getBBox(e) {
    try {
      return e.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118
    } catch (error) {
      return _getBBoxHack.call(e, true);
    }
  },
      _isSVG = function _isSVG(e) {
    //reports if the element is an SVG on which getBBox() actually works
    return !!(_SVGElement && e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
  },
      _identity2DMatrix = [1, 0, 0, 1, 0, 0],
      _getMatrix = function _getMatrix(e, force2D) {
    var tm = e._gsTransform || new Transform(),
        rnd = 100000,
        style = e.style,
        isDefault,
        s,
        m,
        n,
        dec,
        nextSibling,
        parent;

    if (_transformProp) {
      s = _getStyle(e, _transformPropCSS, null, true);
    } else if (e.currentStyle) {
      //for older versions of IE, we need to interpret the filter portion that is in the format: progid:DXImageTransform.Microsoft.Matrix(M11=6.123233995736766e-17, M12=-1, M21=1, M22=6.123233995736766e-17, sizingMethod='auto expand') Notice that we need to swap b and c compared to a normal matrix.
      s = e.currentStyle.filter.match(_ieGetMatrixExp);
      s = s && s.length === 4 ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0].join(",") : "";
    }

    isDefault = !s || s === "none" || s === "matrix(1, 0, 0, 1, 0, 0)";

    if (_transformProp && isDefault && !e.offsetParent && e !== _docElement) {
      //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397
      //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not "none". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).
      n = style.display;
      style.display = "block";
      parent = e.parentNode;

      if (!parent || !e.offsetParent) {
        dec = 1; //flag

        nextSibling = e.nextSibling;

        _docElement.appendChild(e); //we must add it to the DOM in order to get values properly

      }

      s = _getStyle(e, _transformPropCSS, null, true);
      isDefault = !s || s === "none" || s === "matrix(1, 0, 0, 1, 0, 0)";

      if (n) {
        style.display = n;
      } else {
        _removeProp(style, "display");
      }

      if (dec) {
        if (nextSibling) {
          parent.insertBefore(e, nextSibling);
        } else if (parent) {
          parent.appendChild(e);
        } else {
          _docElement.removeChild(e);
        }
      }
    }

    if (tm.svg || e.getCTM && _isSVG(e)) {
      if (isDefault && (style[_transformProp] + "").indexOf("matrix") !== -1) {
        //some browsers (like Chrome 40) don't correctly report transforms that are applied inline on an SVG element (they don't get included in the computed style), so we double-check here and accept matrix values
        s = style[_transformProp];
        isDefault = 0;
      }

      m = e.getAttribute("transform");

      if (isDefault && m) {
        m = e.transform.baseVal.consolidate().matrix; //ensures that even complex values like "translate(50,60) rotate(135,0,0)" are parsed because it mashes it into a matrix.

        s = "matrix(" + m.a + "," + m.b + "," + m.c + "," + m.d + "," + m.e + "," + m.f + ")";
        isDefault = 0;
      }
    }

    if (isDefault) {
      return _identity2DMatrix;
    } //split the matrix values out into an array (m for matrix)


    m = (s || "").match(_numExp) || [];
    i = m.length;

    while (--i > -1) {
      n = Number(m[i]);
      m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -0.5 : 0.5) | 0) / rnd + n : n; //convert strings to Numbers and round to 5 decimal places to avoid issues with tiny numbers. Roughly 20x faster than Number.toFixed(). We also must make sure to round before dividing so that values like 0.9999999999 become 1 to avoid glitches in browser rendering and interpretation of flipped/rotated 3D matrices. And don't just multiply the number by rnd, floor it, and then divide by rnd because the bitwise operations max out at a 32-bit signed integer, thus it could get clipped at a relatively low value (like 22,000.00000 for example).
    }

    return force2D && m.length > 6 ? [m[0], m[1], m[4], m[5], m[12], m[13]] : m;
  },

  /**
   * Parses the transform values for an element, returning an object with x, y, z, scaleX, scaleY, scaleZ, rotation, rotationX, rotationY, skewX, and skewY properties. Note: by default (for performance reasons), all skewing is combined into skewX and rotation but skewY still has a place in the transform object so that we can record how much of the skew is attributed to skewX vs skewY. Remember, a skewY of 10 looks the same as a rotation of 10 and skewX of -10.
   * @param {!Object} t target element
   * @param {Object=} cs computed style object (optional)
   * @param {boolean=} rec if true, the transform values will be recorded to the target element's _gsTransform object, like target._gsTransform = {x:0, y:0, z:0, scaleX:1...}
   * @param {boolean=} parse if true, we'll ignore any _gsTransform values that already exist on the element, and force a reparsing of the css (calculated style)
   * @return {object} object containing all of the transform properties/values like {x:0, y:0, z:0, scaleX:1...}
   */
  _getTransform = _internals.getTransform = function (t, cs, rec, parse) {
    if (t._gsTransform && rec && !parse) {
      return t._gsTransform; //if the element already has a _gsTransform, use that. Note: some browsers don't accurately return the calculated style for the transform (particularly for SVG), so it's almost always safest to just use the values we've already applied rather than re-parsing things.
    }

    var tm = rec ? t._gsTransform || new Transform() : new Transform(),
        invX = tm.scaleX < 0,
        //in order to interpret things properly, we need to know if the user applied a negative scaleX previously so that we can adjust the rotation and skewX accordingly. Otherwise, if we always interpret a flipped matrix as affecting scaleY and the user only wants to tween the scaleX on multiple sequential tweens, it would keep the negative scaleY without that being the user's intent.
    min = 0.00002,
        rnd = 100000,
        zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, "0 0 0").split(" ")[2]) || tm.zOrigin || 0 : 0,
        defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0,
        m,
        i,
        scaleX,
        scaleY,
        rotation,
        skewX;
    tm.svg = !!(t.getCTM && _isSVG(t));

    if (tm.svg) {
      _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, "50% 50%") + "", tm, t.getAttribute("data-svg-origin"));

      _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;
    }

    m = _getMatrix(t);

    if (m !== _identity2DMatrix) {
      if (m.length === 16) {
        //we'll only look at these position-related 6 variables first because if x/y/z all match, it's relatively safe to assume we don't need to re-parse everything which risks losing important rotational information (like rotationX:180 plus rotationY:180 would look the same as rotation:180 - there's no way to know for sure which direction was taken based solely on the matrix3d() values)
        var a11 = m[0],
            a21 = m[1],
            a31 = m[2],
            a41 = m[3],
            a12 = m[4],
            a22 = m[5],
            a32 = m[6],
            a42 = m[7],
            a13 = m[8],
            a23 = m[9],
            a33 = m[10],
            a14 = m[12],
            a24 = m[13],
            a34 = m[14],
            a43 = m[11],
            angle = Math.atan2(a32, a33),
            t1,
            t2,
            t3,
            t4,
            cos,
            sin; //we manually compensate for non-zero z component of transformOrigin to work around bugs in Safari

        if (tm.zOrigin) {
          a34 = -tm.zOrigin;
          a14 = a13 * a34 - m[12];
          a24 = a23 * a34 - m[13];
          a34 = a33 * a34 + tm.zOrigin - m[14];
        } //note for possible future consolidation: rotationX: Math.atan2(a32, a33), rotationY: Math.atan2(-a31, Math.sqrt(a33 * a33 + a32 * a32)), rotation: Math.atan2(a21, a11), skew: Math.atan2(a12, a22). However, it doesn't seem to be quite as reliable as the full-on backwards rotation procedure.


        tm.rotationX = angle * _RAD2DEG; //rotationX

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a12 * cos + a13 * sin;
          t2 = a22 * cos + a23 * sin;
          t3 = a32 * cos + a33 * sin;
          a13 = a12 * -sin + a13 * cos;
          a23 = a22 * -sin + a23 * cos;
          a33 = a32 * -sin + a33 * cos;
          a43 = a42 * -sin + a43 * cos;
          a12 = t1;
          a22 = t2;
          a32 = t3;
        } //rotationY


        angle = Math.atan2(-a31, a33);
        tm.rotationY = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a11 * cos - a13 * sin;
          t2 = a21 * cos - a23 * sin;
          t3 = a31 * cos - a33 * sin;
          a23 = a21 * sin + a23 * cos;
          a33 = a31 * sin + a33 * cos;
          a43 = a41 * sin + a43 * cos;
          a11 = t1;
          a21 = t2;
          a31 = t3;
        } //rotationZ


        angle = Math.atan2(a21, a11);
        tm.rotation = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(angle);
          sin = Math.sin(angle);
          t1 = a11 * cos + a21 * sin;
          t2 = a12 * cos + a22 * sin;
          t3 = a13 * cos + a23 * sin;
          a21 = a21 * cos - a11 * sin;
          a22 = a22 * cos - a12 * sin;
          a23 = a23 * cos - a13 * sin;
          a11 = t1;
          a12 = t2;
          a13 = t3;
        }

        if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {
          //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.
          tm.rotationX = tm.rotation = 0;
          tm.rotationY = 180 - tm.rotationY;
        } //skewX


        angle = Math.atan2(a12, a22); //scales

        tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21 + a31 * a31) * rnd + 0.5 | 0) / rnd;
        tm.scaleY = (Math.sqrt(a22 * a22 + a32 * a32) * rnd + 0.5 | 0) / rnd;
        tm.scaleZ = (Math.sqrt(a13 * a13 + a23 * a23 + a33 * a33) * rnd + 0.5 | 0) / rnd;
        a11 /= tm.scaleX;
        a12 /= tm.scaleY;
        a21 /= tm.scaleX;
        a22 /= tm.scaleY;

        if (Math.abs(angle) > min) {
          tm.skewX = angle * _RAD2DEG;
          a12 = 0; //unskews

          if (tm.skewType !== "simple") {
            tm.scaleY *= 1 / Math.cos(angle); //by default, we compensate the scale based on the skew so that the element maintains a similar proportion when skewed, so we have to alter the scaleY here accordingly to match the default (non-adjusted) skewing that CSS does (stretching more and more as it skews).
          }
        } else {
          tm.skewX = 0;
        }
        /* //for testing purposes
        var transform = "matrix3d(",
        	comma = ",",
        	zero = "0";
        a13 /= tm.scaleZ;
        a23 /= tm.scaleZ;
        a31 /= tm.scaleX;
        a32 /= tm.scaleY;
        a33 /= tm.scaleZ;
        transform += ((a11 < min && a11 > -min) ? zero : a11) + comma + ((a21 < min && a21 > -min) ? zero : a21) + comma + ((a31 < min && a31 > -min) ? zero : a31);
        transform += comma + ((a41 < min && a41 > -min) ? zero : a41) + comma + ((a12 < min && a12 > -min) ? zero : a12) + comma + ((a22 < min && a22 > -min) ? zero : a22);
        transform += comma + ((a32 < min && a32 > -min) ? zero : a32) + comma + ((a42 < min && a42 > -min) ? zero : a42) + comma + ((a13 < min && a13 > -min) ? zero : a13);
        transform += comma + ((a23 < min && a23 > -min) ? zero : a23) + comma + ((a33 < min && a33 > -min) ? zero : a33) + comma + ((a43 < min && a43 > -min) ? zero : a43) + comma;
        transform += a14 + comma + a24 + comma + a34 + comma + (tm.perspective ? (1 + (-a34 / tm.perspective)) : 1) + ")";
        console.log(transform);
        document.querySelector(".test").style[_transformProp] = transform;
        */


        tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
        tm.x = a14;
        tm.y = a24;
        tm.z = a34;

        if (tm.svg) {
          tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);
          tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);
        }
      } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {
        //sometimes a 6-element matrix is returned even when we performed 3D transforms, like if rotationX and rotationY are 180. In cases like this, we still need to honor the 3D transforms. If we just rely on the 2D info, it could affect how the data is interpreted, like scaleY might get set to -1 or rotation could get offset by 180 degrees. For example, do a TweenLite.to(element, 1, {css:{rotationX:180, rotationY:180}}) and then later, TweenLite.to(element, 1, {css:{rotationX:0}}) and without this conditional logic in place, it'd jump to a state of being unrotated when the 2nd tween starts. Then again, we need to honor the fact that the user COULD alter the transforms outside of CSSPlugin, like by manually applying new css, so we try to sense that by looking at x and y because if those changed, we know the changes were made outside CSSPlugin and we force a reinterpretation of the matrix values. Also, in Webkit browsers, if the element's "display" is "none", its calculated style value will always return empty, so if we've already recorded the values in the _gsTransform object, we'll just rely on those.
        var k = m.length >= 6,
            a = k ? m[0] : 1,
            b = m[1] || 0,
            c = m[2] || 0,
            d = k ? m[3] : 1;
        tm.x = m[4] || 0;
        tm.y = m[5] || 0;
        scaleX = Math.sqrt(a * a + b * b);
        scaleY = Math.sqrt(d * d + c * c);
        rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).

        skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;
        tm.scaleX = scaleX;
        tm.scaleY = scaleY;
        tm.rotation = rotation;
        tm.skewX = skewX;

        if (_supports3D) {
          tm.rotationX = tm.rotationY = tm.z = 0;
          tm.perspective = defaultTransformPerspective;
          tm.scaleZ = 1;
        }

        if (tm.svg) {
          tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);
          tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);
        }
      }

      if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {
        if (invX) {
          tm.scaleX *= -1;
          tm.skewX += tm.rotation <= 0 ? 180 : -180;
          tm.rotation += tm.rotation <= 0 ? 180 : -180;
        } else {
          tm.scaleY *= -1;
          tm.skewX += tm.skewX <= 0 ? 180 : -180;
        }
      }

      tm.zOrigin = zOrigin; //some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the "e-" towards the end) and would render the object slightly off. So we round to 0 in these cases. The conditional logic here is faster than calling Math.abs(). Also, browsers tend to render a SLIGHTLY rotated object in a fuzzy way, so we need to snap to exactly 0 when appropriate.

      for (i in tm) {
        if (tm[i] < min) if (tm[i] > -min) {
          tm[i] = 0;
        }
      }
    } //DEBUG: _log("parsed rotation of " + t.getAttribute("id")+": "+(tm.rotationX)+", "+(tm.rotationY)+", "+(tm.rotation)+", scale: "+tm.scaleX+", "+tm.scaleY+", "+tm.scaleZ+", position: "+tm.x+", "+tm.y+", "+tm.z+", perspective: "+tm.perspective+ ", origin: "+ tm.xOrigin+ ","+ tm.yOrigin);


    if (rec) {
      t._gsTransform = tm; //record to the object's _gsTransform which we use so that tweens can control individual properties independently (we need all the properties to accurately recompose the matrix in the setRatio() method)

      if (tm.svg) {
        //if we're supposed to apply transforms to the SVG element's "transform" attribute, make sure there aren't any CSS transforms applied or they'll override the attribute ones. Also clear the transform attribute if we're using CSS, just to be clean.
        if (_useSVGTransformAttr && t.style[_transformProp]) {
          __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0.001, function () {
            //if we apply this right away (before anything has rendered), we risk there being no transforms for a brief moment and it also interferes with adjusting the transformOrigin in a tween with immediateRender:true (it'd try reading the matrix and it wouldn't have the appropriate data in place because we just removed it).
            _removeProp(t.style, _transformProp);
          });
        } else if (!_useSVGTransformAttr && t.getAttribute("transform")) {
          __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0.001, function () {
            t.removeAttribute("transform");
          });
        }
      }
    }

    return tm;
  },
      //for setting 2D transforms in IE6, IE7, and IE8 (must use a "filter" to emulate the behavior of modern day browser transforms)
  _setIETransformRatio = function _setIETransformRatio(v) {
    var t = this.data,
        //refers to the element's _gsTransform object
    ang = -t.rotation * _DEG2RAD,
        skew = ang + t.skewX * _DEG2RAD,
        rnd = 100000,
        a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd,
        b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd,
        c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd,
        d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd,
        style = this.t.style,
        cs = this.t.currentStyle,
        filters,
        val;

    if (!cs) {
      return;
    }

    val = b; //just for swapping the variables an inverting them (reused "val" to avoid creating another variable in memory). IE's filter matrix uses a non-standard matrix configuration (angle goes the opposite way, and b and c are reversed and inverted)

    b = -c;
    c = -val;
    filters = cs.filter;
    style.filter = ""; //remove filters so that we can accurately measure offsetWidth/offsetHeight

    var w = this.t.offsetWidth,
        h = this.t.offsetHeight,
        clip = cs.position !== "absolute",
        m = "progid:DXImageTransform.Microsoft.Matrix(M11=" + a + ", M12=" + b + ", M21=" + c + ", M22=" + d,
        ox = t.x + w * t.xPercent / 100,
        oy = t.y + h * t.yPercent / 100,
        dx,
        dy; //if transformOrigin is being used, adjust the offset x and y

    if (t.ox != null) {
      dx = (t.oxp ? w * t.ox * 0.01 : t.ox) - w / 2;
      dy = (t.oyp ? h * t.oy * 0.01 : t.oy) - h / 2;
      ox += dx - (dx * a + dy * b);
      oy += dy - (dx * c + dy * d);
    }

    if (!clip) {
      m += ", sizingMethod='auto expand')";
    } else {
      dx = w / 2;
      dy = h / 2; //translate to ensure that transformations occur around the correct origin (default is center).

      m += ", Dx=" + (dx - (dx * a + dy * b) + ox) + ", Dy=" + (dy - (dx * c + dy * d) + oy) + ")";
    }

    if (filters.indexOf("DXImageTransform.Microsoft.Matrix(") !== -1) {
      style.filter = filters.replace(_ieSetMatrixExp, m);
    } else {
      style.filter = m + " " + filters; //we must always put the transform/matrix FIRST (before alpha(opacity=xx)) to avoid an IE bug that slices part of the object when rotation is applied with alpha.
    } //at the end or beginning of the tween, if the matrix is normal (1, 0, 0, 1) and opacity is 100 (or doesn't exist), remove the filter to improve browser performance.


    if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf("Dx=0, Dy=0") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf("gradient(" && filters.indexOf("Alpha")) === -1) {
      style.removeAttribute("filter");
    } //we must set the margins AFTER applying the filter in order to avoid some bugs in IE8 that could (in rare scenarios) cause them to be ignored intermittently (vibration).

    if (!clip) {
      var mult = _ieVers < 8 ? 1 : -1,
          //in Internet Explorer 7 and before, the box model is broken, causing the browser to treat the width/height of the actual rotated filtered image as the width/height of the box itself, but Microsoft corrected that in IE8. We must use a negative offset in IE8 on the right/bottom
      marg,
          prop,
          dif;
      dx = t.ieOffsetX || 0;
      dy = t.ieOffsetY || 0;
      t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);
      t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);

      for (i = 0; i < 4; i++) {
        prop = _margins[i];
        marg = cs[prop]; //we need to get the current margin in case it is being tweened separately (we want to respect that tween's changes)

        val = marg.indexOf("px") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, "")) || 0;

        if (val !== t[prop]) {
          dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY; //if another tween is controlling a margin, we cannot only apply the difference in the ieOffsets, so we essentially zero-out the dx and dy here in that case. We record the margin(s) later so that we can keep comparing them, making this code very flexible.
        } else {
          dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;
        }

        style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + "px";
      }
    }
  },

  /* translates a super small decimal to a string WITHOUT scientific notation
  _safeDecimal = function(n) {
  	var s = (n < 0 ? -n : n) + "",
  		a = s.split("e-");
  	return (n < 0 ? "-0." : "0.") + new Array(parseInt(a[1], 10) || 0).join("0") + a[0].split(".").join("");
  },
  */
  _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function (v) {
    var t = this.data,
        //refers to the element's _gsTransform object
    style = this.t.style,
        angle = t.rotation,
        rotationX = t.rotationX,
        rotationY = t.rotationY,
        sx = t.scaleX,
        sy = t.scaleY,
        sz = t.scaleZ,
        x = t.x,
        y = t.y,
        z = t.z,
        isSVG = t.svg,
        perspective = t.perspective,
        force3D = t.force3D,
        skewY = t.skewY,
        skewX = t.skewX,
        t1,
        a11,
        a12,
        a13,
        a21,
        a22,
        a23,
        a31,
        a32,
        a33,
        a41,
        a42,
        a43,
        zOrigin,
        min,
        cos,
        sin,
        t2,
        transform,
        comma,
        zero,
        skew,
        rnd;

    if (skewY) {
      //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.
      skewX += skewY;
      angle += skewY;
    } //check to see if we should render as 2D (and SVGs must use 2D when _useSVGTransformAttr is true)


    if (((v === 1 || v === 0) && force3D === "auto" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {
      //on the final render (which could be 0 for a from tween), if there are no 3D aspects, render in 2D to free up memory and improve performance especially on mobile devices. Check the tween's totalTime/totalDuration too in order to make sure it doesn't happen between repeats if it's a repeating tween.
      //2D
      if (angle || skewX || isSVG) {
        angle *= _DEG2RAD;
        skew = skewX * _DEG2RAD;
        rnd = 100000;
        a11 = Math.cos(angle) * sx;
        a21 = Math.sin(angle) * sx;
        a12 = Math.sin(angle - skew) * -sy;
        a22 = Math.cos(angle - skew) * sy;

        if (skew && t.skewType === "simple") {
          //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to "simple" to use the uncompensated skewing that CSS does
          t1 = Math.tan(skew - skewY * _DEG2RAD);
          t1 = Math.sqrt(1 + t1 * t1);
          a12 *= t1;
          a22 *= t1;

          if (skewY) {
            t1 = Math.tan(skewY * _DEG2RAD);
            t1 = Math.sqrt(1 + t1 * t1);
            a11 *= t1;
            a21 *= t1;
          }
        }

        if (isSVG) {
          x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;
          y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;

          if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {
            //The SVG spec doesn't support percentage-based translation in the "transform" attribute, so we merge it into the matrix to simulate it.
            min = this.t.getBBox();
            x += t.xPercent * 0.01 * min.width;
            y += t.yPercent * 0.01 * min.height;
          }

          min = 0.000001;
          if (x < min) if (x > -min) {
            x = 0;
          }
          if (y < min) if (y > -min) {
            y = 0;
          }
        }

        transform = (a11 * rnd | 0) / rnd + "," + (a21 * rnd | 0) / rnd + "," + (a12 * rnd | 0) / rnd + "," + (a22 * rnd | 0) / rnd + "," + x + "," + y + ")";

        if (isSVG && _useSVGTransformAttr) {
          this.t.setAttribute("transform", "matrix(" + transform);
        } else {
          //some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the "e-" towards the end) and would render the object slightly off. So we round to 5 decimal places.
          style[_transformProp] = (t.xPercent || t.yPercent ? "translate(" + t.xPercent + "%," + t.yPercent + "%) matrix(" : "matrix(") + transform;
        }
      } else {
        style[_transformProp] = (t.xPercent || t.yPercent ? "translate(" + t.xPercent + "%," + t.yPercent + "%) matrix(" : "matrix(") + sx + ",0,0," + sy + "," + x + "," + y + ")";
      }

      return;
    }

    if (_isFirefox) {
      //Firefox has a bug (at least in v25) that causes it to render the transparent part of 32-bit PNG images as black when displayed inside an iframe and the 3D scale is very small and doesn't change sufficiently enough between renders (like if you use a Power4.easeInOut to scale from 0 to 1 where the beginning values only change a tiny amount to begin the tween before accelerating). In this case, we force the scale to be 0.00002 instead which is visually the same but works around the Firefox issue.
      min = 0.0001;

      if (sx < min && sx > -min) {
        sx = sz = 0.00002;
      }

      if (sy < min && sy > -min) {
        sy = sz = 0.00002;
      }

      if (perspective && !t.z && !t.rotationX && !t.rotationY) {
        //Firefox has a bug that causes elements to have an odd super-thin, broken/dotted black border on elements that have a perspective set but aren't utilizing 3D space (no rotationX, rotationY, or z).
        perspective = 0;
      }
    }

    if (angle || skewX) {
      angle *= _DEG2RAD;
      cos = a11 = Math.cos(angle);
      sin = a21 = Math.sin(angle);

      if (skewX) {
        angle -= skewX * _DEG2RAD;
        cos = Math.cos(angle);
        sin = Math.sin(angle);

        if (t.skewType === "simple") {
          //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to "simple" to use the uncompensated skewing that CSS does
          t1 = Math.tan((skewX - skewY) * _DEG2RAD);
          t1 = Math.sqrt(1 + t1 * t1);
          cos *= t1;
          sin *= t1;

          if (t.skewY) {
            t1 = Math.tan(skewY * _DEG2RAD);
            t1 = Math.sqrt(1 + t1 * t1);
            a11 *= t1;
            a21 *= t1;
          }
        }
      }

      a12 = -sin;
      a22 = cos;
    } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {
      //if we're only translating and/or 2D scaling, this is faster...
      style[_transformProp] = (t.xPercent || t.yPercent ? "translate(" + t.xPercent + "%," + t.yPercent + "%) translate3d(" : "translate3d(") + x + "px," + y + "px," + z + "px)" + (sx !== 1 || sy !== 1 ? " scale(" + sx + "," + sy + ")" : "");
      return;
    } else {
      a11 = a22 = 1;
      a12 = a21 = 0;
    } // KEY  INDEX   AFFECTS a[row][column]
    // a11  0       rotation, rotationY, scaleX
    // a21  1       rotation, rotationY, scaleX
    // a31  2       rotationY, scaleX
    // a41  3       rotationY, scaleX
    // a12  4       rotation, skewX, rotationX, scaleY
    // a22  5       rotation, skewX, rotationX, scaleY
    // a32  6       rotationX, scaleY
    // a42  7       rotationX, scaleY
    // a13  8       rotationY, rotationX, scaleZ
    // a23  9       rotationY, rotationX, scaleZ
    // a33  10      rotationY, rotationX, scaleZ
    // a43  11      rotationY, rotationX, perspective, scaleZ
    // a14  12      x, zOrigin, svgOrigin
    // a24  13      y, zOrigin, svgOrigin
    // a34  14      z, zOrigin
    // a44  15
    // rotation: Math.atan2(a21, a11)
    // rotationY: Math.atan2(a13, a33) (or Math.atan2(a13, a11))
    // rotationX: Math.atan2(a32, a33)


    a33 = 1;
    a13 = a23 = a31 = a32 = a41 = a42 = 0;
    a43 = perspective ? -1 / perspective : 0;
    zOrigin = t.zOrigin;
    min = 0.000001; //threshold below which browsers use scientific notation which won't work.

    comma = ",";
    zero = "0";
    angle = rotationY * _DEG2RAD;

    if (angle) {
      cos = Math.cos(angle);
      sin = Math.sin(angle);
      a31 = -sin;
      a41 = a43 * -sin;
      a13 = a11 * sin;
      a23 = a21 * sin;
      a33 = cos;
      a43 *= cos;
      a11 *= cos;
      a21 *= cos;
    }

    angle = rotationX * _DEG2RAD;

    if (angle) {
      cos = Math.cos(angle);
      sin = Math.sin(angle);
      t1 = a12 * cos + a13 * sin;
      t2 = a22 * cos + a23 * sin;
      a32 = a33 * sin;
      a42 = a43 * sin;
      a13 = a12 * -sin + a13 * cos;
      a23 = a22 * -sin + a23 * cos;
      a33 = a33 * cos;
      a43 = a43 * cos;
      a12 = t1;
      a22 = t2;
    }

    if (sz !== 1) {
      a13 *= sz;
      a23 *= sz;
      a33 *= sz;
      a43 *= sz;
    }

    if (sy !== 1) {
      a12 *= sy;
      a22 *= sy;
      a32 *= sy;
      a42 *= sy;
    }

    if (sx !== 1) {
      a11 *= sx;
      a21 *= sx;
      a31 *= sx;
      a41 *= sx;
    }

    if (zOrigin || isSVG) {
      if (zOrigin) {
        x += a13 * -zOrigin;
        y += a23 * -zOrigin;
        z += a33 * -zOrigin + zOrigin;
      }

      if (isSVG) {
        //due to bugs in some browsers, we need to manage the transform-origin of SVG manually
        x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;
        y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;
      }

      if (x < min && x > -min) {
        x = zero;
      }

      if (y < min && y > -min) {
        y = zero;
      }

      if (z < min && z > -min) {
        z = 0; //don't use string because we calculate perspective later and need the number.
      }
    } //optimized way of concatenating all the values into a string. If we do it all in one shot, it's slower because of the way browsers have to create temp strings and the way it affects memory. If we do it piece-by-piece with +=, it's a bit slower too. We found that doing it in these sized chunks works best overall:


    transform = t.xPercent || t.yPercent ? "translate(" + t.xPercent + "%," + t.yPercent + "%) matrix3d(" : "matrix3d(";
    transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);
    transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);

    if (rotationX || rotationY || sz !== 1) {
      //performance optimization (often there's no rotationX or rotationY, so we can skip these calculations)
      transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);
      transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;
    } else {
      transform += ",0,0,0,0,1,0,";
    }

    transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + ")";
    style[_transformProp] = transform;
  };

  p = Transform.prototype;
  p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;
  p.scaleX = p.scaleY = p.scaleZ = 1;

  _registerComplexSpecialProp("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
    parser: function parser(t, e, parsingProp, cssp, pt, plugin, vars) {
      if (cssp._lastParsedTransform === vars) {
        return pt;
      } //only need to parse the transform once, and only if the browser supports it.


      cssp._lastParsedTransform = vars;
      var scaleFunc = vars.scale && typeof vars.scale === "function" ? vars.scale : 0; //if there's a function-based "scale" value, swap in the resulting numeric value temporarily. Otherwise, if it's called for both scaleX and scaleY independently, they may not match (like if the function uses Math.random()).

      if (scaleFunc) {
        vars.scale = scaleFunc(_index, t);
      }

      var originalGSTransform = t._gsTransform,
          style = t.style,
          min = 0.000001,
          i = _transformProps.length,
          v = vars,
          endRotations = {},
          transformOriginString = "transformOrigin",
          m1 = _getTransform(t, _cs, true, v.parseTransform),
          orig = v.transform && (typeof v.transform === "function" ? v.transform(_index, _target) : v.transform),
          m2,
          copy,
          has3D,
          hasChange,
          dr,
          x,
          y,
          matrix,
          p;

      m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;
      cssp._transform = m1;

      if ("rotationZ" in v) {
        v.rotation = v.rotationZ;
      }

      if (orig && typeof orig === "string" && _transformProp) {
        //for values like transform:"rotate(60deg) scale(0.5, 0.8)"
        copy = _tempDiv.style; //don't use the original target because it might be SVG in which case some browsers don't report computed style correctly.

        copy[_transformProp] = orig;
        copy.display = "block"; //if display is "none", the browser often refuses to report the transform properties correctly.

        copy.position = "absolute";

        if (orig.indexOf("%") !== -1) {
          //%-based translations will fail unless we set the width/height to match the original target...
          copy.width = _getStyle(t, "width");
          copy.height = _getStyle(t, "height");
        }

        _doc.body.appendChild(_tempDiv);

        m2 = _getTransform(_tempDiv, null, false);

        if (m1.skewType === "simple") {
          //the default _getTransform() reports the skewX/scaleY as if skewType is "compensated", thus we need to adjust that here if skewType is "simple".
          m2.scaleY *= Math.cos(m2.skewX * _DEG2RAD);
        }

        if (m1.svg) {
          //if it's an SVG element, x/y part of the matrix will be affected by whatever we use as the origin and the offsets, so compensate here...
          x = m1.xOrigin;
          y = m1.yOrigin;
          m2.x -= m1.xOffset;
          m2.y -= m1.yOffset;

          if (v.transformOrigin || v.svgOrigin) {
            //if this tween is altering the origin, we must factor that in here. The actual work of recording the transformOrigin values and setting up the PropTween is done later (still inside this function) so we cannot leave the changes intact here - we only want to update the x/y accordingly.
            orig = {};

            _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);

            x = orig.xOrigin;
            y = orig.yOrigin;
            m2.x -= orig.xOffset - m1.xOffset;
            m2.y -= orig.yOffset - m1.yOffset;
          }

          if (x || y) {
            matrix = _getMatrix(_tempDiv, true);
            m2.x -= x - (x * matrix[0] + y * matrix[2]);
            m2.y -= y - (x * matrix[1] + y * matrix[3]);
          }
        }

        _doc.body.removeChild(_tempDiv);

        if (!m2.perspective) {
          m2.perspective = m1.perspective; //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.
        }

        if (v.xPercent != null) {
          m2.xPercent = _parseVal(v.xPercent, m1.xPercent);
        }

        if (v.yPercent != null) {
          m2.yPercent = _parseVal(v.yPercent, m1.yPercent);
        }
      } else if (typeof v === "object") {
        //for values like scaleX, scaleY, rotation, x, y, skewX, and skewY or transform:{...} (object)
        m2 = {
          scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),
          scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),
          scaleZ: _parseVal(v.scaleZ, m1.scaleZ),
          x: _parseVal(v.x, m1.x),
          y: _parseVal(v.y, m1.y),
          z: _parseVal(v.z, m1.z),
          xPercent: _parseVal(v.xPercent, m1.xPercent),
          yPercent: _parseVal(v.yPercent, m1.yPercent),
          perspective: _parseVal(v.transformPerspective, m1.perspective)
        };
        dr = v.directionalRotation;

        if (dr != null) {
          if (typeof dr === "object") {
            for (copy in dr) {
              v[copy] = dr[copy];
            }
          } else {
            v.rotation = dr;
          }
        }

        if (typeof v.x === "string" && v.x.indexOf("%") !== -1) {
          m2.x = 0;
          m2.xPercent = _parseVal(v.x, m1.xPercent);
        }

        if (typeof v.y === "string" && v.y.indexOf("%") !== -1) {
          m2.y = 0;
          m2.yPercent = _parseVal(v.y, m1.yPercent);
        }

        m2.rotation = _parseAngle("rotation" in v ? v.rotation : "shortRotation" in v ? v.shortRotation + "_short" : m1.rotation, m1.rotation, "rotation", endRotations);

        if (_supports3D) {
          m2.rotationX = _parseAngle("rotationX" in v ? v.rotationX : "shortRotationX" in v ? v.shortRotationX + "_short" : m1.rotationX || 0, m1.rotationX, "rotationX", endRotations);
          m2.rotationY = _parseAngle("rotationY" in v ? v.rotationY : "shortRotationY" in v ? v.shortRotationY + "_short" : m1.rotationY || 0, m1.rotationY, "rotationY", endRotations);
        }

        m2.skewX = _parseAngle(v.skewX, m1.skewX);
        m2.skewY = _parseAngle(v.skewY, m1.skewY);
      }

      if (_supports3D && v.force3D != null) {
        m1.force3D = v.force3D;
        hasChange = true;
      }

      has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;

      if (!has3D && v.scale != null) {
        m2.scaleZ = 1; //no need to tween scaleZ.
      }

      while (--i > -1) {
        p = _transformProps[i];
        orig = m2[p] - m1[p];

        if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {
          hasChange = true;
          pt = new CSSPropTween(m1, p, m1[p], orig, pt);

          if (p in endRotations) {
            pt.e = endRotations[p]; //directional rotations typically have compensated values during the tween, but we need to make sure they end at exactly what the user requested
          }

          pt.xs0 = 0; //ensures the value stays numeric in setRatio()

          pt.plugin = plugin;

          cssp._overwriteProps.push(pt.n);
        }
      }

      orig = typeof v.transformOrigin === "function" ? v.transformOrigin(_index, _target) : v.transformOrigin;

      if (m1.svg && (orig || v.svgOrigin)) {
        x = m1.xOffset; //when we change the origin, in order to prevent things from jumping we adjust the x/y so we must record those here so that we can create PropTweens for them and flip them at the same time as the origin

        y = m1.yOffset;

        _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);

        pt = _addNonTweeningNumericPT(m1, "xOrigin", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString); //note: if there wasn't a transformOrigin defined yet, just start with the destination one; it's wasteful otherwise, and it causes problems with fromTo() tweens. For example, TweenLite.to("#wheel", 3, {rotation:180, transformOrigin:"50% 50%", delay:1}); TweenLite.fromTo("#wheel", 3, {scale:0.5, transformOrigin:"50% 50%"}, {scale:1, delay:2}); would cause a jump when the from values revert at the beginning of the 2nd tween.

        pt = _addNonTweeningNumericPT(m1, "yOrigin", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);

        if (x !== m1.xOffset || y !== m1.yOffset) {
          pt = _addNonTweeningNumericPT(m1, "xOffset", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);
          pt = _addNonTweeningNumericPT(m1, "yOffset", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);
        }

        orig = "0px 0px"; //certain browsers (like firefox) completely botch transform-origin, so we must remove it to prevent it from contaminating transforms. We manage it ourselves with xOrigin and yOrigin
      }

      if (orig || _supports3D && has3D && m1.zOrigin) {
        //if anything 3D is happening and there's a transformOrigin with a z component that's non-zero, we must ensure that the transformOrigin's z-component is set to 0 so that we can manually do those calculations to get around Safari bugs. Even if the user didn't specifically define a "transformOrigin" in this particular tween (maybe they did it via css directly).
        if (_transformProp) {
          hasChange = true;
          p = _transformOriginProp;

          if (!orig) {
            orig = (_getStyle(t, p, _cs, false, "50% 50%") + "").split(" ");
            orig = orig[0] + " " + orig[1] + " " + m1.zOrigin + "px";
          }

          orig += "";
          pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);
          pt.b = style[p];
          pt.plugin = plugin;

          if (_supports3D) {
            copy = m1.zOrigin;
            orig = orig.split(" ");
            m1.zOrigin = (orig.length > 2 ? parseFloat(orig[2]) : copy) || 0; //Safari doesn't handle the z part of transformOrigin correctly, so we'll manually handle it in the _set3DTransformRatio() method.

            pt.xs0 = pt.e = orig[0] + " " + (orig[1] || "50%") + " 0px"; //we must define a z value of 0px specifically otherwise iOS 5 Safari will stick with the old one (if one was defined)!

            pt = new CSSPropTween(m1, "zOrigin", 0, 0, pt, -1, pt.n); //we must create a CSSPropTween for the _gsTransform.zOrigin so that it gets reset properly at the beginning if the tween runs backward (as opposed to just setting m1.zOrigin here)

            pt.b = copy;
            pt.xs0 = pt.e = m1.zOrigin;
          } else {
            pt.xs0 = pt.e = orig;
          } //for older versions of IE (6-8), we need to manually calculate things inside the setRatio() function. We record origin x and y (ox and oy) and whether or not the values are percentages (oxp and oyp).

        } else {
          _parsePosition(orig + "", m1);
        }
      }

      if (hasChange) {
        cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2; //quicker than calling cssp._enableTransforms();
      }

      if (scaleFunc) {
        vars.scale = scaleFunc;
      }

      return pt;
    },
    allowFunc: true,
    prefix: true
  });

  _registerComplexSpecialProp("boxShadow", {
    defaultValue: "0px 0px 0px 0px #999",
    prefix: true,
    color: true,
    multi: true,
    keyword: "inset"
  });

  _registerComplexSpecialProp("clipPath", {
    defaultValue: "inset(0%)",
    prefix: true,
    multi: true,
    formatter: _getFormatter("inset(0% 0% 0% 0%)", false, true)
  });

  _registerComplexSpecialProp("borderRadius", {
    defaultValue: "0px",
    parser: function parser(t, e, p, cssp, pt, plugin) {
      e = this.format(e);
      var props = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
          style = t.style,
          ea1,
          i,
          es2,
          bs2,
          bs,
          es,
          bn,
          en,
          w,
          h,
          esfx,
          bsfx,
          rel,
          hn,
          vn,
          em;
      w = parseFloat(t.offsetWidth);
      h = parseFloat(t.offsetHeight);
      ea1 = e.split(" ");

      for (i = 0; i < props.length; i++) {
        //if we're dealing with percentages, we must convert things separately for the horizontal and vertical axis!
        if (this.p.indexOf("border")) {
          //older browsers used a prefix
          props[i] = _checkPropPrefix(props[i]);
        }

        bs = bs2 = _getStyle(t, props[i], _cs, false, "0px");

        if (bs.indexOf(" ") !== -1) {
          bs2 = bs.split(" ");
          bs = bs2[0];
          bs2 = bs2[1];
        }

        es = es2 = ea1[i];
        bn = parseFloat(bs);
        bsfx = bs.substr((bn + "").length);
        rel = es.charAt(1) === "=";

        if (rel) {
          en = parseInt(es.charAt(0) + "1", 10);
          es = es.substr(2);
          en *= parseFloat(es);
          esfx = es.substr((en + "").length - (en < 0 ? 1 : 0)) || "";
        } else {
          en = parseFloat(es);
          esfx = es.substr((en + "").length);
        }

        if (esfx === "") {
          esfx = _suffixMap[p] || bsfx;
        }

        if (esfx !== bsfx) {
          hn = _convertToPixels(t, "borderLeft", bn, bsfx); //horizontal number (we use a bogus "borderLeft" property just because the _convertToPixels() method searches for the keywords "Left", "Right", "Top", and "Bottom" to determine of it's a horizontal or vertical property, and we need "border" in the name so that it knows it should measure relative to the element itself, not its parent.

          vn = _convertToPixels(t, "borderTop", bn, bsfx); //vertical number

          if (esfx === "%") {
            bs = hn / w * 100 + "%";
            bs2 = vn / h * 100 + "%";
          } else if (esfx === "em") {
            em = _convertToPixels(t, "borderLeft", 1, "em");
            bs = hn / em + "em";
            bs2 = vn / em + "em";
          } else {
            bs = hn + "px";
            bs2 = vn + "px";
          }

          if (rel) {
            es = parseFloat(bs) + en + esfx;
            es2 = parseFloat(bs2) + en + esfx;
          }
        }

        pt = _parseComplex(style, props[i], bs + " " + bs2, es + " " + es2, false, "0px", pt);
      }

      return pt;
    },
    prefix: true,
    formatter: _getFormatter("0px 0px 0px 0px", false, true)
  });

  _registerComplexSpecialProp("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
    defaultValue: "0px",
    parser: function parser(t, e, p, cssp, pt, plugin) {
      return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, "0px 0px")), this.format(e), false, "0px", pt);
    },
    prefix: true,
    formatter: _getFormatter("0px 0px", false, true)
  });

  _registerComplexSpecialProp("backgroundPosition", {
    defaultValue: "0 0",
    parser: function parser(t, e, p, cssp, pt, plugin) {
      var bp = "background-position",
          cs = _cs || _getComputedStyle(t, null),
          bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + "-x") + " " + cs.getPropertyValue(bp + "-y") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"),
          //Internet Explorer doesn't report background-position correctly - we must query background-position-x and background-position-y and combine them (even in IE10). Before IE9, we must do the same with the currentStyle object and use camelCase
      es = this.format(e),
          ba,
          ea,
          i,
          pct,
          overlap,
          src;

      if (bs.indexOf("%") !== -1 !== (es.indexOf("%") !== -1) && es.split(",").length < 2) {
        src = _getStyle(t, "backgroundImage").replace(_urlExp, "");

        if (src && src !== "none") {
          ba = bs.split(" ");
          ea = es.split(" ");

          _tempImg.setAttribute("src", src); //set the temp IMG's src to the background-image so that we can measure its width/height


          i = 2;

          while (--i > -1) {
            bs = ba[i];
            pct = bs.indexOf("%") !== -1;

            if (pct !== (ea[i].indexOf("%") !== -1)) {
              overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;
              ba[i] = pct ? parseFloat(bs) / 100 * overlap + "px" : parseFloat(bs) / overlap * 100 + "%";
            }
          }

          bs = ba.join(" ");
        }
      }

      return this.parseComplex(t.style, bs, es, pt, plugin);
    },
    formatter: _parsePosition
  });

  _registerComplexSpecialProp("backgroundSize", {
    defaultValue: "0 0",
    formatter: function formatter(v) {
      v += ""; //ensure it's a string

      return v.substr(0, 2) === "co" ? v : _parsePosition(v.indexOf(" ") === -1 ? v + " " + v : v); //if set to something like "100% 100%", Safari typically reports the computed style as just "100%" (no 2nd value), but we should ensure that there are two values, so copy the first one. Otherwise, it'd be interpreted as "100% 0" (wrong). Also remember that it could be "cover" or "contain" which we can't tween but should be able to set.
    }
  });

  _registerComplexSpecialProp("perspective", {
    defaultValue: "0px",
    prefix: true
  });

  _registerComplexSpecialProp("perspectiveOrigin", {
    defaultValue: "50% 50%",
    prefix: true
  });

  _registerComplexSpecialProp("transformStyle", {
    prefix: true
  });

  _registerComplexSpecialProp("backfaceVisibility", {
    prefix: true
  });

  _registerComplexSpecialProp("userSelect", {
    prefix: true
  });

  _registerComplexSpecialProp("margin", {
    parser: _getEdgeParser("marginTop,marginRight,marginBottom,marginLeft")
  });

  _registerComplexSpecialProp("padding", {
    parser: _getEdgeParser("paddingTop,paddingRight,paddingBottom,paddingLeft")
  });

  _registerComplexSpecialProp("clip", {
    defaultValue: "rect(0px,0px,0px,0px)",
    parser: function parser(t, e, p, cssp, pt, plugin) {
      var b, cs, delim;

      if (_ieVers < 9) {
        //IE8 and earlier don't report a "clip" value in the currentStyle - instead, the values are split apart into clipTop, clipRight, clipBottom, and clipLeft. Also, in IE7 and earlier, the values inside rect() are space-delimited, not comma-delimited.
        cs = t.currentStyle;
        delim = _ieVers < 8 ? " " : ",";
        b = "rect(" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + ")";
        e = this.format(e).split(",").join(delim);
      } else {
        b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));
        e = this.format(e);
      }

      return this.parseComplex(t.style, b, e, pt, plugin);
    }
  });

  _registerComplexSpecialProp("textShadow", {
    defaultValue: "0px 0px 0px #999",
    color: true,
    multi: true
  });

  _registerComplexSpecialProp("autoRound,strictUnits", {
    parser: function parser(t, e, p, cssp, pt) {
      return pt;
    }
  }); //just so that we can ignore these properties (not tween them)


  _registerComplexSpecialProp("border", {
    defaultValue: "0px solid #000",
    parser: function parser(t, e, p, cssp, pt, plugin) {
      var bw = _getStyle(t, "borderTopWidth", _cs, false, "0px"),
          end = this.format(e).split(" "),
          esfx = end[0].replace(_suffixExp, "");

      if (esfx !== "px") {
        //if we're animating to a non-px value, we need to convert the beginning width to that unit.
        bw = parseFloat(bw) / _convertToPixels(t, "borderTopWidth", 1, esfx) + esfx;
      }

      return this.parseComplex(t.style, this.format(bw + " " + _getStyle(t, "borderTopStyle", _cs, false, "solid") + " " + _getStyle(t, "borderTopColor", _cs, false, "#000")), end.join(" "), pt, plugin);
    },
    color: true,
    formatter: function formatter(v) {
      var a = v.split(" ");
      return a[0] + " " + (a[1] || "solid") + " " + (v.match(_colorExp) || ["#000"])[0];
    }
  });

  _registerComplexSpecialProp("borderWidth", {
    parser: _getEdgeParser("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
  }); //Firefox doesn't pick up on borderWidth set in style sheets (only inline).


  _registerComplexSpecialProp("float,cssFloat,styleFloat", {
    parser: function parser(t, e, p, cssp, pt, plugin) {
      var s = t.style,
          prop = "cssFloat" in s ? "cssFloat" : "styleFloat";
      return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);
    }
  }); //opacity-related


  var _setIEOpacityRatio = function _setIEOpacityRatio(v) {
    var t = this.t,
        //refers to the element's style property
    filters = t.filter || _getStyle(this.data, "filter") || "",
        val = this.s + this.c * v | 0,
        skip;

    if (val === 100) {
      //for older versions of IE that need to use a filter to apply opacity, we should remove the filter if opacity hits 1 in order to improve performance, but make sure there isn't a transform (matrix) or gradient in the filters.
      if (filters.indexOf("atrix(") === -1 && filters.indexOf("radient(") === -1 && filters.indexOf("oader(") === -1) {
        t.removeAttribute("filter");
        skip = !_getStyle(this.data, "filter"); //if a class is applied that has an alpha filter, it will take effect (we don't want that), so re-apply our alpha filter in that case. We must first remove it and then check.
      } else {
        t.filter = filters.replace(_alphaFilterExp, "");
        skip = true;
      }
    }

    if (!skip) {
      if (this.xn1) {
        t.filter = filters = filters || "alpha(opacity=" + val + ")"; //works around bug in IE7/8 that prevents changes to "visibility" from being applied properly if the filter is changed to a different alpha on the same frame.
      }

      if (filters.indexOf("pacity") === -1) {
        //only used if browser doesn't support the standard opacity style property (IE 7 and 8). We omit the "O" to avoid case-sensitivity issues
        if (val !== 0 || !this.xn1) {
          //bugs in IE7/8 won't render the filter properly if opacity is ADDED on the same frame/render as "visibility" changes (this.xn1 is 1 if this tween is an "autoAlpha" tween)
          t.filter = filters + " alpha(opacity=" + val + ")"; //we round the value because otherwise, bugs in IE7/8 can prevent "visibility" changes from being applied properly.
        }
      } else {
        t.filter = filters.replace(_opacityExp, "opacity=" + val);
      }
    }
  };

  _registerComplexSpecialProp("opacity,alpha,autoAlpha", {
    defaultValue: "1",
    parser: function parser(t, e, p, cssp, pt, plugin) {
      var b = parseFloat(_getStyle(t, "opacity", _cs, false, "1")),
          style = t.style,
          isAutoAlpha = p === "autoAlpha";

      if (typeof e === "string" && e.charAt(1) === "=") {
        e = (e.charAt(0) === "-" ? -1 : 1) * parseFloat(e.substr(2)) + b;
      }

      if (isAutoAlpha && b === 1 && _getStyle(t, "visibility", _cs) === "hidden" && e !== 0) {
        //if visibility is initially set to "hidden", we should interpret that as intent to make opacity 0 (a convenience)
        b = 0;
      }

      if (_supportsOpacity) {
        pt = new CSSPropTween(style, "opacity", b, e - b, pt);
      } else {
        pt = new CSSPropTween(style, "opacity", b * 100, (e - b) * 100, pt);
        pt.xn1 = isAutoAlpha ? 1 : 0; //we need to record whether or not this is an autoAlpha so that in the setRatio(), we know to duplicate the setting of the alpha in order to work around a bug in IE7 and IE8 that prevents changes to "visibility" from taking effect if the filter is changed to a different alpha(opacity) at the same time. Setting it to the SAME value first, then the new value works around the IE7/8 bug.

        style.zoom = 1; //helps correct an IE issue.

        pt.type = 2;
        pt.b = "alpha(opacity=" + pt.s + ")";
        pt.e = "alpha(opacity=" + (pt.s + pt.c) + ")";
        pt.data = t;
        pt.plugin = plugin;
        pt.setRatio = _setIEOpacityRatio;
      }

      if (isAutoAlpha) {
        //we have to create the "visibility" PropTween after the opacity one in the linked list so that they run in the order that works properly in IE8 and earlier
        pt = new CSSPropTween(style, "visibility", 0, 0, pt, -1, null, false, 0, b !== 0 ? "inherit" : "hidden", e === 0 ? "hidden" : "inherit");
        pt.xs0 = "inherit";

        cssp._overwriteProps.push(pt.n);

        cssp._overwriteProps.push(p);
      }

      return pt;
    }
  });

  var _removeProp = function _removeProp(s, p) {
    if (p) {
      if (s.removeProperty) {
        if (p.substr(0, 2) === "ms" || p.substr(0, 6) === "webkit") {
          //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be "ms-transform" instead of "-ms-transform" for IE9, for example)
          p = "-" + p;
        }

        s.removeProperty(p.replace(_capsExp, "-$1").toLowerCase());
      } else {
        //note: old versions of IE use "removeAttribute()" instead of "removeProperty()"
        s.removeAttribute(p);
      }
    }
  },
      _setClassNameRatio = function _setClassNameRatio(v) {
    this.t._gsClassPT = this;

    if (v === 1 || v === 0) {
      this.t.setAttribute("class", v === 0 ? this.b : this.e);
      var mpt = this.data,
          //first MiniPropTween
      s = this.t.style;

      while (mpt) {
        if (!mpt.v) {
          _removeProp(s, mpt.p);
        } else {
          s[mpt.p] = mpt.v;
        }

        mpt = mpt._next;
      }

      if (v === 1 && this.t._gsClassPT === this) {
        this.t._gsClassPT = null;
      }
    } else if (this.t.getAttribute("class") !== this.e) {
      this.t.setAttribute("class", this.e);
    }
  };

  _registerComplexSpecialProp("className", {
    parser: function parser(t, e, p, cssp, pt, plugin, vars) {
      var b = t.getAttribute("class") || "",
          //don't use t.className because it doesn't work consistently on SVG elements; getAttribute("class") and setAttribute("class", value") is more reliable.
      cssText = t.style.cssText,
          difData,
          bs,
          cnpt,
          cnptLookup,
          mpt;
      pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);
      pt.setRatio = _setClassNameRatio;
      pt.pr = -11;
      _hasPriority = true;
      pt.b = b;
      bs = _getAllStyles(t, _cs); //if there's a className tween already operating on the target, force it to its end so that the necessary inline styles are removed and the class name is applied before we determine the end state (we don't want inline styles interfering that were there just for class-specific values)

      cnpt = t._gsClassPT;

      if (cnpt) {
        cnptLookup = {};
        mpt = cnpt.data; //first MiniPropTween which stores the inline styles - we need to force these so that the inline styles don't contaminate things. Otherwise, there's a small chance that a tween could start and the inline values match the destination values and they never get cleaned.

        while (mpt) {
          cnptLookup[mpt.p] = 1;
          mpt = mpt._next;
        }

        cnpt.setRatio(1);
      }

      t._gsClassPT = pt;
      pt.e = e.charAt(1) !== "=" ? e : b.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + (e.charAt(0) === "+" ? " " + e.substr(2) : "");
      t.setAttribute("class", pt.e);
      difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);
      t.setAttribute("class", b);
      pt.data = difData.firstMPT;

      if (t.style.cssText !== cssText) {
        //only apply if things change. Otherwise, in cases like a background-image that's pulled dynamically, it could cause a refresh. See https://greensock.com/forums/topic/20368-possible-gsap-bug-switching-classnames-in-chrome/.
        t.style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).
      }

      pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin); //we record the CSSPropTween as the xfirst so that we can handle overwriting propertly (if "className" gets overwritten, we must kill all the properties associated with the className part of the tween, so we can loop through from xfirst to the pt itself)

      return pt;
    }
  });

  var _setClearPropsRatio = function _setClearPropsRatio(v) {
    if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== "isFromStart") {
      //this.data refers to the tween. Only clear at the END of the tween (remember, from() tweens make the ratio go from 1 to 0, so we can't just check that and if the tween is the zero-duration one that's created internally to render the starting values in a from() tween, ignore that because otherwise, for example, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in).
      var s = this.t.style,
          transformParse = _specialProps.transform.parse,
          a,
          p,
          i,
          clearTransform,
          transform;

      if (this.e === "all") {
        s.cssText = "";
        clearTransform = true;
      } else {
        a = this.e.split(" ").join("").split(",");
        i = a.length;

        while (--i > -1) {
          p = a[i];

          if (_specialProps[p]) {
            if (_specialProps[p].parse === transformParse) {
              clearTransform = true;
            } else {
              p = p === "transformOrigin" ? _transformOriginProp : _specialProps[p].p; //ensures that special properties use the proper browser-specific property name, like "scaleX" might be "-webkit-transform" or "boxShadow" might be "-moz-box-shadow"
            }
          }

          _removeProp(s, p);
        }
      }

      if (clearTransform) {
        _removeProp(s, _transformProp);

        transform = this.t._gsTransform;

        if (transform) {
          if (transform.svg) {
            this.t.removeAttribute("data-svg-origin");
            this.t.removeAttribute("transform");
          }

          delete this.t._gsTransform;
        }
      }
    }
  };

  _registerComplexSpecialProp("clearProps", {
    parser: function parser(t, e, p, cssp, pt) {
      pt = new CSSPropTween(t, p, 0, 0, pt, 2);
      pt.setRatio = _setClearPropsRatio;
      pt.e = e;
      pt.pr = -10;
      pt.data = cssp._tween;
      _hasPriority = true;
      return pt;
    }
  });

  p = "bezier,throwProps,physicsProps,physics2D".split(",");
  i = p.length;

  while (i--) {
    _registerPluginProp(p[i]);
  }

  p = CSSPlugin.prototype;
  p._firstPT = p._lastParsedTransform = p._transform = null; //gets called when the tween renders for the first time. This kicks everything off, recording start/end values, etc.

  p._onInitTween = function (target, vars, tween, index) {
    if (!target.nodeType) {
      //css is only for dom elements
      return false;
    }

    this._target = _target = target;
    this._tween = tween;
    this._vars = vars;
    _index = index;
    _autoRound = vars.autoRound;
    _hasPriority = false;
    _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;
    _cs = _getComputedStyle(target, "");
    _overwriteProps = this._overwriteProps;
    var style = target.style,
        v,
        pt,
        pt2,
        first,
        last,
        next,
        zIndex,
        tpt,
        threeD;
    if (_reqSafariFix) if (style.zIndex === "") {
      v = _getStyle(target, "zIndex", _cs);

      if (v === "auto" || v === "") {
        //corrects a bug in [non-Android] Safari that prevents it from repainting elements in their new positions if they don't have a zIndex set. We also can't just apply this inside _parseTransform() because anything that's moved in any way (like using "left" or "top" instead of transforms like "x" and "y") can be affected, so it is best to ensure that anything that's tweening has a z-index. Setting "WebkitPerspective" to a non-zero value worked too except that on iOS Safari things would flicker randomly. Plus zIndex is less memory-intensive.
        this._addLazySet(style, "zIndex", 0);
      }
    }

    if (typeof vars === "string") {
      first = style.cssText;
      v = _getAllStyles(target, _cs);
      style.cssText = first + ";" + vars;
      v = _cssDif(target, v, _getAllStyles(target)).difs;

      if (!_supportsOpacity && _opacityValExp.test(vars)) {
        v.opacity = parseFloat(RegExp.$1);
      }

      vars = v;
      style.cssText = first;
    }

    if (vars.className) {
      //className tweens will combine any differences they find in the css with the vars that are passed in, so {className:"myClass", scale:0.5, left:20} would work.
      this._firstPT = pt = _specialProps.className.parse(target, vars.className, "className", this, null, null, vars);
    } else {
      this._firstPT = pt = this.parse(target, vars, null);
    }

    if (this._transformType) {
      threeD = this._transformType === 3;

      if (!_transformProp) {
        style.zoom = 1; //helps correct an IE issue.
      } else if (_isSafari) {
        _reqSafariFix = true; //if zIndex isn't set, iOS Safari doesn't repaint things correctly sometimes (seemingly at random).

        if (style.zIndex === "") {
          zIndex = _getStyle(target, "zIndex", _cs);

          if (zIndex === "auto" || zIndex === "") {
            this._addLazySet(style, "zIndex", 0);
          }
        } //Setting WebkitBackfaceVisibility corrects 3 bugs:
        // 1) [non-Android] Safari skips rendering changes to "top" and "left" that are made on the same frame/render as a transform update.
        // 2) iOS Safari sometimes neglects to repaint elements in their new positions. Setting "WebkitPerspective" to a non-zero value worked too except that on iOS Safari things would flicker randomly.
        // 3) Safari sometimes displayed odd artifacts when tweening the transform (or WebkitTransform) property, like ghosts of the edges of the element remained. Definitely a browser bug.
        //Note: we allow the user to override the auto-setting by defining WebkitBackfaceVisibility in the vars of the tween.


        if (_isSafariLT6) {
          this._addLazySet(style, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (threeD ? "visible" : "hidden"));
        }
      }

      pt2 = pt;

      while (pt2 && pt2._next) {
        pt2 = pt2._next;
      }

      tpt = new CSSPropTween(target, "transform", 0, 0, null, 2);

      this._linkCSSP(tpt, null, pt2);

      tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;
      tpt.data = this._transform || _getTransform(target, _cs, true);
      tpt.tween = tween;
      tpt.pr = -1; //ensures that the transforms get applied after the components are updated.

      _overwriteProps.pop(); //we don't want to force the overwrite of all "transform" tweens of the target - we only care about individual transform properties like scaleX, rotation, etc. The CSSPropTween constructor automatically adds the property to _overwriteProps which is why we need to pop() here.

    }

    if (_hasPriority) {
      //reorders the linked list in order of pr (priority)
      while (pt) {
        next = pt._next;
        pt2 = first;

        while (pt2 && pt2.pr > pt.pr) {
          pt2 = pt2._next;
        }

        if (pt._prev = pt2 ? pt2._prev : last) {
          pt._prev._next = pt;
        } else {
          first = pt;
        }

        if (pt._next = pt2) {
          pt2._prev = pt;
        } else {
          last = pt;
        }

        pt = next;
      }

      this._firstPT = first;
    }

    return true;
  };

  p.parse = function (target, vars, pt, plugin) {
    var style = target.style,
        p,
        sp,
        bn,
        en,
        bs,
        es,
        bsfx,
        esfx,
        isStr,
        rel;

    for (p in vars) {
      es = vars[p]; //ending value string

      sp = _specialProps[p]; //SpecialProp lookup.

      if (typeof es === "function" && !(sp && sp.allowFunc)) {
        es = es(_index, _target);
      }

      if (sp) {
        pt = sp.parse(target, es, p, this, pt, plugin, vars);
      } else if (p.substr(0, 2) === "--") {
        //for tweening CSS variables (which always start with "--"). To maximize performance and simplicity, we bypass CSSPlugin altogether and just add a normal property tween to the tween instance itself.
        this._tween._propLookup[p] = this._addTween.call(this._tween, target.style, "setProperty", _getComputedStyle(target).getPropertyValue(p) + "", es + "", p, false, p);
        continue;
      } else {
        bs = _getStyle(target, p, _cs) + "";
        isStr = typeof es === "string";

        if (p === "color" || p === "fill" || p === "stroke" || p.indexOf("Color") !== -1 || isStr && _rgbhslExp.test(es)) {
          //Opera uses background: to define color sometimes in addition to backgroundColor:
          if (!isStr) {
            es = _parseColor(es);
            es = (es.length > 3 ? "rgba(" : "rgb(") + es.join(",") + ")";
          }

          pt = _parseComplex(style, p, bs, es, true, "transparent", pt, 0, plugin);
        } else if (isStr && _complexExp.test(es)) {
          pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);
        } else {
          bn = parseFloat(bs);
          bsfx = bn || bn === 0 ? bs.substr((bn + "").length) : ""; //remember, bs could be non-numeric like "normal" for fontWeight, so we should default to a blank suffix in that case.

          if (bs === "" || bs === "auto") {
            if (p === "width" || p === "height") {
              bn = _getDimension(target, p, _cs);
              bsfx = "px";
            } else if (p === "left" || p === "top") {
              bn = _calculateOffset(target, p, _cs);
              bsfx = "px";
            } else {
              bn = p !== "opacity" ? 0 : 1;
              bsfx = "";
            }
          }

          rel = isStr && es.charAt(1) === "=";

          if (rel) {
            en = parseInt(es.charAt(0) + "1", 10);
            es = es.substr(2);
            en *= parseFloat(es);
            esfx = es.replace(_suffixExp, "");
          } else {
            en = parseFloat(es);
            esfx = isStr ? es.replace(_suffixExp, "") : "";
          }

          if (esfx === "") {
            esfx = p in _suffixMap ? _suffixMap[p] : bsfx; //populate the end suffix, prioritizing the map, then if none is found, use the beginning suffix.
          }

          es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p]; //ensures that any += or -= prefixes are taken care of. Record the end value before normalizing the suffix because we always want to end the tween on exactly what they intended even if it doesn't match the beginning value's suffix.
          //if the beginning/ending suffixes don't match, normalize them...

          if (bsfx !== esfx) if (esfx !== "" || p === "lineHeight") if (en || en === 0) if (bn) {
            //note: if the beginning value (bn) is 0, we don't need to convert units!
            bn = _convertToPixels(target, p, bn, bsfx);

            if (esfx === "%") {
              bn /= _convertToPixels(target, p, 100, "%") / 100;

              if (vars.strictUnits !== true) {
                //some browsers report only "px" values instead of allowing "%" with getComputedStyle(), so we assume that if we're tweening to a %, we should start there too unless strictUnits:true is defined. This approach is particularly useful for responsive designs that use from() tweens.
                bs = bn + "%";
              }
            } else if (esfx === "em" || esfx === "rem" || esfx === "vw" || esfx === "vh") {
              bn /= _convertToPixels(target, p, 1, esfx); //otherwise convert to pixels.
            } else if (esfx !== "px") {
              en = _convertToPixels(target, p, en, esfx);
              esfx = "px"; //we don't use bsfx after this, so we don't need to set it to px too.
            }

            if (rel) if (en || en === 0) {
              es = en + bn + esfx; //the changes we made affect relative calculations, so adjust the end value here.
            }
          }

          if (rel) {
            en += bn;
          }

          if ((bn || bn === 0) && (en || en === 0)) {
            //faster than isNaN(). Also, previously we required en !== bn but that doesn't really gain much performance and it prevents _parseToProxy() from working properly if beginning and ending values match but need to get tweened by an external plugin anyway. For example, a bezier tween where the target starts at left:0 and has these points: [{left:50},{left:0}] wouldn't work properly because when parsing the last point, it'd match the first (current) one and a non-tweening CSSPropTween would be recorded when we actually need a normal tween (type:0) so that things get updated during the tween properly.
            pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === "px" || p === "zIndex"), 0, bs, es);
            pt.xs0 = esfx; //DEBUG: _log("tween "+p+" from "+pt.b+" ("+bn+esfx+") to "+pt.e+" with suffix: "+pt.xs0);
          } else if (style[p] === undefined || !es && (es + "" === "NaN" || es == null)) {
            _log("invalid " + p + " tween value: " + vars[p]);
          } else {
            pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);
            pt.xs0 = es === "none" && (p === "display" || p.indexOf("Style") !== -1) ? bs : es; //intermediate value should typically be set immediately (end value) except for "display" or things like borderTopStyle, borderBottomStyle, etc. which should use the beginning value during the tween.
            //DEBUG: _log("non-tweening value "+p+": "+pt.xs0);
          }
        }
      }

      if (plugin) if (pt && !pt.plugin) {
        pt.plugin = plugin;
      }
    }

    return pt;
  }; //gets called every time the tween updates, passing the new ratio (typically a value between 0 and 1, but not always (for example, if an Elastic.easeOut is used, the value can jump above 1 mid-tween). It will always start and 0 and end at 1.


  p.setRatio = function (v) {
    var pt = this._firstPT,
        min = 0.000001,
        val,
        str,
        i; //at the end of the tween, we set the values to exactly what we received in order to make sure non-tweening values (like "position" or "float" or whatever) are set and so that if the beginning/ending suffixes (units) didn't match and we normalized to px, the value that the user passed in is used here. We check to see if the tween is at its beginning in case it's a from() tween in which case the ratio will actually go from 1 to 0 over the course of the tween (backwards).

    if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {
      while (pt) {
        if (pt.type !== 2) {
          if (pt.r && pt.type !== -1) {
            val = pt.r(pt.s + pt.c);

            if (!pt.type) {
              pt.t[pt.p] = val + pt.xs0;
            } else if (pt.type === 1) {
              //complex value (one that typically has multiple numbers inside a string, like "rect(5px,10px,20px,25px)"
              i = pt.l;
              str = pt.xs0 + val + pt.xs1;

              for (i = 1; i < pt.l; i++) {
                str += pt["xn" + i] + pt["xs" + (i + 1)];
              }

              pt.t[pt.p] = str;
            }
          } else {
            pt.t[pt.p] = pt.e;
          }
        } else {
          pt.setRatio(v);
        }

        pt = pt._next;
      }
    } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -0.000001) {
      while (pt) {
        val = pt.c * v + pt.s;

        if (pt.r) {
          val = pt.r(val);
        } else if (val < min) if (val > -min) {
          val = 0;
        }

        if (!pt.type) {
          pt.t[pt.p] = val + pt.xs0;
        } else if (pt.type === 1) {
          //complex value (one that typically has multiple numbers inside a string, like "rect(5px,10px,20px,25px)"
          i = pt.l;

          if (i === 2) {
            pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;
          } else if (i === 3) {
            pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;
          } else if (i === 4) {
            pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;
          } else if (i === 5) {
            pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;
          } else {
            str = pt.xs0 + val + pt.xs1;

            for (i = 1; i < pt.l; i++) {
              str += pt["xn" + i] + pt["xs" + (i + 1)];
            }

            pt.t[pt.p] = str;
          }
        } else if (pt.type === -1) {
          //non-tweening value
          pt.t[pt.p] = pt.xs0;
        } else if (pt.setRatio) {
          //custom setRatio() for things like SpecialProps, external plugins, etc.
          pt.setRatio(v);
        }

        pt = pt._next;
      } //if the tween is reversed all the way back to the beginning, we need to restore the original values which may have different units (like % instead of px or em or whatever).

    } else {
      while (pt) {
        if (pt.type !== 2) {
          pt.t[pt.p] = pt.b;
        } else {
          pt.setRatio(v);
        }

        pt = pt._next;
      }
    }
  };
  /**
   * @private
   * Forces rendering of the target's transforms (rotation, scale, etc.) whenever the CSSPlugin's setRatio() is called.
   * Basically, this tells the CSSPlugin to create a CSSPropTween (type 2) after instantiation that runs last in the linked
   * list and calls the appropriate (3D or 2D) rendering function. We separate this into its own method so that we can call
   * it from other plugins like BezierPlugin if, for example, it needs to apply an autoRotation and this CSSPlugin
   * doesn't have any transform-related properties of its own. You can call this method as many times as you
   * want and it won't create duplicate CSSPropTweens.
   *
   * @param {boolean} threeD if true, it should apply 3D tweens (otherwise, just 2D ones are fine and typically faster)
   */


  p._enableTransforms = function (threeD) {
    this._transform = this._transform || _getTransform(this._target, _cs, true); //ensures that the element has a _gsTransform property with the appropriate values.

    this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;
  };

  var lazySet = function lazySet(v) {
    this.t[this.p] = this.e;

    this.data._linkCSSP(this, this._next, null, true); //we purposefully keep this._next even though it'd make sense to null it, but this is a performance optimization, as this happens during the while (pt) {} loop in setRatio() at the bottom of which it sets pt = pt._next, so if we null it, the linked list will be broken in that loop.

  };
  /** @private Gives us a way to set a value on the first render (and only the first render). **/


  p._addLazySet = function (t, p, v) {
    var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);
    pt.e = v;
    pt.setRatio = lazySet;
    pt.data = this;
  };
  /** @private **/


  p._linkCSSP = function (pt, next, prev, remove) {
    if (pt) {
      if (next) {
        next._prev = pt;
      }

      if (pt._next) {
        pt._next._prev = pt._prev;
      }

      if (pt._prev) {
        pt._prev._next = pt._next;
      } else if (this._firstPT === pt) {
        this._firstPT = pt._next;
        remove = true; //just to prevent resetting this._firstPT 5 lines down in case pt._next is null. (optimized for speed)
      }

      if (prev) {
        prev._next = pt;
      } else if (!remove && this._firstPT === null) {
        this._firstPT = pt;
      }

      pt._next = next;
      pt._prev = prev;
    }

    return pt;
  };

  p._mod = function (lookup) {
    var pt = this._firstPT;

    while (pt) {
      if (typeof lookup[pt.p] === "function") {
        //only gets called by RoundPropsPlugin (ModifyPlugin manages all the rendering internally for CSSPlugin properties that need modification). Remember, we handle rounding a bit differently in this plugin for performance reasons, leveraging "r" as an indicator that the value should be rounded internally.
        pt.r = lookup[pt.p];
      }

      pt = pt._next;
    }
  }; //we need to make sure that if alpha or autoAlpha is killed, opacity is too. And autoAlpha affects the "visibility" property.


  p._kill = function (lookup) {
    var copy = lookup,
        pt,
        p,
        xfirst;

    if (lookup.autoAlpha || lookup.alpha) {
      copy = {};

      for (p in lookup) {
        //copy the lookup so that we're not changing the original which may be passed elsewhere.
        copy[p] = lookup[p];
      }

      copy.opacity = 1;

      if (copy.autoAlpha) {
        copy.visibility = 1;
      }
    }

    if (lookup.className && (pt = this._classNamePT)) {
      //for className tweens, we need to kill any associated CSSPropTweens too; a linked list starts at the className's "xfirst".
      xfirst = pt.xfirst;

      if (xfirst && xfirst._prev) {
        this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev); //break off the prev

      } else if (xfirst === this._firstPT) {
        this._firstPT = pt._next;
      }

      if (pt._next) {
        this._linkCSSP(pt._next, pt._next._next, xfirst._prev);
      }

      this._classNamePT = null;
    }

    pt = this._firstPT;

    while (pt) {
      if (pt.plugin && pt.plugin !== p && pt.plugin._kill) {
        //for plugins that are registered with CSSPlugin, we should notify them of the kill.
        pt.plugin._kill(lookup);

        p = pt.plugin;
      }

      pt = pt._next;
    }

    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["h" /* TweenPlugin */].prototype._kill.call(this, copy);
  }; //used by cascadeTo() for gathering all the style properties of each child element into an array for comparison.


  var _getChildStyles = function _getChildStyles(e, props, targets) {
    var children, i, child, type;

    if (e.slice) {
      i = e.length;

      while (--i > -1) {
        _getChildStyles(e[i], props, targets);
      }

      return;
    }

    children = e.childNodes;
    i = children.length;

    while (--i > -1) {
      child = children[i];
      type = child.type;

      if (child.style) {
        props.push(_getAllStyles(child));

        if (targets) {
          targets.push(child);
        }
      }

      if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {
        _getChildStyles(child, props, targets);
      }
    }
  };
  /**
   * Typically only useful for className tweens that may affect child elements, this method creates a TweenLite
   * and then compares the style properties of all the target's child elements at the tween's start and end, and
   * if any are different, it also creates tweens for those and returns an array containing ALL of the resulting
   * tweens (so that you can easily add() them to a TimelineLite, for example). The reason this functionality is
   * wrapped into a separate static method of CSSPlugin instead of being integrated into all regular className tweens
   * is because it creates entirely new tweens that may have completely different targets than the original tween,
   * so if they were all lumped into the original tween instance, it would be inconsistent with the rest of the API
   * and it would create other problems. For example:
   *  - If I create a tween of elementA, that tween instance may suddenly change its target to include 50 other elements (unintuitive if I specifically defined the target I wanted)
   *  - We can't just create new independent tweens because otherwise, what happens if the original/parent tween is reversed or pause or dropped into a TimelineLite for tight control? You'd expect that tween's behavior to affect all the others.
   *  - Analyzing every style property of every child before and after the tween is an expensive operation when there are many children, so this behavior shouldn't be imposed on all className tweens by default, especially since it's probably rare that this extra functionality is needed.
   *
   * @param {Object} target object to be tweened
   * @param {number} Duration in seconds (or frames for frames-based tweens)
   * @param {Object} Object containing the end values, like {className:"newClass", ease:Linear.easeNone}
   * @return {Array} An array of TweenLite instances
   */


  CSSPlugin.cascadeTo = function (target, duration, vars) {
    var tween = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].to(target, duration, vars),
        results = [tween],
        b = [],
        e = [],
        targets = [],
        _reservedProps = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]._internals.reservedProps,
        i,
        difs,
        p,
        from;
    target = tween._targets || tween.target;

    _getChildStyles(target, b, targets);

    tween.render(duration, true, true);

    _getChildStyles(target, e);

    tween.render(0, true, true);

    tween._enabled(true);

    i = targets.length;

    while (--i > -1) {
      difs = _cssDif(targets[i], b[i], e[i]);

      if (difs.firstMPT) {
        difs = difs.difs;

        for (p in vars) {
          if (_reservedProps[p]) {
            difs[p] = vars[p];
          }
        }

        from = {};

        for (p in difs) {
          from[p] = b[i][p];
        }

        results.push(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].fromTo(targets[i], duration, from, difs));
      }
    }

    return results;
  };

  __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["h" /* TweenPlugin */].activate([CSSPlugin]);
  return CSSPlugin;
}, true);

var CSSPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].CSSPlugin;


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TweenMax; });
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TweenMaxBase_js__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__CSSPlugin_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__AttrPlugin_js__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RoundPropsPlugin_js__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__DirectionalRotationPlugin_js__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TimelineLite_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__TimelineMax_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__BezierPlugin_js__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__EasePack_js__ = __webpack_require__(30);
/* unused harmony reexport TweenLite */
/* unused harmony reexport TimelineLite */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_7__TimelineMax_js__["a"]; });
/* unused harmony reexport CSSPlugin */
/* unused harmony reexport AttrPlugin */
/* unused harmony reexport BezierPlugin */
/* unused harmony reexport DirectionalRotationPlugin */
/* unused harmony reexport RoundPropsPlugin */
/* unused harmony reexport TweenPlugin */
/* unused harmony reexport Ease */
/* unused harmony reexport Power0 */
/* unused harmony reexport Power1 */
/* unused harmony reexport Power2 */
/* unused harmony reexport Power3 */
/* unused harmony reexport Power4 */
/* unused harmony reexport Linear */
/* unused harmony reexport Back */
/* unused harmony reexport Elastic */
/* unused harmony reexport Bounce */
/* unused harmony reexport RoughEase */
/* unused harmony reexport SlowMo */
/* unused harmony reexport SteppedEase */
/* unused harmony reexport Circ */
/* unused harmony reexport Expo */
/* unused harmony reexport Sine */
/* unused harmony reexport ExpoScaleEase */
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */









 //the following two lines are designed to prevent tree shaking of the classes that were historically included with TweenMax (otherwise, folks would have to reference CSSPlugin, for example, to ensure their CSS-related animations worked)

var TweenMax = __WEBPACK_IMPORTED_MODULE_1__TweenMaxBase_js__["a" /* default */];
TweenMax._autoActivated = [__WEBPACK_IMPORTED_MODULE_6__TimelineLite_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_7__TimelineMax_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__CSSPlugin_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__AttrPlugin_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_8__BezierPlugin_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__RoundPropsPlugin_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_5__DirectionalRotationPlugin_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["a" /* Back */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["b" /* Elastic */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["c" /* Bounce */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["d" /* RoughEase */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["e" /* SlowMo */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["f" /* SteppedEase */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["g" /* Circ */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["h" /* Expo */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["i" /* Sine */], __WEBPACK_IMPORTED_MODULE_9__EasePack_js__["j" /* ExpoScaleEase */]];



/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(110),
    listCacheDelete = __webpack_require__(111),
    listCacheGet = __webpack_require__(112),
    listCacheHas = __webpack_require__(113),
    listCacheSet = __webpack_require__(114);
/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `ListCache`.


ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
module.exports = ListCache;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(37);
/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */


function assocIndexOf(array, key) {
  var length = array.length;

  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }

  return -1;
}

module.exports = assocIndexOf;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(22),
    getRawTag = __webpack_require__(97),
    objectToString = __webpack_require__(123);
/** `Object#toString` result references. */


var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';
/** Built-in value references. */

var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }

  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(107);
/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */


function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

module.exports = getMapData;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(3);
/* Built-in method references that are verified to be native. */


var nativeCreate = getNative(Object, 'create');
module.exports = nativeCreate;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});

var tslib = __webpack_require__(4);

var util = __webpack_require__(17);

var component = __webpack_require__(16);

var logger$1 = __webpack_require__(25);
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var _a;

var ERRORS = (_a = {}, _a["no-app"
/* NO_APP */
] = "No Firebase App '{$appName}' has been created - " + 'call Firebase App.initializeApp()', _a["bad-app-name"
/* BAD_APP_NAME */
] = "Illegal App name: '{$appName}", _a["duplicate-app"
/* DUPLICATE_APP */
] = "Firebase App named '{$appName}' already exists", _a["app-deleted"
/* APP_DELETED */
] = "Firebase App named '{$appName}' already deleted", _a["invalid-app-argument"
/* INVALID_APP_ARGUMENT */
] = 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.', _a);
var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);
var name = "@firebase/app";
var version = "0.5.0";
var name$1 = "@firebase/analytics";
var name$2 = "@firebase/auth";
var name$3 = "@firebase/database";
var name$4 = "@firebase/functions";
var name$5 = "@firebase/installations";
var name$6 = "@firebase/messaging";
var name$7 = "@firebase/performance";
var name$8 = "@firebase/remote-config";
var name$9 = "@firebase/storage";
var name$a = "@firebase/firestore";
var name$b = "firebase-wrapper";
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var _a$1;

var DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_a$1 = {}, _a$1[name] = 'fire-core', _a$1[name$1] = 'fire-analytics', _a$1[name$2] = 'fire-auth', _a$1[name$3] = 'fire-rtdb', _a$1[name$4] = 'fire-fn', _a$1[name$5] = 'fire-iid', _a$1[name$6] = 'fire-fcm', _a$1[name$7] = 'fire-perf', _a$1[name$8] = 'fire-rc', _a$1[name$9] = 'fire-gcs', _a$1[name$a] = 'fire-fst', _a$1['fire-js'] = 'fire-js', _a$1[name$b] = 'fire-js-all', _a$1);
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var logger = new logger$1.Logger('@firebase/app');
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */

var FirebaseAppImpl =
/** @class */
function () {
  function FirebaseAppImpl(options, config, firebase_) {
    var e_1, _a;

    var _this = this;

    this.firebase_ = firebase_;
    this.isDeleted_ = false;
    this.name_ = config.name;
    this.automaticDataCollectionEnabled_ = config.automaticDataCollectionEnabled || false;
    this.options_ = util.deepCopy(options);
    this.container = new component.ComponentContainer(config.name); // add itself to container

    this._addComponent(new component.Component('app', function () {
      return _this;
    }, "PUBLIC"
    /* PUBLIC */
    ));

    try {
      // populate ComponentContainer with existing components
      for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var component$1 = _c.value;

        this._addComponent(component$1);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  }

  Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
    get: function get() {
      this.checkDestroyed_();
      return this.automaticDataCollectionEnabled_;
    },
    set: function set(val) {
      this.checkDestroyed_();
      this.automaticDataCollectionEnabled_ = val;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FirebaseAppImpl.prototype, "name", {
    get: function get() {
      this.checkDestroyed_();
      return this.name_;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FirebaseAppImpl.prototype, "options", {
    get: function get() {
      this.checkDestroyed_();
      return this.options_;
    },
    enumerable: true,
    configurable: true
  });

  FirebaseAppImpl.prototype.delete = function () {
    var _this = this;

    return new Promise(function (resolve) {
      _this.checkDestroyed_();

      resolve();
    }).then(function () {
      _this.firebase_.INTERNAL.removeApp(_this.name_);

      return Promise.all(_this.container.getProviders().map(function (provider) {
        return provider.delete();
      }));
    }).then(function () {
      _this.isDeleted_ = true;
    });
  };
  /**
   * Return a service instance associated with this app (creating it
   * on demand), identified by the passed instanceIdentifier.
   *
   * NOTE: Currently storage and functions are the only ones that are leveraging this
   * functionality. They invoke it by calling:
   *
   * ```javascript
   * firebase.app().storage('STORAGE BUCKET ID')
   * ```
   *
   * The service name is passed to this already
   * @internal
   */


  FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
    if (instanceIdentifier === void 0) {
      instanceIdentifier = DEFAULT_ENTRY_NAME;
    }

    this.checkDestroyed_(); // getImmediate will always succeed because _getService is only called for registered components.

    return this.container.getProvider(name).getImmediate({
      identifier: instanceIdentifier
    });
  };
  /**
   * Remove a service instance from the cache, so we will create a new instance for this service
   * when people try to get this service again.
   *
   * NOTE: currently only firestore is using this functionality to support firestore shutdown.
   *
   * @param name The service name
   * @param instanceIdentifier instance identifier in case multiple instances are allowed
   * @internal
   */


  FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
    if (instanceIdentifier === void 0) {
      instanceIdentifier = DEFAULT_ENTRY_NAME;
    } // eslint-disable-next-line @typescript-eslint/no-explicit-any


    this.container.getProvider(name).clearInstance(instanceIdentifier);
  };
  /**
   * @param component the component being added to this app's container
   */


  FirebaseAppImpl.prototype._addComponent = function (component) {
    try {
      this.container.addComponent(component);
    } catch (e) {
      logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
    }
  };

  FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
    this.container.addOrOverwriteComponent(component);
  };
  /**
   * This function will throw an Error if the App has already been deleted -
   * use before performing API actions on the App.
   */


  FirebaseAppImpl.prototype.checkDestroyed_ = function () {
    if (this.isDeleted_) {
      throw ERROR_FACTORY.create("app-deleted"
      /* APP_DELETED */
      , {
        appName: this.name_
      });
    }
  };

  return FirebaseAppImpl;
}(); // Prevent dead-code elimination of these methods w/o invalid property
// copying.


FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');
var version$1 = "7.6.0";
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */

function createFirebaseNamespaceCore(firebaseAppImpl) {
  var apps = {}; // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var components = new Map(); // A namespace is a plain JavaScript Object.

  var namespace = {
    // Hack to prevent Babel from modifying the object returned
    // as the firebase namespace.
    // @ts-ignore
    __esModule: true,
    initializeApp: initializeApp,
    // @ts-ignore
    app: app,
    registerVersion: registerVersion,
    // @ts-ignore
    apps: null,
    SDK_VERSION: version$1,
    INTERNAL: {
      registerComponent: registerComponent,
      removeApp: removeApp,
      components: components,
      useAsService: useAsService
    }
  }; // Inject a circular default export to allow Babel users who were previously
  // using:
  //
  //   import firebase from 'firebase';
  //   which becomes: var firebase = require('firebase').default;
  //
  // instead of
  //
  //   import * as firebase from 'firebase';
  //   which becomes: var firebase = require('firebase');
  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  namespace['default'] = namespace; // firebase.apps is a read-only getter.

  Object.defineProperty(namespace, 'apps', {
    get: getApps
  });
  /**
   * Called by App.delete() - but before any services associated with the App
   * are deleted.
   */

  function removeApp(name) {
    delete apps[name];
  }
  /**
   * Get the App object for a given name (or DEFAULT).
   */


  function app(name) {
    name = name || DEFAULT_ENTRY_NAME;

    if (!util.contains(apps, name)) {
      throw ERROR_FACTORY.create("no-app"
      /* NO_APP */
      , {
        appName: name
      });
    }

    return apps[name];
  } // @ts-ignore


  app['App'] = firebaseAppImpl;

  function initializeApp(options, rawConfig) {
    if (rawConfig === void 0) {
      rawConfig = {};
    }

    if (typeof rawConfig !== 'object' || rawConfig === null) {
      var name_1 = rawConfig;
      rawConfig = {
        name: name_1
      };
    }

    var config = rawConfig;

    if (config.name === undefined) {
      config.name = DEFAULT_ENTRY_NAME;
    }

    var name = config.name;

    if (typeof name !== 'string' || !name) {
      throw ERROR_FACTORY.create("bad-app-name"
      /* BAD_APP_NAME */
      , {
        appName: String(name)
      });
    }

    if (util.contains(apps, name)) {
      throw ERROR_FACTORY.create("duplicate-app"
      /* DUPLICATE_APP */
      , {
        appName: name
      });
    }

    var app = new firebaseAppImpl(options, config, namespace);
    apps[name] = app;
    return app;
  }
  /*
   * Return an array of all the non-deleted FirebaseApps.
   */


  function getApps() {
    // Make a copy so caller cannot mutate the apps list.
    return Object.keys(apps).map(function (name) {
      return apps[name];
    });
  }

  function registerComponent(component) {
    var e_1, _a;

    var componentName = component.name;

    if (components.has(componentName)) {
      logger.debug("There were multiple attempts to register component " + componentName + ".");
      return component.type === "PUBLIC"
      /* PUBLIC */
      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
      namespace[componentName] : null;
    }

    components.set(componentName, component); // create service namespace for public components

    if (component.type === "PUBLIC"
    /* PUBLIC */
    ) {
        // The Service namespace is an accessor function ...
        var serviceNamespace = function serviceNamespace(appArg) {
          if (appArg === void 0) {
            appArg = app();
          } // eslint-disable-next-line @typescript-eslint/no-explicit-any


          if (typeof appArg[componentName] !== 'function') {
            // Invalid argument.
            // This happens in the following case: firebase.storage('gs:/')
            throw ERROR_FACTORY.create("invalid-app-argument"
            /* INVALID_APP_ARGUMENT */
            , {
              appName: componentName
            });
          } // Forward service instance lookup to the FirebaseApp.
          // eslint-disable-next-line @typescript-eslint/no-explicit-any


          return appArg[componentName]();
        }; // ... and a container for service-level properties.


        if (component.serviceProps !== undefined) {
          util.deepExtend(serviceNamespace, component.serviceProps);
        } // eslint-disable-next-line @typescript-eslint/no-explicit-any


        namespace[componentName] = serviceNamespace; // Patch the FirebaseAppImpl prototype
        // eslint-disable-next-line @typescript-eslint/no-explicit-any

        firebaseAppImpl.prototype[componentName] = // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
        // option added to the no-explicit-any rule when ESlint releases it.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        function () {
          var args = [];

          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }

          var serviceFxn = this._getService.bind(this, componentName);

          return serviceFxn.apply(this, component.multipleInstances ? args : []);
        };
      }

    try {
      // add the component to existing app instances
      for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var appName = _c.value;

        apps[appName]._addComponent(component);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return component.type === "PUBLIC"
    /* PUBLIC */
    ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace[componentName] : null;
  }

  function registerVersion(libraryKeyOrName, version, variant) {
    var _a; // TODO: We can use this check to whitelist strings when/if we set up
    // a good whitelist system.


    var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName], _a !== null && _a !== void 0 ? _a : libraryKeyOrName);

    if (variant) {
      library += "-" + variant;
    }

    var libraryMismatch = library.match(/\s|\//);
    var versionMismatch = version.match(/\s|\//);

    if (libraryMismatch || versionMismatch) {
      var warning = ["Unable to register library \"" + library + "\" with version \"" + version + "\":"];

      if (libraryMismatch) {
        warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
      }

      if (libraryMismatch && versionMismatch) {
        warning.push('and');
      }

      if (versionMismatch) {
        warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
      }

      logger.warn(warning.join(' '));
      return;
    }

    registerComponent(new component.Component(library + "-version", function () {
      return {
        library: library,
        version: version
      };
    }, "VERSION"
    /* VERSION */
    ));
  } // Map the requested service to a registered service name
  // (used to map auth to serverAuth service when needed).


  function useAsService(app, name) {
    if (name === 'serverAuth') {
      return null;
    }

    var useService = name;
    return useService;
  }

  return namespace;
}
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */


function createFirebaseNamespace() {
  var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
  namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), {
    createFirebaseNamespace: createFirebaseNamespace,
    extendNamespace: extendNamespace,
    createSubscribe: util.createSubscribe,
    ErrorFactory: util.ErrorFactory,
    deepExtend: util.deepExtend
  });
  /**
   * Patch the top-level firebase namespace with additional properties.
   *
   * firebase.INTERNAL.extendNamespace()
   */

  function extendNamespace(props) {
    util.deepExtend(namespace, props);
  }

  return namespace;
}

var firebase = createFirebaseNamespace();
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var PlatformLoggerService =
/** @class */
function () {
  function PlatformLoggerService(container) {
    this.container = container;
  } // In initial implementation, this will be called by installations on
  // auth token refresh, and installations will send this string.


  PlatformLoggerService.prototype.getPlatformInfoString = function () {
    var providers = this.container.getProviders(); // Loop through providers and get library/version pairs from any that are
    // version components.

    return providers.map(function (provider) {
      if (isVersionServiceProvider(provider)) {
        var service = provider.getImmediate();
        return service.library + "/" + service.version;
      } else {
        return null;
      }
    }).filter(function (logString) {
      return logString;
    }).join(' ');
  };

  return PlatformLoggerService;
}();
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */


function isVersionServiceProvider(provider) {
  var _a;

  var component = provider.getComponent();
  return ((_a = component) === null || _a === void 0 ? void 0 : _a.type) === "VERSION"
  /* VERSION */
  ;
}
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function registerCoreComponents(firebase, variant) {
  firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) {
    return new PlatformLoggerService(container);
  }, "PRIVATE"
  /* PRIVATE */
  )); // Register `app` package.

  firebase.registerVersion(name, version, variant); // Register platform SDK identifier (no version).

  firebase.registerVersion('fire-js', '');
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection
// eslint-disable-next-line @typescript-eslint/no-explicit-any


if (util.isBrowser() && self.firebase !== undefined) {
  logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  "); // eslint-disable-next-line

  var sdkVersion = self.firebase.SDK_VERSION;

  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
    logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
  }
}

var initializeApp = firebase.initializeApp; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any

firebase.initializeApp = function () {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  } // Environment check before initializing app
  // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
  // in @firebase/logger


  if (util.isNode()) {
    logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
  }

  return initializeApp.apply(undefined, args);
};

var firebase$1 = firebase;
registerCoreComponents(firebase$1);
exports.default = firebase$1;
exports.firebase = firebase$1;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});

var tslib = __webpack_require__(4);

var util = __webpack_require__(17);
/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */


var Component =
/** @class */
function () {
  /**
   *
   * @param name The public service name, e.g. app, auth, firestore, database
   * @param instanceFactory Service factory responsible for creating the public interface
   * @param type whehter the service provided by the component is public or private
   */
  function Component(name, instanceFactory, type) {
    this.name = name;
    this.instanceFactory = instanceFactory;
    this.type = type;
    this.multipleInstances = false;
    /**
     * Properties to be added to the service namespace
     */

    this.serviceProps = {};
    this.instantiationMode = "LAZY"
    /* LAZY */
    ;
  }

  Component.prototype.setInstantiationMode = function (mode) {
    this.instantiationMode = mode;
    return this;
  };

  Component.prototype.setMultipleInstances = function (multipleInstances) {
    this.multipleInstances = multipleInstances;
    return this;
  };

  Component.prototype.setServiceProps = function (props) {
    this.serviceProps = props;
    return this;
  };

  return Component;
}();
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var DEFAULT_ENTRY_NAME = '[DEFAULT]';
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */

var Provider =
/** @class */
function () {
  function Provider(name, container) {
    this.name = name;
    this.container = container;
    this.component = null;
    this.instances = new Map();
    this.instancesDeferred = new Map();
  }
  /**
   * @param identifier A provider can provide mulitple instances of a service
   * if this.component.multipleInstances is true.
   */


  Provider.prototype.get = function (identifier) {
    if (identifier === void 0) {
      identifier = DEFAULT_ENTRY_NAME;
    } // if multipleInstances is not supported, use the default name


    var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);

    if (!this.instancesDeferred.has(normalizedIdentifier)) {
      var deferred = new util.Deferred();
      this.instancesDeferred.set(normalizedIdentifier, deferred); // If the service instance is available, resolve the promise with it immediately

      try {
        var instance = this.getOrInitializeService(normalizedIdentifier);

        if (instance) {
          deferred.resolve(instance);
        }
      } catch (e) {// when the instance factory throws an exception during get(), it should not cause
        // a fatal error. We just return the unresolved promise in this case.
      }
    }

    return this.instancesDeferred.get(normalizedIdentifier).promise;
  };

  Provider.prototype.getImmediate = function (options) {
    var _a = tslib.__assign({
      identifier: DEFAULT_ENTRY_NAME,
      optional: false
    }, options),
        identifier = _a.identifier,
        optional = _a.optional; // if multipleInstances is not supported, use the default name


    var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);

    try {
      var instance = this.getOrInitializeService(normalizedIdentifier);

      if (!instance) {
        if (optional) {
          return null;
        }

        throw Error("Service " + this.name + " is not available");
      }

      return instance;
    } catch (e) {
      if (optional) {
        return null;
      } else {
        throw e;
      }
    }
  };

  Provider.prototype.getComponent = function () {
    return this.component;
  };

  Provider.prototype.setComponent = function (component) {
    var e_1, _a;

    if (component.name !== this.name) {
      throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
    }

    if (this.component) {
      throw Error("Component for " + this.name + " has already been provided");
    }

    this.component = component; // if the service is eager, initialize the default instance

    if (isComponentEager(component)) {
      try {
        this.getOrInitializeService(DEFAULT_ENTRY_NAME);
      } catch (e) {// when the instance factory for an eager Component throws an exception during the eager
        // initialization, it should not cause a fatal error.
        // TODO: Investigate if we need to make it configurable, because some component may want to cause
        // a fatal error in this case?
      }
    }

    try {
      // Create service instances for the pending promises and resolve them
      // NOTE: if this.multipleInstances is false, only the default instance will be created
      // and all promises with resolve with it regardless of the identifier.
      for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var _d = tslib.__read(_c.value, 2),
            instanceIdentifier = _d[0],
            instanceDeferred = _d[1];

        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);

        try {
          // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
          var instance = this.getOrInitializeService(normalizedIdentifier);
          instanceDeferred.resolve(instance);
        } catch (e) {// when the instance factory throws an exception, it should not cause
          // a fatal error. We just leave the promise unresolved.
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  Provider.prototype.clearInstance = function (identifier) {
    if (identifier === void 0) {
      identifier = DEFAULT_ENTRY_NAME;
    }

    this.instancesDeferred.delete(identifier);
    this.instances.delete(identifier);
  }; // app.delete() will call this method on every provider to delete the services
  // TODO: should we mark the provider as deleted?


  Provider.prototype.delete = function () {
    return tslib.__awaiter(this, void 0, void 0, function () {
      var services;
      return tslib.__generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            services = Array.from(this.instances.values());
            return [4
            /*yield*/
            , Promise.all(services.filter(function (service) {
              return 'INTERNAL' in service;
            }) // eslint-disable-next-line @typescript-eslint/no-explicit-any
            .map(function (service) {
              return service.INTERNAL.delete();
            }))];

          case 1:
            _a.sent();

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  Provider.prototype.isComponentSet = function () {
    return this.component != null;
  };

  Provider.prototype.getOrInitializeService = function (identifier) {
    var instance = this.instances.get(identifier);

    if (!instance && this.component) {
      instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));
      this.instances.set(identifier, instance);
    }

    return instance || null;
  };

  Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
    if (this.component) {
      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
    } else {
      return identifier; // assume multiple instances are supported before the component is provided.
    }
  };

  return Provider;
}(); // undefined should be passed to the service factory for the default instance


function normalizeIdentifierForFactory(identifier) {
  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}

function isComponentEager(component) {
  return component.instantiationMode === "EAGER"
  /* EAGER */
  ;
}
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */


var ComponentContainer =
/** @class */
function () {
  function ComponentContainer(name) {
    this.name = name;
    this.providers = new Map();
  }
  /**
   *
   * @param component Component being added
   * @param overwrite When a component with the same name has already been registered,
   * if overwrite is true: overwrite the existing component with the new component and create a new
   * provider with the new component. It can be useful in tests where you want to use different mocks
   * for different tests.
   * if overwrite is false: throw an exception
   */


  ComponentContainer.prototype.addComponent = function (component) {
    var provider = this.getProvider(component.name);

    if (provider.isComponentSet()) {
      throw new Error("Component " + component.name + " has already been registered with " + this.name);
    }

    provider.setComponent(component);
  };

  ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
    var provider = this.getProvider(component.name);

    if (provider.isComponentSet()) {
      // delete the existing provider from the container, so we can register the new component
      this.providers.delete(component.name);
    }

    this.addComponent(component);
  };
  /**
   * getProvider provides a type safe interface where it can only be called with a field name
   * present in NameServiceMapping interface.
   *
   * Firebase SDKs providing services should extend NameServiceMapping interface to register
   * themselves.
   */


  ComponentContainer.prototype.getProvider = function (name) {
    if (this.providers.has(name)) {
      return this.providers.get(name);
    } // create a Provider for a service that hasn't registered with Firebase


    var provider = new Provider(name, this);
    this.providers.set(name, provider);
    return provider;
  };

  ComponentContainer.prototype.getProviders = function () {
    return Array.from(this.providers.values());
  };

  return ComponentContainer;
}();

exports.Component = Component;
exports.ComponentContainer = ComponentContainer;
exports.Provider = Provider;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, '__esModule', {
  value: true
});

var tslib = __webpack_require__(4);
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */


var CONSTANTS = {
  /**
   * @define {boolean} Whether this is the client Node.js SDK.
   */
  NODE_CLIENT: false,

  /**
   * @define {boolean} Whether this is the Admin Node.js SDK.
   */
  NODE_ADMIN: false,

  /**
   * Firebase SDK Version
   */
  SDK_VERSION: '${JSCORE_VERSION}'
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Throws an error if the provided assertion is falsy
 */

var assert = function assert(assertion, message) {
  if (!assertion) {
    throw assertionError(message);
  }
};
/**
 * Returns an Error object suitable for throwing.
 */


var assertionError = function assertionError(message) {
  return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var stringToByteArray = function stringToByteArray(str) {
  // TODO(user): Use native implementations if/when available
  var out = [];
  var p = 0;

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);

    if (c < 128) {
      out[p++] = c;
    } else if (c < 2048) {
      out[p++] = c >> 6 | 192;
      out[p++] = c & 63 | 128;
    } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      // Surrogate Pair
      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
      out[p++] = c >> 18 | 240;
      out[p++] = c >> 12 & 63 | 128;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    } else {
      out[p++] = c >> 12 | 224;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    }
  }

  return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */


var byteArrayToString = function byteArrayToString(bytes) {
  // TODO(user): Use native implementations if/when available
  var out = [];
  var pos = 0,
      c = 0;

  while (pos < bytes.length) {
    var c1 = bytes[pos++];

    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else if (c1 > 191 && c1 < 224) {
      var c2 = bytes[pos++];
      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
    } else if (c1 > 239 && c1 < 365) {
      // Surrogate Pair
      var c2 = bytes[pos++];
      var c3 = bytes[pos++];
      var c4 = bytes[pos++];
      var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;
      out[c++] = String.fromCharCode(0xd800 + (u >> 10));
      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
    } else {
      var c2 = bytes[pos++];
      var c3 = bytes[pos++];
      out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
    }
  }

  return out.join('');
}; // We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()


var base64 = {
  /**
   * Maps bytes to characters.
   */
  byteToCharMap_: null,

  /**
   * Maps characters to bytes.
   */
  charToByteMap_: null,

  /**
   * Maps bytes to websafe characters.
   * @private
   */
  byteToCharMapWebSafe_: null,

  /**
   * Maps websafe characters to bytes.
   * @private
   */
  charToByteMapWebSafe_: null,

  /**
   * Our default alphabet, shared between
   * ENCODED_VALS and ENCODED_VALS_WEBSAFE
   */
  ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',

  /**
   * Our default alphabet. Value 64 (=) is special; it means "nothing."
   */
  get ENCODED_VALS() {
    return this.ENCODED_VALS_BASE + '+/=';
  },

  /**
   * Our websafe alphabet.
   */
  get ENCODED_VALS_WEBSAFE() {
    return this.ENCODED_VALS_BASE + '-_.';
  },

  /**
   * Whether this browser supports the atob and btoa functions. This extension
   * started at Mozilla but is now implemented by many browsers. We use the
   * ASSUME_* variables to avoid pulling in the full useragent detection library
   * but still allowing the standard per-browser compilations.
   *
   */
  HAS_NATIVE_SUPPORT: typeof atob === 'function',

  /**
   * Base64-encode an array of bytes.
   *
   * @param input An array of bytes (numbers with
   *     value in [0, 255]) to encode.
   * @param webSafe Boolean indicating we should use the
   *     alternative alphabet.
   * @return The base64 encoded string.
   */
  encodeByteArray: function encodeByteArray(input, webSafe) {
    if (!Array.isArray(input)) {
      throw Error('encodeByteArray takes an array as a parameter');
    }

    this.init_();
    var byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
    var output = [];

    for (var i = 0; i < input.length; i += 3) {
      var byte1 = input[i];
      var haveByte2 = i + 1 < input.length;
      var byte2 = haveByte2 ? input[i + 1] : 0;
      var haveByte3 = i + 2 < input.length;
      var byte3 = haveByte3 ? input[i + 2] : 0;
      var outByte1 = byte1 >> 2;
      var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;
      var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;
      var outByte4 = byte3 & 0x3f;

      if (!haveByte3) {
        outByte4 = 64;

        if (!haveByte2) {
          outByte3 = 64;
        }
      }

      output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
    }

    return output.join('');
  },

  /**
   * Base64-encode a string.
   *
   * @param input A string to encode.
   * @param webSafe If true, we should use the
   *     alternative alphabet.
   * @return The base64 encoded string.
   */
  encodeString: function encodeString(input, webSafe) {
    // Shortcut for Mozilla browsers that implement
    // a native base64 encoder in the form of "btoa/atob"
    if (this.HAS_NATIVE_SUPPORT && !webSafe) {
      return btoa(input);
    }

    return this.encodeByteArray(stringToByteArray(input), webSafe);
  },

  /**
   * Base64-decode a string.
   *
   * @param input to decode.
   * @param webSafe True if we should use the
   *     alternative alphabet.
   * @return string representing the decoded value.
   */
  decodeString: function decodeString(input, webSafe) {
    // Shortcut for Mozilla browsers that implement
    // a native base64 encoder in the form of "btoa/atob"
    if (this.HAS_NATIVE_SUPPORT && !webSafe) {
      return atob(input);
    }

    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
  },

  /**
   * Base64-decode a string.
   *
   * In base-64 decoding, groups of four characters are converted into three
   * bytes.  If the encoder did not apply padding, the input length may not
   * be a multiple of 4.
   *
   * In this case, the last group will have fewer than 4 characters, and
   * padding will be inferred.  If the group has one or two characters, it decodes
   * to one byte.  If the group has three characters, it decodes to two bytes.
   *
   * @param input Input to decode.
   * @param webSafe True if we should use the web-safe alphabet.
   * @return bytes representing the decoded value.
   */
  decodeStringToByteArray: function decodeStringToByteArray(input, webSafe) {
    this.init_();
    var charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
    var output = [];

    for (var i = 0; i < input.length;) {
      var byte1 = charToByteMap[input.charAt(i++)];
      var haveByte2 = i < input.length;
      var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
      ++i;
      var haveByte3 = i < input.length;
      var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
      ++i;
      var haveByte4 = i < input.length;
      var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
      ++i;

      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
        throw Error();
      }

      var outByte1 = byte1 << 2 | byte2 >> 4;
      output.push(outByte1);

      if (byte3 !== 64) {
        var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;
        output.push(outByte2);

        if (byte4 !== 64) {
          var outByte3 = byte3 << 6 & 0xc0 | byte4;
          output.push(outByte3);
        }
      }
    }

    return output;
  },

  /**
   * Lazy static initialization function. Called before
   * accessing any of the static map variables.
   * @private
   */
  init_: function init_() {
    if (!this.byteToCharMap_) {
      this.byteToCharMap_ = {};
      this.charToByteMap_ = {};
      this.byteToCharMapWebSafe_ = {};
      this.charToByteMapWebSafe_ = {}; // We want quick mappings back and forth, so we precompute two maps.

      for (var i = 0; i < this.ENCODED_VALS.length; i++) {
        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
        this.charToByteMap_[this.byteToCharMap_[i]] = i;
        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i; // Be forgiving when decoding and correctly decode both encodings.

        if (i >= this.ENCODED_VALS_BASE.length) {
          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
        }
      }
    }
  }
};
/**
 * URL-safe base64 encoding
 */

var base64Encode = function base64Encode(str) {
  var utf8Bytes = stringToByteArray(str);
  return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */


var base64Decode = function base64Decode(str) {
  try {
    return base64.decodeString(str, true);
  } catch (e) {
    console.error('base64Decode failed: ', e);
  }

  return null;
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */


function deepCopy(value) {
  return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */


function deepExtend(target, source) {
  if (!(source instanceof Object)) {
    return source;
  }

  switch (source.constructor) {
    case Date:
      // Treat Dates like scalars; if the target date object had any child
      // properties - they will be lost!
      var dateValue = source;
      return new Date(dateValue.getTime());

    case Object:
      if (target === undefined) {
        target = {};
      }

      break;

    case Array:
      // Always copy the array source and overwrite the target.
      target = [];
      break;

    default:
      // Not a plain Object - treat it as a scalar.
      return source;
  }

  for (var prop in source) {
    if (!source.hasOwnProperty(prop)) {
      continue;
    }

    target[prop] = deepExtend(target[prop], source[prop]);
  }

  return target;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var Deferred =
/** @class */
function () {
  function Deferred() {
    var _this = this;

    this.reject = function () {};

    this.resolve = function () {};

    this.promise = new Promise(function (resolve, reject) {
      _this.resolve = resolve;
      _this.reject = reject;
    });
  }
  /**
   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
   * and returns a node-style callback which will resolve or reject the Deferred's promise.
   */


  Deferred.prototype.wrapCallback = function (callback) {
    var _this = this;

    return function (error, value) {
      if (error) {
        _this.reject(error);
      } else {
        _this.resolve(value);
      }

      if (typeof callback === 'function') {
        // Attaching noop handler just in case developer wasn't expecting
        // promises
        _this.promise.catch(function () {}); // Some of our callbacks don't expect a value and our own tests
        // assert that the parameter length is 1


        if (callback.length === 1) {
          callback(error);
        } else {
          callback(error, value);
        }
      }
    };
  };

  return Deferred;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */


function getUA() {
  if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {
    return navigator['userAgent'];
  } else {
    return '';
  }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */


function isMobileCordova() {
  return typeof window !== 'undefined' && // @ts-ignore Setting up an broadly applicable index signature for Window
  // just to deal with this case would probably be a bad idea.
  !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/


function isNode() {
  try {
    return Object.prototype.toString.call(global.process) === '[object process]';
  } catch (e) {
    return false;
  }
}
/**
 * Detect Browser Environment
 */


function isBrowser() {
  return typeof self === 'object' && self.self === self;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */


function isReactNative() {
  return typeof navigator === 'object' && navigator['product'] === 'ReactNative';
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */


function isNodeSdk() {
  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var ERROR_NAME = 'FirebaseError'; // Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types

var FirebaseError =
/** @class */
function (_super) {
  tslib.__extends(FirebaseError, _super);

  function FirebaseError(code, message) {
    var _this = _super.call(this, message) || this;

    _this.code = code;
    _this.name = ERROR_NAME; // Fix For ES5
    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work

    Object.setPrototypeOf(_this, FirebaseError.prototype); // Maintains proper stack trace for where our error was thrown.
    // Only available on V8.

    if (Error.captureStackTrace) {
      Error.captureStackTrace(_this, ErrorFactory.prototype.create);
    }

    return _this;
  }

  return FirebaseError;
}(Error);

var ErrorFactory =
/** @class */
function () {
  function ErrorFactory(service, serviceName, errors) {
    this.service = service;
    this.serviceName = serviceName;
    this.errors = errors;
  }

  ErrorFactory.prototype.create = function (code) {
    var data = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      data[_i - 1] = arguments[_i];
    }

    var customData = data[0] || {};
    var fullCode = this.service + "/" + code;
    var template = this.errors[code];
    var message = template ? replaceTemplate(template, customData) : 'Error'; // Service Name: Error message (service/code).

    var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
    var error = new FirebaseError(fullCode, fullMessage); // Keys with an underscore at the end of their name are not included in
    // error.data for some reason.
    // TODO: Replace with Object.entries when lib is updated to es2017.

    for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
      var key = _b[_a];

      if (key.slice(-1) !== '_') {
        if (key in error) {
          console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
        }

        error[key] = customData[key];
      }
    }

    return error;
  };

  return ErrorFactory;
}();

function replaceTemplate(template, data) {
  return template.replace(PATTERN, function (_, key) {
    var value = data[key];
    return value != null ? value.toString() : "<" + key + "?>";
  });
}

var PATTERN = /\{\$([^}]+)}/g;
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */

function jsonEval(str) {
  return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */


function stringify(data) {
  return JSON.stringify(data);
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var decode = function decode(token) {
  var header = {},
      claims = {},
      data = {},
      signature = '';

  try {
    var parts = token.split('.');
    header = jsonEval(base64Decode(parts[0]) || '');
    claims = jsonEval(base64Decode(parts[1]) || '');
    signature = parts[2];
    data = claims['d'] || {};
    delete claims['d'];
  } catch (e) {}

  return {
    header: header,
    claims: claims,
    data: data,
    signature: signature
  };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var isValidTimestamp = function isValidTimestamp(token) {
  var claims = decode(token).claims;
  var now = Math.floor(new Date().getTime() / 1000);
  var validSince = 0,
      validUntil = 0;

  if (typeof claims === 'object') {
    if (claims.hasOwnProperty('nbf')) {
      validSince = claims['nbf'];
    } else if (claims.hasOwnProperty('iat')) {
      validSince = claims['iat'];
    }

    if (claims.hasOwnProperty('exp')) {
      validUntil = claims['exp'];
    } else {
      // token will expire after 24h by default
      validUntil = validSince + 86400;
    }
  }

  return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var issuedAtTime = function issuedAtTime(token) {
  var claims = decode(token).claims;

  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
    return claims['iat'];
  }

  return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var isValidFormat = function isValidFormat(token) {
  var decoded = decode(token),
      claims = decoded.claims;
  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var isAdmin = function isAdmin(token) {
  var claims = decode(token).claims;
  return typeof claims === 'object' && claims['admin'] === true;
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function contains(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

function safeGet(obj, key) {
  if (Object.prototype.hasOwnProperty.call(obj, key)) {
    return obj[key];
  } else {
    return undefined;
  }
}

function isEmpty(obj) {
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      return false;
    }
  }

  return true;
}

function map(obj, fn, contextObj) {
  var res = {};

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      res[key] = fn.call(contextObj, obj[key], key, obj);
    }
  }

  return res;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */


function querystring(querystringParams) {
  var params = [];

  var _loop_1 = function _loop_1(key, value) {
    if (Array.isArray(value)) {
      value.forEach(function (arrayVal) {
        params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
      });
    } else {
      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
    }
  };

  for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
    var _b = _a[_i],
        key = _b[0],
        value = _b[1];

    _loop_1(key, value);
  }

  return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */


function querystringDecode(querystring) {
  var obj = {};
  var tokens = querystring.replace(/^\?/, '').split('&');
  tokens.forEach(function (token) {
    if (token) {
      var key = token.split('=');
      obj[key[0]] = key[1];
    }
  });
  return obj;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */

/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */


var Sha1 =
/** @class */
function () {
  function Sha1() {
    /**
     * Holds the previous values of accumulated variables a-e in the compress_
     * function.
     * @private
     */
    this.chain_ = [];
    /**
     * A buffer holding the partially computed hash result.
     * @private
     */

    this.buf_ = [];
    /**
     * An array of 80 bytes, each a part of the message to be hashed.  Referred to
     * as the message schedule in the docs.
     * @private
     */

    this.W_ = [];
    /**
     * Contains data needed to pad messages less than 64 bytes.
     * @private
     */

    this.pad_ = [];
    /**
     * @private {number}
     */

    this.inbuf_ = 0;
    /**
     * @private {number}
     */

    this.total_ = 0;
    this.blockSize = 512 / 8;
    this.pad_[0] = 128;

    for (var i = 1; i < this.blockSize; ++i) {
      this.pad_[i] = 0;
    }

    this.reset();
  }

  Sha1.prototype.reset = function () {
    this.chain_[0] = 0x67452301;
    this.chain_[1] = 0xefcdab89;
    this.chain_[2] = 0x98badcfe;
    this.chain_[3] = 0x10325476;
    this.chain_[4] = 0xc3d2e1f0;
    this.inbuf_ = 0;
    this.total_ = 0;
  };
  /**
   * Internal compress helper function.
   * @param buf Block to compress.
   * @param offset Offset of the block in the buffer.
   * @private
   */


  Sha1.prototype.compress_ = function (buf, offset) {
    if (!offset) {
      offset = 0;
    }

    var W = this.W_; // get 16 big endian words

    if (typeof buf === 'string') {
      for (var i = 0; i < 16; i++) {
        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
        // have a bug that turns the post-increment ++ operator into pre-increment
        // during JIT compilation.  We have code that depends heavily on SHA-1 for
        // correctness and which is affected by this bug, so I've removed all uses
        // of post-increment ++ in which the result value is used.  We can revert
        // this change once the Safari bug
        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
        // most clients have been updated.
        W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);
        offset += 4;
      }
    } else {
      for (var i = 0; i < 16; i++) {
        W[i] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];
        offset += 4;
      }
    } // expand to 80 words


    for (var i = 16; i < 80; i++) {
      var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
      W[i] = (t << 1 | t >>> 31) & 0xffffffff;
    }

    var a = this.chain_[0];
    var b = this.chain_[1];
    var c = this.chain_[2];
    var d = this.chain_[3];
    var e = this.chain_[4];
    var f, k; // TODO(user): Try to unroll this loop to speed up the computation.

    for (var i = 0; i < 80; i++) {
      if (i < 40) {
        if (i < 20) {
          f = d ^ b & (c ^ d);
          k = 0x5a827999;
        } else {
          f = b ^ c ^ d;
          k = 0x6ed9eba1;
        }
      } else {
        if (i < 60) {
          f = b & c | d & (b | c);
          k = 0x8f1bbcdc;
        } else {
          f = b ^ c ^ d;
          k = 0xca62c1d6;
        }
      }

      var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;
      e = d;
      d = c;
      c = (b << 30 | b >>> 2) & 0xffffffff;
      b = a;
      a = t;
    }

    this.chain_[0] = this.chain_[0] + a & 0xffffffff;
    this.chain_[1] = this.chain_[1] + b & 0xffffffff;
    this.chain_[2] = this.chain_[2] + c & 0xffffffff;
    this.chain_[3] = this.chain_[3] + d & 0xffffffff;
    this.chain_[4] = this.chain_[4] + e & 0xffffffff;
  };

  Sha1.prototype.update = function (bytes, length) {
    // TODO(johnlenz): tighten the function signature and remove this check
    if (bytes == null) {
      return;
    }

    if (length === undefined) {
      length = bytes.length;
    }

    var lengthMinusBlock = length - this.blockSize;
    var n = 0; // Using local instead of member variables gives ~5% speedup on Firefox 16.

    var buf = this.buf_;
    var inbuf = this.inbuf_; // The outer while loop should execute at most twice.

    while (n < length) {
      // When we have no data in the block to top up, we can directly process the
      // input buffer (assuming it contains sufficient data). This gives ~25%
      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
      // the data is provided in large chunks (or in multiples of 64 bytes).
      if (inbuf === 0) {
        while (n <= lengthMinusBlock) {
          this.compress_(bytes, n);
          n += this.blockSize;
        }
      }

      if (typeof bytes === 'string') {
        while (n < length) {
          buf[inbuf] = bytes.charCodeAt(n);
          ++inbuf;
          ++n;

          if (inbuf === this.blockSize) {
            this.compress_(buf);
            inbuf = 0; // Jump to the outer loop so we use the full-block optimization.

            break;
          }
        }
      } else {
        while (n < length) {
          buf[inbuf] = bytes[n];
          ++inbuf;
          ++n;

          if (inbuf === this.blockSize) {
            this.compress_(buf);
            inbuf = 0; // Jump to the outer loop so we use the full-block optimization.

            break;
          }
        }
      }
    }

    this.inbuf_ = inbuf;
    this.total_ += length;
  };
  /** @override */


  Sha1.prototype.digest = function () {
    var digest = [];
    var totalBits = this.total_ * 8; // Add pad 0x80 0x00*.

    if (this.inbuf_ < 56) {
      this.update(this.pad_, 56 - this.inbuf_);
    } else {
      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
    } // Add # bits.


    for (var i = this.blockSize - 1; i >= 56; i--) {
      this.buf_[i] = totalBits & 255;
      totalBits /= 256; // Don't use bit-shifting here!
    }

    this.compress_(this.buf_);
    var n = 0;

    for (var i = 0; i < 5; i++) {
      for (var j = 24; j >= 0; j -= 8) {
        digest[n] = this.chain_[i] >> j & 255;
        ++n;
      }
    }

    return digest;
  };

  return Sha1;
}();
/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */


function createSubscribe(executor, onNoObservers) {
  var proxy = new ObserverProxy(executor, onNoObservers);
  return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */


var ObserverProxy =
/** @class */
function () {
  /**
   * @param executor Function which can make calls to a single Observer
   *     as a proxy.
   * @param onNoObservers Callback when count of Observers goes to zero.
   */
  function ObserverProxy(executor, onNoObservers) {
    var _this = this;

    this.observers = [];
    this.unsubscribes = [];
    this.observerCount = 0; // Micro-task scheduling by calling task.then().

    this.task = Promise.resolve();
    this.finalized = false;
    this.onNoObservers = onNoObservers; // Call the executor asynchronously so subscribers that are called
    // synchronously after the creation of the subscribe function
    // can still receive the very first value generated in the executor.

    this.task.then(function () {
      executor(_this);
    }).catch(function (e) {
      _this.error(e);
    });
  }

  ObserverProxy.prototype.next = function (value) {
    this.forEachObserver(function (observer) {
      observer.next(value);
    });
  };

  ObserverProxy.prototype.error = function (error) {
    this.forEachObserver(function (observer) {
      observer.error(error);
    });
    this.close(error);
  };

  ObserverProxy.prototype.complete = function () {
    this.forEachObserver(function (observer) {
      observer.complete();
    });
    this.close();
  };
  /**
   * Subscribe function that can be used to add an Observer to the fan-out list.
   *
   * - We require that no event is sent to a subscriber sychronously to their
   *   call to subscribe().
   */


  ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
    var _this = this;

    var observer;

    if (nextOrObserver === undefined && error === undefined && complete === undefined) {
      throw new Error('Missing Observer.');
    } // Assemble an Observer object when passed as callback functions.


    if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
      observer = nextOrObserver;
    } else {
      observer = {
        next: nextOrObserver,
        error: error,
        complete: complete
      };
    }

    if (observer.next === undefined) {
      observer.next = noop;
    }

    if (observer.error === undefined) {
      observer.error = noop;
    }

    if (observer.complete === undefined) {
      observer.complete = noop;
    }

    var unsub = this.unsubscribeOne.bind(this, this.observers.length); // Attempt to subscribe to a terminated Observable - we
    // just respond to the Observer with the final error or complete
    // event.

    if (this.finalized) {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.task.then(function () {
        try {
          if (_this.finalError) {
            observer.error(_this.finalError);
          } else {
            observer.complete();
          }
        } catch (e) {// nothing
        }

        return;
      });
    }

    this.observers.push(observer);
    return unsub;
  }; // Unsubscribe is synchronous - we guarantee that no events are sent to
  // any unsubscribed Observer.


  ObserverProxy.prototype.unsubscribeOne = function (i) {
    if (this.observers === undefined || this.observers[i] === undefined) {
      return;
    }

    delete this.observers[i];
    this.observerCount -= 1;

    if (this.observerCount === 0 && this.onNoObservers !== undefined) {
      this.onNoObservers(this);
    }
  };

  ObserverProxy.prototype.forEachObserver = function (fn) {
    if (this.finalized) {
      // Already closed by previous event....just eat the additional values.
      return;
    } // Since sendOne calls asynchronously - there is no chance that
    // this.observers will become undefined.


    for (var i = 0; i < this.observers.length; i++) {
      this.sendOne(i, fn);
    }
  }; // Call the Observer via one of it's callback function. We are careful to
  // confirm that the observe has not been unsubscribed since this asynchronous
  // function had been queued.


  ObserverProxy.prototype.sendOne = function (i, fn) {
    var _this = this; // Execute the callback asynchronously
    // eslint-disable-next-line @typescript-eslint/no-floating-promises


    this.task.then(function () {
      if (_this.observers !== undefined && _this.observers[i] !== undefined) {
        try {
          fn(_this.observers[i]);
        } catch (e) {
          // Ignore exceptions raised in Observers or missing methods of an
          // Observer.
          // Log error to console. b/31404806
          if (typeof console !== 'undefined' && console.error) {
            console.error(e);
          }
        }
      }
    });
  };

  ObserverProxy.prototype.close = function (err) {
    var _this = this;

    if (this.finalized) {
      return;
    }

    this.finalized = true;

    if (err !== undefined) {
      this.finalError = err;
    } // Proxy is no longer needed - garbage collect references
    // eslint-disable-next-line @typescript-eslint/no-floating-promises


    this.task.then(function () {
      _this.observers = undefined;
      _this.onNoObservers = undefined;
    });
  };

  return ObserverProxy;
}();
/** Turn synchronous function into one called asynchronously. */


function async(fn, onError) {
  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    Promise.resolve(true).then(function () {
      fn.apply(void 0, args);
    }).catch(function (error) {
      if (onError) {
        onError(error);
      }
    });
  };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */


function implementsAnyMethods(obj, methods) {
  if (typeof obj !== 'object' || obj === null) {
    return false;
  }

  for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
    var method = methods_1[_i];

    if (method in obj && typeof obj[method] === 'function') {
      return true;
    }
  }

  return false;
}

function noop() {} // do nothing

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */


var validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {
  var argError;

  if (argCount < minCount) {
    argError = 'at least ' + minCount;
  } else if (argCount > maxCount) {
    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
  }

  if (argError) {
    var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';
    throw new Error(error);
  }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */


function errorPrefix(fnName, argumentNumber, optional) {
  var argName = '';

  switch (argumentNumber) {
    case 1:
      argName = optional ? 'first' : 'First';
      break;

    case 2:
      argName = optional ? 'second' : 'Second';
      break;

    case 3:
      argName = optional ? 'third' : 'Third';
      break;

    case 4:
      argName = optional ? 'fourth' : 'Fourth';
      break;

    default:
      throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
  }

  var error = fnName + ' failed: ';
  error += argName + ' argument ';
  return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */


function validateNamespace(fnName, argumentNumber, namespace, optional) {
  if (optional && !namespace) {
    return;
  }

  if (typeof namespace !== 'string') {
    //TODO: I should do more validation here. We only allow certain chars in namespaces.
    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');
  }
}

function validateCallback(fnName, argumentNumber, callback, optional) {
  if (optional && !callback) {
    return;
  }

  if (typeof callback !== 'function') {
    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');
  }
}

function validateContextObject(fnName, argumentNumber, context, optional) {
  if (optional && !context) {
    return;
  }

  if (typeof context !== 'object' || context === null) {
    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');
  }
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3

/**
 * @param {string} str
 * @return {Array}
 */


var stringToByteArray$1 = function stringToByteArray$1(str) {
  var out = [];
  var p = 0;

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i); // Is this the lead surrogate in a surrogate pair?

    if (c >= 0xd800 && c <= 0xdbff) {
      var high = c - 0xd800; // the high 10 bits.

      i++;
      assert(i < str.length, 'Surrogate pair missing trail surrogate.');
      var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.

      c = 0x10000 + (high << 10) + low;
    }

    if (c < 128) {
      out[p++] = c;
    } else if (c < 2048) {
      out[p++] = c >> 6 | 192;
      out[p++] = c & 63 | 128;
    } else if (c < 65536) {
      out[p++] = c >> 12 | 224;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    } else {
      out[p++] = c >> 18 | 240;
      out[p++] = c >> 12 & 63 | 128;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    }
  }

  return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */


var stringLength = function stringLength(str) {
  var p = 0;

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);

    if (c < 128) {
      p++;
    } else if (c < 2048) {
      p += 2;
    } else if (c >= 0xd800 && c <= 0xdbff) {
      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
      p += 4;
      i++; // skip trail surrogate.
    } else {
      p += 3;
    }
  }

  return p;
};

exports.CONSTANTS = CONSTANTS;
exports.Deferred = Deferred;
exports.ErrorFactory = ErrorFactory;
exports.FirebaseError = FirebaseError;
exports.Sha1 = Sha1;
exports.assert = assert;
exports.assertionError = assertionError;
exports.async = async;
exports.base64 = base64;
exports.base64Decode = base64Decode;
exports.base64Encode = base64Encode;
exports.contains = contains;
exports.createSubscribe = createSubscribe;
exports.decode = decode;
exports.deepCopy = deepCopy;
exports.deepExtend = deepExtend;
exports.errorPrefix = errorPrefix;
exports.getUA = getUA;
exports.isAdmin = isAdmin;
exports.isBrowser = isBrowser;
exports.isEmpty = isEmpty;
exports.isMobileCordova = isMobileCordova;
exports.isNode = isNode;
exports.isNodeSdk = isNodeSdk;
exports.isReactNative = isReactNative;
exports.isValidFormat = isValidFormat;
exports.isValidTimestamp = isValidTimestamp;
exports.issuedAtTime = issuedAtTime;
exports.jsonEval = jsonEval;
exports.map = map;
exports.querystring = querystring;
exports.querystringDecode = querystringDecode;
exports.safeGet = safeGet;
exports.stringLength = stringLength;
exports.stringToByteArray = stringToByteArray$1;
exports.stringify = stringify;
exports.validateArgCount = validateArgCount;
exports.validateCallback = validateCallback;
exports.validateContextObject = validateContextObject;
exports.validateNamespace = validateNamespace;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export TimelineLite */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimelineLite; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */


__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function () {
  var TimelineLite = function TimelineLite(vars) {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */].call(this, vars);
    var self = this,
        v = self.vars,
        val,
        p;
    self._labels = {};
    self.autoRemoveChildren = !!v.autoRemoveChildren;
    self.smoothChildTiming = !!v.smoothChildTiming;
    self._sortChildren = true;
    self._onUpdate = v.onUpdate;

    for (p in v) {
      val = v[p];
      if (_isArray(val)) if (val.join("").indexOf("{self}") !== -1) {
        v[p] = self._swapSelfInParams(val);
      }
    }

    if (_isArray(v.tweens)) {
      self.add(v.tweens, 0, v.align, v.stagger);
    }
  },
      _tinyNum = 0.00000001,
      TweenLiteInternals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]._internals,
      _internals = TimelineLite._internals = {},
      _isSelector = TweenLiteInternals.isSelector,
      _isArray = TweenLiteInternals.isArray,
      _lazyTweens = TweenLiteInternals.lazyTweens,
      _lazyRender = TweenLiteInternals.lazyRender,
      _globals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.globals,
      _copy = function _copy(vars) {
    var copy = {},
        p;

    for (p in vars) {
      copy[p] = vars[p];
    }

    return copy;
  },
      _applyCycle = function _applyCycle(vars, targets, i) {
    var alt = vars.cycle,
        p,
        val;

    for (p in alt) {
      val = alt[p];
      vars[p] = typeof val === "function" ? val(i, targets[i], targets) : val[i % val.length];
    }

    delete vars.cycle;
  },
      _pauseCallback = _internals.pauseCallback = function () {},
      _slice = function _slice(a) {
    //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
    var b = [],
        l = a.length,
        i;

    for (i = 0; i !== l; b.push(a[i++]));

    return b;
  },
      _defaultImmediateRender = function _defaultImmediateRender(tl, toVars, fromVars, defaultFalse) {
    //default to immediateRender:true unless otherwise set in toVars, fromVars or if defaultFalse is passed in as true
    var ir = "immediateRender";

    if (!(ir in toVars)) {
      toVars[ir] = !(fromVars && fromVars[ir] === false || defaultFalse);
    }

    return toVars;
  },
      //for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following
  _distribute = function _distribute(v) {
    if (typeof v === "function") {
      return v;
    }

    var vars = typeof v === "object" ? v : {
      each: v
    },
        //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total "amount" that's chunked out among them all.
    ease = vars.ease,
        from = vars.from || 0,
        base = vars.base || 0,
        cache = {},
        isFromKeyword = isNaN(from),
        axis = vars.axis,
        ratio = {
      center: 0.5,
      end: 1
    }[from] || 0;
    return function (i, target, a) {
      var l = (a || vars).length,
          distances = cache[l],
          originX,
          originY,
          x,
          y,
          d,
          j,
          max,
          min,
          wrap;

      if (!distances) {
        wrap = vars.grid === "auto" ? 0 : (vars.grid || [Infinity])[0];

        if (!wrap) {
          max = -Infinity;

          while (max < (max = a[wrap++].getBoundingClientRect().left) && wrap < l) {}

          wrap--;
        }

        distances = cache[l] = [];
        originX = isFromKeyword ? Math.min(wrap, l) * ratio - 0.5 : from % wrap;
        originY = isFromKeyword ? l * ratio / wrap - 0.5 : from / wrap | 0;
        max = 0;
        min = Infinity;

        for (j = 0; j < l; j++) {
          x = j % wrap - originX;
          y = originY - (j / wrap | 0);
          distances[j] = d = !axis ? Math.sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);

          if (d > max) {
            max = d;
          }

          if (d < min) {
            min = d;
          }
        }

        distances.max = max - min;
        distances.min = min;
        distances.v = l = vars.amount || vars.each * (wrap > l ? l - 1 : !axis ? Math.max(wrap, l / wrap) : axis === "y" ? l / wrap : wrap) || 0;
        distances.b = l < 0 ? base - l : base;
      }

      l = (distances[i] - distances.min) / distances.max;
      return distances.b + (ease ? ease.getRatio(l) : l) * distances.v;
    };
  },
      p = TimelineLite.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */]();

  TimelineLite.version = "2.1.3";
  TimelineLite.distribute = _distribute;
  p.constructor = TimelineLite;
  p.kill()._gc = p._forcingPlayhead = p._hasPause = false;
  /* might use later...
  //translates a local time inside an animation to the corresponding time on the root/global timeline, factoring in all nesting and timeScales.
  function localToGlobal(time, animation) {
  	while (animation) {
  		time = (time / animation._timeScale) + animation._startTime;
  		animation = animation.timeline;
  	}
  	return time;
  }
  	//translates the supplied time on the root/global timeline into the corresponding local time inside a particular animation, factoring in all nesting and timeScales
  function globalToLocal(time, animation) {
  	var scale = 1;
  	time -= localToGlobal(0, animation);
  	while (animation) {
  		scale *= animation._timeScale;
  		animation = animation.timeline;
  	}
  	return time * scale;
  }
  */

  p.to = function (target, duration, vars, position) {
    var Engine = vars.repeat && _globals.TweenMax || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */];
    return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);
  };

  p.from = function (target, duration, vars, position) {
    return this.add((vars.repeat && _globals.TweenMax || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]).from(target, duration, _defaultImmediateRender(this, vars)), position);
  };

  p.fromTo = function (target, duration, fromVars, toVars, position) {
    var Engine = toVars.repeat && _globals.TweenMax || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */];
    toVars = _defaultImmediateRender(this, toVars, fromVars);
    return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);
  };

  p.staggerTo = function (targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
    var tl = new TimelineLite({
      onComplete: onCompleteAll,
      onCompleteParams: onCompleteAllParams,
      callbackScope: onCompleteAllScope,
      smoothChildTiming: this.smoothChildTiming
    }),
        staggerFunc = _distribute(vars.stagger || stagger),
        startAt = vars.startAt,
        cycle = vars.cycle,
        copy,
        i;

    if (typeof targets === "string") {
      targets = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].selector(targets) || targets;
    }

    targets = targets || [];

    if (_isSelector(targets)) {
      //if the targets object is a selector, translate it into an array.
      targets = _slice(targets);
    }

    for (i = 0; i < targets.length; i++) {
      copy = _copy(vars);

      if (startAt) {
        copy.startAt = _copy(startAt);

        if (startAt.cycle) {
          _applyCycle(copy.startAt, targets, i);
        }
      }

      if (cycle) {
        _applyCycle(copy, targets, i);

        if (copy.duration != null) {
          duration = copy.duration;
          delete copy.duration;
        }
      }

      tl.to(targets[i], duration, copy, staggerFunc(i, targets[i], targets));
    }

    return this.add(tl, position);
  };

  p.staggerFrom = function (targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
    vars.runBackwards = true;
    return this.staggerTo(targets, duration, _defaultImmediateRender(this, vars), stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);
  };

  p.staggerFromTo = function (targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
    toVars.startAt = fromVars;
    return this.staggerTo(targets, duration, _defaultImmediateRender(this, toVars, fromVars), stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);
  };

  p.call = function (callback, params, scope, position) {
    return this.add(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0, callback, params, scope), position);
  };

  p.set = function (target, vars, position) {
    return this.add(new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */](target, 0, _defaultImmediateRender(this, vars, null, true)), position);
  };

  TimelineLite.exportRoot = function (vars, ignoreDelayedCalls) {
    vars = vars || {};

    if (vars.smoothChildTiming == null) {
      vars.smoothChildTiming = true;
    }

    var tl = new TimelineLite(vars),
        root = tl._timeline,
        hasNegativeStart,
        time,
        tween,
        next;

    if (ignoreDelayedCalls == null) {
      ignoreDelayedCalls = true;
    }

    root._remove(tl, true);

    tl._startTime = 0;
    tl._rawPrevTime = tl._time = tl._totalTime = root._time;
    tween = root._first;

    while (tween) {
      next = tween._next;

      if (!ignoreDelayedCalls || !(tween instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */] && tween.target === tween.vars.onComplete)) {
        time = tween._startTime - tween._delay;

        if (time < 0) {
          hasNegativeStart = 1;
        }

        tl.add(tween, time);
      }

      tween = next;
    }

    root.add(tl, 0);

    if (hasNegativeStart) {
      //calling totalDuration() will force the adjustment necessary to shift the children forward so none of them start before zero, and moves the timeline backwards the same amount, so the playhead is still aligned where it should be globally, but the timeline doesn't have illegal children that start before zero.
      tl.totalDuration();
    }

    return tl;
  };

  p.add = function (value, position, align, stagger) {
    var self = this,
        curTime,
        l,
        i,
        child,
        tl,
        beforeRawTime;

    if (typeof position !== "number") {
      position = self._parseTimeOrLabel(position, 0, true, value);
    }

    if (!(value instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */])) {
      if (value instanceof Array || value && value.push && _isArray(value)) {
        align = align || "normal";
        stagger = stagger || 0;
        curTime = position;
        l = value.length;

        for (i = 0; i < l; i++) {
          if (_isArray(child = value[i])) {
            child = new TimelineLite({
              tweens: child
            });
          }

          self.add(child, curTime);

          if (typeof child !== "string" && typeof child !== "function") {
            if (align === "sequence") {
              curTime = child._startTime + child.totalDuration() / child._timeScale;
            } else if (align === "start") {
              child._startTime -= child.delay();
            }
          }

          curTime += stagger;
        }

        return self._uncache(true);
      } else if (typeof value === "string") {
        return self.addLabel(value, position);
      } else if (typeof value === "function") {
        value = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0, value);
      } else {
        throw "Cannot add " + value + " into the timeline; it is not a tween, timeline, function, or string.";
      }
    }

    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */].prototype.add.call(self, value, position);

    if (value._time || !value._duration && value._initted) {
      //in case, for example, the _startTime is moved on a tween that has already rendered. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning.
      curTime = (self.rawTime() - value._startTime) * value._timeScale;

      if (!value._duration || Math.abs(Math.max(0, Math.min(value.totalDuration(), curTime))) - value._totalTime > 0.00001) {
        value.render(curTime, false, false);
      }
    } //if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.


    if (self._gc || self._time === self._duration) if (!self._paused) if (self._duration < self.duration()) {
      //in case any of the ancestors had completed but should now be enabled...
      tl = self;
      beforeRawTime = tl.rawTime() > value._startTime; //if the tween is placed on the timeline so that it starts BEFORE the current rawTime, we should align the playhead (move the timeline). This is because sometimes users will create a timeline, let it finish, and much later append a tween and expect it to run instead of jumping to its end state. While technically one could argue that it should jump to its end state, that's not what users intuitively expect.

      while (tl._timeline) {
        if (beforeRawTime && tl._timeline.smoothChildTiming) {
          tl.totalTime(tl._totalTime, true); //moves the timeline (shifts its startTime) if necessary, and also enables it.
        } else if (tl._gc) {
          tl._enabled(true, false);
        }

        tl = tl._timeline;
      }
    }
    return self;
  };

  p.remove = function (value) {
    if (value instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]) {
      this._remove(value, false);

      var tl = value._timeline = value.vars.useFrames ? __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootFramesTimeline : __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootTimeline; //now that it's removed, default it to the root timeline so that if it gets played again, it doesn't jump back into this timeline.

      value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale; //ensure that if it gets played again, the timing is correct.

      return this;
    } else if (value instanceof Array || value && value.push && _isArray(value)) {
      var i = value.length;

      while (--i > -1) {
        this.remove(value[i]);
      }

      return this;
    } else if (typeof value === "string") {
      return this.removeLabel(value);
    }

    return this.kill(null, value);
  };

  p._remove = function (tween, skipDisable) {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */].prototype._remove.call(this, tween, skipDisable);

    var last = this._last;

    if (!last) {
      this._time = this._totalTime = this._duration = this._totalDuration = 0;
    } else if (this._time > this.duration()) {
      this._time = this._duration;
      this._totalTime = this._totalDuration;
    }

    return this;
  };

  p.append = function (value, offsetOrLabel) {
    return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));
  };

  p.insert = p.insertMultiple = function (value, position, align, stagger) {
    return this.add(value, position || 0, align, stagger);
  };

  p.appendMultiple = function (tweens, offsetOrLabel, align, stagger) {
    return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);
  };

  p.addLabel = function (label, position) {
    this._labels[label] = this._parseTimeOrLabel(position);
    return this;
  };

  p.addPause = function (position, callback, params, scope) {
    var t = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0, _pauseCallback, params, scope || this);
    t.vars.onComplete = t.vars.onReverseComplete = callback;
    t.data = "isPause";
    this._hasPause = true;
    return this.add(t, position);
  };

  p.removeLabel = function (label) {
    delete this._labels[label];
    return this;
  };

  p.getLabelTime = function (label) {
    return this._labels[label] != null ? this._labels[label] : -1;
  };

  p._parseTimeOrLabel = function (timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {
    var clippedDuration, i; //if we're about to add a tween/timeline (or an array of them) that's already a child of this timeline, we should remove it first so that it doesn't contaminate the duration().

    if (ignore instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */] && ignore.timeline === this) {
      this.remove(ignore);
    } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {
      i = ignore.length;

      while (--i > -1) {
        if (ignore[i] instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */] && ignore[i].timeline === this) {
          this.remove(ignore[i]);
        }
      }
    }

    clippedDuration = typeof timeOrLabel === "number" && !offsetOrLabel ? 0 : this.duration() > 99999999999 ? this.recent().endTime(false) : this._duration; //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.

    if (typeof offsetOrLabel === "string") {
      return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === "number" && this._labels[offsetOrLabel] == null ? timeOrLabel - clippedDuration : 0, appendIfAbsent);
    }

    offsetOrLabel = offsetOrLabel || 0;

    if (typeof timeOrLabel === "string" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {
      //if the string is a number like "1", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).
      i = timeOrLabel.indexOf("=");

      if (i === -1) {
        if (this._labels[timeOrLabel] == null) {
          return appendIfAbsent ? this._labels[timeOrLabel] = clippedDuration + offsetOrLabel : offsetOrLabel;
        }

        return this._labels[timeOrLabel] + offsetOrLabel;
      }

      offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + "1", 10) * Number(timeOrLabel.substr(i + 1));
      timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : clippedDuration;
    } else if (timeOrLabel == null) {
      timeOrLabel = clippedDuration;
    }

    return Number(timeOrLabel) + offsetOrLabel;
  };

  p.seek = function (position, suppressEvents) {
    return this.totalTime(typeof position === "number" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);
  };

  p.stop = function () {
    return this.paused(true);
  };

  p.gotoAndPlay = function (position, suppressEvents) {
    return this.play(position, suppressEvents);
  };

  p.gotoAndStop = function (position, suppressEvents) {
    return this.pause(position, suppressEvents);
  };

  p.render = function (time, suppressEvents, force) {
    if (this._gc) {
      this._enabled(true, false);
    }

    var self = this,
        prevTime = self._time,
        totalDur = !self._dirty ? self._totalDuration : self.totalDuration(),
        prevStart = self._startTime,
        prevTimeScale = self._timeScale,
        prevPaused = self._paused,
        tween,
        isComplete,
        next,
        callback,
        internalForce,
        pauseTween,
        curTime,
        pauseTime;

    if (prevTime !== self._time) {
      //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).
      time += self._time - prevTime;
    }

    if (self._hasPause && !self._forcingPlayhead && !suppressEvents) {
      if (time > prevTime) {
        tween = self._first;

        while (tween && tween._startTime <= time && !pauseTween) {
          if (!tween._duration) if (tween.data === "isPause" && !tween.ratio && !(tween._startTime === 0 && self._rawPrevTime === 0)) {
            pauseTween = tween;
          }
          tween = tween._next;
        }
      } else {
        tween = self._last;

        while (tween && tween._startTime >= time && !pauseTween) {
          if (!tween._duration) if (tween.data === "isPause" && tween._rawPrevTime > 0) {
            pauseTween = tween;
          }
          tween = tween._prev;
        }
      }

      if (pauseTween) {
        self._time = self._totalTime = time = pauseTween._startTime;
        pauseTime = self._startTime + (self._reversed ? self._duration - time : time) / self._timeScale;
      }
    }

    if (time >= totalDur - _tinyNum && time >= 0) {
      //to work around occasional floating point math artifacts.
      self._totalTime = self._time = totalDur;
      if (!self._reversed) if (!self._hasPausedChild()) {
        isComplete = true;
        callback = "onComplete";
        internalForce = !!self._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.

        if (self._duration === 0) if (time <= 0 && time >= -_tinyNum || self._rawPrevTime < 0 || self._rawPrevTime === _tinyNum) if (self._rawPrevTime !== time && self._first) {
          internalForce = true;

          if (self._rawPrevTime > _tinyNum) {
            callback = "onReverseComplete";
          }
        }
      }
      self._rawPrevTime = self._duration || !suppressEvents || time || self._rawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.

      time = totalDur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7.
    } else if (time < _tinyNum) {
      //to work around occasional floating point math artifacts, round super small values to 0.
      self._totalTime = self._time = 0;

      if (time > -_tinyNum) {
        time = 0;
      }

      if (prevTime !== 0 || self._duration === 0 && self._rawPrevTime !== _tinyNum && (self._rawPrevTime > 0 || time < 0 && self._rawPrevTime >= 0)) {
        callback = "onReverseComplete";
        isComplete = self._reversed;
      }

      if (time < 0) {
        self._active = false;

        if (self._timeline.autoRemoveChildren && self._reversed) {
          //ensures proper GC if a timeline is resumed after it's finished reversing.
          internalForce = isComplete = true;
          callback = "onReverseComplete";
        } else if (self._rawPrevTime >= 0 && self._first) {
          //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.
          internalForce = true;
        }

        self._rawPrevTime = time;
      } else {
        self._rawPrevTime = self._duration || !suppressEvents || time || self._rawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.

        if (time === 0 && isComplete) {
          //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).
          tween = self._first;

          while (tween && tween._startTime === 0) {
            if (!tween._duration) {
              isComplete = false;
            }

            tween = tween._next;
          }
        }

        time = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)

        if (!self._initted) {
          internalForce = true;
        }
      }
    } else {
      self._totalTime = self._time = self._rawPrevTime = time;
    }

    if ((self._time === prevTime || !self._first) && !force && !internalForce && !pauseTween) {
      return;
    } else if (!self._initted) {
      self._initted = true;
    }

    if (!self._active) if (!self._paused && self._time !== prevTime && time > 0) {
      self._active = true; //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.
    }
    if (prevTime === 0) if (self.vars.onStart) if (self._time !== 0 || !self._duration) if (!suppressEvents) {
      self._callback("onStart");
    }
    curTime = self._time;

    if (curTime >= prevTime) {
      tween = self._first;

      while (tween) {
        next = tween._next; //record it here because the value could change after rendering...

        if (curTime !== self._time || self._paused && !prevPaused) {
          //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
          break;
        } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {
          if (pauseTween === tween) {
            self.pause();
            self._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)
          }

          if (!tween._reversed) {
            tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
          } else {
            tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);
          }
        }

        tween = next;
      }
    } else {
      tween = self._last;

      while (tween) {
        next = tween._prev; //record it here because the value could change after rendering...

        if (curTime !== self._time || self._paused && !prevPaused) {
          //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
          break;
        } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {
          if (pauseTween === tween) {
            pauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.

            while (pauseTween && pauseTween.endTime() > self._time) {
              pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);
              pauseTween = pauseTween._prev;
            }

            pauseTween = null;
            self.pause();
            self._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)
          }

          if (!tween._reversed) {
            tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
          } else {
            tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);
          }
        }

        tween = next;
      }
    }

    if (self._onUpdate) if (!suppressEvents) {
      if (_lazyTweens.length) {
        //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.
        _lazyRender();
      }

      self._callback("onUpdate");
    }
    if (callback) if (!self._gc) if (prevStart === self._startTime || prevTimeScale !== self._timeScale) if (self._time === 0 || totalDur >= self.totalDuration()) {
      //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate
      if (isComplete) {
        if (_lazyTweens.length) {
          //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.
          _lazyRender();
        }

        if (self._timeline.autoRemoveChildren) {
          self._enabled(false, false);
        }

        self._active = false;
      }

      if (!suppressEvents && self.vars[callback]) {
        self._callback(callback);
      }
    }
  };

  p._hasPausedChild = function () {
    var tween = this._first;

    while (tween) {
      if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {
        return true;
      }

      tween = tween._next;
    }

    return false;
  };

  p.getChildren = function (nested, tweens, timelines, ignoreBeforeTime) {
    ignoreBeforeTime = ignoreBeforeTime || -9999999999;
    var a = [],
        tween = this._first,
        cnt = 0;

    while (tween) {
      if (tween._startTime < ignoreBeforeTime) {//do nothing
      } else if (tween instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]) {
        if (tweens !== false) {
          a[cnt++] = tween;
        }
      } else {
        if (timelines !== false) {
          a[cnt++] = tween;
        }

        if (nested !== false) {
          a = a.concat(tween.getChildren(true, tweens, timelines));
          cnt = a.length;
        }
      }

      tween = tween._next;
    }

    return a;
  };

  p.getTweensOf = function (target, nested) {
    var disabled = this._gc,
        a = [],
        cnt = 0,
        tweens,
        i;

    if (disabled) {
      this._enabled(true, true); //getTweensOf() filters out disabled tweens, and we have to mark them as _gc = true when the timeline completes in order to allow clean garbage collection, so temporarily re-enable the timeline here.

    }

    tweens = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].getTweensOf(target);
    i = tweens.length;

    while (--i > -1) {
      if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {
        a[cnt++] = tweens[i];
      }
    }

    if (disabled) {
      this._enabled(false, true);
    }

    return a;
  };

  p.recent = function () {
    return this._recent;
  };

  p._contains = function (tween) {
    var tl = tween.timeline;

    while (tl) {
      if (tl === this) {
        return true;
      }

      tl = tl.timeline;
    }

    return false;
  };

  p.shiftChildren = function (amount, adjustLabels, ignoreBeforeTime) {
    ignoreBeforeTime = ignoreBeforeTime || 0;
    var tween = this._first,
        labels = this._labels,
        p;

    while (tween) {
      if (tween._startTime >= ignoreBeforeTime) {
        tween._startTime += amount;
      }

      tween = tween._next;
    }

    if (adjustLabels) {
      for (p in labels) {
        if (labels[p] >= ignoreBeforeTime) {
          labels[p] += amount;
        }
      }
    }

    return this._uncache(true);
  };

  p._kill = function (vars, target) {
    if (!vars && !target) {
      return this._enabled(false, false);
    }

    var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target),
        i = tweens.length,
        changed = false;

    while (--i > -1) {
      if (tweens[i]._kill(vars, target)) {
        changed = true;
      }
    }

    return changed;
  };

  p.clear = function (labels) {
    var tweens = this.getChildren(false, true, true),
        i = tweens.length;
    this._time = this._totalTime = 0;

    while (--i > -1) {
      tweens[i]._enabled(false, false);
    }

    if (labels !== false) {
      this._labels = {};
    }

    return this._uncache(true);
  };

  p.invalidate = function () {
    var tween = this._first;

    while (tween) {
      tween.invalidate();
      tween = tween._next;
    }

    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */].prototype.invalidate.call(this);
    ;
  };

  p._enabled = function (enabled, ignoreTimeline) {
    if (enabled === this._gc) {
      var tween = this._first;

      while (tween) {
        tween._enabled(enabled, true);

        tween = tween._next;
      }
    }

    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */].prototype._enabled.call(this, enabled, ignoreTimeline);
  };

  p.totalTime = function (time, suppressEvents, uncapped) {
    this._forcingPlayhead = true;
    var val = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */].prototype.totalTime.apply(this, arguments);
    this._forcingPlayhead = false;
    return val;
  };

  p.duration = function (value) {
    if (!arguments.length) {
      if (this._dirty) {
        this.totalDuration(); //just triggers recalculation
      }

      return this._duration;
    }

    if (this.duration() !== 0 && value !== 0) {
      this.timeScale(this._duration / value);
    }

    return this;
  };

  p.totalDuration = function (value) {
    if (!arguments.length) {
      if (this._dirty) {
        var max = 0,
            self = this,
            tween = self._last,
            prevStart = 999999999999,
            prev,
            end;

        while (tween) {
          prev = tween._prev; //record it here in case the tween changes position in the sequence...

          if (tween._dirty) {
            tween.totalDuration(); //could change the tween._startTime, so make sure the tween's cache is clean before analyzing it.
          }

          if (tween._startTime > prevStart && self._sortChildren && !tween._paused && !self._calculatingDuration) {
            //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence
            self._calculatingDuration = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add(), like _parseTimeOrLabel().

            self.add(tween, tween._startTime - tween._delay);
            self._calculatingDuration = 0;
          } else {
            prevStart = tween._startTime;
          }

          if (tween._startTime < 0 && !tween._paused) {
            //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.
            max -= tween._startTime;

            if (self._timeline.smoothChildTiming) {
              self._startTime += tween._startTime / self._timeScale;
              self._time -= tween._startTime;
              self._totalTime -= tween._startTime;
              self._rawPrevTime -= tween._startTime;
            }

            self.shiftChildren(-tween._startTime, false, -9999999999);
            prevStart = 0;
          }

          end = tween._startTime + tween._totalDuration / tween._timeScale;

          if (end > max) {
            max = end;
          }

          tween = prev;
        }

        self._duration = self._totalDuration = max;
        self._dirty = false;
      }

      return this._totalDuration;
    }

    return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;
  };

  p.paused = function (value) {
    if (value === false && this._paused) {
      //if there's a pause directly at the spot from where we're unpausing, skip it.
      var tween = this._first;

      while (tween) {
        if (tween._startTime === this._time && tween.data === "isPause") {
          tween._rawPrevTime = 0; //remember, _rawPrevTime is how zero-duration tweens/callbacks sense directionality and determine whether or not to fire. If _rawPrevTime is the same as _startTime on the next render, it won't fire.
        }

        tween = tween._next;
      }
    }

    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */].prototype.paused.apply(this, arguments);
  };

  p.usesFrames = function () {
    var tl = this._timeline;

    while (tl._timeline) {
      tl = tl._timeline;
    }

    return tl === __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootFramesTimeline;
  };

  p.rawTime = function (wrapRepeats) {
    return wrapRepeats && (this._paused || this._repeat && this.time() > 0 && this.totalProgress() < 1) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(wrapRepeats) - this._startTime) * this._timeScale;
  };

  return TimelineLite;
}, true);

var TimelineLite = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].TimelineLite;


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TimelineMax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimelineMax; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__ = __webpack_require__(18);
/* unused harmony reexport TimelineLite */
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */



__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function () {
  var TimelineMax = function TimelineMax(vars) {
    __WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__["a" /* default */].call(this, vars);
    this._repeat = this.vars.repeat || 0;
    this._repeatDelay = this.vars.repeatDelay || 0;
    this._cycle = 0;
    this._yoyo = !!this.vars.yoyo;
    this._dirty = true;
  },
      _tinyNum = 0.00000001,
      TweenLiteInternals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]._internals,
      _lazyTweens = TweenLiteInternals.lazyTweens,
      _lazyRender = TweenLiteInternals.lazyRender,
      _globals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.globals,
      _easeNone = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */](null, null, 1, 0),
      p = TimelineMax.prototype = new __WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__["a" /* default */]();

  p.constructor = TimelineMax;
  p.kill()._gc = false;
  TimelineMax.version = "2.1.3";

  p.invalidate = function () {
    this._yoyo = !!this.vars.yoyo;
    this._repeat = this.vars.repeat || 0;
    this._repeatDelay = this.vars.repeatDelay || 0;

    this._uncache(true);

    return __WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__["a" /* default */].prototype.invalidate.call(this);
  };

  p.addCallback = function (callback, position, params, scope) {
    return this.add(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0, callback, params, scope), position);
  };

  p.removeCallback = function (callback, position) {
    if (callback) {
      if (position == null) {
        this._kill(null, callback);
      } else {
        var a = this.getTweensOf(callback, false),
            i = a.length,
            time = this._parseTimeOrLabel(position);

        while (--i > -1) {
          if (a[i]._startTime === time) {
            a[i]._enabled(false, false);
          }
        }
      }
    }

    return this;
  };

  p.removePause = function (position) {
    return this.removeCallback(__WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__["a" /* default */]._internals.pauseCallback, position);
  };

  p.tweenTo = function (position, vars) {
    vars = vars || {};
    var copy = {
      ease: _easeNone,
      useFrames: this.usesFrames(),
      immediateRender: false,
      lazy: false
    },
        Engine = vars.repeat && _globals.TweenMax || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */],
        duration,
        p,
        t;

    for (p in vars) {
      copy[p] = vars[p];
    }

    copy.time = this._parseTimeOrLabel(position);
    duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || 0.001;
    t = new Engine(this, duration, copy);

    copy.onStart = function () {
      t.target.paused(true);

      if (t.vars.time !== t.target.time() && duration === t.duration() && !t.isFromTo) {
        //don't make the duration zero - if it's supposed to be zero, don't worry because it's already initting the tween and will complete immediately, effectively making the duration zero anyway. If we make duration zero, the tween won't run at all.
        t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale).render(t.time(), true, true); //render() right away to ensure that things look right, especially in the case of .tweenTo(0).
      }

      if (vars.onStart) {
        //in case the user had an onStart in the vars - we don't want to overwrite it.
        vars.onStart.apply(vars.onStartScope || vars.callbackScope || t, vars.onStartParams || []); //don't use t._callback("onStart") or it'll point to the copy.onStart and we'll get a recursion error.
      }
    };

    return t;
  };

  p.tweenFromTo = function (fromPosition, toPosition, vars) {
    vars = vars || {};
    fromPosition = this._parseTimeOrLabel(fromPosition);
    vars.startAt = {
      onComplete: this.seek,
      onCompleteParams: [fromPosition],
      callbackScope: this
    };
    vars.immediateRender = vars.immediateRender !== false;
    var t = this.tweenTo(toPosition, vars);
    t.isFromTo = 1; //to ensure we don't mess with the duration in the onStart (we've got the start and end values here, so lock it in)

    return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || 0.001);
  };

  p.render = function (time, suppressEvents, force) {
    if (this._gc) {
      this._enabled(true, false);
    }

    var self = this,
        prevTime = self._time,
        totalDur = !self._dirty ? self._totalDuration : self.totalDuration(),
        dur = self._duration,
        prevTotalTime = self._totalTime,
        prevStart = self._startTime,
        prevTimeScale = self._timeScale,
        prevRawPrevTime = self._rawPrevTime,
        prevPaused = self._paused,
        prevCycle = self._cycle,
        tween,
        isComplete,
        next,
        callback,
        internalForce,
        cycleDuration,
        pauseTween,
        curTime,
        pauseTime;

    if (prevTime !== self._time) {
      //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).
      time += self._time - prevTime;
    }

    if (time >= totalDur - _tinyNum && time >= 0) {
      //to work around occasional floating point math artifacts.
      if (!self._locked) {
        self._totalTime = totalDur;
        self._cycle = self._repeat;
      }

      if (!self._reversed) if (!self._hasPausedChild()) {
        isComplete = true;
        callback = "onComplete";
        internalForce = !!self._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.

        if (self._duration === 0) if (time <= 0 && time >= -_tinyNum || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && self._first) {
          internalForce = true;

          if (prevRawPrevTime > _tinyNum) {
            callback = "onReverseComplete";
          }
        }
      }
      self._rawPrevTime = self._duration || !suppressEvents || time || self._rawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.

      if (self._yoyo && self._cycle & 1) {
        self._time = time = 0;
      } else {
        self._time = dur;
        time = dur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7. We cannot do less then 0.0001 because the same issue can occur when the duration is extremely large like 999999999999 in which case adding 0.00000001, for example, causes it to act like nothing was added.
      }
    } else if (time < _tinyNum) {
      //to work around occasional floating point math artifacts, round super small values to 0.
      if (!self._locked) {
        self._totalTime = self._cycle = 0;
      }

      self._time = 0;

      if (time > -_tinyNum) {
        time = 0;
      }

      if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !self._locked) {
        //edge case for checking time < 0 && prevRawPrevTime >= 0: a zero-duration fromTo() tween inside a zero-duration timeline (yeah, very rare)
        callback = "onReverseComplete";
        isComplete = self._reversed;
      }

      if (time < 0) {
        self._active = false;

        if (self._timeline.autoRemoveChildren && self._reversed) {
          internalForce = isComplete = true;
          callback = "onReverseComplete";
        } else if (prevRawPrevTime >= 0 && self._first) {
          //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.
          internalForce = true;
        }

        self._rawPrevTime = time;
      } else {
        self._rawPrevTime = dur || !suppressEvents || time || self._rawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.

        if (time === 0 && isComplete) {
          //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).
          tween = self._first;

          while (tween && tween._startTime === 0) {
            if (!tween._duration) {
              isComplete = false;
            }

            tween = tween._next;
          }
        }

        time = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)

        if (!self._initted) {
          internalForce = true;
        }
      }
    } else {
      if (dur === 0 && prevRawPrevTime < 0) {
        //without this, zero-duration repeating timelines (like with a simple callback nested at the very beginning and a repeatDelay) wouldn't render the first time through.
        internalForce = true;
      }

      self._time = self._rawPrevTime = time;

      if (!self._locked) {
        self._totalTime = time;

        if (self._repeat !== 0) {
          cycleDuration = dur + self._repeatDelay;
          self._cycle = self._totalTime / cycleDuration >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but it gets reported as 0.79999999!)

          if (self._cycle) if (self._cycle === self._totalTime / cycleDuration && prevTotalTime <= time) {
            self._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)
          }
          self._time = self._totalTime - self._cycle * cycleDuration;
          if (self._yoyo) if (self._cycle & 1) {
            self._time = dur - self._time;
          }

          if (self._time > dur) {
            self._time = dur;
            time = dur + 0.0001; //to avoid occasional floating point rounding error
          } else if (self._time < 0) {
            self._time = time = 0;
          } else {
            time = self._time;
          }
        }
      }
    }

    if (self._hasPause && !self._forcingPlayhead && !suppressEvents) {
      time = self._time;

      if (time > prevTime || self._repeat && prevCycle !== self._cycle) {
        tween = self._first;

        while (tween && tween._startTime <= time && !pauseTween) {
          if (!tween._duration) if (tween.data === "isPause" && !tween.ratio && !(tween._startTime === 0 && self._rawPrevTime === 0)) {
            pauseTween = tween;
          }
          tween = tween._next;
        }
      } else {
        tween = self._last;

        while (tween && tween._startTime >= time && !pauseTween) {
          if (!tween._duration) if (tween.data === "isPause" && tween._rawPrevTime > 0) {
            pauseTween = tween;
          }
          tween = tween._prev;
        }
      }

      if (pauseTween) {
        pauseTime = self._startTime + (self._reversed ? self._duration - pauseTween._startTime : pauseTween._startTime) / self._timeScale;

        if (pauseTween._startTime < dur) {
          self._time = self._rawPrevTime = time = pauseTween._startTime;
          self._totalTime = time + self._cycle * (self._totalDuration + self._repeatDelay);
        }
      }
    }

    if (self._cycle !== prevCycle) if (!self._locked) {
      /*
      make sure children at the end/beginning of the timeline are rendered properly. If, for example,
      a 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which
      would get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there
      could be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So
      we need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must
      ensure that zero-duration tweens at the very beginning or end of the TimelineMax work.
      */
      var backwards = self._yoyo && (prevCycle & 1) !== 0,
          wrap = backwards === (self._yoyo && (self._cycle & 1) !== 0),
          recTotalTime = self._totalTime,
          recCycle = self._cycle,
          recRawPrevTime = self._rawPrevTime,
          recTime = self._time;
      self._totalTime = prevCycle * dur;

      if (self._cycle < prevCycle) {
        backwards = !backwards;
      } else {
        self._totalTime += dur;
      }

      self._time = prevTime; //temporarily revert _time so that render() renders the children in the correct order. Without this, tweens won't rewind correctly. We could arhictect things in a "cleaner" way by splitting out the rendering queue into a separate method but for performance reasons, we kept it all inside this method.

      self._rawPrevTime = dur === 0 ? prevRawPrevTime - 0.0001 : prevRawPrevTime;
      self._cycle = prevCycle;
      self._locked = true; //prevents changes to totalTime and skips repeat/yoyo behavior when we recursively call render()

      prevTime = backwards ? 0 : dur;
      self.render(prevTime, suppressEvents, dur === 0);
      if (!suppressEvents) if (!self._gc) {
        if (self.vars.onRepeat) {
          self._cycle = recCycle; //in case the onRepeat alters the playhead or invalidates(), we shouldn't stay locked or use the previous cycle.

          self._locked = false;

          self._callback("onRepeat");
        }
      }

      if (prevTime !== self._time) {
        //in case there's a callback like onComplete in a nested tween/timeline that changes the playhead position, like via seek(), we should just abort.
        return;
      }

      if (wrap) {
        self._cycle = prevCycle; //if there's an onRepeat, we reverted this above, so make sure it's set properly again. We also unlocked in that scenario, so reset that too.

        self._locked = true;
        prevTime = backwards ? dur + 0.0001 : -0.0001;
        self.render(prevTime, true, false);
      }

      self._locked = false;

      if (self._paused && !prevPaused) {
        //if the render() triggered callback that paused this timeline, we should abort (very rare, but possible)
        return;
      }

      self._time = recTime;
      self._totalTime = recTotalTime;
      self._cycle = recCycle;
      self._rawPrevTime = recRawPrevTime;
    }

    if ((self._time === prevTime || !self._first) && !force && !internalForce && !pauseTween) {
      if (prevTotalTime !== self._totalTime) if (self._onUpdate) if (!suppressEvents) {
        //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.
        self._callback("onUpdate");
      }
      return;
    } else if (!self._initted) {
      self._initted = true;
    }

    if (!self._active) if (!self._paused && self._totalTime !== prevTotalTime && time > 0) {
      self._active = true; //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.
    }
    if (prevTotalTime === 0) if (self.vars.onStart) if (self._totalTime !== 0 || !self._totalDuration) if (!suppressEvents) {
      self._callback("onStart");
    }
    curTime = self._time;

    if (curTime >= prevTime) {
      tween = self._first;

      while (tween) {
        next = tween._next; //record it here because the value could change after rendering...

        if (curTime !== self._time || self._paused && !prevPaused) {
          //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
          break;
        } else if (tween._active || tween._startTime <= self._time && !tween._paused && !tween._gc) {
          if (pauseTween === tween) {
            self.pause();
            self._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)
          }

          if (!tween._reversed) {
            tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
          } else {
            tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);
          }
        }

        tween = next;
      }
    } else {
      tween = self._last;

      while (tween) {
        next = tween._prev; //record it here because the value could change after rendering...

        if (curTime !== self._time || self._paused && !prevPaused) {
          //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
          break;
        } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {
          if (pauseTween === tween) {
            pauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.

            while (pauseTween && pauseTween.endTime() > self._time) {
              pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);
              pauseTween = pauseTween._prev;
            }

            pauseTween = null;
            self.pause();
            self._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)
          }

          if (!tween._reversed) {
            tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
          } else {
            tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);
          }
        }

        tween = next;
      }
    }

    if (self._onUpdate) if (!suppressEvents) {
      if (_lazyTweens.length) {
        //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.
        _lazyRender();
      }

      self._callback("onUpdate");
    }
    if (callback) if (!self._locked) if (!self._gc) if (prevStart === self._startTime || prevTimeScale !== self._timeScale) if (self._time === 0 || totalDur >= self.totalDuration()) {
      //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate
      if (isComplete) {
        if (_lazyTweens.length) {
          //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.
          _lazyRender();
        }

        if (self._timeline.autoRemoveChildren) {
          self._enabled(false, false);
        }

        self._active = false;
      }

      if (!suppressEvents && self.vars[callback]) {
        self._callback(callback);
      }
    }
  };

  p.getActive = function (nested, tweens, timelines) {
    var a = [],
        all = this.getChildren(nested || nested == null, tweens || nested == null, !!timelines),
        cnt = 0,
        l = all.length,
        i,
        tween;

    for (i = 0; i < l; i++) {
      tween = all[i];

      if (tween.isActive()) {
        a[cnt++] = tween;
      }
    }

    return a;
  };

  p.getLabelAfter = function (time) {
    if (!time) if (time !== 0) {
      //faster than isNan()
      time = this._time;
    }
    var labels = this.getLabelsArray(),
        l = labels.length,
        i;

    for (i = 0; i < l; i++) {
      if (labels[i].time > time) {
        return labels[i].name;
      }
    }

    return null;
  };

  p.getLabelBefore = function (time) {
    if (time == null) {
      time = this._time;
    }

    var labels = this.getLabelsArray(),
        i = labels.length;

    while (--i > -1) {
      if (labels[i].time < time) {
        return labels[i].name;
      }
    }

    return null;
  };

  p.getLabelsArray = function () {
    var a = [],
        cnt = 0,
        p;

    for (p in this._labels) {
      a[cnt++] = {
        time: this._labels[p],
        name: p
      };
    }

    a.sort(function (a, b) {
      return a.time - b.time;
    });
    return a;
  };

  p.invalidate = function () {
    this._locked = false; //unlock and set cycle in case invalidate() is called from inside an onRepeat

    return __WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__["a" /* default */].prototype.invalidate.call(this);
  }; //---- GETTERS / SETTERS -------------------------------------------------------------------------------------------------------


  p.progress = function (value, suppressEvents) {
    return !arguments.length ? this._time / this.duration() || 0 : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);
  };

  p.totalProgress = function (value, suppressEvents) {
    return !arguments.length ? this._totalTime / this.totalDuration() || 0 : this.totalTime(this.totalDuration() * value, suppressEvents);
  };

  p.totalDuration = function (value) {
    if (!arguments.length) {
      if (this._dirty) {
        __WEBPACK_IMPORTED_MODULE_1__TimelineLite_js__["a" /* default */].prototype.totalDuration.call(this); //just forces refresh
        //Instead of Infinity, we use 999999999999 so that we can accommodate reverses.

        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;
      }

      return this._totalDuration;
    }

    return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);
  };

  p.time = function (value, suppressEvents) {
    if (!arguments.length) {
      return this._time;
    }

    if (this._dirty) {
      this.totalDuration();
    }

    var duration = this._duration,
        cycle = this._cycle,
        cycleDur = cycle * (duration + this._repeatDelay);

    if (value > duration) {
      value = duration;
    }

    return this.totalTime(this._yoyo && cycle & 1 ? duration - value + cycleDur : this._repeat ? value + cycleDur : value, suppressEvents);
  };

  p.repeat = function (value) {
    if (!arguments.length) {
      return this._repeat;
    }

    this._repeat = value;
    return this._uncache(true);
  };

  p.repeatDelay = function (value) {
    if (!arguments.length) {
      return this._repeatDelay;
    }

    this._repeatDelay = value;
    return this._uncache(true);
  };

  p.yoyo = function (value) {
    if (!arguments.length) {
      return this._yoyo;
    }

    this._yoyo = value;
    return this;
  };

  p.currentLabel = function (value) {
    if (!arguments.length) {
      return this.getLabelBefore(this._time + _tinyNum);
    }

    return this.seek(value, true);
  };

  return TimelineMax;
}, true);

var TimelineMax = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].TimelineMax;


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TweenMaxBase_js__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__TimelineLite_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__TimelineMax_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__AttrPlugin_js__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BezierPlugin_js__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ColorPropsPlugin_js__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__CSSPlugin_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__CSSRulePlugin_js__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__DirectionalRotationPlugin_js__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__EaselPlugin_js__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__EndArrayPlugin_js__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ModifiersPlugin_js__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__PixiPlugin_js__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__RoundPropsPlugin_js__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ScrollToPlugin_js__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__TextPlugin_js__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__Draggable_js__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__EasePack_js__ = __webpack_require__(30);
/* unused harmony reexport TweenLite */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__TweenMaxBase_js__["a"]; });
/* unused harmony reexport TimelineLite */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_3__TimelineMax_js__["a"]; });
/* unused harmony reexport _gsScope */
/* unused harmony reexport AttrPlugin */
/* unused harmony reexport BezierPlugin */
/* unused harmony reexport ColorPropsPlugin */
/* unused harmony reexport CSSPlugin */
/* unused harmony reexport CSSRulePlugin */
/* unused harmony reexport DirectionalRotationPlugin */
/* unused harmony reexport EaselPlugin */
/* unused harmony reexport EndArrayPlugin */
/* unused harmony reexport ModifiersPlugin */
/* unused harmony reexport PixiPlugin */
/* unused harmony reexport RoundPropsPlugin */
/* unused harmony reexport ScrollToPlugin */
/* unused harmony reexport TextPlugin */
/* unused harmony reexport Draggable */
/* unused harmony reexport Ease */
/* unused harmony reexport Power0 */
/* unused harmony reexport Power1 */
/* unused harmony reexport Power2 */
/* unused harmony reexport Power3 */
/* unused harmony reexport Power4 */
/* unused harmony reexport Linear */
/* unused harmony reexport Back */
/* unused harmony reexport Elastic */
/* unused harmony reexport Bounce */
/* unused harmony reexport RoughEase */
/* unused harmony reexport SlowMo */
/* unused harmony reexport SteppedEase */
/* unused harmony reexport Circ */
/* unused harmony reexport Expo */
/* unused harmony reexport Sine */
/* unused harmony reexport ExpoScaleEase */
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 **/



 // plugins













 // utils

 // easing

 // bonus tools

/*
import DrawSVGPlugin from "./DrawSVGPlugin.js";
import MorphSVGPlugin from "./MorphSVGPlugin.js";
import Physics2DPlugin from "./Physics2DPlugin.js";
import PhysicsPropsPlugin from "./PhysicsPropsPlugin.js";
import ScrambleTextPlugin from "./ScrambleTextPlugin.js";
import ThrowPropsPlugin from "./ThrowPropsPlugin.js";
import GSDevTools from "./GSDevTools.js";
import SplitText from "./SplitText.js";
import CustomBounce from "./CustomBounce.js";
import CustomEase from "./CustomEase.js";
import CustomWiggle from "./CustomWiggle.js";

export {
	DrawSVGPlugin,
	MorphSVGPlugin,
	Physics2DPlugin,
	PhysicsPropsPlugin,
	ScrambleTextPlugin,
	ThrowPropsPlugin,
	GSDevTools,
	SplitText,
	CustomBounce,
	CustomEase,
	CustomWiggle
}
*/



/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(3),
    root = __webpack_require__(2);
/* Built-in method references that are verified to be native. */


var Map = getNative(root, 'Map');
module.exports = Map;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(2);
/** Built-in value references. */


var Symbol = root.Symbol;
module.exports = Symbol;

/***/ }),
/* 23 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;
module.exports = isArray;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

!function (t, n) {
   true ? module.exports = n() : "function" == typeof define && define.amd ? define(n) : (t = t || self).barba = n();
}(this, function () {
  function t(t, n) {
    for (var r = 0; r < n.length; r++) {
      var e = n[r];
      e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), Object.defineProperty(t, e.key, e);
    }
  }

  function n(n, r, e) {
    return r && t(n.prototype, r), e && t(n, e), n;
  }

  function r() {
    return (r = Object.assign || function (t) {
      for (var n = 1; n < arguments.length; n++) {
        var r = arguments[n];

        for (var e in r) Object.prototype.hasOwnProperty.call(r, e) && (t[e] = r[e]);
      }

      return t;
    }).apply(this, arguments);
  }

  function e(t, n) {
    t.prototype = Object.create(n.prototype), t.prototype.constructor = t, t.__proto__ = n;
  }

  function i(t) {
    return (i = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
      return t.__proto__ || Object.getPrototypeOf(t);
    })(t);
  }

  function o(t, n) {
    return (o = Object.setPrototypeOf || function (t, n) {
      return t.__proto__ = n, t;
    })(t, n);
  }

  function u(t, n, r) {
    return (u = function () {
      if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ("function" == typeof Proxy) return !0;

      try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }() ? Reflect.construct : function (t, n, r) {
      var e = [null];
      e.push.apply(e, n);
      var i = new (Function.bind.apply(t, e))();
      return r && o(i, r.prototype), i;
    }).apply(null, arguments);
  }

  function f(t) {
    var n = "function" == typeof Map ? new Map() : void 0;
    return (f = function f(t) {
      if (null === t || -1 === Function.toString.call(t).indexOf("[native code]")) return t;
      if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");

      if (void 0 !== n) {
        if (n.has(t)) return n.get(t);
        n.set(t, r);
      }

      function r() {
        return u(t, arguments, i(this).constructor);
      }

      return r.prototype = Object.create(t.prototype, {
        constructor: {
          value: r,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), o(r, t);
    })(t);
  }

  function s(t, n) {
    try {
      var r = t();
    } catch (t) {
      return n(t);
    }

    return r && r.then ? r.then(void 0, n) : r;
  }

  "undefined" != typeof Symbol && (Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator"))), "undefined" != typeof Symbol && (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")));

  var c,
      a = "2.9.6",
      h = function h() {};

  !function (t) {
    t[t.off = 0] = "off", t[t.error = 1] = "error", t[t.warning = 2] = "warning", t[t.info = 3] = "info", t[t.debug = 4] = "debug";
  }(c || (c = {}));

  var v = c.off,
      l = function () {
    function t(t) {
      this.t = t;
    }

    t.getLevel = function () {
      return v;
    }, t.setLevel = function (t) {
      return v = c[t];
    };
    var n = t.prototype;
    return n.error = function () {
      for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];

      this.i(console.error, c.error, n);
    }, n.warn = function () {
      for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];

      this.i(console.warn, c.warning, n);
    }, n.info = function () {
      for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];

      this.i(console.info, c.info, n);
    }, n.debug = function () {
      for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];

      this.i(console.log, c.debug, n);
    }, n.i = function (n, r, e) {
      r <= t.getLevel() && n.apply(console, ["[" + this.t + "] "].concat(e));
    }, t;
  }(),
      d = O,
      m = E,
      p = g,
      w = x,
      b = T,
      y = "/",
      P = new RegExp(["(\\\\.)", "(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?"].join("|"), "g");

  function g(t, n) {
    for (var r, e = [], i = 0, o = 0, u = "", f = n && n.delimiter || y, s = n && n.whitelist || void 0, c = !1; null !== (r = P.exec(t));) {
      var a = r[0],
          h = r[1],
          v = r.index;
      if (u += t.slice(o, v), o = v + a.length, h) u += h[1], c = !0;else {
        var l = "",
            d = r[2],
            m = r[3],
            p = r[4],
            w = r[5];

        if (!c && u.length) {
          var b = u.length - 1,
              g = u[b];
          (!s || s.indexOf(g) > -1) && (l = g, u = u.slice(0, b));
        }

        u && (e.push(u), u = "", c = !1);
        var E = m || p,
            x = l || f;
        e.push({
          name: d || i++,
          prefix: l,
          delimiter: x,
          optional: "?" === w || "*" === w,
          repeat: "+" === w || "*" === w,
          pattern: E ? A(E) : "[^" + k(x === f ? x : x + f) + "]+?"
        });
      }
    }

    return (u || o < t.length) && e.push(u + t.substr(o)), e;
  }

  function E(t, n) {
    return function (r, e) {
      var i = t.exec(r);
      if (!i) return !1;

      for (var o = i[0], u = i.index, f = {}, s = e && e.decode || decodeURIComponent, c = 1; c < i.length; c++) if (void 0 !== i[c]) {
        var a = n[c - 1];
        f[a.name] = a.repeat ? i[c].split(a.delimiter).map(function (t) {
          return s(t, a);
        }) : s(i[c], a);
      }

      return {
        path: o,
        index: u,
        params: f
      };
    };
  }

  function x(t, n) {
    for (var r = new Array(t.length), e = 0; e < t.length; e++) "object" == typeof t[e] && (r[e] = new RegExp("^(?:" + t[e].pattern + ")$", R(n)));

    return function (n, e) {
      for (var i = "", o = e && e.encode || encodeURIComponent, u = !e || !1 !== e.validate, f = 0; f < t.length; f++) {
        var s = t[f];

        if ("string" != typeof s) {
          var c,
              a = n ? n[s.name] : void 0;

          if (Array.isArray(a)) {
            if (!s.repeat) throw new TypeError('Expected "' + s.name + '" to not repeat, but got array');

            if (0 === a.length) {
              if (s.optional) continue;
              throw new TypeError('Expected "' + s.name + '" to not be empty');
            }

            for (var h = 0; h < a.length; h++) {
              if (c = o(a[h], s), u && !r[f].test(c)) throw new TypeError('Expected all "' + s.name + '" to match "' + s.pattern + '"');
              i += (0 === h ? s.prefix : s.delimiter) + c;
            }
          } else if ("string" != typeof a && "number" != typeof a && "boolean" != typeof a) {
            if (!s.optional) throw new TypeError('Expected "' + s.name + '" to be ' + (s.repeat ? "an array" : "a string"));
          } else {
            if (c = o(String(a), s), u && !r[f].test(c)) throw new TypeError('Expected "' + s.name + '" to match "' + s.pattern + '", but got "' + c + '"');
            i += s.prefix + c;
          }
        } else i += s;
      }

      return i;
    };
  }

  function k(t) {
    return t.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
  }

  function A(t) {
    return t.replace(/([=!:$/()])/g, "\\$1");
  }

  function R(t) {
    return t && t.sensitive ? "" : "i";
  }

  function T(t, n, r) {
    for (var e = (r = r || {}).strict, i = !1 !== r.start, o = !1 !== r.end, u = r.delimiter || y, f = [].concat(r.endsWith || []).map(k).concat("$").join("|"), s = i ? "^" : "", c = 0; c < t.length; c++) {
      var a = t[c];
      if ("string" == typeof a) s += k(a);else {
        var h = a.repeat ? "(?:" + a.pattern + ")(?:" + k(a.delimiter) + "(?:" + a.pattern + "))*" : a.pattern;
        n && n.push(a), s += a.optional ? a.prefix ? "(?:" + k(a.prefix) + "(" + h + "))?" : "(" + h + ")?" : k(a.prefix) + "(" + h + ")";
      }
    }

    if (o) e || (s += "(?:" + k(u) + ")?"), s += "$" === f ? "$" : "(?=" + f + ")";else {
      var v = t[t.length - 1],
          l = "string" == typeof v ? v[v.length - 1] === u : void 0 === v;
      e || (s += "(?:" + k(u) + "(?=" + f + "))?"), l || (s += "(?=" + k(u) + "|" + f + ")");
    }
    return new RegExp(s, R(r));
  }

  function O(t, n, r) {
    return t instanceof RegExp ? function (t, n) {
      if (!n) return t;
      var r = t.source.match(/\((?!\?)/g);
      if (r) for (var e = 0; e < r.length; e++) n.push({
        name: e,
        prefix: null,
        delimiter: null,
        optional: !1,
        repeat: !1,
        pattern: null
      });
      return t;
    }(t, n) : Array.isArray(t) ? function (t, n, r) {
      for (var e = [], i = 0; i < t.length; i++) e.push(O(t[i], n, r).source);

      return new RegExp("(?:" + e.join("|") + ")", R(r));
    }(t, n, r) : function (t, n, r) {
      return T(g(t, r), n, r);
    }(t, n, r);
  }

  d.match = function (t, n) {
    var r = [];
    return E(O(t, r, n), r);
  }, d.regexpToFunction = m, d.parse = p, d.compile = function (t, n) {
    return x(g(t, n), n);
  }, d.tokensToFunction = w, d.tokensToRegExp = b;

  var S = {
    container: "container",
    history: "history",
    namespace: "namespace",
    prefix: "data-barba",
    prevent: "prevent",
    wrapper: "wrapper"
  },
      j = new (function () {
    function t() {
      this.o = S, this.u = new DOMParser();
    }

    var n = t.prototype;
    return n.toString = function (t) {
      return t.outerHTML;
    }, n.toDocument = function (t) {
      return this.u.parseFromString(t, "text/html");
    }, n.toElement = function (t) {
      var n = document.createElement("div");
      return n.innerHTML = t, n;
    }, n.getHtml = function (t) {
      return void 0 === t && (t = document), this.toString(t.documentElement);
    }, n.getWrapper = function (t) {
      return void 0 === t && (t = document), t.querySelector("[" + this.o.prefix + '="' + this.o.wrapper + '"]');
    }, n.getContainer = function (t) {
      return void 0 === t && (t = document), t.querySelector("[" + this.o.prefix + '="' + this.o.container + '"]');
    }, n.removeContainer = function (t) {
      document.body.contains(t) && t.parentNode.removeChild(t);
    }, n.addContainer = function (t, n) {
      var r = this.getContainer();
      r ? this.s(t, r) : n.appendChild(t);
    }, n.getNamespace = function (t) {
      void 0 === t && (t = document);
      var n = t.querySelector("[" + this.o.prefix + "-" + this.o.namespace + "]");
      return n ? n.getAttribute(this.o.prefix + "-" + this.o.namespace) : null;
    }, n.getHref = function (t) {
      if (t.tagName && "a" === t.tagName.toLowerCase()) {
        if ("string" == typeof t.href) return t.href;
        var n = t.getAttribute("href") || t.getAttribute("xlink:href");
        if (n) return this.resolveUrl(n.baseVal || n);
      }

      return null;
    }, n.resolveUrl = function () {
      for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];

      var e = n.length;
      if (0 === e) throw new Error("resolveUrl requires at least one argument; got none.");
      var i = document.createElement("base");
      if (i.href = arguments[0], 1 === e) return i.href;
      var o = document.getElementsByTagName("head")[0];
      o.insertBefore(i, o.firstChild);

      for (var u, f = document.createElement("a"), s = 1; s < e; s++) f.href = arguments[s], i.href = u = f.href;

      return o.removeChild(i), u;
    }, n.s = function (t, n) {
      n.parentNode.insertBefore(t, n.nextSibling);
    }, t;
  }())(),
      M = new (function () {
    function t() {
      this.h = [], this.v = -1;
    }

    var e = t.prototype;
    return e.init = function (t, n) {
      this.l = "barba";
      var r = {
        ns: n,
        scroll: {
          x: window.scrollX,
          y: window.scrollY
        },
        url: t
      };
      this.h.push(r), this.v = 0;
      var e = {
        from: this.l,
        index: 0,
        states: [].concat(this.h)
      };
      window.history && window.history.replaceState(e, "", t);
    }, e.change = function (t, n, r) {
      if (r && r.state) {
        var e = r.state,
            i = e.index;
        n = this.m(this.v - i), this.replace(e.states), this.v = i;
      } else this.add(t, n);

      return n;
    }, e.add = function (t, n) {
      var r = this.size,
          e = this.p(n),
          i = {
        ns: "tmp",
        scroll: {
          x: window.scrollX,
          y: window.scrollY
        },
        url: t
      };
      this.h.push(i), this.v = r;
      var o = {
        from: this.l,
        index: r,
        states: [].concat(this.h)
      };

      switch (e) {
        case "push":
          window.history && window.history.pushState(o, "", t);
          break;

        case "replace":
          window.history && window.history.replaceState(o, "", t);
      }
    }, e.update = function (t, n) {
      var e = n || this.v,
          i = r({}, this.get(e), {}, t);
      this.set(e, i);
    }, e.remove = function (t) {
      t ? this.h.splice(t, 1) : this.h.pop(), this.v--;
    }, e.clear = function () {
      this.h = [], this.v = -1;
    }, e.replace = function (t) {
      this.h = t;
    }, e.get = function (t) {
      return this.h[t];
    }, e.set = function (t, n) {
      return this.h[t] = n;
    }, e.p = function (t) {
      var n = "push",
          r = t,
          e = S.prefix + "-" + S.history;
      return r.hasAttribute && r.hasAttribute(e) && (n = r.getAttribute(e)), n;
    }, e.m = function (t) {
      return Math.abs(t) > 1 ? t > 0 ? "forward" : "back" : 0 === t ? "popstate" : t > 0 ? "back" : "forward";
    }, n(t, [{
      key: "current",
      get: function get() {
        return this.h[this.v];
      }
    }, {
      key: "state",
      get: function get() {
        return this.h[this.h.length - 1];
      }
    }, {
      key: "previous",
      get: function get() {
        return this.v < 1 ? null : this.h[this.v - 1];
      }
    }, {
      key: "size",
      get: function get() {
        return this.h.length;
      }
    }]), t;
  }())(),
      L = function L(t, n) {
    try {
      var r = function () {
        if (!n.next.html) return Promise.resolve(t).then(function (t) {
          var r = n.next;

          if (t) {
            var e = j.toElement(t);
            r.namespace = j.getNamespace(e), r.container = j.getContainer(e), r.html = t, M.update({
              ns: r.namespace
            });
            var i = j.toDocument(t);
            document.title = i.title;
          }
        });
      }();

      return Promise.resolve(r && r.then ? r.then(function () {}) : void 0);
    } catch (t) {
      return Promise.reject(t);
    }
  },
      $ = d,
      _ = {
    __proto__: null,
    update: L,
    nextTick: function nextTick() {
      return new Promise(function (t) {
        window.requestAnimationFrame(t);
      });
    },
    pathToRegexp: $
  },
      q = function q() {
    return window.location.origin;
  },
      B = function B(t) {
    return void 0 === t && (t = window.location.href), U(t).port;
  },
      U = function U(t) {
    var n,
        r = t.match(/:\d+/);
    if (null === r) /^http/.test(t) && (n = 80), /^https/.test(t) && (n = 443);else {
      var e = r[0].substring(1);
      n = parseInt(e, 10);
    }
    var i,
        o = t.replace(q(), ""),
        u = {},
        f = o.indexOf("#");
    f >= 0 && (i = o.slice(f + 1), o = o.slice(0, f));
    var s = o.indexOf("?");
    return s >= 0 && (u = D(o.slice(s + 1)), o = o.slice(0, s)), {
      hash: i,
      path: o,
      port: n,
      query: u
    };
  },
      D = function D(t) {
    return t.split("&").reduce(function (t, n) {
      var r = n.split("=");
      return t[r[0]] = r[1], t;
    }, {});
  },
      F = function F(t) {
    return void 0 === t && (t = window.location.href), t.replace(/(\/#.*|\/|#.*)$/, "");
  },
      H = {
    __proto__: null,
    getHref: function getHref() {
      return window.location.href;
    },
    getOrigin: q,
    getPort: B,
    getPath: function getPath(t) {
      return void 0 === t && (t = window.location.href), U(t).path;
    },
    parse: U,
    parseQuery: D,
    clean: F
  };

  function I(t, n, r) {
    return void 0 === n && (n = 2e3), new Promise(function (e, i) {
      var o = new XMLHttpRequest();
      o.onreadystatechange = function () {
        if (o.readyState === XMLHttpRequest.DONE) if (200 === o.status) e(o.responseText);else if (o.status) {
          var n = {
            status: o.status,
            statusText: o.statusText
          };
          r(t, n), i(n);
        }
      }, o.ontimeout = function () {
        var e = new Error("Timeout error [" + n + "]");
        r(t, e), i(e);
      }, o.onerror = function () {
        var n = new Error("Fetch error");
        r(t, n), i(n);
      }, o.open("GET", t), o.timeout = n, o.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml"), o.setRequestHeader("x-barba", "yes"), o.send();
    });
  }

  var C = function C(t) {
    return !!t && ("object" == typeof t || "function" == typeof t) && "function" == typeof t.then;
  };

  function N(t, n) {
    return void 0 === n && (n = {}), function () {
      for (var r = arguments.length, e = new Array(r), i = 0; i < r; i++) e[i] = arguments[i];

      var o = !1,
          u = new Promise(function (r, i) {
        n.async = function () {
          return o = !0, function (t, n) {
            t ? i(t) : r(n);
          };
        };

        var u = t.apply(n, e);
        o || (C(u) ? u.then(r, i) : r(u));
      });
      return u;
    };
  }

  var X = new (function (t) {
    function n() {
      var n;
      return (n = t.call(this) || this).logger = new l("@barba/core"), n.all = ["ready", "page", "reset", "currentAdded", "currentRemoved", "nextAdded", "nextRemoved", "beforeOnce", "once", "afterOnce", "before", "beforeLeave", "leave", "afterLeave", "beforeEnter", "enter", "afterEnter", "after"], n.registered = new Map(), n.init(), n;
    }

    e(n, t);
    var r = n.prototype;
    return r.init = function () {
      var t = this;
      this.registered.clear(), this.all.forEach(function (n) {
        t[n] || (t[n] = function (r, e) {
          t.registered.has(n) || t.registered.set(n, new Set()), t.registered.get(n).add({
            ctx: e || {},
            fn: r
          });
        });
      });
    }, r.do = function (t) {
      for (var n = this, r = arguments.length, e = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) e[i - 1] = arguments[i];

      if (this.registered.has(t)) {
        var o = Promise.resolve();
        return this.registered.get(t).forEach(function (t) {
          o = o.then(function () {
            return N(t.fn, t.ctx).apply(void 0, e);
          });
        }), o.catch(function (r) {
          n.logger.debug("Hook error [" + t + "]"), n.logger.error(r);
        });
      }

      return Promise.resolve();
    }, r.clear = function () {
      var t = this;
      this.all.forEach(function (n) {
        delete t[n];
      }), this.init();
    }, r.help = function () {
      this.logger.info("Available hooks: " + this.all.join(","));
      var t = [];
      this.registered.forEach(function (n, r) {
        return t.push(r);
      }), this.logger.info("Registered hooks: " + t.join(","));
    }, n;
  }(h))(),
      z = function () {
    function t(t) {
      if (this.P = [], "boolean" == typeof t) this.g = t;else {
        var n = Array.isArray(t) ? t : [t];
        this.P = n.map(function (t) {
          return $(t);
        });
      }
    }

    return t.prototype.checkHref = function (t) {
      if ("boolean" == typeof this.g) return this.g;
      var n = U(t).path;
      return this.P.some(function (t) {
        return null !== t.exec(n);
      });
    }, t;
  }(),
      G = function (t) {
    function n(n) {
      var r;
      return (r = t.call(this, n) || this).k = new Map(), r;
    }

    e(n, t);
    var i = n.prototype;
    return i.set = function (t, n, r) {
      return this.k.set(t, {
        action: r,
        request: n
      }), {
        action: r,
        request: n
      };
    }, i.get = function (t) {
      return this.k.get(t);
    }, i.getRequest = function (t) {
      return this.k.get(t).request;
    }, i.getAction = function (t) {
      return this.k.get(t).action;
    }, i.has = function (t) {
      return !this.checkHref(t) && this.k.has(t);
    }, i.delete = function (t) {
      return this.k.delete(t);
    }, i.update = function (t, n) {
      var e = r({}, this.k.get(t), {}, n);
      return this.k.set(t, e), e;
    }, n;
  }(z),
      Q = function Q() {
    return !window.history.pushState;
  },
      W = function W(t) {
    return !t.el || !t.href;
  },
      J = function J(t) {
    var n = t.event;
    return n.which > 1 || n.metaKey || n.ctrlKey || n.shiftKey || n.altKey;
  },
      K = function K(t) {
    var n = t.el;
    return n.hasAttribute("target") && "_blank" === n.target;
  },
      V = function V(t) {
    var n = t.el;
    return void 0 !== n.protocol && window.location.protocol !== n.protocol || void 0 !== n.hostname && window.location.hostname !== n.hostname;
  },
      Y = function Y(t) {
    var n = t.el;
    return void 0 !== n.port && B() !== B(n.href);
  },
      Z = function Z(t) {
    var n = t.el;
    return n.getAttribute && "string" == typeof n.getAttribute("download");
  },
      tt = function tt(t) {
    return t.el.hasAttribute(S.prefix + "-" + S.prevent);
  },
      nt = function nt(t) {
    return Boolean(t.el.closest("[" + S.prefix + "-" + S.prevent + '="all"]'));
  },
      rt = function rt(t) {
    var n = t.href;
    return F(n) === F() && B(n) === B();
  },
      et = function (t) {
    function n(n) {
      var r;
      return (r = t.call(this, n) || this).suite = [], r.tests = new Map(), r.init(), r;
    }

    e(n, t);
    var r = n.prototype;
    return r.init = function () {
      this.add("pushState", Q), this.add("exists", W), this.add("newTab", J), this.add("blank", K), this.add("corsDomain", V), this.add("corsPort", Y), this.add("download", Z), this.add("preventSelf", tt), this.add("preventAll", nt), this.add("sameUrl", rt, !1);
    }, r.add = function (t, n, r) {
      void 0 === r && (r = !0), this.tests.set(t, n), r && this.suite.push(t);
    }, r.run = function (t, n, r, e) {
      return this.tests.get(t)({
        el: n,
        event: r,
        href: e
      });
    }, r.checkLink = function (t, n, r) {
      var e = this;
      return this.suite.some(function (i) {
        return e.run(i, t, n, r);
      });
    }, n;
  }(z),
      it = function (t) {
    function n(r, e) {
      var i;
      void 0 === e && (e = "Barba error");

      for (var o = arguments.length, u = new Array(o > 2 ? o - 2 : 0), f = 2; f < o; f++) u[f - 2] = arguments[f];

      return (i = t.call.apply(t, [this].concat(u)) || this).error = r, i.label = e, Error.captureStackTrace && Error.captureStackTrace(function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(i), n), i.name = "BarbaError", i;
    }

    return e(n, t), n;
  }(f(Error)),
      ot = function () {
    function t(t) {
      void 0 === t && (t = []), this.logger = new l("@barba/core"), this.all = [], this.once = [], this.A = [{
        name: "namespace",
        type: "strings"
      }, {
        name: "custom",
        type: "function"
      }], t && (this.all = this.all.concat(t)), this.update();
    }

    var n = t.prototype;
    return n.add = function (t, n) {
      switch (t) {
        case "rule":
          this.A.splice(n.position || 0, 0, n.value);
          break;

        case "transition":
        default:
          this.all.push(n);
      }

      this.update();
    }, n.resolve = function (t, n) {
      var r = this;
      void 0 === n && (n = {});
      var e = n.once ? this.once : this.all;
      e = e.filter(n.self ? function (t) {
        return t.name && "self" === t.name;
      } : function (t) {
        return !t.name || "self" !== t.name;
      });
      var i = new Map(),
          o = e.find(function (e) {
        var o = !0,
            u = {};
        return !(!n.self || "self" !== e.name) || (r.A.reverse().forEach(function (n) {
          o && (o = r.R(e, n, t, u), e.from && e.to && (o = r.R(e, n, t, u, "from") && r.R(e, n, t, u, "to")), e.from && !e.to && (o = r.R(e, n, t, u, "from")), !e.from && e.to && (o = r.R(e, n, t, u, "to")));
        }), i.set(e, u), o);
      }),
          u = i.get(o),
          f = [];

      if (f.push(n.once ? "once" : "page"), n.self && f.push("self"), u) {
        var s,
            c = [o];
        Object.keys(u).length > 0 && c.push(u), (s = this.logger).info.apply(s, ["Transition found [" + f.join(",") + "]"].concat(c));
      } else this.logger.info("No transition found [" + f.join(",") + "]");

      return o;
    }, n.update = function () {
      var t = this;
      this.all = this.all.map(function (n) {
        return t.T(n);
      }).sort(function (t, n) {
        return t.priority - n.priority;
      }).reverse().map(function (t) {
        return delete t.priority, t;
      }), this.once = this.all.filter(function (t) {
        return void 0 !== t.once;
      });
    }, n.R = function (t, n, r, e, i) {
      var o = !0,
          u = !1,
          f = t,
          s = n.name,
          c = s,
          a = s,
          h = s,
          v = i ? f[i] : f,
          l = "to" === i ? r.next : r.current;

      if (i ? v && v[s] : v[s]) {
        switch (n.type) {
          case "strings":
          default:
            var d = Array.isArray(v[c]) ? v[c] : [v[c]];
            l[c] && -1 !== d.indexOf(l[c]) && (u = !0), -1 === d.indexOf(l[c]) && (o = !1);
            break;

          case "object":
            var m = Array.isArray(v[a]) ? v[a] : [v[a]];
            l[a] ? (l[a].name && -1 !== m.indexOf(l[a].name) && (u = !0), -1 === m.indexOf(l[a].name) && (o = !1)) : o = !1;
            break;

          case "function":
            v[h](r) ? u = !0 : o = !1;
        }

        u && (i ? (e[i] = e[i] || {}, e[i][s] = f[i][s]) : e[s] = f[s]);
      }

      return o;
    }, n.O = function (t, n, r) {
      var e = 0;
      return (t[n] || t.from && t.from[n] || t.to && t.to[n]) && (e += Math.pow(10, r), t.from && t.from[n] && (e += 1), t.to && t.to[n] && (e += 2)), e;
    }, n.T = function (t) {
      var n = this;
      t.priority = 0;
      var r = 0;
      return this.A.forEach(function (e, i) {
        r += n.O(t, e.name, i + 1);
      }), t.priority = r, t;
    }, t;
  }(),
      ut = function () {
    function t(t) {
      void 0 === t && (t = []), this.logger = new l("@barba/core"), this.S = !1, this.store = new ot(t);
    }

    var r = t.prototype;
    return r.get = function (t, n) {
      return this.store.resolve(t, n);
    }, r.doOnce = function (t) {
      var n = t.data,
          r = t.transition;

      try {
        var e = function e() {
          i.S = !1;
        },
            i = this,
            o = r || {};

        i.S = !0;
        var u = s(function () {
          return Promise.resolve(i.j("beforeOnce", n, o)).then(function () {
            return Promise.resolve(i.once(n, o)).then(function () {
              return Promise.resolve(i.j("afterOnce", n, o)).then(function () {});
            });
          });
        }, function (t) {
          i.S = !1, i.logger.debug("Transition error [before/after/once]"), i.logger.error(t);
        });
        return Promise.resolve(u && u.then ? u.then(e) : e());
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.doPage = function (t) {
      var n = t.data,
          r = t.transition,
          e = t.page,
          i = t.wrapper;

      try {
        var o = function o(t) {
          if (u) return t;
          f.S = !1;
        },
            u = !1,
            f = this,
            c = r || {},
            a = !0 === c.sync || !1;

        f.S = !0;
        var h = s(function () {
          function t() {
            return Promise.resolve(f.j("before", n, c)).then(function () {
              var t = !1;

              function r(r) {
                return t ? r : Promise.resolve(f.remove(n)).then(function () {
                  return Promise.resolve(f.j("after", n, c)).then(function () {});
                });
              }

              var o = function () {
                if (a) return s(function () {
                  return Promise.resolve(f.add(n, i)).then(function () {
                    return Promise.resolve(f.j("beforeLeave", n, c)).then(function () {
                      return Promise.resolve(f.j("beforeEnter", n, c)).then(function () {
                        return Promise.resolve(Promise.all([f.leave(n, c), f.enter(n, c)])).then(function () {
                          return Promise.resolve(f.j("afterLeave", n, c)).then(function () {
                            return Promise.resolve(f.j("afterEnter", n, c)).then(function () {});
                          });
                        });
                      });
                    });
                  });
                }, function (t) {
                  if (f.M(t)) throw new it(t, "Transition error [sync]");
                });

                var r = function r(_r) {
                  return t ? _r : s(function () {
                    var t = function () {
                      if (!1 !== o) return Promise.resolve(f.add(n, i)).then(function () {
                        return Promise.resolve(f.j("beforeEnter", n, c)).then(function () {
                          return Promise.resolve(f.enter(n, c, o)).then(function () {
                            return Promise.resolve(f.j("afterEnter", n, c)).then(function () {});
                          });
                        });
                      });
                    }();

                    if (t && t.then) return t.then(function () {});
                  }, function (t) {
                    if (f.M(t)) throw new it(t, "Transition error [before/after/enter]");
                  });
                },
                    o = !1,
                    u = s(function () {
                  return Promise.resolve(f.j("beforeLeave", n, c)).then(function () {
                    return Promise.resolve(Promise.all([f.leave(n, c), L(e, n)]).then(function (t) {
                      return t[0];
                    })).then(function (t) {
                      return o = t, Promise.resolve(f.j("afterLeave", n, c)).then(function () {});
                    });
                  });
                }, function (t) {
                  if (f.M(t)) throw new it(t, "Transition error [before/after/leave]");
                });

                return u && u.then ? u.then(r) : r(u);
              }();

              return o && o.then ? o.then(r) : r(o);
            });
          }

          var r = function () {
            if (a) return Promise.resolve(L(e, n)).then(function () {});
          }();

          return r && r.then ? r.then(t) : t();
        }, function (t) {
          if (f.S = !1, t.name && "BarbaError" === t.name) throw f.logger.debug(t.label), f.logger.error(t.error), t;
          throw f.logger.debug("Transition error [page]"), f.logger.error(t), t;
        });
        return Promise.resolve(h && h.then ? h.then(o) : o(h));
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.once = function (t, n) {
      try {
        return Promise.resolve(X.do("once", t, n)).then(function () {
          return n.once ? N(n.once, n)(t) : Promise.resolve();
        });
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.leave = function (t, n) {
      try {
        return Promise.resolve(X.do("leave", t, n)).then(function () {
          return n.leave ? N(n.leave, n)(t) : Promise.resolve();
        });
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.enter = function (t, n, r) {
      try {
        return Promise.resolve(X.do("enter", t, n)).then(function () {
          return n.enter ? N(n.enter, n)(t, r) : Promise.resolve();
        });
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.add = function (t, n) {
      try {
        return j.addContainer(t.next.container, n), X.do("nextAdded", t), Promise.resolve();
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.remove = function (t) {
      try {
        return j.removeContainer(t.current.container), X.do("currentRemoved", t), Promise.resolve();
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.M = function (t) {
      return t.message ? !/Timeout error|Fetch error/.test(t.message) : !t.status;
    }, r.j = function (t, n, r) {
      try {
        return Promise.resolve(X.do(t, n, r)).then(function () {
          return r[t] ? N(r[t], r)(n) : Promise.resolve();
        });
      } catch (t) {
        return Promise.reject(t);
      }
    }, n(t, [{
      key: "isRunning",
      get: function get() {
        return this.S;
      },
      set: function set(t) {
        this.S = t;
      }
    }, {
      key: "hasOnce",
      get: function get() {
        return this.store.once.length > 0;
      }
    }, {
      key: "hasSelf",
      get: function get() {
        return this.store.all.some(function (t) {
          return "self" === t.name;
        });
      }
    }, {
      key: "shouldWait",
      get: function get() {
        return this.store.all.some(function (t) {
          return t.to && !t.to.route || t.sync;
        });
      }
    }]), t;
  }(),
      ft = function () {
    function t(t) {
      var n = this;
      this.names = ["beforeLeave", "afterLeave", "beforeEnter", "afterEnter"], this.byNamespace = new Map(), 0 !== t.length && (t.forEach(function (t) {
        n.byNamespace.set(t.namespace, t);
      }), this.names.forEach(function (t) {
        X[t](n.L(t));
      }));
    }

    return t.prototype.L = function (t) {
      var n = this;
      return function (r) {
        var e = t.match(/enter/i) ? r.next : r.current,
            i = n.byNamespace.get(e.namespace);
        return i && i[t] ? N(i[t], i)(r) : Promise.resolve();
      };
    }, t;
  }();

  Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest || (Element.prototype.closest = function (t) {
    var n = this;

    do {
      if (n.matches(t)) return n;
      n = n.parentElement || n.parentNode;
    } while (null !== n && 1 === n.nodeType);

    return null;
  });
  var st = {
    container: null,
    html: "",
    namespace: "",
    url: {
      hash: "",
      href: "",
      path: "",
      port: null,
      query: {}
    }
  };
  return new (function () {
    function t() {
      this.version = a, this.schemaPage = st, this.Logger = l, this.logger = new l("@barba/core"), this.plugins = [], this.hooks = X, this.dom = j, this.helpers = _, this.history = M, this.request = I, this.url = H;
    }

    var e = t.prototype;
    return e.use = function (t, n) {
      var r = this.plugins;
      r.indexOf(t) > -1 ? this.logger.warn("Plugin [" + t.name + "] already installed.") : "function" == typeof t.install ? (t.install(this, n), r.push(t)) : this.logger.warn("Plugin [" + t.name + '] has no "install" method.');
    }, e.init = function (t) {
      var n = void 0 === t ? {} : t,
          e = n.transitions,
          i = void 0 === e ? [] : e,
          o = n.views,
          u = void 0 === o ? [] : o,
          f = n.schema,
          s = void 0 === f ? S : f,
          c = n.requestError,
          a = n.timeout,
          h = void 0 === a ? 2e3 : a,
          v = n.cacheIgnore,
          d = void 0 !== v && v,
          m = n.prefetchIgnore,
          p = void 0 !== m && m,
          w = n.preventRunning,
          b = void 0 !== w && w,
          y = n.prevent,
          P = void 0 === y ? null : y,
          g = n.debug,
          E = n.logLevel;
      if (l.setLevel(!0 === (void 0 !== g && g) ? "debug" : void 0 === E ? "off" : E), this.logger.info(this.version), Object.keys(s).forEach(function (t) {
        S[t] && (S[t] = s[t]);
      }), this.$ = c, this.timeout = h, this.cacheIgnore = d, this.prefetchIgnore = p, this.preventRunning = b, this._ = this.dom.getWrapper(), !this._) throw new Error("[@barba/core] No Barba wrapper found");
      this._.setAttribute("aria-live", "polite"), this.q();
      var x = this.data.current;
      if (!x.container) throw new Error("[@barba/core] No Barba container found");

      if (this.cache = new G(d), this.prevent = new et(p), this.transitions = new ut(i), this.views = new ft(u), null !== P) {
        if ("function" != typeof P) throw new Error("[@barba/core] Prevent should be a function");
        this.prevent.add("preventCustom", P);
      }

      this.history.init(x.url.href, x.namespace), this.B = this.B.bind(this), this.U = this.U.bind(this), this.D = this.D.bind(this), this.F(), this.plugins.forEach(function (t) {
        return t.init();
      });
      var k = this.data;
      k.trigger = "barba", k.next = k.current, k.current = r({}, this.schemaPage), this.hooks.do("ready", k), this.once(k), this.q();
    }, e.destroy = function () {
      this.q(), this.H(), this.history.clear(), this.hooks.clear(), this.plugins = [];
    }, e.force = function (t) {
      window.location.assign(t);
    }, e.go = function (t, n, r) {
      var e;
      if (void 0 === n && (n = "barba"), this.transitions.isRunning) this.force(t);else if (!(e = "popstate" === n ? this.history.current && this.url.getPath(this.history.current.url) === this.url.getPath(t) : this.prevent.run("sameUrl", null, null, t)) || this.transitions.hasSelf) return n = this.history.change(t, n, r), r && (r.stopPropagation(), r.preventDefault()), this.page(t, n, e);
    }, e.once = function (t) {
      try {
        var n = this;
        return Promise.resolve(n.hooks.do("beforeEnter", t)).then(function () {
          function r() {
            return Promise.resolve(n.hooks.do("afterEnter", t)).then(function () {});
          }

          var e = function () {
            if (n.transitions.hasOnce) {
              var r = n.transitions.get(t, {
                once: !0
              });
              return Promise.resolve(n.transitions.doOnce({
                transition: r,
                data: t
              })).then(function () {});
            }
          }();

          return e && e.then ? e.then(r) : r();
        });
      } catch (t) {
        return Promise.reject(t);
      }
    }, e.page = function (t, n, e) {
      try {
        var i = function i() {
          var t = o.data;
          return Promise.resolve(o.hooks.do("page", t)).then(function () {
            var n = s(function () {
              var n = o.transitions.get(t, {
                once: !1,
                self: e
              });
              return Promise.resolve(o.transitions.doPage({
                data: t,
                page: u,
                transition: n,
                wrapper: o._
              })).then(function () {
                o.q();
              });
            }, function () {
              0 === l.getLevel() && o.force(t.current.url.href);
            });
            if (n && n.then) return n.then(function () {});
          });
        },
            o = this;

        o.data.next.url = r({
          href: t
        }, o.url.parse(t)), o.data.trigger = n;

        var u = o.cache.has(t) ? o.cache.update(t, {
          action: "click"
        }).request : o.cache.set(t, o.request(t, o.timeout, o.onRequestError.bind(o, n)), "click").request,
            f = function () {
          if (o.transitions.shouldWait) return Promise.resolve(L(u, o.data)).then(function () {});
        }();

        return Promise.resolve(f && f.then ? f.then(i) : i());
      } catch (t) {
        return Promise.reject(t);
      }
    }, e.onRequestError = function (t) {
      this.transitions.isRunning = !1;

      for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), e = 1; e < n; e++) r[e - 1] = arguments[e];

      var i = r[0],
          o = r[1],
          u = this.cache.getAction(i);
      return this.cache.delete(i), !(this.$ && !1 === this.$(t, u, i, o) || ("click" === u && this.force(i), 1));
    }, e.prefetch = function (t) {
      var n = this;
      this.cache.has(t) || this.cache.set(t, this.request(t, this.timeout, this.onRequestError.bind(this, "barba")).catch(function (t) {
        n.logger.error(t);
      }), "prefetch");
    }, e.F = function () {
      !0 !== this.prefetchIgnore && (document.addEventListener("mouseover", this.B), document.addEventListener("touchstart", this.B)), document.addEventListener("click", this.U), window.addEventListener("popstate", this.D);
    }, e.H = function () {
      !0 !== this.prefetchIgnore && (document.removeEventListener("mouseover", this.B), document.removeEventListener("touchstart", this.B)), document.removeEventListener("click", this.U), window.removeEventListener("popstate", this.D);
    }, e.B = function (t) {
      var n = this,
          r = this.I(t);

      if (r) {
        var e = this.dom.getHref(r);
        this.prevent.checkHref(e) || this.cache.has(e) || this.cache.set(e, this.request(e, this.timeout, this.onRequestError.bind(this, r)).catch(function (t) {
          n.logger.error(t);
        }), "enter");
      }
    }, e.U = function (t) {
      var n = this.I(t);
      if (n) return this.transitions.isRunning && this.preventRunning ? (t.preventDefault(), void t.stopPropagation()) : void this.go(this.dom.getHref(n), n, t);
    }, e.D = function (t) {
      this.go(this.url.getHref(), "popstate", t);
    }, e.I = function (t) {
      for (var n = t.target; n && !this.dom.getHref(n);) n = n.parentNode;

      if (n && !this.prevent.checkLink(n, t, this.dom.getHref(n))) return n;
    }, e.q = function () {
      var t = this.url.getHref(),
          n = {
        container: this.dom.getContainer(),
        html: this.dom.getHtml(),
        namespace: this.dom.getNamespace(),
        url: r({
          href: t
        }, this.url.parse(t))
      };
      this.C = {
        current: n,
        next: r({}, this.schemaPage),
        trigger: void 0
      }, this.hooks.do("reset", this.data);
    }, n(t, [{
      key: "data",
      get: function get() {
        return this.C;
      }
    }, {
      key: "wrapper",
      get: function get() {
        return this._;
      }
    }]), t;
  }())();
});

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return LogLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logger", function() { return Logger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLogLevel", function() { return setLogLevel; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

  return r;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A container for all of the Logger instances
 */


var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */

var LogLevel;

(function (LogLevel) {
  LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
  LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
  LogLevel[LogLevel["INFO"] = 2] = "INFO";
  LogLevel[LogLevel["WARN"] = 3] = "WARN";
  LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
  LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (LogLevel = {}));
/**
 * The default log level
 */


var defaultLogLevel = LogLevel.INFO;
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */

var defaultLogHandler = function defaultLogHandler(instance, logType) {
  var args = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    args[_i - 2] = arguments[_i];
  }

  if (logType < instance.logLevel) {
    return;
  }

  var now = new Date().toISOString();

  switch (logType) {
    /**
     * By default, `console.debug` is not displayed in the developer console (in
     * chrome). To avoid forcing users to have to opt-in to these logs twice
     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
     * logs to the `console.log` function.
     */
    case LogLevel.DEBUG:
      console.log.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
      break;

    case LogLevel.VERBOSE:
      console.log.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
      break;

    case LogLevel.INFO:
      console.info.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
      break;

    case LogLevel.WARN:
      console.warn.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
      break;

    case LogLevel.ERROR:
      console.error.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
      break;

    default:
      throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
  }
};

var Logger =
/** @class */
function () {
  /**
   * Gives you an instance of a Logger to capture messages according to
   * Firebase's logging scheme.
   *
   * @param name The name that the logs will be associated with
   */
  function Logger(name) {
    this.name = name;
    /**
     * The log level of the given Logger instance.
     */

    this._logLevel = defaultLogLevel;
    /**
     * The log handler for the Logger instance.
     */

    this._logHandler = defaultLogHandler;
    /**
     * Capture the current instance for later use
     */

    instances.push(this);
  }

  Object.defineProperty(Logger.prototype, "logLevel", {
    get: function get() {
      return this._logLevel;
    },
    set: function set(val) {
      if (!(val in LogLevel)) {
        throw new TypeError('Invalid value assigned to `logLevel`');
      }

      this._logLevel = val;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Logger.prototype, "logHandler", {
    get: function get() {
      return this._logHandler;
    },
    set: function set(val) {
      if (typeof val !== 'function') {
        throw new TypeError('Value assigned to `logHandler` must be a function');
      }

      this._logHandler = val;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * The functions below are all based on the `console` interface
   */

  Logger.prototype.debug = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
  };

  Logger.prototype.log = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
  };

  Logger.prototype.info = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
  };

  Logger.prototype.warn = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
  };

  Logger.prototype.error = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
  };

  return Logger;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function setLogLevel(level) {
  instances.forEach(function (inst) {
    inst.logLevel = level;
  });
}



/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var firebase = _interopDefault(__webpack_require__(15));

var name = "firebase";
var version = "7.6.1";
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

firebase.registerVersion(name, version, 'app');
module.exports = firebase;

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export AttrPlugin */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AttrPlugin; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.6.1
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */

var AttrPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "attr",
  API: 2,
  version: "0.6.1",
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween, index) {
    var p, end;

    if (typeof target.setAttribute !== "function") {
      return false;
    }

    for (p in value) {
      end = value[p];

      if (typeof end === "function") {
        end = end(index, target);
      }

      this._addTween(target, "setAttribute", target.getAttribute(p) + "", end + "", p, false, p);

      this._overwriteProps.push(p);
    }

    return true;
  }
});


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export BezierPlugin */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BezierPlugin; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 1.3.9
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */


var _RAD2DEG = 180 / Math.PI,
    _r1 = [],
    _r2 = [],
    _r3 = [],
    _corProps = {},
    _globals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.globals,
    Segment = function Segment(a, b, c, d) {
  if (c === d) {
    //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.
    c = d - (d - b) / 1000000;
  }

  if (a === b) {
    //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.
    b = a + (c - a) / 1000000;
  }

  this.a = a;
  this.b = b;
  this.c = c;
  this.d = d;
  this.da = d - a;
  this.ca = c - a;
  this.ba = b - a;
},
    _correlate = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
    cubicToQuadratic = function cubicToQuadratic(a, b, c, d) {
  var q1 = {
    a: a
  },
      q2 = {},
      q3 = {},
      q4 = {
    c: d
  },
      mab = (a + b) / 2,
      mbc = (b + c) / 2,
      mcd = (c + d) / 2,
      mabc = (mab + mbc) / 2,
      mbcd = (mbc + mcd) / 2,
      m8 = (mbcd - mabc) / 8;
  q1.b = mab + (a - mab) / 4;
  q2.b = mabc + m8;
  q1.c = q2.a = (q1.b + q2.b) / 2;
  q2.c = q3.a = (mabc + mbcd) / 2;
  q3.b = mbcd - m8;
  q4.b = mcd + (d - mcd) / 4;
  q3.c = q4.a = (q3.b + q4.b) / 2;
  return [q1, q2, q3, q4];
},
    _calculateControlPoints = function _calculateControlPoints(a, curviness, quad, basic, correlate) {
  var l = a.length - 1,
      ii = 0,
      cp1 = a[0].a,
      i,
      p1,
      p2,
      p3,
      seg,
      m1,
      m2,
      mm,
      cp2,
      qb,
      r1,
      r2,
      tl;

  for (i = 0; i < l; i++) {
    seg = a[ii];
    p1 = seg.a;
    p2 = seg.d;
    p3 = a[ii + 1].d;

    if (correlate) {
      r1 = _r1[i];
      r2 = _r2[i];
      tl = (r2 + r1) * curviness * 0.25 / (basic ? 0.5 : _r3[i] || 0.5);
      m1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : r1 !== 0 ? tl / r1 : 0);
      m2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : r2 !== 0 ? tl / r2 : 0);
      mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));
    } else {
      m1 = p2 - (p2 - p1) * curviness * 0.5;
      m2 = p2 + (p3 - p2) * curviness * 0.5;
      mm = p2 - (m1 + m2) / 2;
    }

    m1 += mm;
    m2 += mm;
    seg.c = cp2 = m1;

    if (i !== 0) {
      seg.b = cp1;
    } else {
      seg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.
    }

    seg.da = p2 - p1;
    seg.ca = cp2 - p1;
    seg.ba = cp1 - p1;

    if (quad) {
      qb = cubicToQuadratic(p1, cp1, cp2, p2);
      a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);
      ii += 4;
    } else {
      ii++;
    }

    cp1 = m2;
  }

  seg = a[ii];
  seg.b = cp1;
  seg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.

  seg.da = seg.d - seg.a;
  seg.ca = seg.c - seg.a;
  seg.ba = cp1 - seg.a;

  if (quad) {
    qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);
    a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);
  }
},
    _parseAnchors = function _parseAnchors(values, p, correlate, prepend) {
  var a = [],
      l,
      i,
      p1,
      p2,
      p3,
      tmp;

  if (prepend) {
    values = [prepend].concat(values);
    i = values.length;

    while (--i > -1) {
      if (typeof (tmp = values[i][p]) === "string") if (tmp.charAt(1) === "=") {
        values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons
      }
    }
  }

  l = values.length - 2;

  if (l < 0) {
    a[0] = new Segment(values[0][p], 0, 0, values[0][p]);
    return a;
  }

  for (i = 0; i < l; i++) {
    p1 = values[i][p];
    p2 = values[i + 1][p];
    a[i] = new Segment(p1, 0, 0, p2);

    if (correlate) {
      p3 = values[i + 2][p];
      _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);
      _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);
    }
  }

  a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);
  return a;
},
    bezierThrough = function bezierThrough(values, curviness, quadratic, basic, correlate, prepend) {
  var obj = {},
      props = [],
      first = prepend || values[0],
      i,
      p,
      a,
      j,
      r,
      l,
      seamless,
      last;
  correlate = typeof correlate === "string" ? "," + correlate + "," : _correlate;

  if (curviness == null) {
    curviness = 1;
  }

  for (p in values[0]) {
    props.push(p);
  } //check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)


  if (values.length > 1) {
    last = values[values.length - 1];
    seamless = true;
    i = props.length;

    while (--i > -1) {
      p = props[i];

      if (Math.abs(first[p] - last[p]) > 0.05) {
        //build in a tolerance of +/-0.05 to accommodate rounding errors.
        seamless = false;
        break;
      }
    }

    if (seamless) {
      values = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens

      if (prepend) {
        values.unshift(prepend);
      }

      values.push(values[1]);
      prepend = values[values.length - 3];
    }
  }

  _r1.length = _r2.length = _r3.length = 0;
  i = props.length;

  while (--i > -1) {
    p = props[i];
    _corProps[p] = correlate.indexOf("," + p + ",") !== -1;
    obj[p] = _parseAnchors(values, p, _corProps[p], prepend);
  }

  i = _r1.length;

  while (--i > -1) {
    _r1[i] = Math.sqrt(_r1[i]);
    _r2[i] = Math.sqrt(_r2[i]);
  }

  if (!basic) {
    i = props.length;

    while (--i > -1) {
      if (_corProps[p]) {
        a = obj[props[i]];
        l = a.length - 1;

        for (j = 0; j < l; j++) {
          r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;
          _r3[j] = (_r3[j] || 0) + r * r;
        }
      }
    }

    i = _r3.length;

    while (--i > -1) {
      _r3[i] = Math.sqrt(_r3[i]);
    }
  }

  i = props.length;
  j = quadratic ? 4 : 1;

  while (--i > -1) {
    p = props[i];
    a = obj[p];

    _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties


    if (seamless) {
      a.splice(0, j);
      a.splice(a.length - j, j);
    }
  }

  return obj;
},
    _parseBezierData = function _parseBezierData(values, type, prepend) {
  type = type || "soft";
  var obj = {},
      inc = type === "cubic" ? 3 : 2,
      soft = type === "soft",
      props = [],
      a,
      b,
      c,
      d,
      cur,
      i,
      j,
      l,
      p,
      cnt,
      tmp;

  if (soft && prepend) {
    values = [prepend].concat(values);
  }

  if (values == null || values.length < inc + 1) {
    throw "invalid Bezier data";
  }

  for (p in values[0]) {
    props.push(p);
  }

  i = props.length;

  while (--i > -1) {
    p = props[i];
    obj[p] = cur = [];
    cnt = 0;
    l = values.length;

    for (j = 0; j < l; j++) {
      a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === "string" && tmp.charAt(1) === "=" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);
      if (soft) if (j > 1) if (j < l - 1) {
        cur[cnt++] = (a + cur[cnt - 2]) / 2;
      }
      cur[cnt++] = a;
    }

    l = cnt - inc + 1;
    cnt = 0;

    for (j = 0; j < l; j += inc) {
      a = cur[j];
      b = cur[j + 1];
      c = cur[j + 2];
      d = inc === 2 ? 0 : cur[j + 3];
      cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);
    }

    cur.length = cnt;
  }

  return obj;
},
    _addCubicLengths = function _addCubicLengths(a, steps, resolution) {
  var inc = 1 / resolution,
      j = a.length,
      d,
      d1,
      s,
      da,
      ca,
      ba,
      p,
      i,
      inv,
      bez,
      index;

  while (--j > -1) {
    bez = a[j];
    s = bez.a;
    da = bez.d - s;
    ca = bez.c - s;
    ba = bez.b - s;
    d = d1 = 0;

    for (i = 1; i <= resolution; i++) {
      p = inc * i;
      inv = 1 - p;
      d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);
      index = j * resolution + i - 1;
      steps[index] = (steps[index] || 0) + d * d;
    }
  }
},
    _parseLengthData = function _parseLengthData(obj, resolution) {
  resolution = resolution >> 0 || 6;
  var a = [],
      lengths = [],
      d = 0,
      total = 0,
      threshold = resolution - 1,
      segments = [],
      curLS = [],
      //current length segments array
  p,
      i,
      l,
      index;

  for (p in obj) {
    _addCubicLengths(obj[p], a, resolution);
  }

  l = a.length;

  for (i = 0; i < l; i++) {
    d += Math.sqrt(a[i]);
    index = i % resolution;
    curLS[index] = d;

    if (index === threshold) {
      total += d;
      index = i / resolution >> 0;
      segments[index] = curLS;
      lengths[index] = total;
      d = 0;
      curLS = [];
    }
  }

  return {
    length: total,
    lengths: lengths,
    segments: segments
  };
},
    BezierPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "bezier",
  priority: -1,
  version: "1.3.9",
  API: 2,
  global: true,
  //gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, vars, tween) {
    this._target = target;

    if (vars instanceof Array) {
      vars = {
        values: vars
      };
    }

    this._func = {};
    this._mod = {};
    this._props = [];
    this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);
    var values = vars.values || [],
        first = {},
        second = values[0],
        autoRotate = vars.autoRotate || tween.vars.orientToBezier,
        p,
        isFunc,
        i,
        j,
        prepend;
    this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [["x", "y", "rotation", autoRotate === true ? 0 : Number(autoRotate) || 0]] : null;

    for (p in second) {
      this._props.push(p);
    }

    i = this._props.length;

    while (--i > -1) {
      p = this._props[i];

      this._overwriteProps.push(p);

      isFunc = this._func[p] = typeof target[p] === "function";
      first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf("set") || typeof target["get" + p.substr(3)] !== "function" ? p : "get" + p.substr(3)]();
      if (!prepend) if (first[p] !== values[0][p]) {
        prepend = first;
      }
    }

    this._beziers = vars.type !== "cubic" && vars.type !== "quadratic" && vars.type !== "soft" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === "thruBasic", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);
    this._segCount = this._beziers[p].length;

    if (this._timeRes) {
      var ld = _parseLengthData(this._beziers, this._timeRes);

      this._length = ld.length;
      this._lengths = ld.lengths;
      this._segments = ld.segments;
      this._l1 = this._li = this._s1 = this._si = 0;
      this._l2 = this._lengths[0];
      this._curSeg = this._segments[0];
      this._s2 = this._curSeg[0];
      this._prec = 1 / this._curSeg.length;
    }

    if (autoRotate = this._autoRotate) {
      this._initialRotations = [];

      if (!(autoRotate[0] instanceof Array)) {
        this._autoRotate = autoRotate = [autoRotate];
      }

      i = autoRotate.length;

      while (--i > -1) {
        for (j = 0; j < 3; j++) {
          p = autoRotate[i][j];
          this._func[p] = typeof target[p] === "function" ? target[p.indexOf("set") || typeof target["get" + p.substr(3)] !== "function" ? p : "get" + p.substr(3)] : false;
        }

        p = autoRotate[i][2];
        this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;

        this._overwriteProps.push(p);
      }
    }

    this._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.

    return true;
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(v) {
    var segments = this._segCount,
        func = this._func,
        target = this._target,
        notStart = v !== this._startRatio,
        curIndex,
        inv,
        i,
        p,
        b,
        t,
        val,
        l,
        lengths,
        curSeg,
        v1;

    if (!this._timeRes) {
      curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;
      t = (v - curIndex * (1 / segments)) * segments;
    } else {
      lengths = this._lengths;
      curSeg = this._curSeg;
      v1 = v * this._length;
      i = this._li; //find the appropriate segment (if the currently cached one isn't correct)

      if (v1 > this._l2 && i < segments - 1) {
        l = segments - 1;

        while (i < l && (this._l2 = lengths[++i]) <= v1) {}

        this._l1 = lengths[i - 1];
        this._li = i;
        this._curSeg = curSeg = this._segments[i];
        this._s2 = curSeg[this._s1 = this._si = 0];
      } else if (v1 < this._l1 && i > 0) {
        while (i > 0 && (this._l1 = lengths[--i]) >= v1) {}

        if (i === 0 && v1 < this._l1) {
          this._l1 = 0;
        } else {
          i++;
        }

        this._l2 = lengths[i];
        this._li = i;
        this._curSeg = curSeg = this._segments[i];
        this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;
        this._s2 = curSeg[this._si];
      }

      curIndex = i; //now find the appropriate sub-segment (we split it into the number of pieces that was defined by "precision" and measured each one)

      v1 -= this._l1;
      i = this._si;

      if (v1 > this._s2 && i < curSeg.length - 1) {
        l = curSeg.length - 1;

        while (i < l && (this._s2 = curSeg[++i]) <= v1) {}

        this._s1 = curSeg[i - 1];
        this._si = i;
      } else if (v1 < this._s1 && i > 0) {
        while (i > 0 && (this._s1 = curSeg[--i]) >= v1) {}

        if (i === 0 && v1 < this._s1) {
          this._s1 = 0;
        } else {
          i++;
        }

        this._s2 = curSeg[i];
        this._si = i;
      }

      t = v === 1 ? 1 : (i + (v1 - this._s1) / (this._s2 - this._s1)) * this._prec || 0;
    }

    inv = 1 - t;
    i = this._props.length;

    while (--i > -1) {
      p = this._props[i];
      b = this._beziers[p][curIndex];
      val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;

      if (this._mod[p]) {
        val = this._mod[p](val, target);
      }

      if (func[p]) {
        target[p](val);
      } else {
        target[p] = val;
      }
    }

    if (this._autoRotate) {
      var ar = this._autoRotate,
          b2,
          x1,
          y1,
          x2,
          y2,
          add,
          conv;
      i = ar.length;

      while (--i > -1) {
        p = ar[i][2];
        add = ar[i][3] || 0;
        conv = ar[i][4] === true ? 1 : _RAD2DEG;
        b = this._beziers[ar[i][0]];
        b2 = this._beziers[ar[i][1]];

        if (b && b2) {
          //in case one of the properties got overwritten.
          b = b[curIndex];
          b2 = b2[curIndex];
          x1 = b.a + (b.b - b.a) * t;
          x2 = b.b + (b.c - b.b) * t;
          x1 += (x2 - x1) * t;
          x2 += (b.c + (b.d - b.c) * t - x2) * t;
          y1 = b2.a + (b2.b - b2.a) * t;
          y2 = b2.b + (b2.c - b2.b) * t;
          y1 += (y2 - y1) * t;
          y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;
          val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];

          if (this._mod[p]) {
            val = this._mod[p](val, target); //for modProps
          }

          if (func[p]) {
            target[p](val);
          } else {
            target[p] = val;
          }
        }
      }
    }
  }
}),
    p = BezierPlugin.prototype;

BezierPlugin.bezierThrough = bezierThrough;
BezierPlugin.cubicToQuadratic = cubicToQuadratic;
BezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the "css" object using the autoCSS feature of TweenLite

BezierPlugin.quadraticToCubic = function (a, b, c) {
  return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);
};

BezierPlugin._cssRegister = function () {
  var CSSPlugin = _globals.CSSPlugin;

  if (!CSSPlugin) {
    return;
  }

  var _internals = CSSPlugin._internals,
      _parseToProxy = _internals._parseToProxy,
      _setPluginRatio = _internals._setPluginRatio,
      CSSPropTween = _internals.CSSPropTween;

  _internals._registerComplexSpecialProp("bezier", {
    parser: function parser(t, e, prop, cssp, pt, plugin) {
      if (e instanceof Array) {
        e = {
          values: e
        };
      }

      plugin = new BezierPlugin();
      var values = e.values,
          l = values.length - 1,
          pluginValues = [],
          v = {},
          i,
          p,
          data;

      if (l < 0) {
        return pt;
      }

      for (i = 0; i <= l; i++) {
        data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);
        pluginValues[i] = data.end;
      }

      for (p in e) {
        v[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.
      }

      v.values = pluginValues;
      pt = new CSSPropTween(t, "bezier", 0, 0, data.pt, 2);
      pt.data = data;
      pt.plugin = plugin;
      pt.setRatio = _setPluginRatio;

      if (v.autoRotate === 0) {
        v.autoRotate = true;
      }

      if (v.autoRotate && !(v.autoRotate instanceof Array)) {
        i = v.autoRotate === true ? 0 : Number(v.autoRotate);
        v.autoRotate = data.end.left != null ? [["left", "top", "rotation", i, false]] : data.end.x != null ? [["x", "y", "rotation", i, false]] : false;
      }

      if (v.autoRotate) {
        if (!cssp._transform) {
          cssp._enableTransforms(false);
        }

        data.autoRotate = cssp._target._gsTransform;
        data.proxy.rotation = data.autoRotate.rotation || 0;

        cssp._overwriteProps.push("rotation");
      }

      plugin._onInitTween(data.proxy, v, cssp._tween);

      return pt;
    }
  });
};

p._mod = function (lookup) {
  var op = this._overwriteProps,
      i = op.length,
      val;

  while (--i > -1) {
    val = lookup[op[i]];

    if (val && typeof val === "function") {
      this._mod[op[i]] = val;
    }
  }
};

p._kill = function (lookup) {
  var a = this._props,
      p,
      i;

  for (p in this._beziers) {
    if (p in lookup) {
      delete this._beziers[p];
      delete this._func[p];
      i = a.length;

      while (--i > -1) {
        if (a[i] === p) {
          a.splice(i, 1);
        }
      }
    }
  }

  a = this._autoRotate;

  if (a) {
    i = a.length;

    while (--i > -1) {
      if (lookup[a[i][2]]) {
        a.splice(i, 1);
      }
    }
  }

  return this._super._kill.call(this, lookup);
};



/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export DirectionalRotationPlugin */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DirectionalRotationPlugin; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.3.1
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */

var DirectionalRotationPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "directionalRotation",
  version: "0.3.1",
  API: 2,
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween, index) {
    if (typeof value !== "object") {
      value = {
        rotation: value
      };
    }

    this.finals = {};
    var cap = value.useRadians === true ? Math.PI * 2 : 360,
        min = 0.000001,
        p,
        v,
        start,
        end,
        dif,
        split;

    for (p in value) {
      if (p !== "useRadians") {
        end = value[p];

        if (typeof end === "function") {
          end = end(index, target);
        }

        split = (end + "").split("_");
        v = split[0];
        start = parseFloat(typeof target[p] !== "function" ? target[p] : target[p.indexOf("set") || typeof target["get" + p.substr(3)] !== "function" ? p : "get" + p.substr(3)]());
        end = this.finals[p] = typeof v === "string" && v.charAt(1) === "=" ? start + parseInt(v.charAt(0) + "1", 10) * Number(v.substr(2)) : Number(v) || 0;
        dif = end - start;

        if (split.length) {
          v = split.join("_");

          if (v.indexOf("short") !== -1) {
            dif = dif % cap;

            if (dif !== dif % (cap / 2)) {
              dif = dif < 0 ? dif + cap : dif - cap;
            }
          }

          if (v.indexOf("_cw") !== -1 && dif < 0) {
            dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;
          } else if (v.indexOf("ccw") !== -1 && dif > 0) {
            dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;
          }
        }

        if (dif > min || dif < -min) {
          this._addTween(target, p, start, start + dif, p);

          this._overwriteProps.push(p);
        }
      }
    }

    return true;
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(ratio) {
    var pt;

    if (ratio !== 1) {
      this._super.setRatio.call(this, ratio);
    } else {
      pt = this._firstPT;

      while (pt) {
        if (pt.f) {
          pt.t[pt.p](this.finals[pt.p]);
        } else {
          pt.t[pt.p] = this.finals[pt.p];
        }

        pt = pt._next;
      }
    }
  }
});
DirectionalRotationPlugin._autoCSS = true;


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Back; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Elastic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Bounce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return RoughEase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return SlowMo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return SteppedEase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return Circ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return Expo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return Sine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return ExpoScaleEase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* unused harmony reexport Linear */
/* unused harmony reexport Power0 */
/* unused harmony reexport Power1 */
/* unused harmony reexport Power2 */
/* unused harmony reexport Power3 */
/* unused harmony reexport Power4 */
/*!
 * VERSION: 1.16.1
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */


__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("easing.Back", ["easing.Ease"], function () {
  var w = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].GreenSockGlobals || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */],
      gs = w.com.greensock,
      _2PI = Math.PI * 2,
      _HALF_PI = Math.PI / 2,
      _class = gs._class,
      _create = function _create(n, f) {
    var C = _class("easing." + n, function () {}, true),
        p = C.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */]();

    p.constructor = C;
    p.getRatio = f;
    return C;
  },
      _easeReg = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */].register || function () {},
      //put an empty function in place just as a safety measure in case someone loads an OLD version of TweenLite.js where Ease.register doesn't exist.
  _wrap = function _wrap(name, EaseOut, EaseIn, EaseInOut, aliases) {
    var C = _class("easing." + name, {
      easeOut: new EaseOut(),
      easeIn: new EaseIn(),
      easeInOut: new EaseInOut()
    }, true);

    _easeReg(C, name);

    return C;
  },
      EasePoint = function EasePoint(time, value, next) {
    this.t = time;
    this.v = value;

    if (next) {
      this.next = next;
      next.prev = this;
      this.c = next.v - value;
      this.gap = next.t - time;
    }
  },
      //Back
  _createBack = function _createBack(n, f) {
    var C = _class("easing." + n, function (overshoot) {
      this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;
      this._p2 = this._p1 * 1.525;
    }, true),
        p = C.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */]();

    p.constructor = C;
    p.getRatio = f;

    p.config = function (overshoot) {
      return new C(overshoot);
    };

    return C;
  },
      Back = _wrap("Back", _createBack("BackOut", function (p) {
    return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;
  }), _createBack("BackIn", function (p) {
    return p * p * ((this._p1 + 1) * p - this._p1);
  }), _createBack("BackInOut", function (p) {
    return (p *= 2) < 1 ? 0.5 * p * p * ((this._p2 + 1) * p - this._p2) : 0.5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);
  })),
      //SlowMo
  SlowMo = _class("easing.SlowMo", function (linearRatio, power, yoyoMode) {
    power = power || power === 0 ? power : 0.7;

    if (linearRatio == null) {
      linearRatio = 0.7;
    } else if (linearRatio > 1) {
      linearRatio = 1;
    }

    this._p = linearRatio !== 1 ? power : 0;
    this._p1 = (1 - linearRatio) / 2;
    this._p2 = linearRatio;
    this._p3 = this._p1 + this._p2;
    this._calcEnd = yoyoMode === true;
  }, true),
      p = SlowMo.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */](),
      SteppedEase,
      ExpoScaleEase,
      RoughEase,
      _createElastic;

  p.constructor = SlowMo;

  p.getRatio = function (p) {
    var r = p + (0.5 - p) * this._p;

    if (p < this._p1) {
      return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;
    } else if (p > this._p3) {
      return this._calcEnd ? p === 1 ? 0 : 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p; //added p === 1 ? 0 to avoid floating point rounding errors from affecting the final value, like 1 - 0.7 = 0.30000000000000004 instead of 0.3
    }

    return this._calcEnd ? 1 : r;
  };

  SlowMo.ease = new SlowMo(0.7, 0.7);

  p.config = SlowMo.config = function (linearRatio, power, yoyoMode) {
    return new SlowMo(linearRatio, power, yoyoMode);
  }; //SteppedEase


  SteppedEase = _class("easing.SteppedEase", function (steps, immediateStart) {
    steps = steps || 1;
    this._p1 = 1 / steps;
    this._p2 = steps + (immediateStart ? 0 : 1);
    this._p3 = immediateStart ? 1 : 0;
  }, true);
  p = SteppedEase.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */]();
  p.constructor = SteppedEase;

  p.getRatio = function (p) {
    if (p < 0) {
      p = 0;
    } else if (p >= 1) {
      p = 0.999999999;
    }

    return ((this._p2 * p | 0) + this._p3) * this._p1;
  };

  p.config = SteppedEase.config = function (steps, immediateStart) {
    return new SteppedEase(steps, immediateStart);
  }; //ExpoScaleEase


  ExpoScaleEase = _class("easing.ExpoScaleEase", function (start, end, ease) {
    this._p1 = Math.log(end / start);
    this._p2 = end - start;
    this._p3 = start;
    this._ease = ease;
  }, true);
  p = ExpoScaleEase.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */]();
  p.constructor = ExpoScaleEase;

  p.getRatio = function (p) {
    if (this._ease) {
      p = this._ease.getRatio(p);
    }

    return (this._p3 * Math.exp(this._p1 * p) - this._p3) / this._p2;
  };

  p.config = ExpoScaleEase.config = function (start, end, ease) {
    return new ExpoScaleEase(start, end, ease);
  }; //RoughEase


  RoughEase = _class("easing.RoughEase", function (vars) {
    vars = vars || {};
    var taper = vars.taper || "none",
        a = [],
        cnt = 0,
        points = (vars.points || 20) | 0,
        i = points,
        randomize = vars.randomize !== false,
        clamp = vars.clamp === true,
        template = vars.template instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */] ? vars.template : null,
        strength = typeof vars.strength === "number" ? vars.strength * 0.4 : 0.4,
        x,
        y,
        bump,
        invX,
        obj,
        pnt;

    while (--i > -1) {
      x = randomize ? Math.random() : 1 / points * i;
      y = template ? template.getRatio(x) : x;

      if (taper === "none") {
        bump = strength;
      } else if (taper === "out") {
        invX = 1 - x;
        bump = invX * invX * strength;
      } else if (taper === "in") {
        bump = x * x * strength;
      } else if (x < 0.5) {
        //"both" (start)
        invX = x * 2;
        bump = invX * invX * 0.5 * strength;
      } else {
        //"both" (end)
        invX = (1 - x) * 2;
        bump = invX * invX * 0.5 * strength;
      }

      if (randomize) {
        y += Math.random() * bump - bump * 0.5;
      } else if (i % 2) {
        y += bump * 0.5;
      } else {
        y -= bump * 0.5;
      }

      if (clamp) {
        if (y > 1) {
          y = 1;
        } else if (y < 0) {
          y = 0;
        }
      }

      a[cnt++] = {
        x: x,
        y: y
      };
    }

    a.sort(function (a, b) {
      return a.x - b.x;
    });
    pnt = new EasePoint(1, 1, null);
    i = points;

    while (--i > -1) {
      obj = a[i];
      pnt = new EasePoint(obj.x, obj.y, pnt);
    }

    this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);
  }, true);
  p = RoughEase.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */]();
  p.constructor = RoughEase;

  p.getRatio = function (p) {
    var pnt = this._prev;

    if (p > pnt.t) {
      while (pnt.next && p >= pnt.t) {
        pnt = pnt.next;
      }

      pnt = pnt.prev;
    } else {
      while (pnt.prev && p <= pnt.t) {
        pnt = pnt.prev;
      }
    }

    this._prev = pnt;
    return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;
  };

  p.config = function (vars) {
    return new RoughEase(vars);
  };

  RoughEase.ease = new RoughEase(); //Bounce

  _wrap("Bounce", _create("BounceOut", function (p) {
    if (p < 1 / 2.75) {
      return 7.5625 * p * p;
    } else if (p < 2 / 2.75) {
      return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;
    } else if (p < 2.5 / 2.75) {
      return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;
    }

    return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;
  }), _create("BounceIn", function (p) {
    if ((p = 1 - p) < 1 / 2.75) {
      return 1 - 7.5625 * p * p;
    } else if (p < 2 / 2.75) {
      return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);
    } else if (p < 2.5 / 2.75) {
      return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);
    }

    return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);
  }), _create("BounceInOut", function (p) {
    var invert = p < 0.5;

    if (invert) {
      p = 1 - p * 2;
    } else {
      p = p * 2 - 1;
    }

    if (p < 1 / 2.75) {
      p = 7.5625 * p * p;
    } else if (p < 2 / 2.75) {
      p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;
    } else if (p < 2.5 / 2.75) {
      p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;
    } else {
      p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;
    }

    return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;
  })); //CIRC


  _wrap("Circ", _create("CircOut", function (p) {
    return Math.sqrt(1 - (p = p - 1) * p);
  }), _create("CircIn", function (p) {
    return -(Math.sqrt(1 - p * p) - 1);
  }), _create("CircInOut", function (p) {
    return (p *= 2) < 1 ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);
  })); //Elastic


  _createElastic = function _createElastic(n, f, def) {
    var C = _class("easing." + n, function (amplitude, period) {
      this._p1 = amplitude >= 1 ? amplitude : 1; //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.

      this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);
      this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);
      this._p2 = _2PI / this._p2; //precalculate to optimize
    }, true),
        p = C.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */]();

    p.constructor = C;
    p.getRatio = f;

    p.config = function (amplitude, period) {
      return new C(amplitude, period);
    };

    return C;
  };

  _wrap("Elastic", _createElastic("ElasticOut", function (p) {
    return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;
  }, 0.3), _createElastic("ElasticIn", function (p) {
    return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));
  }, 0.3), _createElastic("ElasticInOut", function (p) {
    return (p *= 2) < 1 ? -0.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * 0.5 + 1;
  }, 0.45)); //Expo


  _wrap("Expo", _create("ExpoOut", function (p) {
    return 1 - Math.pow(2, -10 * p);
  }), _create("ExpoIn", function (p) {
    return Math.pow(2, 10 * (p - 1)) - 0.001;
  }), _create("ExpoInOut", function (p) {
    return (p *= 2) < 1 ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));
  })); //Sine


  _wrap("Sine", _create("SineOut", function (p) {
    return Math.sin(p * _HALF_PI);
  }), _create("SineIn", function (p) {
    return -Math.cos(p * _HALF_PI) + 1;
  }), _create("SineInOut", function (p) {
    return -0.5 * (Math.cos(Math.PI * p) - 1);
  }));

  _class("easing.EaseLookup", {
    find: function find(s) {
      return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */].map[s];
    }
  }, true); //register the non-standard eases


  _easeReg(w.SlowMo, "SlowMo", "ease,");

  _easeReg(RoughEase, "RoughEase", "ease,");

  _easeReg(SteppedEase, "SteppedEase", "ease,");

  return Back;
}, true);

var Back = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Back;
var Elastic = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Elastic;
var Bounce = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Bounce;
var RoughEase = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].RoughEase;
var SlowMo = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].SlowMo;
var SteppedEase = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].SteppedEase;
var Circ = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Circ;
var Expo = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Expo;
var Sine = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Sine;
var ExpoScaleEase = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].ExpoScaleEase;


/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export RoundPropsPlugin */
/* unused harmony export _getRoundFunc */
/* unused harmony export _roundLinkedList */
/* unused harmony export p */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RoundPropsPlugin; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 1.6.0
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */

var RoundPropsPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "roundProps",
  version: "1.7.0",
  priority: -1,
  API: 2,
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween) {
    this._tween = tween;
    return true;
  }
}),
    _getRoundFunc = function _getRoundFunc(v) {
  //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.
  var p = v < 1 ? Math.pow(10, (v + "").length - 2) : 1; //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed()

  return function (n) {
    return (Math.round(n / v) * v * p | 0) / p;
  };
},
    _roundLinkedList = function _roundLinkedList(node, mod) {
  while (node) {
    if (!node.f && !node.blob) {
      node.m = mod || Math.round;
    }

    node = node._next;
  }
},
    p = RoundPropsPlugin.prototype;

p._onInitAllProps = function () {
  var tween = this._tween,
      rp = tween.vars.roundProps,
      lookup = {},
      rpt = tween._propLookup.roundProps,
      pt,
      next,
      i,
      p;

  if (typeof rp === "object" && !rp.push) {
    for (p in rp) {
      lookup[p] = _getRoundFunc(rp[p]);
    }
  } else {
    if (typeof rp === "string") {
      rp = rp.split(",");
    }

    i = rp.length;

    while (--i > -1) {
      lookup[rp[i]] = Math.round;
    }
  }

  for (p in lookup) {
    pt = tween._firstPT;

    while (pt) {
      next = pt._next; //record here, because it may get removed

      if (pt.pg) {
        pt.t._mod(lookup);
      } else if (pt.n === p) {
        if (pt.f === 2 && pt.t) {
          //a blob (text containing multiple numeric values)
          _roundLinkedList(pt.t._firstPT, lookup[p]);
        } else {
          this._add(pt.t, p, pt.s, pt.c, lookup[p]); //remove from linked list


          if (next) {
            next._prev = pt._prev;
          }

          if (pt._prev) {
            pt._prev._next = next;
          } else if (tween._firstPT === pt) {
            tween._firstPT = next;
          }

          pt._next = pt._prev = null;
          tween._propLookup[p] = rpt;
        }
      }

      pt = next;
    }
  }

  return false;
};

p._add = function (target, p, s, c, mod) {
  this._addTween(target, p, s, s + c, p, mod || Math.round);

  this._overwriteProps.push(p);
};



/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export TweenMax */
/* unused harmony export TweenMaxBase */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TweenMax; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* unused harmony reexport TweenLite */
/* unused harmony reexport Ease */
/* unused harmony reexport Power0 */
/* unused harmony reexport Power1 */
/* unused harmony reexport Power2 */
/* unused harmony reexport Power3 */
/* unused harmony reexport Power4 */
/* unused harmony reexport Linear */
/*!
 * VERSION: 2.1.3
 * DATE: 2019-05-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */


__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function () {
  var _slice = function _slice(a) {
    //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
    var b = [],
        l = a.length,
        i;

    for (i = 0; i !== l; b.push(a[i++]));

    return b;
  },
      _applyCycle = function _applyCycle(vars, targets, i) {
    var alt = vars.cycle,
        p,
        val;

    for (p in alt) {
      val = alt[p];
      vars[p] = typeof val === "function" ? val(i, targets[i], targets) : val[i % val.length];
    }

    delete vars.cycle;
  },
      //for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following
  _distribute = function _distribute(v) {
    if (typeof v === "function") {
      return v;
    }

    var vars = typeof v === "object" ? v : {
      each: v
    },
        //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total "amount" that's chunked out among them all.
    ease = vars.ease,
        from = vars.from || 0,
        base = vars.base || 0,
        cache = {},
        isFromKeyword = isNaN(from),
        axis = vars.axis,
        ratio = {
      center: 0.5,
      end: 1
    }[from] || 0;
    return function (i, target, a) {
      var l = (a || vars).length,
          distances = cache[l],
          originX,
          originY,
          x,
          y,
          d,
          j,
          max,
          min,
          wrap;

      if (!distances) {
        wrap = vars.grid === "auto" ? 0 : (vars.grid || [Infinity])[0];

        if (!wrap) {
          max = -Infinity;

          while (max < (max = a[wrap++].getBoundingClientRect().left) && wrap < l) {}

          wrap--;
        }

        distances = cache[l] = [];
        originX = isFromKeyword ? Math.min(wrap, l) * ratio - 0.5 : from % wrap;
        originY = isFromKeyword ? l * ratio / wrap - 0.5 : from / wrap | 0;
        max = 0;
        min = Infinity;

        for (j = 0; j < l; j++) {
          x = j % wrap - originX;
          y = originY - (j / wrap | 0);
          distances[j] = d = !axis ? Math.sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);

          if (d > max) {
            max = d;
          }

          if (d < min) {
            min = d;
          }
        }

        distances.max = max - min;
        distances.min = min;
        distances.v = l = vars.amount || vars.each * (wrap > l ? l - 1 : !axis ? Math.max(wrap, l / wrap) : axis === "y" ? l / wrap : wrap) || 0;
        distances.b = l < 0 ? base - l : base;
      }

      l = (distances[i] - distances.min) / distances.max;
      return distances.b + (ease ? ease.getRatio(l) : l) * distances.v;
    };
  },
      TweenMax = function TweenMax(target, duration, vars) {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].call(this, target, duration, vars);
    this._cycle = 0;
    this._yoyo = this.vars.yoyo === true || !!this.vars.yoyoEase;
    this._repeat = this.vars.repeat || 0;
    this._repeatDelay = this.vars.repeatDelay || 0;

    if (this._repeat) {
      this._uncache(true); //ensures that if there is any repeat, the totalDuration will get recalculated to accurately report it.

    }

    this.render = TweenMax.prototype.render; //speed optimization (avoid prototype lookup on this "hot" method)
  },
      _tinyNum = 0.00000001,
      TweenLiteInternals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]._internals,
      _isSelector = TweenLiteInternals.isSelector,
      _isArray = TweenLiteInternals.isArray,
      p = TweenMax.prototype = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].to({}, 0.1, {}),
      _blankArray = [];

  TweenMax.version = "2.1.3";
  p.constructor = TweenMax;
  p.kill()._gc = false;
  TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].killTweensOf;
  TweenMax.getTweensOf = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].getTweensOf;
  TweenMax.lagSmoothing = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].lagSmoothing;
  TweenMax.ticker = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker;
  TweenMax.render = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].render;
  TweenMax.distribute = _distribute;

  p.invalidate = function () {
    this._yoyo = this.vars.yoyo === true || !!this.vars.yoyoEase;
    this._repeat = this.vars.repeat || 0;
    this._repeatDelay = this.vars.repeatDelay || 0;
    this._yoyoEase = null;

    this._uncache(true);

    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].prototype.invalidate.call(this);
  };

  p.updateTo = function (vars, resetDuration) {
    var self = this,
        curRatio = self.ratio,
        immediate = self.vars.immediateRender || vars.immediateRender,
        p;

    if (resetDuration && self._startTime < self._timeline._time) {
      self._startTime = self._timeline._time;

      self._uncache(false);

      if (self._gc) {
        self._enabled(true, false);
      } else {
        self._timeline.insert(self, self._startTime - self._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.

      }
    }

    for (p in vars) {
      self.vars[p] = vars[p];
    }

    if (self._initted || immediate) {
      if (resetDuration) {
        self._initted = false;

        if (immediate) {
          self.render(0, true, true);
        }
      } else {
        if (self._gc) {
          self._enabled(true, false);
        }

        if (self._notifyPluginsOfEnabled && self._firstPT) {
          __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]._onPluginEvent("_onDisable", self); //in case a plugin like MotionBlur must perform some cleanup tasks

        }

        if (self._time / self._duration > 0.998) {
          //if the tween has finished (or come extremely close to finishing), we just need to rewind it to 0 and then render it again at the end which forces it to re-initialize (parsing the new vars). We allow tweens that are close to finishing (but haven't quite finished) to work this way too because otherwise, the values are so small when determining where to project the starting values that binary math issues creep in and can make the tween appear to render incorrectly when run backwards.
          var prevTime = self._totalTime;
          self.render(0, true, false);
          self._initted = false;
          self.render(prevTime, true, false);
        } else {
          self._initted = false;

          self._init();

          if (self._time > 0 || immediate) {
            var inv = 1 / (1 - curRatio),
                pt = self._firstPT,
                endValue;

            while (pt) {
              endValue = pt.s + pt.c;
              pt.c *= inv;
              pt.s = endValue - pt.c;
              pt = pt._next;
            }
          }
        }
      }
    }

    return self;
  };

  p.render = function (time, suppressEvents, force) {
    if (!this._initted) if (this._duration === 0 && this.vars.repeat) {
      //zero duration tweens that render immediately have render() called from TweenLite's constructor, before TweenMax's constructor has finished setting _repeat, _repeatDelay, and _yoyo which are critical in determining totalDuration() so we need to call invalidate() which is a low-kb way to get those set properly.
      this.invalidate();
    }
    var self = this,
        totalDur = !self._dirty ? self._totalDuration : self.totalDuration(),
        prevTime = self._time,
        prevTotalTime = self._totalTime,
        prevCycle = self._cycle,
        duration = self._duration,
        prevRawPrevTime = self._rawPrevTime,
        isComplete,
        callback,
        pt,
        cycleDuration,
        r,
        type,
        pow,
        rawPrevTime,
        yoyoEase;

    if (time >= totalDur - _tinyNum && time >= 0) {
      //to work around occasional floating point math artifacts.
      self._totalTime = totalDur;
      self._cycle = self._repeat;

      if (self._yoyo && (self._cycle & 1) !== 0) {
        self._time = 0;
        self.ratio = self._ease._calcEnd ? self._ease.getRatio(0) : 0;
      } else {
        self._time = duration;
        self.ratio = self._ease._calcEnd ? self._ease.getRatio(1) : 1;
      }

      if (!self._reversed) {
        isComplete = true;
        callback = "onComplete";
        force = force || self._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.
      }

      if (duration === 0) if (self._initted || !self.vars.lazy || force) {
        //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the "playhead" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's "playhead" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.
        if (self._startTime === self._timeline._duration) {
          //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.
          time = 0;
        }

        if (prevRawPrevTime < 0 || time <= 0 && time >= -_tinyNum || prevRawPrevTime === _tinyNum && self.data !== "isPause") if (prevRawPrevTime !== time) {
          //note: when this.data is "isPause", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.
          force = true;

          if (prevRawPrevTime > _tinyNum) {
            callback = "onReverseComplete";
          }
        }
        self._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
      }
    } else if (time < _tinyNum) {
      //to work around occasional floating point math artifacts, round super small values to 0.
      self._totalTime = self._time = self._cycle = 0;
      self.ratio = self._ease._calcEnd ? self._ease.getRatio(0) : 0;

      if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {
        callback = "onReverseComplete";
        isComplete = self._reversed;
      }

      if (time > -_tinyNum) {
        time = 0;
      } else if (time < 0) {
        self._active = false;
        if (duration === 0) if (self._initted || !self.vars.lazy || force) {
          //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the "playhead" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's "playhead" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.
          if (prevRawPrevTime >= 0) {
            force = true;
          }

          self._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
        }
      }

      if (!self._initted) {
        //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.
        force = true;
      }
    } else {
      self._totalTime = self._time = time;

      if (self._repeat !== 0) {
        cycleDuration = duration + self._repeatDelay;
        self._cycle = self._totalTime / cycleDuration >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)

        if (self._cycle !== 0) if (self._cycle === self._totalTime / cycleDuration && prevTotalTime <= time) {
          self._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)
        }
        self._time = self._totalTime - self._cycle * cycleDuration;
        if (self._yoyo) if ((self._cycle & 1) !== 0) {
          self._time = duration - self._time;
          yoyoEase = self._yoyoEase || self.vars.yoyoEase; //note: we don't set this._yoyoEase in _init() like we do other properties because it's TweenMax-specific and doing it here allows us to optimize performance (most tweens don't have a yoyoEase). Note that we also must skip the this.ratio calculation further down right after we _init() in this function, because we're doing it here.

          if (yoyoEase) {
            if (!self._yoyoEase) {
              if (yoyoEase === true && !self._initted) {
                //if it's not initted and yoyoEase is true, this._ease won't have been populated yet so we must discern it here.
                yoyoEase = self.vars.ease;
                self._yoyoEase = yoyoEase = !yoyoEase ? __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].defaultEase : yoyoEase instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */] ? yoyoEase : typeof yoyoEase === "function" ? new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */](yoyoEase, self.vars.easeParams) : __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */].map[yoyoEase] || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].defaultEase;
              } else {
                self._yoyoEase = yoyoEase = yoyoEase === true ? self._ease : yoyoEase instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */] ? yoyoEase : __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["c" /* Ease */].map[yoyoEase];
              }
            }

            self.ratio = yoyoEase ? 1 - yoyoEase.getRatio((duration - self._time) / duration) : 0;
          }
        }

        if (self._time > duration) {
          self._time = duration;
        } else if (self._time < 0) {
          self._time = 0;
        }
      }

      if (self._easeType && !yoyoEase) {
        r = self._time / duration;
        type = self._easeType;
        pow = self._easePower;

        if (type === 1 || type === 3 && r >= 0.5) {
          r = 1 - r;
        }

        if (type === 3) {
          r *= 2;
        }

        if (pow === 1) {
          r *= r;
        } else if (pow === 2) {
          r *= r * r;
        } else if (pow === 3) {
          r *= r * r * r;
        } else if (pow === 4) {
          r *= r * r * r * r;
        }

        self.ratio = type === 1 ? 1 - r : type === 2 ? r : self._time / duration < 0.5 ? r / 2 : 1 - r / 2;
      } else if (!yoyoEase) {
        self.ratio = self._ease.getRatio(self._time / duration);
      }
    }

    if (prevTime === self._time && !force && prevCycle === self._cycle) {
      if (prevTotalTime !== self._totalTime) if (self._onUpdate) if (!suppressEvents) {
        //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.
        self._callback("onUpdate");
      }
      return;
    } else if (!self._initted) {
      self._init();

      if (!self._initted || self._gc) {
        //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.
        return;
      } else if (!force && self._firstPT && (self.vars.lazy !== false && self._duration || self.vars.lazy && !self._duration)) {
        //we stick it in the queue for rendering at the very end of the tick - this is a performance optimization because browsers invalidate styles and force a recalculation if you read, write, and then read style data (so it's better to read/read/read/write/write/write than read/write/read/write/read/write). The down side, of course, is that usually you WANT things to render immediately because you may have code running right after that which depends on the change. Like imagine running TweenLite.set(...) and then immediately after that, creating a nother tween that animates the same property to another value; the starting values of that 2nd tween wouldn't be accurate if lazy is true.
        self._time = prevTime;
        self._totalTime = prevTotalTime;
        self._rawPrevTime = prevRawPrevTime;
        self._cycle = prevCycle;
        TweenLiteInternals.lazyTweens.push(self);
        self._lazy = [time, suppressEvents];
        return;
      } //_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.


      if (self._time && !isComplete && !yoyoEase) {
        self.ratio = self._ease.getRatio(self._time / duration);
      } else if (isComplete && this._ease._calcEnd && !yoyoEase) {
        self.ratio = self._ease.getRatio(self._time === 0 ? 0 : 1);
      }
    }

    if (self._lazy !== false) {
      self._lazy = false;
    }

    if (!self._active) if (!self._paused && self._time !== prevTime && time >= 0) {
      self._active = true; //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.
    }

    if (prevTotalTime === 0) {
      if (self._initted === 2 && time > 0) {
        self._init(); //will just apply overwriting since _initted of (2) means it was a from() tween that had immediateRender:true

      }

      if (self._startAt) {
        if (time >= 0) {
          self._startAt.render(time, true, force);
        } else if (!callback) {
          callback = "_dummyGS"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.
        }
      }

      if (self.vars.onStart) if (self._totalTime !== 0 || duration === 0) if (!suppressEvents) {
        self._callback("onStart");
      }
    }

    pt = self._firstPT;

    while (pt) {
      if (pt.f) {
        pt.t[pt.p](pt.c * self.ratio + pt.s);
      } else {
        pt.t[pt.p] = pt.c * self.ratio + pt.s;
      }

      pt = pt._next;
    }

    if (self._onUpdate) {
      if (time < 0) if (self._startAt && self._startTime) {
        //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.
        self._startAt.render(time, true, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.

      }
      if (!suppressEvents) if (self._totalTime !== prevTotalTime || callback) {
        self._callback("onUpdate");
      }
    }

    if (self._cycle !== prevCycle) if (!suppressEvents) if (!self._gc) if (self.vars.onRepeat) {
      self._callback("onRepeat");
    }
    if (callback) if (!self._gc || force) {
      //check gc because there's a chance that kill() could be called in an onUpdate
      if (time < 0 && self._startAt && !self._onUpdate && self._startTime) {
        //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.
        self._startAt.render(time, true, force);
      }

      if (isComplete) {
        if (self._timeline.autoRemoveChildren) {
          self._enabled(false, false);
        }

        self._active = false;
      }

      if (!suppressEvents && self.vars[callback]) {
        self._callback(callback);
      }

      if (duration === 0 && self._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {
        //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the "time" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.
        self._rawPrevTime = 0;
      }
    }
  }; //---- STATIC FUNCTIONS -----------------------------------------------------------------------------------------------------------


  TweenMax.to = function (target, duration, vars) {
    return new TweenMax(target, duration, vars);
  };

  TweenMax.from = function (target, duration, vars) {
    vars.runBackwards = true;
    vars.immediateRender = vars.immediateRender != false;
    return new TweenMax(target, duration, vars);
  };

  TweenMax.fromTo = function (target, duration, fromVars, toVars) {
    toVars.startAt = fromVars;
    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;
    return new TweenMax(target, duration, toVars);
  };

  TweenMax.staggerTo = TweenMax.allTo = function (targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
    var a = [],
        staggerFunc = _distribute(vars.stagger || stagger),
        cycle = vars.cycle,
        fromCycle = (vars.startAt || _blankArray).cycle,
        l,
        copy,
        i,
        p;

    if (!_isArray(targets)) {
      if (typeof targets === "string") {
        targets = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].selector(targets) || targets;
      }

      if (_isSelector(targets)) {
        targets = _slice(targets);
      }
    }

    targets = targets || [];
    l = targets.length - 1;

    for (i = 0; i <= l; i++) {
      copy = {};

      for (p in vars) {
        copy[p] = vars[p];
      }

      if (cycle) {
        _applyCycle(copy, targets, i);

        if (copy.duration != null) {
          duration = copy.duration;
          delete copy.duration;
        }
      }

      if (fromCycle) {
        fromCycle = copy.startAt = {};

        for (p in vars.startAt) {
          fromCycle[p] = vars.startAt[p];
        }

        _applyCycle(copy.startAt, targets, i);
      }

      copy.delay = staggerFunc(i, targets[i], targets) + (copy.delay || 0);

      if (i === l && onCompleteAll) {
        copy.onComplete = function () {
          if (vars.onComplete) {
            vars.onComplete.apply(vars.onCompleteScope || this, arguments);
          }

          onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);
        };
      }

      a[i] = new TweenMax(targets[i], duration, copy);
    }

    return a;
  };

  TweenMax.staggerFrom = TweenMax.allFrom = function (targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
    vars.runBackwards = true;
    vars.immediateRender = vars.immediateRender != false;
    return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);
  };

  TweenMax.staggerFromTo = TweenMax.allFromTo = function (targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
    toVars.startAt = fromVars;
    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;
    return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);
  };

  TweenMax.delayedCall = function (delay, callback, params, scope, useFrames) {
    return new TweenMax(callback, 0, {
      delay: delay,
      onComplete: callback,
      onCompleteParams: params,
      callbackScope: scope,
      onReverseComplete: callback,
      onReverseCompleteParams: params,
      immediateRender: false,
      useFrames: useFrames,
      overwrite: 0
    });
  };

  TweenMax.set = function (target, vars) {
    return new TweenMax(target, 0, vars);
  };

  TweenMax.isTweening = function (target) {
    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].getTweensOf(target, true).length > 0;
  };

  var _getChildrenOf = function _getChildrenOf(timeline, includeTimelines) {
    var a = [],
        cnt = 0,
        tween = timeline._first;

    while (tween) {
      if (tween instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */]) {
        a[cnt++] = tween;
      } else {
        if (includeTimelines) {
          a[cnt++] = tween;
        }

        a = a.concat(_getChildrenOf(tween, includeTimelines));
        cnt = a.length;
      }

      tween = tween._next;
    }

    return a;
  },
      getAllTweens = TweenMax.getAllTweens = function (includeTimelines) {
    return _getChildrenOf(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootTimeline, includeTimelines).concat(_getChildrenOf(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootFramesTimeline, includeTimelines));
  };

  TweenMax.killAll = function (complete, tweens, delayedCalls, timelines) {
    if (tweens == null) {
      tweens = true;
    }

    if (delayedCalls == null) {
      delayedCalls = true;
    }

    var a = getAllTweens(timelines != false),
        l = a.length,
        allTrue = tweens && delayedCalls && timelines,
        isDC,
        tween,
        i;

    for (i = 0; i < l; i++) {
      tween = a[i];

      if (allTrue || tween instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */] || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {
        if (complete) {
          tween.totalTime(tween._reversed ? 0 : tween.totalDuration());
        } else {
          tween._enabled(false, false);
        }
      }
    }
  };

  TweenMax.killChildTweensOf = function (parent, complete) {
    if (parent == null) {
      return;
    }

    var tl = TweenLiteInternals.tweenLookup,
        a,
        curParent,
        p,
        i,
        l;

    if (typeof parent === "string") {
      parent = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].selector(parent) || parent;
    }

    if (_isSelector(parent)) {
      parent = _slice(parent);
    }

    if (_isArray(parent)) {
      i = parent.length;

      while (--i > -1) {
        TweenMax.killChildTweensOf(parent[i], complete);
      }

      return;
    }

    a = [];

    for (p in tl) {
      curParent = tl[p].target.parentNode;

      while (curParent) {
        if (curParent === parent) {
          a = a.concat(tl[p].tweens);
        }

        curParent = curParent.parentNode;
      }
    }

    l = a.length;

    for (i = 0; i < l; i++) {
      if (complete) {
        a[i].totalTime(a[i].totalDuration());
      }

      a[i]._enabled(false, false);
    }
  };

  var _changePause = function _changePause(pause, tweens, delayedCalls, timelines) {
    tweens = tweens !== false;
    delayedCalls = delayedCalls !== false;
    timelines = timelines !== false;
    var a = getAllTweens(timelines),
        allTrue = tweens && delayedCalls && timelines,
        i = a.length,
        isDC,
        tween;

    while (--i > -1) {
      tween = a[i];

      if (allTrue || tween instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["e" /* SimpleTimeline */] || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {
        tween.paused(pause);
      }
    }
  };

  TweenMax.pauseAll = function (tweens, delayedCalls, timelines) {
    _changePause(true, tweens, delayedCalls, timelines);
  };

  TweenMax.resumeAll = function (tweens, delayedCalls, timelines) {
    _changePause(false, tweens, delayedCalls, timelines);
  };

  TweenMax.globalTimeScale = function (value) {
    var tl = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootTimeline,
        t = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.time;

    if (!arguments.length) {
      return tl._timeScale;
    }

    value = value || _tinyNum; //can't allow zero because it'll throw the math off

    tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;
    tl = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootFramesTimeline;
    t = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.frame;
    tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;
    tl._timeScale = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */]._rootTimeline._timeScale = value;
    return value;
  }; //---- GETTERS / SETTERS ----------------------------------------------------------------------------------------------------------


  p.progress = function (value, suppressEvents) {
    return !arguments.length ? this.duration() ? this._time / this._duration : this.ratio : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);
  };

  p.totalProgress = function (value, suppressEvents) {
    return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);
  };

  p.time = function (value, suppressEvents) {
    if (!arguments.length) {
      return this._time;
    }

    if (this._dirty) {
      this.totalDuration();
    }

    var duration = this._duration,
        cycle = this._cycle,
        cycleDur = cycle * (duration + this._repeatDelay);

    if (value > duration) {
      value = duration;
    }

    return this.totalTime(this._yoyo && cycle & 1 ? duration - value + cycleDur : this._repeat ? value + cycleDur : value, suppressEvents);
  };

  p.duration = function (value) {
    if (!arguments.length) {
      return this._duration; //don't set _dirty = false because there could be repeats that haven't been factored into the _totalDuration yet. Otherwise, if you create a repeated TweenMax and then immediately check its duration(), it would cache the value and the totalDuration would not be correct, thus repeats wouldn't take effect.
    }

    return __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["f" /* Animation */].prototype.duration.call(this, value);
  };

  p.totalDuration = function (value) {
    if (!arguments.length) {
      if (this._dirty) {
        //instead of Infinity, we use 999999999999 so that we can accommodate reverses
        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;
        this._dirty = false;
      }

      return this._totalDuration;
    }

    return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));
  };

  p.repeat = function (value) {
    if (!arguments.length) {
      return this._repeat;
    }

    this._repeat = value;
    return this._uncache(true);
  };

  p.repeatDelay = function (value) {
    if (!arguments.length) {
      return this._repeatDelay;
    }

    this._repeatDelay = value;
    return this._uncache(true);
  };

  p.yoyo = function (value) {
    if (!arguments.length) {
      return this._yoyo;
    }

    this._yoyo = value;
    return this;
  };

  return TweenMax;
}, true);

var TweenMax = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].TweenMax;
var TweenMaxBase = TweenMax;



/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(115),
    mapCacheDelete = __webpack_require__(116),
    mapCacheGet = __webpack_require__(117),
    mapCacheHas = __webpack_require__(118),
    mapCacheSet = __webpack_require__(119);
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `MapCache`.


MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
module.exports = MapCache;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(75),
    arraySome = __webpack_require__(82),
    cacheHas = __webpack_require__(92);
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */

function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  } // Assume cyclic values are equal.


  var stacked = stack.get(array);

  if (stacked && stack.get(other)) {
    return stacked == other;
  }

  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
  stack.set(array, other);
  stack.set(other, array); // Ignore non-index properties.

  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }

    if (compared !== undefined) {
      if (compared) {
        continue;
      }

      result = false;
      break;
    } // Recursively compare arrays (susceptible to call stack limits).


    if (seen) {
      if (!arraySome(other, function (othValue, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }

  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
module.exports = freeGlobal;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))

/***/ }),
/* 36 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */

function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}

    try {
      return func + '';
    } catch (e) {}
  }

  return '';
}

module.exports = toSource;

/***/ }),
/* 37 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

module.exports = eq;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(2),
    stubFalse = __webpack_require__(138);
/** Detect free variable `exports`. */


var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */

var Buffer = moduleExports ? root.Buffer : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */

var isBuffer = nativeIsBuffer || stubFalse;
module.exports = isBuffer;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(10),
    isObject = __webpack_require__(41);
/** `Object#toString` result references. */


var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */

function isFunction(value) {
  if (!isObject(value)) {
    return false;
  } // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.


  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

/***/ }),
/* 40 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */

function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

/***/ }),
/* 41 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(88),
    baseUnary = __webpack_require__(91),
    nodeUtil = __webpack_require__(122);
/* Node.js helper references. */


var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */

var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
module.exports = isTypedArray;

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_firebase_app__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_firebase_firestore__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_firebase_storage__ = __webpack_require__(61);


 // Your web app's Firebase configuration

const firebaseConfig = {
  apiKey: 'AIzaSyADgPf9rpJamT3hDg5P9UaCYrFWfxXAHps',
  authDomain: 'barba-v2.firebaseapp.com',
  databaseURL: 'https://barba-v2.firebaseio.com',
  projectId: 'barba-v2',
  storageBucket: 'barba-v2.appspot.com',
  messagingSenderId: '1045458665835',
  appId: '1:1045458665835:web:ae10b06bf726c27f'
}; // Initialize Firebase

__WEBPACK_IMPORTED_MODULE_0_firebase_app___default.a.initializeApp(firebaseConfig);
const db = __WEBPACK_IMPORTED_MODULE_0_firebase_app___default.a.firestore();
/* harmony default export */ __webpack_exports__["a"] = (db);

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return qs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return qsa; });
/* unused harmony export $parent */
/* unused harmony export $offset */
/* unused harmony export $outerWidth */
/* unused harmony export $outerHeight */
/* unused harmony export $insertAfter */
/* unused harmony export $siblings */
/* unused harmony export $nextSiblings */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return $on; });
/* unused harmony export $off */
/* unused harmony export $trigger */
/* unused harmony export $delegate */
/* unused harmony export forEach */
/* unused harmony export map */

/**
 * Get element by CSS selector.
 *
 * @param {String} selector CSS selector
 * @param {HTMLElement} scope DOM element to query inside
 * @returns {HTMLElement} queried DOM element
 */

function qs(selector, scope) {
  return (scope || document).querySelector(selector);
}
/**
 * Get elements by CSS selector.
 *
 * @param {String} selector CSS selector
 * @param {HTMLElement} scope DOM element to query inside
 * @returns {NodeList} queried DOM elements
 */


function qsa(selector, scope) {
  return (scope || document).querySelectorAll(selector);
}
/**
 * Find the element's parent with the given CSS selector
 *
 * @param {HTMLElement} element child element
 * @param {String} selector CSS selector
 * @returns {HTMLElement|undefined} parent DOM Element
 * @example
 * $parent(qs('a'), 'div');
 */


function $parent(element, selector) {
  if (!element.parentNode || typeof element.parentNode.matches !== 'function') {
    return undefined;
  }

  if (element.parentNode.matches(selector)) {
    return element.parentNode;
  }

  return $parent(element.parentNode, selector);
}
/**
 * Get element's offset
 *
 * @param {HTMLElement} element DOM element
 * @returns {Object} top, right, bottom and left values
 */


function $offset(element) {
  const currentY = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
  const currentX = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;
  const bounding = element.getBoundingClientRect();
  return {
    top: bounding.top + currentY,
    right: bounding.left + currentX + bounding.width,
    bottom: bounding.top + currentY + bounding.height,
    left: bounding.left + currentX
  };
}
/**
* Get element's height including margins
*
* @param {HTMLElement} element DOM element
* @returns {number} height
*/


function $outerWidth(element) {
  let width = element.offsetWidth;
  const style = getComputedStyle(element);
  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);
  return width;
}
/**
 * Get element's height including margins
 *
 * @param {HTMLElement} element DOM element
 * @returns {number} width
 */


function $outerHeight(element) {
  let height = element.offsetHeight;
  const style = getComputedStyle(element);
  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);
  return height;
}
/**
 * Insert anelement after another.
 *
 * @param {HTMLElement} newElement DOM element to insert
 * @param {HTMLElement} referenceElement reference DOM element
 * @returns {undefined}
 */


function $insertAfter(newElement, referenceElement) {
  referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);
}
/**
 * Get element's siblings.
 *
 * @param {HTMLElement} element DOM element to find siblings
 * @returns {Array} siblings
 */


function $siblings(element) {
  return [...element.parentNode.children].filter(child => child !== element);
}
/**
* Get element's next siblings.
*
* @param {HTMLElement} element DOM element to find siblings
* @returns {Array} next siblings
*/


function $nextSiblings(element) {
  const siblings = [];
  let sibling = element.nextElementSibling;

  while (sibling) {
    siblings.push(sibling);
    sibling = sibling.nextElementSibling;
  }

  return siblings;
}
/**
 * Add Event Listener wrapper.
 *
 * @param {HTMLElement} target DOM target element
 * @param {String} type event type
 * @param {Function} callback callback
 * @param {Boolean} useCapture capture event
 * @returns {undefined}
 */


function $on(target, type, callback, useCapture) {
  target.addEventListener(type, callback, Boolean(useCapture));
}
/**
 * Remove Event Listener.
 *
 * @param {HTMLElement} target DOM target element
 * @param {String} type event type
 * @param {Function} callback callback
 * @returns {undefined}
 */


function $off(target, type, callback) {
  target.removeEventListener(type, callback);
}
/**
 * Trigger HTMLEvent.
 *
 * @param {HTMLElement} target DOM target element
 * @param {String} type event type
 * @returns {undefined}
 */


function $trigger(target, type) {
  // For a full list of event types: https://developer.mozilla.org/en-US/docs/Web/API/document.createEvent
  const event = document.createEvent('HTMLEvents');
  event.initEvent(type, true, false);
  target.dispatchEvent(event);
}
/**
* Attach a handler to event for all elements that match the selector, now or in the future, based on a root element.
*
* @param {HTMLElement} target DOM root element
* @param {String} selector CSS selector
* @param {String} type event type
* @param {Function} handler handler
* @returns {undefined}
*/


function $delegate(target, selector, type, handler) {
  // https://developer.mozilla.org/en-US/docs/Web/Events/blur
  const useCapture = type === 'blur' || type === 'focus';
  $on(target, type, dispatchEvent, useCapture);
  /**
   * Callback
   *
   * @param {Event} event triggered event
   * @returns {*} handler return
   */

  function dispatchEvent(event) {
    const targetElement = event.target.matches(selector) ? event.target : $parent(event.target, selector);
    const potentialElements = qsa(selector, target);
    const hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0;

    if (hasMatch) {
      handler.call(targetElement, event);
    }
  }
}
/**
 * ForEach for array/object (basic version)
 *
 * @param {Array|Object} collection "collection" to loop over
 * @param {Function} iteratee callback
 * @returns {Array|Object} initial collection
 */


function forEach(collection, iteratee) {
  if (collection.forEach === undefined) {
    Object.keys(collection).forEach(key => {
      iteratee(collection[key], key);
    });
  } else {
    collection.forEach(iteratee);
  }

  return collection;
}
/**
 * Map for array/object (basic version)
 *
 * @param {Array|Object} collection "collection" to loop over
 * @param {Function} iteratee callback
 * @returns {Array} "mapped" array
 */


function map(collection, iteratee) {
  if (collection.map === undefined) {
    return Object.keys(collection).map(key => iteratee(collection[key], key));
  }

  return collection.map(iteratee);
}

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

!function (t, i) {
   true ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (t = t || self).barbaRouter = i();
}(this, function () {
  var t = "2.1.10";
  return new (function () {
    function i() {
      this.name = "@barba/router", this.version = t, this.routeNames = [], this.routesByName = {};
    }

    var n = i.prototype;
    return n.install = function (t, i) {
      var n = this,
          e = (void 0 === i ? {} : i).routes,
          o = void 0 === e ? [] : e;
      this.logger = new t.Logger(this.name), this.logger.info(this.version), this.barba = t, o.forEach(function (t) {
        var i = t.name,
            e = t.path,
            o = [],
            r = n.barba.helpers.pathToRegexp(e, o);
        n.routeNames.indexOf(i) > -1 ? console.warn("[@barba/router] Duplicated route name (" + i + ")") : (n.routeNames.push(i), n.routesByName[i] = {
          keys: o,
          path: e,
          regex: r
        });
      }), t.schemaPage.route = void 0;
    }, n.init = function () {
      this.barba.transitions.store.add("rule", {
        position: 1,
        value: {
          name: "route",
          type: "object"
        }
      }), this.barba.hooks.page(this.resolveRoutes, this), this.barba.hooks.reset(this.resolveRoutes, this);
    }, n.resolveUrl = function (t) {
      for (var i = this, n = this.barba.url.parse(t).path, e = {
        name: name,
        params: {}
      }, o = function o(t, _o) {
        var r = i.routeNames[t],
            s = i.routesByName[r],
            u = s.keys,
            f = s.regex.exec(n);
        if (null !== f) return e.name = r, u.forEach(function (t, i) {
          e.params[t.name] = f[i + 1];
        }), {
          v: e
        };
      }, r = 0, s = this.routeNames.length; r < s; r++) {
        var u = o(r);
        if ("object" == typeof u) return u.v;
      }

      return null;
    }, n.resolveRoutes = function (t) {
      var i = t.current,
          n = t.next;
      i.route = i.url.href ? this.resolveUrl(i.url.href) : void 0, n.route = n.url.href ? this.resolveUrl(n.url.href) : void 0;
    }, i;
  }())();
});

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__appear__ = __webpack_require__(156);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__appear__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__raf__ = __webpack_require__(157);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__raf__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__resize__ = __webpack_require__(158);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__resize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scroll__ = __webpack_require__(159);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_3__scroll__["a"]; });





/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gsap_TweenMax__ = __webpack_require__(7);

/* harmony default export */ __webpack_exports__["a"] = ({
  leave(data) {
    return new Promise(resolve => {
      __WEBPACK_IMPORTED_MODULE_0_gsap_TweenMax__["b" /* TweenMax */].to(data.current.container, 0.4, {
        opacity: 0,
        ease: 'Power4.easeIn',
        onComplete: () => {
          data.current.container.style.display = 'none';
          resolve();
        }
      });
    });
  },

  enter(data) {
    const done = this.async();
    document.body.scrollTop = 0;
    document.documentElement.scrollTop = 0;
    __WEBPACK_IMPORTED_MODULE_0_gsap_TweenMax__["b" /* TweenMax */].from(data.next.container, 0.7, {
      opacity: 0,
      ease: 'Power4.easeInOut',
      onComplete: () => {
        done();
      }
    });
  }

});

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gsap_TimelineMax__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__ = __webpack_require__(7);


const {
  docs
} = window.BARBA;
const docsUrlOrderedList = [];

for (let i = 0; i < docs.length; i++) {
  if (docs[i].subpages) {
    for (let j = 0; j < docs[i].subpages.length; j++) {
      docsUrlOrderedList.push(docs[i].subpages[j].url);
    }
  } else {
    docsUrlOrderedList.push(docs[i].url);
  }
}

/* harmony default export */ __webpack_exports__["a"] = ({
  sync: false,
  from: {
    route: 'doc'
  },
  to: {
    route: 'doc'
  },

  leave(data) {
    return new Promise(resolve => {
      const background = data.current.container.querySelector('.docs__page-transition');
      const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_TimelineMax__["b" /* TimelineMax */]();
      const currentPage = data.current.url.path;
      const nextPage = data.next.url.path;

      if (docsUrlOrderedList.indexOf(currentPage) < docsUrlOrderedList.indexOf(nextPage)) {
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].set(background, {
          xPercent: 110,
          display: 'block',
          skewX: -10
        }));
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].to(background, 1, {
          xPercent: 0,
          ease: 'Power4.easeInOut',
          skewX: 0,
          onComplete: () => {
            resolve();
          }
        }));
      } else {
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].set(background, {
          xPercent: -110,
          display: 'block',
          skewX: 10
        }));
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].to(background, 1, {
          xPercent: 0,
          ease: 'Power4.easeInOut',
          skewX: 0,
          onComplete: () => {
            resolve();
          }
        }));
      }
    });
  },

  enter(data) {
    return new Promise(resolve => {
      resolve();
      document.body.scrollTop = 0;
      document.documentElement.scrollTop = 0;
      const background = data.next.container.querySelector('.docs__page-transition');
      const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_TimelineMax__["b" /* TimelineMax */]();
      const currentPage = data.current.url.path;
      const nextPage = data.next.url.path;

      if (docsUrlOrderedList.indexOf(currentPage) < docsUrlOrderedList.indexOf(nextPage)) {
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].set(background, {
          xPercent: 0,
          display: 'block'
        }));
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].to(background, 0.6, {
          xPercent: -100,
          ease: 'Power4.easeInOut'
        }));
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].set(background, {
          display: 'none'
        }));
      } else {
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].set(background, {
          xPercent: 0,
          display: 'block'
        }));
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].to(background, 0.6, {
          xPercent: 100,
          ease: 'Power4.easeInOut'
        }));
        tl.add(__WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["b" /* TweenMax */].set(background, {
          display: 'none'
        }));
      }
    });
  }

});

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__ = __webpack_require__(7);

 // Return true for forward, false for backwards

/**
 * Get namespace from pages
 *
 * @param {int} currentFeatureOrder page namepspace
 * @param {int} nextFeatureOrder page namepspace
 * @returns {string} Page namespace
 */

function isForward(currentFeatureOrder, nextFeatureOrder) {
  const oldIndex = Number(currentFeatureOrder);
  const newIndex = Number(nextFeatureOrder);
  const featureNav = document.querySelector('.menu-subpages__list');
  const featureLength = featureNav.children.length;
  console.log(featureLength); // From last to first

  if (oldIndex === featureLength - 1 && newIndex === 0) {
    return true;
  } // From first to last


  if (oldIndex === 0 && newIndex === featureLength - 1) {
    return false;
  }

  return oldIndex < newIndex;
}

/* harmony default export */ __webpack_exports__["a"] = ({
  from: {
    route: 'feature'
  },
  to: {
    route: 'feature'
  },

  leave(_ref) {
    let {
      current,
      next
    } = _ref;
    return new Promise(async resolve => {
      document.body.scrollTop = 0;
      document.documentElement.scrollTop = 0;
      const {
        container
      } = current;
      const currentFeatureSlug = container.querySelector('.feature').dataset.featureSlug;
      const currentFeatureOrder = container.querySelector('.feature').dataset.featureOrder;
      const nextFeatureOrder = next.container.querySelector('.feature').dataset.featureOrder;
      const goingForward = isForward(currentFeatureOrder, nextFeatureOrder);
      const featureContainer = container.querySelector('.feature__container');
      const featureBox = container.querySelector('.feature__box');
      const featureInstance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__app__["b" /* getInstance */])(container, 'feature');
      const logo = container.querySelector('.logo');
      const logoShapes = container.querySelector('.logo.only-big');
      const nextLogo = next.container.querySelector('.logo');
      const nextLogoShapes = next.container.querySelector('.logo.only-big');

      if (currentFeatureSlug !== 'about') {
        await featureInstance.animateOut();
      }

      container.querySelector('.menu-trigger').style.opacity = '0';
      resolve();
      const tl = new __WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["a" /* TimelineMax */]();
      featureBox && tl.to(featureBox, 1, {
        x: goingForward ? -window.innerWidth * 0.3 : window.innerWidth * 0.3,
        ease: 'Power4.easeInOut'
      }, 0);
      tl.to(featureContainer, 1.5, {
        x: goingForward ? -window.innerWidth : window.innerWidth,
        rotationY: goingForward ? '45deg' : '-45deg',
        ease: 'Power4.easeInOut'
      }, 0).to(logoShapes, 1, {
        opacity: 0,
        ease: 'Power4.easeInOut'
      }, 0).to(logo, 0.5, {
        opacity: 0,
        ease: 'Power4.easeInOut'
      }, 0).from(nextLogoShapes, 1, {
        opacity: 0,
        ease: 'Power4.easeOut'
      }, 0).from(nextLogo, 0.5, {
        opacity: 0,
        ease: 'Power4.easeOut'
      }, 0);
    });
  },

  enter(_ref2) {
    let {
      current,
      next
    } = _ref2;
    return new Promise(resolve => {
      const {
        container
      } = next;
      const nextFeatureSlug = container.querySelector('.feature').dataset.featureSlug;
      const currentFeatureOrder = current.container.querySelector('.feature').dataset.featureOrder;
      const nextFeatureOrder = container.querySelector('.feature').dataset.featureOrder;
      const goingForward = isForward(currentFeatureOrder, nextFeatureOrder);
      const featureContainer = container.querySelector('.feature__container');
      const featureBox = container.querySelector('.feature__box');
      const featureInstance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__app__["b" /* getInstance */])(container, 'feature');
      const tl = new __WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["a" /* TimelineMax */]({
        onComplete: () => {
          resolve();
        }
      });
      featureBox && tl.from(featureBox, 1.5, {
        x: goingForward ? window.innerWidth * 0.5 : -window.innerWidth * 0.5,
        ease: 'Power4.easeOut'
      }, 1);
      tl.from(featureContainer, 1.5, {
        x: goingForward ? window.innerWidth : -window.innerWidth,
        rotationY: goingForward ? '-45deg' : '45deg',
        ease: 'Power4.easeOut',
        onComplete: () => {
          if (nextFeatureSlug !== 'about') {
            featureInstance.animateIn();
          }
        }
      }, 0.5);
    });
  }

});

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gsap_all__ = __webpack_require__(20);

/* harmony default export */ __webpack_exports__["a"] = ({
  sync: true,
  from: {
    route: 'feature'
  },
  to: {
    route: 'home'
  },

  leave(data) {
    return new Promise(resolve => {
      const container = data.current.container.querySelector('.feature__container');
      const navigation = data.current.container.querySelectorAll('.feature__nav__el');
      const oldLogo = data.current.container.querySelectorAll('.logo.featured .base, .logo.featured .hover');
      const fullOldLogo = data.current.container.querySelectorAll('.logo.featured');
      const oldBigShape = data.current.container.querySelector('.logo.only-big');
      data.current.container.querySelector('.menu-trigger').style.opacity = '0';
      const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_all__["a" /* TimelineMax */]({
        onComplete: () => {
          resolve();
        }
      });
      tl.to(oldLogo, 0.3, {
        opacity: 0
      }, 1);
      tl.to(oldBigShape, 1.5, {
        y: 100,
        opacity: 0,
        ease: 'Power4.easeIn'
      }, 0.4);
      tl.to(fullOldLogo, 1, {
        opacity: 0
      }, 1.3);
      tl.to(container, 1, {
        y: 100,
        opacity: 0,
        ease: 'Power4.easeIn'
      }, 0);
      tl.to(navigation, 0.5, {
        y: 30,
        opacity: 0,
        ease: 'Power4.easeIn'
      }, 0.2);
    });
  },

  enter(data) {
    return new Promise(resolve => {
      const newLogo = data.next.container.querySelector('.logo');
      const newLogoSVG = newLogo.querySelector('svg');
      const oldLogo = data.current.container.querySelector('.logo.featured');
      const title = data.next.container.querySelectorAll('h1 span');
      const buttons = data.next.container.querySelectorAll('.intro__buttons a');
      const oldLogoRect = oldLogo.getBoundingClientRect();
      const newLogoRect = newLogo.getBoundingClientRect();
      const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_all__["a" /* TimelineMax */]({
        onComplete: () => {
          resolve();
        }
      });
      const scale = oldLogoRect.width / newLogoRect.width;
      newLogoSVG.classList.add('fillgray');
      tl.set(newLogo, {
        scale,
        // y: -((oldLogoRect.top - newLogoRect.top) + ((newLogoRect.height * scale) * 2) - 6),
        y: -(newLogoRect.top - oldLogoRect.top) - 40,
        opacity: 0
      });
      tl.add(() => {
        newLogoSVG.classList.remove('fillgray');
      }, 1.5);
      tl.to(newLogo, 0.3, {
        opacity: 1
      }, 1);
      tl.to(newLogo, 1, {
        scale: 1,
        y: 0,
        ease: 'Power4.easeInOut'
      }, 1.3);
      tl.staggerFrom(title, 1, {
        yPercent: 100,
        ease: 'Power4.easeOut'
      }, 0.05, 1.6);
      tl.staggerFrom(buttons, 1, {
        y: 40,
        opacity: 0,
        ease: 'Power4.easeOut'
      }, 0.05, 1.7);
    });
  }

});

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gsap_all__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__source_js_utils_deferred__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__featuresOrder__ = __webpack_require__(161);





/* harmony default export */ __webpack_exports__["a"] = ({
  sync: true,
  from: {
    route: 'home'
  },
  to: {
    route: 'feature'
  },

  leave(_ref) {
    let {
      current,
      next
    } = _ref;
    return new Promise(resolve => {
      const intro = current.container.querySelector('.intro');
      const oldLogo = current.container.querySelector('.logo.home-logo');
      const newLogo = next.container.querySelector('.logo.featured');
      const title = current.container.querySelectorAll('h1 span');
      const buttons = current.container.querySelectorAll('.intro__buttons a');
      const list = current.container.querySelector('.intro__list');
      const {
        featureSlug
      } = next.container.querySelector('.feature').dataset;
      const hoverIndex = __WEBPACK_IMPORTED_MODULE_4__featuresOrder__["a" /* default */].indexOf(featureSlug);
      const bigShape = current.container.querySelectorAll('.logo.only-big .hover .item')[hoverIndex];
      const oldBigShape = current.container.querySelector('.logo.only-big');
      const newBigShape = next.container.querySelector('.logo.only-big');
      newBigShape.classList.remove('can-move');
      current.container.style.zIndex = -1;
      oldLogo.querySelector('svg').classList.add('fillgray');
      const oldLogoRect = oldLogo.getBoundingClientRect();
      const newLogoRect = newLogo.getBoundingClientRect();
      const oldBigShapeRect = oldBigShape.getBoundingClientRect();
      const newBigShapeRect = newBigShape.getBoundingClientRect();
      current.container.querySelector('.menu-trigger').style.opacity = '0';
      intro.classList.add('to-feature');
      const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_all__["a" /* TimelineMax */]({
        onComplete: () => {
          newBigShape.classList.add('can-move');
          resolve();
        }
      });
      const scale = newLogoRect.width / oldLogoRect.width; // TweenMax.set(newBigShape, { opacity: 0 });

      tl.to(oldLogo, 1.4, {
        scale,
        y: -(oldLogoRect.top - newLogoRect.top + newLogoRect.height * scale * 2 - 6),
        ease: 'Power4.easeInOut'
      }, 0);
      __WEBPACK_IMPORTED_MODULE_0_gsap_all__["b" /* TweenMax */].killTweensOf(bigShape);
      tl.to(bigShape, 0.1, {
        opacity: 1
      }, 0);
      tl.to(oldBigShape, 1.3, {
        y: newBigShapeRect.top - oldBigShapeRect.top,
        ease: 'Power4.easeInOut'
      }, 0.1);
      tl.to(oldBigShape, 0.2, {
        opacity: 0
      }, 1.4);
      tl.from(newBigShape, 0.01, {
        opacity: 0
      }, 1.4);
      tl.add(() => {
        bigShape.classList.add('grow');
      }, 0);
      tl.to(list, 0.8, {
        opacity: 0,
        ease: 'Power4.easeIn'
      }, 0);
      tl.staggerTo(title, 1, {
        yPercent: 100,
        ease: 'Power4.easeInOut'
      }, 0.05, 0);
      tl.staggerTo(buttons, 1, {
        y: 40,
        opacity: 0,
        ease: 'Power4.easeIn'
      }, 0.05, 0.1);
    });
  },

  enter(_ref2) {
    let {
      next
    } = _ref2;
    return new Promise(resolve => {
      const {
        container
      } = next;
      const newLogo = container.querySelector('.logo.featured');
      const featureContainer = container.querySelector('.feature__container');
      const navigation = container.querySelectorAll('.feature__nav__el');
      const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_all__["a" /* TimelineMax */]({
        delay: 1.3,
        onComplete: () => {
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__app__["b" /* getInstance */])(next.container, 'feature').animateIn();
          resolve();
        }
      });
      tl.from(newLogo, 1, {
        opacity: 0
      }, 0);
      tl.from(featureContainer, 1, {
        opacity: 0,
        y: 200,
        ease: 'Power4.easeOut',
        rotationX: '20deg'
      }, 0);
      tl.staggerFrom(navigation, 0.4, {
        opacity: 0,
        y: 30,
        ease: 'Power4.easeOut'
      }, 0.2, 0.8);
    });
  }

});
/**
 *
 * @param {*HTMLElement} data getting container
 */

function oldEnder(data) {
  data.next.container.style.cssText = "\n    visibility: hidden;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  ";
  const current = {};
  current.$logo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["a" /* qs */])('.logo', data.current.container), current.logoRect = current.$logo.getBoundingClientRect();
  current.$morphParent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["a" /* qs */])('.big1', current.$logo);
  current.$morphs = [...__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["b" /* qsa */])('[data-morph]', current.$morphParent)];
  current.$fadeOut = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["b" /* qsa */])('.intro h1, .intro .button');
  const next = {};
  next.$logo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["a" /* qs */])('.logo', data.next.container), next.logoRect = next.$logo.getBoundingClientRect();
  next.$morphParent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["a" /* qs */])('.big1', next.$logo);
  next.$morphs = [...__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["b" /* qsa */])('[data-morph]', next.$morphParent)];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__source_js_utils_dom__["a" /* qs */])('svg', current.$logo).classList.add('fillgray');
  const dfd = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_deferred__["a" /* default */])();
  const tl = new __WEBPACK_IMPORTED_MODULE_0_gsap_all__["a" /* TimelineMax */]({
    onComplete: () => {
      data.next.container.style.cssText = '';
      dfd.resolve();
    }
  });
  tl.to(current.$logo, 2, {
    y: next.logoRect.y - current.logoRect.y - 40,
    width: next.logoRect.width
  }, 0);
  tl.staggerTo(current.$fadeOut, 0.4, {
    y: 50,
    opacity: 0
  }, 0.1);
  tl.to(current.$morphParent, 1, {
    opacity: 1
  }, 0);
  current.$morphs.forEach((el, index) => {
    tl.to(el, 3, {
      // transformOrigin: next.$morphs[index].style.transformOrigin,
      transform: getComputedStyle(next.$morphs[index]).transform
    }, 0.1 + 0.1 * index);
  });
  tl.add('crossfade');
  tl.set(data.next.container, {
    visibility: 'visible',
    opacity: 0
  }, 'crossfade');
  tl.to(data.next.container, 1, {
    opacity: 1
  }, 'crossfade');
  tl.to(data.current.container, 1, {
    opacity: 0
  }, 'crossfade');
  return dfd.promise;
}

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__ = __webpack_require__(7);


/* harmony default export */ __webpack_exports__["a"] = ({
  to: {
    namespace: 'feature'
  },
  once: (_ref) => {
    let {
      next
    } = _ref;
    const {
      container
    } = next;
    const nextFeatureSlug = container.querySelector('.feature').dataset.featureSlug;
    const featureContainer = container.querySelector('.feature__container');
    const featureBox = container.querySelector('.feature__box');
    const featureInstance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__app__["b" /* getInstance */])(container, 'feature');
    const tl = new __WEBPACK_IMPORTED_MODULE_1_gsap_TweenMax__["a" /* TimelineMax */]();
    featureBox && tl.from(featureBox, 1.5, {
      y: 100,
      opacity: 0,
      ease: 'Power4.easeOut'
    }, 0.5);
    tl.from(featureContainer, 1, {
      y: 100,
      opacity: 0,
      ease: 'Power4.easeOut',
      onComplete: () => {
        if (nextFeatureSlug !== 'about') {
          featureInstance.animateIn();
        }
      }
    }, 0.5);
  }
});

/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  to: {
    namespace: 'home'
  },

  once() {
    console.log('once home');
  }

});

/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ([{
  path: '/features/:type',
  name: 'feature'
}, {
  path: '/docs/:section/:subsection',
  name: 'doc'
}, {
  path: '/:page',
  name: 'page'
}, {
  path: '/',
  name: 'home'
}]);

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./chrome/Header.js": 144,
	"./chrome/Menu.js": 145,
	"./chrome/MenuTrigger.js": 146,
	"./docs/DocsNav.js": 147,
	"./docs/DocsNavLateral.js": 148,
	"./features/Feature.js": 149,
	"./homepage/Intro.js": 150,
	"./showcase/Form.js": 151,
	"./showcase/Modal.js": 152,
	"./showcase/ShowcaseCta.js": 153,
	"./showcase/ShowcaseGrid.js": 154,
	"./showcase/Spinner.js": 155
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 56;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {Object.defineProperty(exports,'__esModule',{value:true});function _interopDefault(ex){return ex&&typeof ex==='object'&&'default'in ex?ex['default']:ex;}var firebase=_interopDefault(__webpack_require__(15));var tslib=__webpack_require__(4);var logger=__webpack_require__(25);var util=__webpack_require__(17);var component=__webpack_require__(16);var webchannelWrapper=__webpack_require__(59);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** The semver (www.semver.org) version of the SDK. */var SDK_VERSION=firebase.SDK_VERSION;/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var logClient=new logger.Logger('@firebase/firestore');var LogLevel;(function(LogLevel){LogLevel[LogLevel["DEBUG"]=0]="DEBUG";LogLevel[LogLevel["ERROR"]=1]="ERROR";LogLevel[LogLevel["SILENT"]=2]="SILENT";})(LogLevel||(LogLevel={}));// Helper methods are needed because variables can't be exported as read/write
function getLogLevel(){if(logClient.logLevel===logger.LogLevel.DEBUG){return LogLevel.DEBUG;}else if(logClient.logLevel===logger.LogLevel.SILENT){return LogLevel.SILENT;}else{return LogLevel.ERROR;}}function setLogLevel(newLevel){/**
     * Map the new log level to the associated Firebase Log Level
     */switch(newLevel){case LogLevel.DEBUG:logClient.logLevel=logger.LogLevel.DEBUG;break;case LogLevel.ERROR:logClient.logLevel=logger.LogLevel.ERROR;break;case LogLevel.SILENT:logClient.logLevel=logger.LogLevel.SILENT;break;default:logClient.error("Firestore ("+SDK_VERSION+"): Invalid value passed to `setLogLevel`");}}function debug(tag,msg){var obj=[];for(var _i=2;_i<arguments.length;_i++){obj[_i-2]=arguments[_i];}if(logClient.logLevel<=logger.LogLevel.DEBUG){var args=obj.map(argToString);logClient.debug.apply(logClient,tslib.__spreadArrays(["Firestore ("+SDK_VERSION+") ["+tag+"]: "+msg],args));}}function error(msg){var obj=[];for(var _i=1;_i<arguments.length;_i++){obj[_i-1]=arguments[_i];}if(logClient.logLevel<=logger.LogLevel.ERROR){var args=obj.map(argToString);logClient.error.apply(logClient,tslib.__spreadArrays(["Firestore ("+SDK_VERSION+"): "+msg],args));}}/**
 * Converts an additional log parameter to a string representation.
 */function argToString(obj){if(typeof obj==='string'){return obj;}else{var platform=PlatformSupport.getPlatform();try{return platform.formatJSON(obj);}catch(e){// Converting to JSON failed, just log the object directly
return obj;}}}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Unconditionally fails, throwing an Error with the given message.
 *
 * Returns any so it can be used in expressions:
 * @example
 * let futureVar = fail('not implemented yet');
 */function fail(failure){// Log the failure in addition to throw an exception, just in case the
// exception is swallowed.
var message="FIRESTORE ("+SDK_VERSION+") INTERNAL ASSERTION FAILED: "+failure;error(message);// NOTE: We don't use FirestoreError here because these are internal failures
// that cannot be handled by the user. (Also it would create a circular
// dependency between the error and assert modules which doesn't work.)
throw new Error(message);}/**
 * Fails if the given assertion condition is false, throwing an Error with the
 * given message if it did.
 */function assert(assertion,message){if(!assertion){fail(message);}}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Provides singleton helpers where setup code can inject a platform at runtime.
 * setPlatform needs to be set before Firestore is used and must be set exactly
 * once.
 */var PlatformSupport=/** @class */function(){function PlatformSupport(){}PlatformSupport.setPlatform=function(platform){if(PlatformSupport.platform){fail('Platform already defined');}PlatformSupport.platform=platform;};PlatformSupport.getPlatform=function(){if(!PlatformSupport.platform){fail('Platform not set');}return PlatformSupport.platform;};return PlatformSupport;}();/**
 * Returns the representation of an empty "proto" byte string for the
 * platform.
 */function emptyByteString(){return PlatformSupport.getPlatform().emptyByteString;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var Code={// Causes are copied from:
// https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
/** Not an error; returned on success. */OK:'ok',/** The operation was cancelled (typically by the caller). */CANCELLED:'cancelled',/** Unknown error or an error from a different error domain. */UNKNOWN:'unknown',/**
     * Client specified an invalid argument. Note that this differs from
     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
     * problematic regardless of the state of the system (e.g., a malformed file
     * name).
     */INVALID_ARGUMENT:'invalid-argument',/**
     * Deadline expired before operation could complete. For operations that
     * change the state of the system, this error may be returned even if the
     * operation has completed successfully. For example, a successful response
     * from a server could have been delayed long enough for the deadline to
     * expire.
     */DEADLINE_EXCEEDED:'deadline-exceeded',/** Some requested entity (e.g., file or directory) was not found. */NOT_FOUND:'not-found',/**
     * Some entity that we attempted to create (e.g., file or directory) already
     * exists.
     */ALREADY_EXISTS:'already-exists',/**
     * The caller does not have permission to execute the specified operation.
     * PERMISSION_DENIED must not be used for rejections caused by exhausting
     * some resource (use RESOURCE_EXHAUSTED instead for those errors).
     * PERMISSION_DENIED must not be used if the caller can not be identified
     * (use UNAUTHENTICATED instead for those errors).
     */PERMISSION_DENIED:'permission-denied',/**
     * The request does not have valid authentication credentials for the
     * operation.
     */UNAUTHENTICATED:'unauthenticated',/**
     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
     * entire file system is out of space.
     */RESOURCE_EXHAUSTED:'resource-exhausted',/**
     * Operation was rejected because the system is not in a state required for
     * the operation's execution. For example, directory to be deleted may be
     * non-empty, an rmdir operation is applied to a non-directory, etc.
     *
     * A litmus test that may help a service implementor in deciding
     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
     *  (a) Use UNAVAILABLE if the client can retry just the failing call.
     *  (b) Use ABORTED if the client should retry at a higher-level
     *      (e.g., restarting a read-modify-write sequence).
     *  (c) Use FAILED_PRECONDITION if the client should not retry until
     *      the system state has been explicitly fixed. E.g., if an "rmdir"
     *      fails because the directory is non-empty, FAILED_PRECONDITION
     *      should be returned since the client should not retry unless
     *      they have first fixed up the directory by deleting files from it.
     *  (d) Use FAILED_PRECONDITION if the client performs conditional
     *      REST Get/Update/Delete on a resource and the resource on the
     *      server does not match the condition. E.g., conflicting
     *      read-modify-write on the same resource.
     */FAILED_PRECONDITION:'failed-precondition',/**
     * The operation was aborted, typically due to a concurrency issue like
     * sequencer check failures, transaction aborts, etc.
     *
     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
     * and UNAVAILABLE.
     */ABORTED:'aborted',/**
     * Operation was attempted past the valid range. E.g., seeking or reading
     * past end of file.
     *
     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
     * if the system state changes. For example, a 32-bit file system will
     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
     * an offset past the current file size.
     *
     * There is a fair bit of overlap between FAILED_PRECONDITION and
     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
     * when it applies so that callers who are iterating through a space can
     * easily look for an OUT_OF_RANGE error to detect when they are done.
     */OUT_OF_RANGE:'out-of-range',/** Operation is not implemented or not supported/enabled in this service. */UNIMPLEMENTED:'unimplemented',/**
     * Internal errors. Means some invariants expected by underlying System has
     * been broken. If you see one of these errors, Something is very broken.
     */INTERNAL:'internal',/**
     * The service is currently unavailable. This is a most likely a transient
     * condition and may be corrected by retrying with a backoff.
     *
     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
     * and UNAVAILABLE.
     */UNAVAILABLE:'unavailable',/** Unrecoverable data loss or corruption. */DATA_LOSS:'data-loss'};/**
 * An error class used for Firestore-generated errors. Ideally we should be
 * using FirebaseError, but integrating with it is overly arduous at the moment,
 * so we define our own compatible error class (with a `name` of 'FirebaseError'
 * and compatible `code` and `message` fields.)
 */var FirestoreError=/** @class */function(_super){tslib.__extends(FirestoreError,_super);function FirestoreError(code,message){var _this=_super.call(this,message)||this;_this.code=code;_this.message=message;_this.name='FirebaseError';// HACK: We write a toString property directly because Error is not a real
// class and so inheritance does not work correctly. We could alternatively
// do the same "back-door inheritance" trick that FirebaseError does.
_this.toString=function(){return _this.name+": [code="+_this.code+"]: "+_this.message;};return _this;}return FirestoreError;}(Error);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Helper function to prevent instantiation through the constructor.
 *
 * This method creates a new constructor that throws when it's invoked.
 * The prototype of that constructor is then set to the prototype of the hidden
 * "class" to expose all the prototype methods and allow for instanceof
 * checks.
 *
 * To also make all the static methods available, all properties of the
 * original constructor are copied to the new constructor.
 */function makeConstructorPrivate(cls,optionalMessage){function PublicConstructor(){var error='This constructor is private.';if(optionalMessage){error+=' ';error+=optionalMessage;}throw new FirestoreError(Code.INVALID_ARGUMENT,error);}// Make sure instanceof checks work and all methods are exposed on the public
// constructor
PublicConstructor.prototype=cls.prototype;// Copy any static methods/members
for(var staticProperty in cls){if(cls.hasOwnProperty(staticProperty)){// eslint-disable-next-line @typescript-eslint/no-explicit-any
PublicConstructor[staticProperty]=cls[staticProperty];}}// eslint-disable-next-line @typescript-eslint/no-explicit-any
return PublicConstructor;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function contains(obj,key){return Object.prototype.hasOwnProperty.call(obj,key);}/** Returns the given value if it's defined or the defaultValue otherwise. */function defaulted(value,defaultValue){return value!==undefined?value:defaultValue;}function forEachNumber(obj,fn){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var num=Number(key);if(!isNaN(num)){fn(num,obj[key]);}}}}function values(obj){var vs=[];forEach(obj,function(_,v){return vs.push(v);});return vs;}function forEach(obj,fn){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){fn(key,obj[key]);}}}function isEmpty(obj){assert(obj!=null&&typeof obj==='object','isEmpty() expects object parameter.');for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){return false;}}return true;}function shallowCopy(obj){assert(obj&&typeof obj==='object','shallowCopy() expects object parameter.');var result={};for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){result[key]=obj[key];}}return result;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Validates that no arguments were passed in the invocation of functionName.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateNoArgs('myFunction', arguments);
 */function validateNoArgs(functionName,args){if(args.length!==0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() does not support arguments, "+'but was called with '+formatPlural(args.length,'argument')+'.');}}/**
 * Validates the invocation of functionName has the exact number of arguments.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateExactNumberOfArgs('myFunction', arguments, 2);
 */function validateExactNumberOfArgs(functionName,args,numberOfArgs){if(args.length!==numberOfArgs){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires "+formatPlural(numberOfArgs,'argument')+', but was called with '+formatPlural(args.length,'argument')+'.');}}/**
 * Validates the invocation of functionName has at least the provided number of
 * arguments (but can have many more).
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateAtLeastNumberOfArgs('myFunction', arguments, 2);
 */function validateAtLeastNumberOfArgs(functionName,args,minNumberOfArgs){if(args.length<minNumberOfArgs){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires at least "+formatPlural(minNumberOfArgs,'argument')+', but was called with '+formatPlural(args.length,'argument')+'.');}}/**
 * Validates the invocation of functionName has number of arguments between
 * the values provided.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);
 */function validateBetweenNumberOfArgs(functionName,args,minNumberOfArgs,maxNumberOfArgs){if(args.length<minNumberOfArgs||args.length>maxNumberOfArgs){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires between "+minNumberOfArgs+" and "+(maxNumberOfArgs+" arguments, but was called with ")+formatPlural(args.length,'argument')+'.');}}/**
 * Validates the provided argument is an array and has as least the expected
 * number of elements.
 */function validateNamedArrayAtLeastNumberOfElements(functionName,value,name,minNumberOfElements){if(!(value instanceof Array)||value.length<minNumberOfElements){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires its "+name+" argument to be an "+'array with at least '+(formatPlural(minNumberOfElements,'element')+"."));}}/**
 * Validates the provided positional argument has the native JavaScript type
 * using typeof checks.
 */function validateArgType(functionName,type,position,argument){validateType(functionName,type,ordinal(position)+" argument",argument);}/**
 * Validates the provided argument has the native JavaScript type using
 * typeof checks or is undefined.
 */function validateOptionalArgType(functionName,type,position,argument){if(argument!==undefined){validateArgType(functionName,type,position,argument);}}/**
 * Validates the provided named option has the native JavaScript type using
 * typeof checks.
 */function validateNamedType(functionName,type,optionName,argument){validateType(functionName,type,optionName+" option",argument);}/**
 * Validates the provided named option has the native JavaScript type using
 * typeof checks or is undefined.
 */function validateNamedOptionalType(functionName,type,optionName,argument){if(argument!==undefined){validateNamedType(functionName,type,optionName,argument);}}function validateArrayElements(functionName,optionName,typeDescription,argument,validator){if(!(argument instanceof Array)){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires its "+optionName+" "+("option to be an array, but it was: "+valueDescription(argument)));}for(var i=0;i<argument.length;++i){if(!validator(argument[i])){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires all "+optionName+" "+("elements to be "+typeDescription+", but the value at index "+i+" ")+("was: "+valueDescription(argument[i])));}}}function validateOptionalArrayElements(functionName,optionName,typeDescription,argument,validator){if(argument!==undefined){validateArrayElements(functionName,optionName,typeDescription,argument,validator);}}/**
 * Validates that the provided named option equals one of the expected values.
 */function validateNamedPropertyEquals(functionName,inputName,optionName,input,expected){var expectedDescription=[];for(var _i=0,expected_1=expected;_i<expected_1.length;_i++){var val=expected_1[_i];if(val===input){return;}expectedDescription.push(valueDescription(val));}var actualDescription=valueDescription(input);throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid value "+actualDescription+" provided to function "+functionName+"() for option "+("\""+optionName+"\". Acceptable values: "+expectedDescription.join(', ')));}/**
 * Validates that the provided named option equals one of the expected values or
 * is undefined.
 */function validateNamedOptionalPropertyEquals(functionName,inputName,optionName,input,expected){if(input!==undefined){validateNamedPropertyEquals(functionName,inputName,optionName,input,expected);}}/**
 * Validates that the provided argument is a valid enum.
 *
 * @param functionName Function making the validation call.
 * @param enums Array containing all possible values for the enum.
 * @param position Position of the argument in `functionName`.
 * @param argument Arugment to validate.
 */function validateStringEnum(functionName,enums,position,argument){if(!enums.some(function(element){return element===argument;})){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid value "+valueDescription(argument)+" provided to function "+(functionName+"() for its "+ordinal(position)+" argument. Acceptable ")+("values: "+enums.join(', ')));}}/** Helper to validate the type of a provided input. */function validateType(functionName,type,inputName,input){var valid=false;if(type==='object'){valid=isPlainObject(input);}else if(type==='non-empty string'){valid=typeof input==='string'&&input!=='';}else{valid=typeof input===type;}if(!valid){var description=valueDescription(input);throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires its "+inputName+" "+("to be of type "+type+", but it was: "+description));}}/**
 * Returns true if it's a non-null object without a custom prototype
 * (i.e. excludes Array, Date, etc.).
 */function isPlainObject(input){return typeof input==='object'&&input!==null&&(Object.getPrototypeOf(input)===Object.prototype||Object.getPrototypeOf(input)===null);}/** Returns a string describing the type / value of the provided input. */function valueDescription(input){if(input===undefined){return'undefined';}else if(input===null){return'null';}else if(typeof input==='string'){if(input.length>20){input=input.substring(0,20)+"...";}return JSON.stringify(input);}else if(typeof input==='number'||typeof input==='boolean'){return''+input;}else if(typeof input==='object'){if(input instanceof Array){return'an array';}else{var customObjectName=tryGetCustomObjectType(input);if(customObjectName){return"a custom "+customObjectName+" object";}else{return'an object';}}}else if(typeof input==='function'){return'a function';}else{return fail('Unknown wrong type: '+typeof input);}}/** Hacky method to try to get the constructor name for an object. */function tryGetCustomObjectType(input){if(input.constructor){var funcNameRegex=/function\s+([^\s(]+)\s*\(/;var results=funcNameRegex.exec(input.constructor.toString());if(results&&results.length>1){return results[1];}}return null;}/** Validates the provided argument is defined. */function validateDefined(functionName,position,argument){if(argument===undefined){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires a valid "+ordinal(position)+" "+"argument, but it was undefined.");}}/**
 * Validates the provided positional argument is an object, and its keys and
 * values match the expected keys and types provided in optionTypes.
 */function validateOptionNames(functionName,options,optionNames){forEach(options,function(key,_){if(optionNames.indexOf(key)<0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Unknown option '"+key+"' passed to function "+functionName+"(). "+'Available options: '+optionNames.join(', '));}});}/**
 * Helper method to throw an error that the provided argument did not pass
 * an instanceof check.
 */function invalidClassError(functionName,type,position,argument){var description=valueDescription(argument);return new FirestoreError(Code.INVALID_ARGUMENT,"Function "+functionName+"() requires its "+ordinal(position)+" "+("argument to be a "+type+", but it was: "+description));}function validatePositiveNumber(functionName,position,n){if(n<=0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function \""+functionName+"()\" requires its "+ordinal(position)+" argument to be a positive number, but it was: "+n+".");}}/** Converts a number to its english word representation */function ordinal(num){switch(num){case 1:return'first';case 2:return'second';case 3:return'third';default:return num+'th';}}/**
 * Formats the given word as plural conditionally given the preceding number.
 */function formatPlural(num,str){return num+" "+str+(num===1?'':'s');}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var AutoId=/** @class */function(){function AutoId(){}AutoId.newId=function(){// Alphanumeric characters
var chars='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var autoId='';for(var i=0;i<20;i++){autoId+=chars.charAt(Math.floor(Math.random()*chars.length));}assert(autoId.length===20,'Invalid auto ID: '+autoId);return autoId;};return AutoId;}();function primitiveComparator(left,right){if(left<right){return-1;}if(left>right){return 1;}return 0;}/** Helper to compare nullable (or undefined-able) objects using isEqual(). */function equals(left,right){if(left!==null&&left!==undefined){return!!(right&&left.isEqual(right));}else{// HACK: Explicitly cast since TypeScript's type narrowing apparently isn't
// smart enough.
return left===right;}}/** Helper to compare arrays using isEqual(). */function arrayEquals(left,right){if(left.length!==right.length){return false;}for(var i=0;i<left.length;i++){if(!left[i].isEqual(right[i])){return false;}}return true;}/**
 * Returns the immediate lexicographically-following string. This is useful to
 * construct an inclusive range for indexeddb iterators.
 */function immediateSuccessor(s){// Return the input string, with an additional NUL byte appended.
return s+'\0';}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** Helper function to assert Uint8Array is available at runtime. */function assertUint8ArrayAvailable(){if(typeof Uint8Array==='undefined'){throw new FirestoreError(Code.UNIMPLEMENTED,'Uint8Arrays are not available in this environment.');}}/** Helper function to assert Base64 functions are available at runtime. */function assertBase64Available(){if(!PlatformSupport.getPlatform().base64Available){throw new FirestoreError(Code.UNIMPLEMENTED,'Blobs are unavailable in Firestore in this environment.');}}/**
 * Immutable class holding a blob (binary data).
 * This class is directly exposed in the public API.
 *
 * Note that while you can't hide the constructor in JavaScript code, we are
 * using the hack above to make sure no-one outside this module can call it.
 */var Blob=/** @class */function(){function Blob(binaryString){assertBase64Available();this._binaryString=binaryString;}Blob.fromBase64String=function(base64){validateExactNumberOfArgs('Blob.fromBase64String',arguments,1);validateArgType('Blob.fromBase64String','string',1,base64);assertBase64Available();try{var binaryString=PlatformSupport.getPlatform().atob(base64);return new Blob(binaryString);}catch(e){throw new FirestoreError(Code.INVALID_ARGUMENT,'Failed to construct Blob from Base64 string: '+e);}};Blob.fromUint8Array=function(array){validateExactNumberOfArgs('Blob.fromUint8Array',arguments,1);assertUint8ArrayAvailable();if(!(array instanceof Uint8Array)){throw invalidClassError('Blob.fromUint8Array','Uint8Array',1,array);}// We can't call array.map directly because it expects the return type to
// be a Uint8Array, whereas we can convert it to a regular array by invoking
// map on the Array prototype.
var binaryString=Array.prototype.map.call(array,function(char){return String.fromCharCode(char);}).join('');return new Blob(binaryString);};Blob.prototype.toBase64=function(){validateExactNumberOfArgs('Blob.toBase64',arguments,0);assertBase64Available();return PlatformSupport.getPlatform().btoa(this._binaryString);};Blob.prototype.toUint8Array=function(){validateExactNumberOfArgs('Blob.toUint8Array',arguments,0);assertUint8ArrayAvailable();var buffer=new Uint8Array(this._binaryString.length);for(var i=0;i<this._binaryString.length;i++){buffer[i]=this._binaryString.charCodeAt(i);}return buffer;};Blob.prototype.toString=function(){return'Blob(base64: '+this.toBase64()+')';};Blob.prototype.isEqual=function(other){return this._binaryString===other._binaryString;};/**
     * Actually private to JS consumers of our API, so this function is prefixed
     * with an underscore.
     */Blob.prototype._compareTo=function(other){return primitiveComparator(this._binaryString,other._binaryString);};return Blob;}();// Public instance that disallows construction at runtime. This constructor is
// used when exporting Blob on firebase.firestore.Blob and will be called Blob
// publicly. Internally we still use Blob which has a type checked private
// constructor. Note that Blob and PublicBlob can be used interchangeably in
// instanceof checks.
// For our internal TypeScript code PublicBlob doesn't exist as a type, and so
// we need to use Blob as type and export it too.
var PublicBlob=makeConstructorPrivate(Blob,'Use Blob.fromUint8Array() or Blob.fromBase64String() instead.');/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var DatabaseInfo=/** @class */function(){/**
     * Constructs a DatabaseInfo using the provided host, databaseId and
     * persistenceKey.
     *
     * @param databaseId The database to use.
     * @param persistenceKey A unique identifier for this Firestore's local
     * storage (used in conjunction with the databaseId).
     * @param host The Firestore backend host to connect to.
     * @param ssl Whether to use SSL when connecting.
     * @param forceLongPolling Whether to use the forceLongPolling option
     * when using WebChannel as the network transport.
     */function DatabaseInfo(databaseId,persistenceKey,host,ssl,forceLongPolling){this.databaseId=databaseId;this.persistenceKey=persistenceKey;this.host=host;this.ssl=ssl;this.forceLongPolling=forceLongPolling;}return DatabaseInfo;}();/** The default database name for a project. */var DEFAULT_DATABASE_NAME='(default)';/** Represents the database ID a Firestore client is associated with. */var DatabaseId=/** @class */function(){function DatabaseId(projectId,database){this.projectId=projectId;this.database=database?database:DEFAULT_DATABASE_NAME;}Object.defineProperty(DatabaseId.prototype,"isDefaultDatabase",{get:function get(){return this.database===DEFAULT_DATABASE_NAME;},enumerable:true,configurable:true});DatabaseId.prototype.isEqual=function(other){return other instanceof DatabaseId&&other.projectId===this.projectId&&other.database===this.database;};DatabaseId.prototype.compareTo=function(other){return primitiveComparator(this.projectId,other.projectId)||primitiveComparator(this.database,other.database);};return DatabaseId;}();/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to
 * exceed. All subsequent calls to next will return increasing values. If provided with a
 * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as
 * well as write out sequence numbers that it produces via `next()`.
 */var ListenSequence=/** @class */function(){function ListenSequence(previousValue,sequenceNumberSyncer){var _this=this;this.previousValue=previousValue;if(sequenceNumberSyncer){sequenceNumberSyncer.sequenceNumberHandler=function(sequenceNumber){return _this.setPreviousValue(sequenceNumber);};this.writeNewSequenceNumber=function(sequenceNumber){return sequenceNumberSyncer.writeSequenceNumber(sequenceNumber);};}}ListenSequence.prototype.setPreviousValue=function(externalPreviousValue){this.previousValue=Math.max(externalPreviousValue,this.previousValue);return this.previousValue;};ListenSequence.prototype.next=function(){var nextValue=++this.previousValue;if(this.writeNewSequenceNumber){this.writeNewSequenceNumber(nextValue);}return nextValue;};ListenSequence.INVALID=-1;return ListenSequence;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var DOCUMENT_KEY_NAME='__name__';/**
 * Path represents an ordered sequence of string segments.
 */var BasePath=/** @class */function(){function BasePath(segments,offset,length){if(offset===undefined){offset=0;}else if(offset>segments.length){fail('offset '+offset+' out of range '+segments.length);}if(length===undefined){length=segments.length-offset;}else if(length>segments.length-offset){fail('length '+length+' out of range '+(segments.length-offset));}this.segments=segments;this.offset=offset;this.len=length;}Object.defineProperty(BasePath.prototype,"length",{get:function get(){return this.len;},enumerable:true,configurable:true});BasePath.prototype.isEqual=function(other){return BasePath.comparator(this,other)===0;};BasePath.prototype.child=function(nameOrPath){var segments=this.segments.slice(this.offset,this.limit());if(nameOrPath instanceof BasePath){nameOrPath.forEach(function(segment){segments.push(segment);});}else{segments.push(nameOrPath);}return this.construct(segments);};/** The index of one past the last segment of the path. */BasePath.prototype.limit=function(){return this.offset+this.length;};BasePath.prototype.popFirst=function(size){size=size===undefined?1:size;assert(this.length>=size,"Can't call popFirst() with less segments");return this.construct(this.segments,this.offset+size,this.length-size);};BasePath.prototype.popLast=function(){assert(!this.isEmpty(),"Can't call popLast() on empty path");return this.construct(this.segments,this.offset,this.length-1);};BasePath.prototype.firstSegment=function(){assert(!this.isEmpty(),"Can't call firstSegment() on empty path");return this.segments[this.offset];};BasePath.prototype.lastSegment=function(){return this.get(this.length-1);};BasePath.prototype.get=function(index){assert(index<this.length,'Index out of range');return this.segments[this.offset+index];};BasePath.prototype.isEmpty=function(){return this.length===0;};BasePath.prototype.isPrefixOf=function(other){if(other.length<this.length){return false;}for(var i=0;i<this.length;i++){if(this.get(i)!==other.get(i)){return false;}}return true;};BasePath.prototype.isImmediateParentOf=function(potentialChild){if(this.length+1!==potentialChild.length){return false;}for(var i=0;i<this.length;i++){if(this.get(i)!==potentialChild.get(i)){return false;}}return true;};BasePath.prototype.forEach=function(fn){for(var i=this.offset,end=this.limit();i<end;i++){fn(this.segments[i]);}};BasePath.prototype.toArray=function(){return this.segments.slice(this.offset,this.limit());};BasePath.comparator=function(p1,p2){var len=Math.min(p1.length,p2.length);for(var i=0;i<len;i++){var left=p1.get(i);var right=p2.get(i);if(left<right){return-1;}if(left>right){return 1;}}if(p1.length<p2.length){return-1;}if(p1.length>p2.length){return 1;}return 0;};return BasePath;}();/**
 * A slash-separated path for navigating resources (documents and collections)
 * within Firestore.
 */var ResourcePath=/** @class */function(_super){tslib.__extends(ResourcePath,_super);function ResourcePath(){return _super!==null&&_super.apply(this,arguments)||this;}ResourcePath.prototype.construct=function(segments,offset,length){return new ResourcePath(segments,offset,length);};ResourcePath.prototype.canonicalString=function(){// NOTE: The client is ignorant of any path segments containing escape
// sequences (e.g. __id123__) and just passes them through raw (they exist
// for legacy reasons and should not be used frequently).
return this.toArray().join('/');};ResourcePath.prototype.toString=function(){return this.canonicalString();};/**
     * Creates a resource path from the given slash-delimited string.
     */ResourcePath.fromString=function(path){// NOTE: The client is ignorant of any path segments containing escape
// sequences (e.g. __id123__) and just passes them through raw (they exist
// for legacy reasons and should not be used frequently).
if(path.indexOf('//')>=0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid path ("+path+"). Paths must not contain // in them.");}// We may still have an empty segment at the beginning or end if they had a
// leading or trailing slash (which we allow).
var segments=path.split('/').filter(function(segment){return segment.length>0;});return new ResourcePath(segments);};ResourcePath.EMPTY_PATH=new ResourcePath([]);return ResourcePath;}(BasePath);var identifierRegExp=/^[_a-zA-Z][_a-zA-Z0-9]*$/;/** A dot-separated path for navigating sub-objects within a document. */var FieldPath=/** @class */function(_super){tslib.__extends(FieldPath,_super);function FieldPath(){return _super!==null&&_super.apply(this,arguments)||this;}FieldPath.prototype.construct=function(segments,offset,length){return new FieldPath(segments,offset,length);};/**
     * Returns true if the string could be used as a segment in a field path
     * without escaping.
     */FieldPath.isValidIdentifier=function(segment){return identifierRegExp.test(segment);};FieldPath.prototype.canonicalString=function(){return this.toArray().map(function(str){str=str.replace('\\','\\\\').replace('`','\\`');if(!FieldPath.isValidIdentifier(str)){str='`'+str+'`';}return str;}).join('.');};FieldPath.prototype.toString=function(){return this.canonicalString();};/**
     * Returns true if this field references the key of a document.
     */FieldPath.prototype.isKeyField=function(){return this.length===1&&this.get(0)===DOCUMENT_KEY_NAME;};/**
     * The field designating the key of a document.
     */FieldPath.keyField=function(){return new FieldPath([DOCUMENT_KEY_NAME]);};/**
     * Parses a field string from the given server-formatted string.
     *
     * - Splitting the empty string is not allowed (for now at least).
     * - Empty segments within the string (e.g. if there are two consecutive
     *   separators) are not allowed.
     *
     * TODO(b/37244157): we should make this more strict. Right now, it allows
     * non-identifier path components, even if they aren't escaped.
     */FieldPath.fromServerFormat=function(path){var segments=[];var current='';var i=0;var addCurrentSegment=function addCurrentSegment(){if(current.length===0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid field path ("+path+"). Paths must not be empty, begin "+"with '.', end with '.', or contain '..'");}segments.push(current);current='';};var inBackticks=false;while(i<path.length){var c=path[i];if(c==='\\'){if(i+1===path.length){throw new FirestoreError(Code.INVALID_ARGUMENT,'Path has trailing escape character: '+path);}var next=path[i+1];if(!(next==='\\'||next==='.'||next==='`')){throw new FirestoreError(Code.INVALID_ARGUMENT,'Path has invalid escape sequence: '+path);}current+=next;i+=2;}else if(c==='`'){inBackticks=!inBackticks;i++;}else if(c==='.'&&!inBackticks){addCurrentSegment();i++;}else{current+=c;i++;}}addCurrentSegment();if(inBackticks){throw new FirestoreError(Code.INVALID_ARGUMENT,'Unterminated ` in path: '+path);}return new FieldPath(segments);};FieldPath.EMPTY_PATH=new FieldPath([]);return FieldPath;}(BasePath);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var DocumentKey=/** @class */function(){function DocumentKey(path){this.path=path;assert(DocumentKey.isDocumentKey(path),'Invalid DocumentKey with an odd number of segments: '+path.toArray().join('/'));}/** Returns true if the document is in the specified collectionId. */DocumentKey.prototype.hasCollectionId=function(collectionId){return this.path.length>=2&&this.path.get(this.path.length-2)===collectionId;};DocumentKey.prototype.isEqual=function(other){return other!==null&&ResourcePath.comparator(this.path,other.path)===0;};DocumentKey.prototype.toString=function(){return this.path.toString();};DocumentKey.comparator=function(k1,k2){return ResourcePath.comparator(k1.path,k2.path);};DocumentKey.isDocumentKey=function(path){return path.length%2===0;};/**
     * Creates and returns a new document key with the given segments.
     *
     * @param path The segments of the path to the document
     * @return A new instance of DocumentKey
     */DocumentKey.fromSegments=function(segments){return new DocumentKey(new ResourcePath(segments.slice()));};/**
     * Creates and returns a new document key using '/' to split the string into
     * segments.
     *
     * @param path The slash-separated path string to the document
     * @return A new instance of DocumentKey
     */DocumentKey.fromPathString=function(path){return new DocumentKey(ResourcePath.fromString(path));};DocumentKey.EMPTY=new DocumentKey(new ResourcePath([]));return DocumentKey;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var Deferred=/** @class */function(){function Deferred(){var _this=this;this.promise=new Promise(function(resolve,reject){_this.resolve=resolve;_this.reject=reject;});}return Deferred;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Wellknown "timer" IDs used when scheduling delayed operations on the
 * AsyncQueue. These IDs can then be used from tests to check for the presence
 * of operations or to run them early.
 *
 * The string values are used when encoding these timer IDs in JSON spec tests.
 */var TimerId;(function(TimerId){/** All can be used with runDelayedOperationsEarly() to run all timers. */TimerId["All"]="all";/**
     * The following 4 timers are used in persistent_stream.ts for the listen and
     * write streams. The "Idle" timer is used to close the stream due to
     * inactivity. The "ConnectionBackoff" timer is used to restart a stream once
     * the appropriate backoff delay has elapsed.
     */TimerId["ListenStreamIdle"]="listen_stream_idle";TimerId["ListenStreamConnectionBackoff"]="listen_stream_connection_backoff";TimerId["WriteStreamIdle"]="write_stream_idle";TimerId["WriteStreamConnectionBackoff"]="write_stream_connection_backoff";/**
     * A timer used in online_state_tracker.ts to transition from
     * OnlineState.Unknown to Offline after a set timeout, rather than waiting
     * indefinitely for success or failure.
     */TimerId["OnlineStateTimeout"]="online_state_timeout";/**
     * A timer used to update the client metadata in IndexedDb, which is used
     * to determine the primary leaseholder.
     */TimerId["ClientMetadataRefresh"]="client_metadata_refresh";/** A timer used to periodically attempt LRU Garbage collection */TimerId["LruGarbageCollection"]="lru_garbage_collection";/**
     * A timer used to retry transactions. Since there can be multiple concurrent
     * transactions, multiple of these may be in the queue at a given time.
     */TimerId["RetryTransaction"]="retry_transaction";})(TimerId||(TimerId={}));/**
 * Represents an operation scheduled to be run in the future on an AsyncQueue.
 *
 * It is created via DelayedOperation.createAndSchedule().
 *
 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
 */var DelayedOperation=/** @class */function(){function DelayedOperation(asyncQueue,timerId,targetTimeMs,op,removalCallback){this.asyncQueue=asyncQueue;this.timerId=timerId;this.targetTimeMs=targetTimeMs;this.op=op;this.removalCallback=removalCallback;this.deferred=new Deferred();this.then=this.deferred.promise.then.bind(this.deferred.promise);this.catch=this.deferred.promise.catch.bind(this.deferred.promise);// It's normal for the deferred promise to be canceled (due to cancellation)
// and so we attach a dummy catch callback to avoid
// 'UnhandledPromiseRejectionWarning' log spam.
this.deferred.promise.catch(function(err){});}/**
     * Creates and returns a DelayedOperation that has been scheduled to be
     * executed on the provided asyncQueue after the provided delayMs.
     *
     * @param asyncQueue The queue to schedule the operation on.
     * @param id A Timer ID identifying the type of operation this is.
     * @param delayMs The delay (ms) before the operation should be scheduled.
     * @param op The operation to run.
     * @param removalCallback A callback to be called synchronously once the
     *   operation is executed or canceled, notifying the AsyncQueue to remove it
     *   from its delayedOperations list.
     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
     *   the DelayedOperation class public.
     */DelayedOperation.createAndSchedule=function(asyncQueue,timerId,delayMs,op,removalCallback){var targetTime=Date.now()+delayMs;var delayedOp=new DelayedOperation(asyncQueue,timerId,targetTime,op,removalCallback);delayedOp.start(delayMs);return delayedOp;};/**
     * Starts the timer. This is called immediately after construction by
     * createAndSchedule().
     */DelayedOperation.prototype.start=function(delayMs){var _this=this;this.timerHandle=setTimeout(function(){return _this.handleDelayElapsed();},delayMs);};/**
     * Queues the operation to run immediately (if it hasn't already been run or
     * canceled).
     */DelayedOperation.prototype.skipDelay=function(){return this.handleDelayElapsed();};/**
     * Cancels the operation if it hasn't already been executed or canceled. The
     * promise will be rejected.
     *
     * As long as the operation has not yet been run, calling cancel() provides a
     * guarantee that the operation will not be run.
     */DelayedOperation.prototype.cancel=function(reason){if(this.timerHandle!==null){this.clearTimeout();this.deferred.reject(new FirestoreError(Code.CANCELLED,'Operation cancelled'+(reason?': '+reason:'')));}};DelayedOperation.prototype.handleDelayElapsed=function(){var _this=this;this.asyncQueue.enqueueAndForget(function(){if(_this.timerHandle!==null){_this.clearTimeout();return _this.op().then(function(result){return _this.deferred.resolve(result);});}else{return Promise.resolve();}});};DelayedOperation.prototype.clearTimeout=function(){if(this.timerHandle!==null){this.removalCallback(this);clearTimeout(this.timerHandle);this.timerHandle=null;}};return DelayedOperation;}();var AsyncQueue=/** @class */function(){function AsyncQueue(){// The last promise in the queue.
this.tail=Promise.resolve();// Is this AsyncQueue being shut down? Once it is set to true, it will not
// be changed again.
this._isShuttingDown=false;// Operations scheduled to be queued in the future. Operations are
// automatically removed after they are run or canceled.
this.delayedOperations=[];// visible for testing
this.failure=null;// Flag set while there's an outstanding AsyncQueue operation, used for
// assertion sanity-checks.
this.operationInProgress=false;// List of TimerIds to fast-forward delays for.
this.timerIdsToSkip=[];}Object.defineProperty(AsyncQueue.prototype,"isShuttingDown",{// Is this AsyncQueue being shut down? If true, this instance will not enqueue
// any new operations, Promises from enqueue requests will not resolve.
get:function get(){return this._isShuttingDown;},enumerable:true,configurable:true});/**
     * Adds a new operation to the queue without waiting for it to complete (i.e.
     * we ignore the Promise result).
     */AsyncQueue.prototype.enqueueAndForget=function(op){// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.enqueue(op);};/**
     * Regardless if the queue has initialized shutdown, adds a new operation to the
     * queue without waiting for it to complete (i.e. we ignore the Promise result).
     */AsyncQueue.prototype.enqueueAndForgetEvenAfterShutdown=function(op){this.verifyNotFailed();// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.enqueueInternal(op);};/**
     * Regardless if the queue has initialized shutdown, adds a new operation to the
     * queue.
     */AsyncQueue.prototype.enqueueEvenAfterShutdown=function(op){this.verifyNotFailed();return this.enqueueInternal(op);};/**
     * Adds a new operation to the queue and initialize the shut down of this queue.
     * Returns a promise that will be resolved when the promise returned by the new
     * operation is (with its value).
     * Once this method is called, the only possible way to request running an operation
     * is through `enqueueAndForgetEvenAfterShutdown`.
     */AsyncQueue.prototype.enqueueAndInitiateShutdown=function(op){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.verifyNotFailed();if(!!this._isShuttingDown)return[3/*break*/,2];this._isShuttingDown=true;return[4/*yield*/,this.enqueueEvenAfterShutdown(op)];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});};/**
     * Adds a new operation to the queue. Returns a promise that will be resolved
     * when the promise returned by the new operation is (with its value).
     */AsyncQueue.prototype.enqueue=function(op){this.verifyNotFailed();if(this._isShuttingDown){// Return a Promise which never resolves.
return new Promise(function(resolve){});}return this.enqueueInternal(op);};AsyncQueue.prototype.enqueueInternal=function(op){var _this=this;var newTail=this.tail.then(function(){_this.operationInProgress=true;return op().catch(function(error$1){_this.failure=error$1;_this.operationInProgress=false;var message=error$1.stack||error$1.message||'';error('INTERNAL UNHANDLED ERROR: ',message);// Escape the promise chain and throw the error globally so that
// e.g. any global crash reporting library detects and reports it.
// (but not for simulated errors in our tests since this breaks mocha)
if(message.indexOf('Firestore Test Simulated Error')<0){setTimeout(function(){throw error$1;},0);}// Re-throw the error so that this.tail becomes a rejected Promise and
// all further attempts to chain (via .then) will just short-circuit
// and return the rejected Promise.
throw error$1;}).then(function(result){_this.operationInProgress=false;return result;});});this.tail=newTail;return newTail;};/**
     * Schedules an operation to be queued on the AsyncQueue once the specified
     * `delayMs` has elapsed. The returned CancelablePromise can be used to cancel
     * the operation prior to its running.
     */AsyncQueue.prototype.enqueueAfterDelay=function(timerId,delayMs,op){var _this=this;this.verifyNotFailed();assert(delayMs>=0,"Attempted to schedule an operation with a negative delay of "+delayMs);// Fast-forward delays for timerIds that have been overriden.
if(this.timerIdsToSkip.indexOf(timerId)>-1){delayMs=0;}var delayedOp=DelayedOperation.createAndSchedule(this,timerId,delayMs,op,function(removedOp){return _this.removeDelayedOperation(removedOp);});this.delayedOperations.push(delayedOp);return delayedOp;};AsyncQueue.prototype.verifyNotFailed=function(){if(this.failure){fail('AsyncQueue is already failed: '+(this.failure.stack||this.failure.message));}};/**
     * Verifies there's an operation currently in-progress on the AsyncQueue.
     * Unfortunately we can't verify that the running code is in the promise chain
     * of that operation, so this isn't a foolproof check, but it should be enough
     * to catch some bugs.
     */AsyncQueue.prototype.verifyOperationInProgress=function(){assert(this.operationInProgress,'verifyOpInProgress() called when no op in progress on this queue.');};/**
     * Waits until all currently queued tasks are finished executing. Delayed
     * operations are not run.
     */AsyncQueue.prototype.drain=function(){// It should still be possible to drain the queue after it is shutting down.
return this.enqueueEvenAfterShutdown(function(){return Promise.resolve();});};/**
     * For Tests: Determine if a delayed operation with a particular TimerId
     * exists.
     */AsyncQueue.prototype.containsDelayedOperation=function(timerId){for(var _i=0,_a=this.delayedOperations;_i<_a.length;_i++){var op=_a[_i];if(op.timerId===timerId){return true;}}return false;};/**
     * For Tests: Runs some or all delayed operations early.
     *
     * @param lastTimerId Delayed operations up to and including this TimerId will
     *  be drained. Throws if no such operation exists. Pass TimerId.All to run
     *  all delayed operations.
     * @returns a Promise that resolves once all operations have been run.
     */AsyncQueue.prototype.runDelayedOperationsEarly=function(lastTimerId){var _this=this;// Note that draining may generate more delayed ops, so we do that first.
return this.drain().then(function(){assert(lastTimerId===TimerId.All||_this.containsDelayedOperation(lastTimerId),"Attempted to drain to missing operation "+lastTimerId);// Run ops in the same order they'd run if they ran naturally.
_this.delayedOperations.sort(function(a,b){return a.targetTimeMs-b.targetTimeMs;});for(var _i=0,_a=_this.delayedOperations;_i<_a.length;_i++){var op=_a[_i];op.skipDelay();if(lastTimerId!==TimerId.All&&op.timerId===lastTimerId){break;}}return _this.drain();});};/**
     * For Tests: Skip all subsequent delays for a timer id.
     */AsyncQueue.prototype.skipDelaysForTimerId=function(timerId){this.timerIdsToSkip.push(timerId);};/** Called once a DelayedOperation is run or canceled. */AsyncQueue.prototype.removeDelayedOperation=function(op){// NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
var index=this.delayedOperations.indexOf(op);assert(index>=0,'Delayed operation not found.');this.delayedOperations.splice(index,1);};return AsyncQueue;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var escapeChar='\u0001';var encodedSeparatorChar='\u0001';var encodedNul='\u0010';var encodedEscape='\u0011';/**
 * Encodes a resource path into a IndexedDb-compatible string form.
 */function encode(path){var result='';for(var i=0;i<path.length;i++){if(result.length>0){result=encodeSeparator(result);}result=encodeSegment(path.get(i),result);}return encodeSeparator(result);}/** Encodes a single segment of a resource path into the given result */function encodeSegment(segment,resultBuf){var result=resultBuf;var length=segment.length;for(var i=0;i<length;i++){var c=segment.charAt(i);switch(c){case'\0':result+=escapeChar+encodedNul;break;case escapeChar:result+=escapeChar+encodedEscape;break;default:result+=c;}}return result;}/** Encodes a path separator into the given result */function encodeSeparator(result){return result+escapeChar+encodedSeparatorChar;}/**
 * Decodes the given IndexedDb-compatible string form of a resource path into
 * a ResourcePath instance. Note that this method is not suitable for use with
 * decoding resource names from the server; those are One Platform format
 * strings.
 */function decode(path){// Event the empty path must encode as a path of at least length 2. A path
// with exactly 2 must be the empty path.
var length=path.length;assert(length>=2,'Invalid path '+path);if(length===2){assert(path.charAt(0)===escapeChar&&path.charAt(1)===encodedSeparatorChar,'Non-empty path '+path+' had length 2');return ResourcePath.EMPTY_PATH;}// Escape characters cannot exist past the second-to-last position in the
// source value.
var lastReasonableEscapeIndex=length-2;var segments=[];var segmentBuilder='';for(var start=0;start<length;){// The last two characters of a valid encoded path must be a separator, so
// there must be an end to this segment.
var end=path.indexOf(escapeChar,start);if(end<0||end>lastReasonableEscapeIndex){fail('Invalid encoded resource path: "'+path+'"');}var next=path.charAt(end+1);switch(next){case encodedSeparatorChar:var currentPiece=path.substring(start,end);var segment=void 0;if(segmentBuilder.length===0){// Avoid copying for the common case of a segment that excludes \0
// and \001
segment=currentPiece;}else{segmentBuilder+=currentPiece;segment=segmentBuilder;segmentBuilder='';}segments.push(segment);break;case encodedNul:segmentBuilder+=path.substring(start,end);segmentBuilder+='\0';break;case encodedEscape:// The escape character can be used in the output to encode itself.
segmentBuilder+=path.substring(start,end+1);break;default:fail('Invalid encoded resource path: "'+path+'"');}start=end+2;}return new ResourcePath(segments);}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var Timestamp=/** @class */function(){function Timestamp(seconds,nanoseconds){this.seconds=seconds;this.nanoseconds=nanoseconds;if(nanoseconds<0){throw new FirestoreError(Code.INVALID_ARGUMENT,'Timestamp nanoseconds out of range: '+nanoseconds);}if(nanoseconds>=1e9){throw new FirestoreError(Code.INVALID_ARGUMENT,'Timestamp nanoseconds out of range: '+nanoseconds);}// Midnight at the beginning of 1/1/1 is the earliest Firestore supports.
if(seconds<-62135596800){throw new FirestoreError(Code.INVALID_ARGUMENT,'Timestamp seconds out of range: '+seconds);}// This will break in the year 10,000.
if(seconds>=253402300800){throw new FirestoreError(Code.INVALID_ARGUMENT,'Timestamp seconds out of range: '+seconds);}}Timestamp.now=function(){return Timestamp.fromMillis(Date.now());};Timestamp.fromDate=function(date){return Timestamp.fromMillis(date.getTime());};Timestamp.fromMillis=function(milliseconds){var seconds=Math.floor(milliseconds/1000);var nanos=(milliseconds-seconds*1000)*1e6;return new Timestamp(seconds,nanos);};Timestamp.prototype.toDate=function(){return new Date(this.toMillis());};Timestamp.prototype.toMillis=function(){return this.seconds*1000+this.nanoseconds/1e6;};Timestamp.prototype._compareTo=function(other){if(this.seconds===other.seconds){return primitiveComparator(this.nanoseconds,other.nanoseconds);}return primitiveComparator(this.seconds,other.seconds);};Timestamp.prototype.isEqual=function(other){return other.seconds===this.seconds&&other.nanoseconds===this.nanoseconds;};Timestamp.prototype.toString=function(){return'Timestamp(seconds='+this.seconds+', nanoseconds='+this.nanoseconds+')';};return Timestamp;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A version of a document in Firestore. This corresponds to the version
 * timestamp, such as update_time or read_time.
 */var SnapshotVersion=/** @class */function(){function SnapshotVersion(timestamp){this.timestamp=timestamp;}// TODO(b/34176344): Once we no longer need to use the old alpha protos,
// delete this constructor and use a timestamp-backed version everywhere.
SnapshotVersion.fromMicroseconds=function(value){var seconds=Math.floor(value/1e6);var nanos=value%1e6*1e3;return new SnapshotVersion(new Timestamp(seconds,nanos));};SnapshotVersion.fromTimestamp=function(value){return new SnapshotVersion(value);};SnapshotVersion.forDeletedDoc=function(){return SnapshotVersion.MIN;};SnapshotVersion.prototype.compareTo=function(other){return this.timestamp._compareTo(other.timestamp);};SnapshotVersion.prototype.isEqual=function(other){return this.timestamp.isEqual(other.timestamp);};/** Returns a number representation of the version for use in spec tests. */SnapshotVersion.prototype.toMicroseconds=function(){// Convert to microseconds.
return this.timestamp.seconds*1e6+this.timestamp.nanoseconds/1000;};SnapshotVersion.prototype.toString=function(){return'SnapshotVersion('+this.timestamp.toString()+')';};SnapshotVersion.prototype.toTimestamp=function(){return this.timestamp;};SnapshotVersion.MIN=new SnapshotVersion(new Timestamp(0,0));return SnapshotVersion;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // An immutable sorted map implementation, based on a Left-leaning Red-Black
// tree.
var SortedMap=/** @class */function(){function SortedMap(comparator,root){this.comparator=comparator;this.root=root?root:LLRBNode.EMPTY;}// Returns a copy of the map, with the specified key/value added or replaced.
SortedMap.prototype.insert=function(key,value){return new SortedMap(this.comparator,this.root.insert(key,value,this.comparator).copy(null,null,LLRBNode.BLACK,null,null));};// Returns a copy of the map, with the specified key removed.
SortedMap.prototype.remove=function(key){return new SortedMap(this.comparator,this.root.remove(key,this.comparator).copy(null,null,LLRBNode.BLACK,null,null));};// Returns the value of the node with the given key, or null.
SortedMap.prototype.get=function(key){var node=this.root;while(!node.isEmpty()){var cmp=this.comparator(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;};// Returns the index of the element in this sorted map, or -1 if it doesn't
// exist.
SortedMap.prototype.indexOf=function(key){// Number of nodes that were pruned when descending right
var prunedNodes=0;var node=this.root;while(!node.isEmpty()){var cmp=this.comparator(key,node.key);if(cmp===0){return prunedNodes+node.left.size;}else if(cmp<0){node=node.left;}else{// Count all nodes left of the node plus the node itself
prunedNodes+=node.left.size+1;node=node.right;}}// Node not found
return-1;};SortedMap.prototype.isEmpty=function(){return this.root.isEmpty();};Object.defineProperty(SortedMap.prototype,"size",{// Returns the total number of nodes in the map.
get:function get(){return this.root.size;},enumerable:true,configurable:true});// Returns the minimum key in the map.
SortedMap.prototype.minKey=function(){return this.root.minKey();};// Returns the maximum key in the map.
SortedMap.prototype.maxKey=function(){return this.root.maxKey();};// Traverses the map in key order and calls the specified action function
// for each key/value pair. If action returns true, traversal is aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
SortedMap.prototype.inorderTraversal=function(action){return this.root.inorderTraversal(action);};SortedMap.prototype.forEach=function(fn){this.inorderTraversal(function(k,v){fn(k,v);return false;});};SortedMap.prototype.toString=function(){var descriptions=[];this.inorderTraversal(function(k,v){descriptions.push(k+":"+v);return false;});return"{"+descriptions.join(', ')+"}";};// Traverses the map in reverse key order and calls the specified action
// function for each key/value pair. If action returns true, traversal is
// aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
SortedMap.prototype.reverseTraversal=function(action){return this.root.reverseTraversal(action);};// Returns an iterator over the SortedMap.
SortedMap.prototype.getIterator=function(){return new SortedMapIterator(this.root,null,this.comparator,false);};SortedMap.prototype.getIteratorFrom=function(key){return new SortedMapIterator(this.root,key,this.comparator,false);};SortedMap.prototype.getReverseIterator=function(){return new SortedMapIterator(this.root,null,this.comparator,true);};SortedMap.prototype.getReverseIteratorFrom=function(key){return new SortedMapIterator(this.root,key,this.comparator,true);};return SortedMap;}();// end SortedMap
// An iterator over an LLRBNode.
var SortedMapIterator=/** @class */function(){function SortedMapIterator(node,startKey,comparator,isReverse){this.isReverse=isReverse;this.nodeStack=[];var cmp=1;while(!node.isEmpty()){cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse
if(isReverse){cmp*=-1;}if(cmp<0){// This node is less than our start key. ignore it
if(this.isReverse){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack,
// but stop iterating;
this.nodeStack.push(node);break;}else{// This node is greater than our start key, add it to the stack and move
// to the next one
this.nodeStack.push(node);if(this.isReverse){node=node.right;}else{node=node.left;}}}}SortedMapIterator.prototype.getNext=function(){assert(this.nodeStack.length>0,'getNext() called on iterator when hasNext() is false.');var node=this.nodeStack.pop();var result={key:node.key,value:node.value};if(this.isReverse){node=node.left;while(!node.isEmpty()){this.nodeStack.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack.push(node);node=node.left;}}return result;};SortedMapIterator.prototype.hasNext=function(){return this.nodeStack.length>0;};SortedMapIterator.prototype.peek=function(){if(this.nodeStack.length===0){return null;}var node=this.nodeStack[this.nodeStack.length-1];return{key:node.key,value:node.value};};return SortedMapIterator;}();// end SortedMapIterator
// Represents a node in a Left-leaning Red-Black tree.
var LLRBNode=/** @class */function(){function LLRBNode(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:LLRBNode.EMPTY;this.right=right!=null?right:LLRBNode.EMPTY;this.size=this.left.size+1+this.right.size;}// Returns a copy of the current node, optionally replacing pieces of it.
LLRBNode.prototype.copy=function(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);};LLRBNode.prototype.isEmpty=function(){return false;};// Traverses the tree in key order and calls the specified action function
// for each node. If action returns true, traversal is aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
LLRBNode.prototype.inorderTraversal=function(action){return this.left.inorderTraversal(action)||action(this.key,this.value)||this.right.inorderTraversal(action);};// Traverses the tree in reverse key order and calls the specified action
// function for each node. If action returns true, traversal is aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
LLRBNode.prototype.reverseTraversal=function(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);};// Returns the minimum node in the tree.
LLRBNode.prototype.min=function(){if(this.left.isEmpty()){return this;}else{return this.left.min();}};// Returns the maximum key in the tree.
LLRBNode.prototype.minKey=function(){return this.min().key;};// Returns the maximum key in the tree.
LLRBNode.prototype.maxKey=function(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}};// Returns new tree, with the key/value added.
LLRBNode.prototype.insert=function(key,value,comparator){var n=this;var cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp();};LLRBNode.prototype.removeMin=function(){if(this.left.isEmpty()){return LLRBNode.EMPTY;}var n=this;if(!n.left.isRed()&&!n.left.left.isRed()){n=n.moveRedLeft();}n=n.copy(null,null,null,n.left.removeMin(),null);return n.fixUp();};// Returns new tree, with the specified item removed.
LLRBNode.prototype.remove=function(key,comparator){var smallest;var n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed()&&!n.left.left.isRed()){n=n.moveRedLeft();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed()){n=n.rotateRight();}if(!n.right.isEmpty()&&!n.right.isRed()&&!n.right.left.isRed()){n=n.moveRedRight();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return LLRBNode.EMPTY;}else{smallest=n.right.min();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp();};LLRBNode.prototype.isRed=function(){return this.color;};// Returns new tree after performing any needed rotations.
LLRBNode.prototype.fixUp=function(){var n=this;if(n.right.isRed()&&!n.left.isRed()){n=n.rotateLeft();}if(n.left.isRed()&&n.left.left.isRed()){n=n.rotateRight();}if(n.left.isRed()&&n.right.isRed()){n=n.colorFlip();}return n;};LLRBNode.prototype.moveRedLeft=function(){var n=this.colorFlip();if(n.right.left.isRed()){n=n.copy(null,null,null,null,n.right.rotateRight());n=n.rotateLeft();n=n.colorFlip();}return n;};LLRBNode.prototype.moveRedRight=function(){var n=this.colorFlip();if(n.left.left.isRed()){n=n.rotateRight();n=n.colorFlip();}return n;};LLRBNode.prototype.rotateLeft=function(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);};LLRBNode.prototype.rotateRight=function(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);};LLRBNode.prototype.colorFlip=function(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);};// For testing.
LLRBNode.prototype.checkMaxDepth=function(){var blackDepth=this.check();if(Math.pow(2.0,blackDepth)<=this.size+1){return true;}else{return false;}};// In a balanced RB tree, the black-depth (number of black nodes) from root to
// leaves is equal on both sides.  This function verifies that or asserts.
LLRBNode.prototype.check=function(){if(this.isRed()&&this.left.isRed()){throw fail('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed()){throw fail('Right child of ('+this.key+','+this.value+') is red');}var blackDepth=this.left.check();if(blackDepth!==this.right.check()){throw fail('Black depths differ');}else{return blackDepth+(this.isRed()?0:1);}};// Empty node is shared between all LLRB trees.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
LLRBNode.EMPTY=null;LLRBNode.RED=true;LLRBNode.BLACK=false;return LLRBNode;}();// end LLRBNode
// Represents an empty node (a leaf node in the Red-Black Tree).
var LLRBEmptyNode=/** @class */function(){function LLRBEmptyNode(){this.size=0;}Object.defineProperty(LLRBEmptyNode.prototype,"key",{get:function get(){throw fail('LLRBEmptyNode has no key.');},enumerable:true,configurable:true});Object.defineProperty(LLRBEmptyNode.prototype,"value",{get:function get(){throw fail('LLRBEmptyNode has no value.');},enumerable:true,configurable:true});Object.defineProperty(LLRBEmptyNode.prototype,"color",{get:function get(){throw fail('LLRBEmptyNode has no color.');},enumerable:true,configurable:true});Object.defineProperty(LLRBEmptyNode.prototype,"left",{get:function get(){throw fail('LLRBEmptyNode has no left child.');},enumerable:true,configurable:true});Object.defineProperty(LLRBEmptyNode.prototype,"right",{get:function get(){throw fail('LLRBEmptyNode has no right child.');},enumerable:true,configurable:true});// Returns a copy of the current node.
LLRBEmptyNode.prototype.copy=function(key,value,color,left,right){return this;};// Returns a copy of the tree, with the specified key/value added.
LLRBEmptyNode.prototype.insert=function(key,value,comparator){return new LLRBNode(key,value);};// Returns a copy of the tree, with the specified key removed.
LLRBEmptyNode.prototype.remove=function(key,comparator){return this;};LLRBEmptyNode.prototype.isEmpty=function(){return true;};LLRBEmptyNode.prototype.inorderTraversal=function(action){return false;};LLRBEmptyNode.prototype.reverseTraversal=function(action){return false;};LLRBEmptyNode.prototype.minKey=function(){return null;};LLRBEmptyNode.prototype.maxKey=function(){return null;};LLRBEmptyNode.prototype.isRed=function(){return false;};// For testing.
LLRBEmptyNode.prototype.checkMaxDepth=function(){return true;};LLRBEmptyNode.prototype.check=function(){return 0;};return LLRBEmptyNode;}();// end LLRBEmptyNode
LLRBNode.EMPTY=new LLRBEmptyNode();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * SortedSet is an immutable (copy-on-write) collection that holds elements
 * in order specified by the provided comparator.
 *
 * NOTE: if provided comparator returns 0 for two elements, we consider them to
 * be equal!
 */var SortedSet=/** @class */function(){function SortedSet(comparator){this.comparator=comparator;this.data=new SortedMap(this.comparator);}/**
     * Creates a SortedSet from the keys of the map.
     * This is currently implemented as an O(n) copy.
     */SortedSet.fromMapKeys=function(map){var keys=new SortedSet(map.comparator);map.forEach(function(key){keys=keys.add(key);});return keys;};SortedSet.prototype.has=function(elem){return this.data.get(elem)!==null;};SortedSet.prototype.first=function(){return this.data.minKey();};SortedSet.prototype.last=function(){return this.data.maxKey();};Object.defineProperty(SortedSet.prototype,"size",{get:function get(){return this.data.size;},enumerable:true,configurable:true});SortedSet.prototype.indexOf=function(elem){return this.data.indexOf(elem);};/** Iterates elements in order defined by "comparator" */SortedSet.prototype.forEach=function(cb){this.data.inorderTraversal(function(k,v){cb(k);return false;});};/** Iterates over `elem`s such that: range[0] <= elem < range[1]. */SortedSet.prototype.forEachInRange=function(range,cb){var iter=this.data.getIteratorFrom(range[0]);while(iter.hasNext()){var elem=iter.getNext();if(this.comparator(elem.key,range[1])>=0){return;}cb(elem.key);}};/**
     * Iterates over `elem`s such that: start <= elem until false is returned.
     */SortedSet.prototype.forEachWhile=function(cb,start){var iter;if(start!==undefined){iter=this.data.getIteratorFrom(start);}else{iter=this.data.getIterator();}while(iter.hasNext()){var elem=iter.getNext();var result=cb(elem.key);if(!result){return;}}};/** Finds the least element greater than or equal to `elem`. */SortedSet.prototype.firstAfterOrEqual=function(elem){var iter=this.data.getIteratorFrom(elem);return iter.hasNext()?iter.getNext().key:null;};SortedSet.prototype.getIterator=function(){return new SortedSetIterator(this.data.getIterator());};SortedSet.prototype.getIteratorFrom=function(key){return new SortedSetIterator(this.data.getIteratorFrom(key));};/** Inserts or updates an element */SortedSet.prototype.add=function(elem){return this.copy(this.data.remove(elem).insert(elem,true));};/** Deletes an element */SortedSet.prototype.delete=function(elem){if(!this.has(elem)){return this;}return this.copy(this.data.remove(elem));};SortedSet.prototype.isEmpty=function(){return this.data.isEmpty();};SortedSet.prototype.unionWith=function(other){var result=this;other.forEach(function(elem){result=result.add(elem);});return result;};SortedSet.prototype.isEqual=function(other){if(!(other instanceof SortedSet)){return false;}if(this.size!==other.size){return false;}var thisIt=this.data.getIterator();var otherIt=other.data.getIterator();while(thisIt.hasNext()){var thisElem=thisIt.getNext().key;var otherElem=otherIt.getNext().key;if(this.comparator(thisElem,otherElem)!==0){return false;}}return true;};SortedSet.prototype.toArray=function(){var res=[];this.forEach(function(targetId){res.push(targetId);});return res;};SortedSet.prototype.toString=function(){var result=[];this.forEach(function(elem){return result.push(elem);});return'SortedSet('+result.toString()+')';};SortedSet.prototype.copy=function(data){var result=new SortedSet(this.comparator);result.data=data;return result;};return SortedSet;}();var SortedSetIterator=/** @class */function(){function SortedSetIterator(iter){this.iter=iter;}SortedSetIterator.prototype.getNext=function(){return this.iter.getNext().key;};SortedSetIterator.prototype.hasNext=function(){return this.iter.hasNext();};return SortedSetIterator;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var EMPTY_MAYBE_DOCUMENT_MAP=new SortedMap(DocumentKey.comparator);function maybeDocumentMap(){return EMPTY_MAYBE_DOCUMENT_MAP;}function nullableMaybeDocumentMap(){return maybeDocumentMap();}var EMPTY_DOCUMENT_MAP=new SortedMap(DocumentKey.comparator);function documentMap(){return EMPTY_DOCUMENT_MAP;}var EMPTY_DOCUMENT_VERSION_MAP=new SortedMap(DocumentKey.comparator);function documentVersionMap(){return EMPTY_DOCUMENT_VERSION_MAP;}var EMPTY_DOCUMENT_KEY_SET=new SortedSet(DocumentKey.comparator);function documentKeySet(){var keys=[];for(var _i=0;_i<arguments.length;_i++){keys[_i]=arguments[_i];}var set=EMPTY_DOCUMENT_KEY_SET;for(var _a=0,keys_1=keys;_a<keys_1.length;_a++){var key=keys_1[_a];set=set.add(key);}return set;}var EMPTY_TARGET_ID_SET=new SortedSet(primitiveComparator);function targetIdSet(){return EMPTY_TARGET_ID_SET;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var BATCHID_UNKNOWN=-1;/**
 * A batch of mutations that will be sent as one unit to the backend.
 */var MutationBatch=/** @class */function(){/**
     * @param batchId The unique ID of this mutation batch.
     * @param localWriteTime The original write time of this mutation.
     * @param baseMutations Mutations that are used to populate the base
     * values when this mutation is applied locally. This can be used to locally
     * overwrite values that are persisted in the remote document cache. Base
     * mutations are never sent to the backend.
     * @param mutations The user-provided mutations in this mutation batch.
     * User-provided mutations are applied both locally and remotely on the
     * backend.
     */function MutationBatch(batchId,localWriteTime,baseMutations,mutations){this.batchId=batchId;this.localWriteTime=localWriteTime;this.baseMutations=baseMutations;this.mutations=mutations;assert(mutations.length>0,'Cannot create an empty mutation batch');}/**
     * Applies all the mutations in this MutationBatch to the specified document
     * to create a new remote document
     *
     * @param docKey The key of the document to apply mutations to.
     * @param maybeDoc The document to apply mutations to.
     * @param batchResult The result of applying the MutationBatch to the
     * backend.
     */MutationBatch.prototype.applyToRemoteDocument=function(docKey,maybeDoc,batchResult){if(maybeDoc){assert(maybeDoc.key.isEqual(docKey),"applyToRemoteDocument: key "+docKey+" should match maybeDoc key\n        "+maybeDoc.key);}var mutationResults=batchResult.mutationResults;assert(mutationResults.length===this.mutations.length,"Mismatch between mutations length\n      ("+this.mutations.length+") and mutation results length\n      ("+mutationResults.length+").");for(var i=0;i<this.mutations.length;i++){var mutation=this.mutations[i];if(mutation.key.isEqual(docKey)){var mutationResult=mutationResults[i];maybeDoc=mutation.applyToRemoteDocument(maybeDoc,mutationResult);}}return maybeDoc;};/**
     * Computes the local view of a document given all the mutations in this
     * batch.
     *
     * @param docKey The key of the document to apply mutations to.
     * @param maybeDoc The document to apply mutations to.
     */MutationBatch.prototype.applyToLocalView=function(docKey,maybeDoc){if(maybeDoc){assert(maybeDoc.key.isEqual(docKey),"applyToLocalDocument: key "+docKey+" should match maybeDoc key\n        "+maybeDoc.key);}// First, apply the base state. This allows us to apply non-idempotent
// transform against a consistent set of values.
for(var _i=0,_a=this.baseMutations;_i<_a.length;_i++){var mutation=_a[_i];if(mutation.key.isEqual(docKey)){maybeDoc=mutation.applyToLocalView(maybeDoc,maybeDoc,this.localWriteTime);}}var baseDoc=maybeDoc;// Second, apply all user-provided mutations.
for(var _b=0,_c=this.mutations;_b<_c.length;_b++){var mutation=_c[_b];if(mutation.key.isEqual(docKey)){maybeDoc=mutation.applyToLocalView(maybeDoc,baseDoc,this.localWriteTime);}}return maybeDoc;};/**
     * Computes the local view for all provided documents given the mutations in
     * this batch.
     */MutationBatch.prototype.applyToLocalDocumentSet=function(maybeDocs){var _this=this;// TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
// directly (as done in `applyToLocalView()`), we can reduce the complexity
// to O(n).
var mutatedDocuments=maybeDocs;this.mutations.forEach(function(m){var mutatedDocument=_this.applyToLocalView(m.key,maybeDocs.get(m.key));if(mutatedDocument){mutatedDocuments=mutatedDocuments.insert(m.key,mutatedDocument);}});return mutatedDocuments;};MutationBatch.prototype.keys=function(){return this.mutations.reduce(function(keys,m){return keys.add(m.key);},documentKeySet());};MutationBatch.prototype.isEqual=function(other){return this.batchId===other.batchId&&arrayEquals(this.mutations,other.mutations)&&arrayEquals(this.baseMutations,other.baseMutations);};return MutationBatch;}();/** The result of applying a mutation batch to the backend. */var MutationBatchResult=/** @class */function(){function MutationBatchResult(batch,commitVersion,mutationResults,streamToken,/**
     * A pre-computed mapping from each mutated document to the resulting
     * version.
     */docVersions){this.batch=batch;this.commitVersion=commitVersion;this.mutationResults=mutationResults;this.streamToken=streamToken;this.docVersions=docVersions;}/**
     * Creates a new MutationBatchResult for the given batch and results. There
     * must be one result for each mutation in the batch. This static factory
     * caches a document=>version mapping (docVersions).
     */MutationBatchResult.from=function(batch,commitVersion,results,streamToken){assert(batch.mutations.length===results.length,'Mutations sent '+batch.mutations.length+' must equal results received '+results.length);var versionMap=documentVersionMap();var mutations=batch.mutations;for(var i=0;i<mutations.length;i++){versionMap=versionMap.insert(mutations[i].key,results[i].version);}return new MutationBatchResult(batch,commitVersion,results,streamToken,versionMap);};return MutationBatchResult;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * PersistencePromise<> is essentially a re-implementation of Promise<> except
 * it has a .next() method instead of .then() and .next() and .catch() callbacks
 * are executed synchronously when a PersistencePromise resolves rather than
 * asynchronously (Promise<> implementations use setImmediate() or similar).
 *
 * This is necessary to interoperate with IndexedDB which will automatically
 * commit transactions if control is returned to the event loop without
 * synchronously initiating another operation on the transaction.
 *
 * NOTE: .then() and .catch() only allow a single consumer, unlike normal
 * Promises.
 */var PersistencePromise=/** @class */function(){function PersistencePromise(callback){var _this=this;// NOTE: next/catchCallback will always point to our own wrapper functions,
// not the user's raw next() or catch() callbacks.
this.nextCallback=null;this.catchCallback=null;// When the operation resolves, we'll set result or error and mark isDone.
this.result=undefined;this.error=undefined;this.isDone=false;// Set to true when .then() or .catch() are called and prevents additional
// chaining.
this.callbackAttached=false;callback(function(value){_this.isDone=true;_this.result=value;if(_this.nextCallback){// value should be defined unless T is Void, but we can't express
// that in the type system.
_this.nextCallback(value);}},function(error){_this.isDone=true;_this.error=error;if(_this.catchCallback){_this.catchCallback(error);}});}PersistencePromise.prototype.catch=function(fn){return this.next(undefined,fn);};PersistencePromise.prototype.next=function(nextFn,catchFn){var _this=this;if(this.callbackAttached){fail('Called next() or catch() twice for PersistencePromise');}this.callbackAttached=true;if(this.isDone){if(!this.error){return this.wrapSuccess(nextFn,this.result);}else{return this.wrapFailure(catchFn,this.error);}}else{return new PersistencePromise(function(resolve,reject){_this.nextCallback=function(value){_this.wrapSuccess(nextFn,value).next(resolve,reject);};_this.catchCallback=function(error){_this.wrapFailure(catchFn,error).next(resolve,reject);};});}};PersistencePromise.prototype.toPromise=function(){var _this=this;return new Promise(function(resolve,reject){_this.next(resolve,reject);});};PersistencePromise.prototype.wrapUserFunction=function(fn){try{var result=fn();if(result instanceof PersistencePromise){return result;}else{return PersistencePromise.resolve(result);}}catch(e){return PersistencePromise.reject(e);}};PersistencePromise.prototype.wrapSuccess=function(nextFn,value){if(nextFn){return this.wrapUserFunction(function(){return nextFn(value);});}else{// If there's no nextFn, then R must be the same as T
return PersistencePromise.resolve(value);}};PersistencePromise.prototype.wrapFailure=function(catchFn,error){if(catchFn){return this.wrapUserFunction(function(){return catchFn(error);});}else{return PersistencePromise.reject(error);}};PersistencePromise.resolve=function(result){return new PersistencePromise(function(resolve,reject){resolve(result);});};PersistencePromise.reject=function(error){return new PersistencePromise(function(resolve,reject){reject(error);});};PersistencePromise.waitFor=function(// Accept all Promise types in waitFor().
// eslint-disable-next-line @typescript-eslint/no-explicit-any
all){return new PersistencePromise(function(resolve,reject){var expectedCount=0;var resolvedCount=0;var done=false;all.forEach(function(element){++expectedCount;element.next(function(){++resolvedCount;if(done&&resolvedCount===expectedCount){resolve();}},function(err){return reject(err);});});done=true;if(resolvedCount===expectedCount){resolve();}});};/**
     * Given an array of predicate functions that asynchronously evaluate to a
     * boolean, implements a short-circuiting `or` between the results. Predicates
     * will be evaluated until one of them returns `true`, then stop. The final
     * result will be whether any of them returned `true`.
     */PersistencePromise.or=function(predicates){var p=PersistencePromise.resolve(false);var _loop_1=function _loop_1(predicate){p=p.next(function(isTrue){if(isTrue){return PersistencePromise.resolve(isTrue);}else{return predicate();}});};for(var _i=0,predicates_1=predicates;_i<predicates_1.length;_i++){var predicate=predicates_1[_i];_loop_1(predicate);}return p;};PersistencePromise.forEach=function(collection,f){var _this=this;var promises=[];collection.forEach(function(r,s){promises.push(f.call(_this,r,s));});return this.waitFor(promises);};return PersistencePromise;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG='SimpleDb';/**
 * The maximum number of retry attempts for an IndexedDb transaction that fails
 * with a DOMException.
 */var TRANSACTION_RETRY_COUNT=3;/**
 * Provides a wrapper around IndexedDb with a simplified interface that uses
 * Promise-like return values to chain operations. Real promises cannot be used
 * since .then() continuations are executed asynchronously (e.g. via
 * .setImmediate), which would cause IndexedDB to end the transaction.
 * See PersistencePromise for more details.
 */var SimpleDb=/** @class */function(){function SimpleDb(db){this.db=db;var iOSVersion=SimpleDb.getIOSVersion(util.getUA());// NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
// bug we're checking for should exist in iOS >= 12.2 and < 13, but for
// whatever reason it's much harder to hit after 12.2 so we only proactively
// log on 12.2.
if(iOSVersion===12.2){error('Firestore persistence suffers from a bug in iOS 12.2 '+'Safari that may cause your app to stop working. See '+'https://stackoverflow.com/q/56496296/110915 for details '+'and a potential workaround.');}}/**
     * Opens the specified database, creating or upgrading it if necessary.
     *
     * Note that `version` must not be a downgrade. IndexedDB does not support downgrading the schema
     * version. We currently do not support any way to do versioning outside of IndexedDB's versioning
     * mechanism, as only version-upgrade transactions are allowed to do things like create
     * objectstores.
     */SimpleDb.openOrCreate=function(name,version,schemaConverter){assert(SimpleDb.isAvailable(),'IndexedDB not supported in current environment.');debug(LOG_TAG,'Opening database:',name);return new PersistencePromise(function(resolve,reject){// TODO(mikelehen): Investigate browser compatibility.
// https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
// suggests IE9 and older WebKit browsers handle upgrade
// differently. They expect setVersion, as described here:
// https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
var request=window.indexedDB.open(name,version);request.onsuccess=function(event){var db=event.target.result;resolve(new SimpleDb(db));};request.onblocked=function(){reject(new FirestoreError(Code.FAILED_PRECONDITION,'Cannot upgrade IndexedDB schema while another tab is open. '+'Close all tabs that access Firestore and reload this page to proceed.'));};request.onerror=function(event){var error=event.target.error;if(error.name==='VersionError'){reject(new FirestoreError(Code.FAILED_PRECONDITION,'A newer version of the Firestore SDK was previously used and so the persisted '+'data is not compatible with the version of the SDK you are now using. The SDK '+'will operate with persistence disabled. If you need persistence, please '+'re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB '+'data for your app to start fresh.'));}else{reject(error);}};request.onupgradeneeded=function(event){debug(LOG_TAG,'Database "'+name+'" requires upgrade from version:',event.oldVersion);var db=event.target.result;schemaConverter.createOrUpgrade(db,request.transaction,event.oldVersion,SCHEMA_VERSION).next(function(){debug(LOG_TAG,'Database upgrade to version '+SCHEMA_VERSION+' complete');});};}).toPromise();};/** Deletes the specified database. */SimpleDb.delete=function(name){debug(LOG_TAG,'Removing database:',name);return wrapRequest(window.indexedDB.deleteDatabase(name)).toPromise();};/** Returns true if IndexedDB is available in the current environment. */SimpleDb.isAvailable=function(){if(typeof window==='undefined'||window.indexedDB==null){return false;}if(SimpleDb.isMockPersistence()){return true;}// In some Node environments, `window` is defined, but `window.navigator` is
// not. We don't support IndexedDB persistence in Node if the
// isMockPersistence() check above returns false.
if(window.navigator===undefined){return false;}// We extensively use indexed array values and compound keys,
// which IE and Edge do not support. However, they still have indexedDB
// defined on the window, so we need to check for them here and make sure
// to return that persistence is not enabled for those browsers.
// For tracking support of this feature, see here:
// https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
// Check the UA string to find out the browser.
var ua=util.getUA();// IE 10
// ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
// IE 11
// ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
// Edge
// ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
// like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
// iOS Safari: Disable for users running iOS version < 10.
var iOSVersion=SimpleDb.getIOSVersion(ua);var isUnsupportedIOS=0<iOSVersion&&iOSVersion<10;// Android browser: Disable for userse running version < 4.5.
var androidVersion=SimpleDb.getAndroidVersion(ua);var isUnsupportedAndroid=0<androidVersion&&androidVersion<4.5;if(ua.indexOf('MSIE ')>0||ua.indexOf('Trident/')>0||ua.indexOf('Edge/')>0||isUnsupportedIOS||isUnsupportedAndroid){return false;}else{return true;}};/**
     * Returns true if the backing IndexedDB store is the Node IndexedDBShim
     * (see https://github.com/axemclion/IndexedDBShim).
     */SimpleDb.isMockPersistence=function(){var _a;return typeof process!=='undefined'&&((_a=process.env)===null||_a===void 0?void 0:_a.USE_MOCK_PERSISTENCE)==='YES';};/** Helper to get a typed SimpleDbStore from a transaction. */SimpleDb.getStore=function(txn,store){return txn.store(store);};// visible for testing
/** Parse User Agent to determine iOS version. Returns -1 if not found. */SimpleDb.getIOSVersion=function(ua){var iOSVersionRegex=ua.match(/i(?:phone|pad|pod) os ([\d_]+)/i);var version=iOSVersionRegex?iOSVersionRegex[1].split('_').slice(0,2).join('.'):'-1';return Number(version);};// visible for testing
/** Parse User Agent to determine Android version. Returns -1 if not found. */SimpleDb.getAndroidVersion=function(ua){var androidVersionRegex=ua.match(/Android ([\d.]+)/i);var version=androidVersionRegex?androidVersionRegex[1].split('.').slice(0,2).join('.'):'-1';return Number(version);};SimpleDb.prototype.setVersionChangeListener=function(versionChangeListener){this.db.onversionchange=function(event){return versionChangeListener(event);};};SimpleDb.prototype.runTransaction=function(mode,objectStores,transactionFn){return tslib.__awaiter(this,void 0,void 0,function(){var readonly,idempotent,attemptNumber,_loop_1,this_1,state_1;return tslib.__generator(this,function(_a){switch(_a.label){case 0:readonly=mode.startsWith('readonly');idempotent=mode.endsWith('idempotent');attemptNumber=0;_loop_1=function _loop_1(){var transaction,transactionFnResult,error_1,retryable;return tslib.__generator(this,function(_a){switch(_a.label){case 0:++attemptNumber;transaction=SimpleDbTransaction.open(this_1.db,readonly?'readonly':'readwrite',objectStores);_a.label=1;case 1:_a.trys.push([1,3,,4]);transactionFnResult=transactionFn(transaction).catch(function(error){// Abort the transaction if there was an error.
transaction.abort(error);// We cannot actually recover, and calling `abort()` will cause the transaction's
// completion promise to be rejected. This in turn means that we won't use
// `transactionFnResult` below. We return a rejection here so that we don't add the
// possibility of returning `void` to the type of `transactionFnResult`.
return PersistencePromise.reject(error);}).toPromise();// As noted above, errors are propagated by aborting the transaction. So
// we swallow any error here to avoid the browser logging it as unhandled.
transactionFnResult.catch(function(){});// Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
// fire), but still return the original transactionFnResult back to the
// caller.
return[4/*yield*/,transaction.completionPromise];case 2:// Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
// fire), but still return the original transactionFnResult back to the
// caller.
_a.sent();return[2/*return*/,{value:transactionFnResult}];case 3:error_1=_a.sent();retryable=idempotent&&error_1.name!=='FirebaseError'&&attemptNumber<TRANSACTION_RETRY_COUNT;debug(LOG_TAG,'Transaction failed with error: %s. Retrying: %s.',error_1.message,retryable);if(!retryable){return[2/*return*/,{value:Promise.reject(error_1)}];}return[3/*break*/,4];case 4:return[2/*return*/];}});};this_1=this;_a.label=1;case 1:return[5/*yield**/,_loop_1()];case 2:state_1=_a.sent();if(typeof state_1==="object")return[2/*return*/,state_1.value];return[3/*break*/,1];case 3:return[2/*return*/];}});});};SimpleDb.prototype.close=function(){this.db.close();};return SimpleDb;}();/**
 * A controller for iterating over a key range or index. It allows an iterate
 * callback to delete the currently-referenced object, or jump to a new key
 * within the key range or index.
 */var IterationController=/** @class */function(){function IterationController(dbCursor){this.dbCursor=dbCursor;this.shouldStop=false;this.nextKey=null;}Object.defineProperty(IterationController.prototype,"isDone",{get:function get(){return this.shouldStop;},enumerable:true,configurable:true});Object.defineProperty(IterationController.prototype,"skipToKey",{get:function get(){return this.nextKey;},enumerable:true,configurable:true});Object.defineProperty(IterationController.prototype,"cursor",{set:function set(value){this.dbCursor=value;},enumerable:true,configurable:true});/**
     * This function can be called to stop iteration at any point.
     */IterationController.prototype.done=function(){this.shouldStop=true;};/**
     * This function can be called to skip to that next key, which could be
     * an index or a primary key.
     */IterationController.prototype.skip=function(key){this.nextKey=key;};/**
     * Delete the current cursor value from the object store.
     *
     * NOTE: You CANNOT do this with a keysOnly query.
     */IterationController.prototype.delete=function(){return wrapRequest(this.dbCursor.delete());};return IterationController;}();/**
 * Wraps an IDBTransaction and exposes a store() method to get a handle to a
 * specific object store.
 */var SimpleDbTransaction=/** @class */function(){function SimpleDbTransaction(transaction){var _this=this;this.transaction=transaction;this.aborted=false;/**
         * A promise that resolves with the result of the IndexedDb transaction.
         */this.completionDeferred=new Deferred();this.transaction.oncomplete=function(){_this.completionDeferred.resolve();};this.transaction.onabort=function(){if(transaction.error){_this.completionDeferred.reject(transaction.error);}else{_this.completionDeferred.resolve();}};this.transaction.onerror=function(event){var error=checkForAndReportiOSError(event.target.error);_this.completionDeferred.reject(error);};}SimpleDbTransaction.open=function(db,mode,objectStoreNames){return new SimpleDbTransaction(db.transaction(objectStoreNames,mode));};Object.defineProperty(SimpleDbTransaction.prototype,"completionPromise",{get:function get(){return this.completionDeferred.promise;},enumerable:true,configurable:true});SimpleDbTransaction.prototype.abort=function(error){if(error){this.completionDeferred.reject(error);}if(!this.aborted){debug(LOG_TAG,'Aborting transaction:',error?error.message:'Client-initiated abort');this.aborted=true;this.transaction.abort();}};/**
     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
     * operations performed on the SimpleDbStore happen within the context of this
     * transaction and it cannot be used anymore once the transaction is
     * completed.
     *
     * Note that we can't actually enforce that the KeyType and ValueType are
     * correct, but they allow type safety through the rest of the consuming code.
     */SimpleDbTransaction.prototype.store=function(storeName){var store=this.transaction.objectStore(storeName);assert(!!store,'Object store not part of transaction: '+storeName);return new SimpleDbStore(store);};return SimpleDbTransaction;}();/**
 * A wrapper around an IDBObjectStore providing an API that:
 *
 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
 * methods for acting against the object store.
 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
 * method return a PersistencePromise instead.
 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
 */var SimpleDbStore=/** @class */function(){function SimpleDbStore(store){this.store=store;}SimpleDbStore.prototype.put=function(keyOrValue,value){var request;if(value!==undefined){debug(LOG_TAG,'PUT',this.store.name,keyOrValue,value);request=this.store.put(value,keyOrValue);}else{debug(LOG_TAG,'PUT',this.store.name,'<auto-key>',keyOrValue);request=this.store.put(keyOrValue);}return wrapRequest(request);};/**
     * Adds a new value into an Object Store and returns the new key. Similar to
     * IndexedDb's `add()`, this method will fail on primary key collisions.
     *
     * @param value The object to write.
     * @return The key of the value to add.
     */SimpleDbStore.prototype.add=function(value){debug(LOG_TAG,'ADD',this.store.name,value,value);var request=this.store.add(value);return wrapRequest(request);};/**
     * Gets the object with the specified key from the specified store, or null
     * if no object exists with the specified key.
     *
     * @key The key of the object to get.
     * @return The object with the specified key or null if no object exists.
     */SimpleDbStore.prototype.get=function(key){var _this=this;var request=this.store.get(key);// We're doing an unsafe cast to ValueType.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return wrapRequest(request).next(function(result){// Normalize nonexistence to null.
if(result===undefined){result=null;}debug(LOG_TAG,'GET',_this.store.name,key,result);return result;});};SimpleDbStore.prototype.delete=function(key){debug(LOG_TAG,'DELETE',this.store.name,key);var request=this.store.delete(key);return wrapRequest(request);};/**
     * If we ever need more of the count variants, we can add overloads. For now,
     * all we need is to count everything in a store.
     *
     * Returns the number of rows in the store.
     */SimpleDbStore.prototype.count=function(){debug(LOG_TAG,'COUNT',this.store.name);var request=this.store.count();return wrapRequest(request);};SimpleDbStore.prototype.loadAll=function(indexOrRange,range){var cursor=this.cursor(this.options(indexOrRange,range));var results=[];return this.iterateCursor(cursor,function(key,value){results.push(value);}).next(function(){return results;});};SimpleDbStore.prototype.deleteAll=function(indexOrRange,range){debug(LOG_TAG,'DELETE ALL',this.store.name);var options=this.options(indexOrRange,range);options.keysOnly=false;var cursor=this.cursor(options);return this.iterateCursor(cursor,function(key,value,control){// NOTE: Calling delete() on a cursor is documented as more efficient than
// calling delete() on an object store with a single key
// (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),
// however, this requires us *not* to use a keysOnly cursor
// (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We
// may want to compare the performance of each method.
return control.delete();});};SimpleDbStore.prototype.iterate=function(optionsOrCallback,callback){var options;if(!callback){options={};callback=optionsOrCallback;}else{options=optionsOrCallback;}var cursor=this.cursor(options);return this.iterateCursor(cursor,callback);};/**
     * Iterates over a store, but waits for the given callback to complete for
     * each entry before iterating the next entry. This allows the callback to do
     * asynchronous work to determine if this iteration should continue.
     *
     * The provided callback should return `true` to continue iteration, and
     * `false` otherwise.
     */SimpleDbStore.prototype.iterateSerial=function(callback){var cursorRequest=this.cursor({});return new PersistencePromise(function(resolve,reject){cursorRequest.onerror=function(event){var error=checkForAndReportiOSError(event.target.error);reject(error);};cursorRequest.onsuccess=function(event){var cursor=event.target.result;if(!cursor){resolve();return;}callback(cursor.primaryKey,cursor.value).next(function(shouldContinue){if(shouldContinue){cursor.continue();}else{resolve();}});};});};SimpleDbStore.prototype.iterateCursor=function(cursorRequest,fn){var results=[];return new PersistencePromise(function(resolve,reject){cursorRequest.onerror=function(event){reject(event.target.error);};cursorRequest.onsuccess=function(event){var cursor=event.target.result;if(!cursor){resolve();return;}var controller=new IterationController(cursor);var userResult=fn(cursor.primaryKey,cursor.value,controller);if(userResult instanceof PersistencePromise){var userPromise=userResult.catch(function(err){controller.done();return PersistencePromise.reject(err);});results.push(userPromise);}if(controller.isDone){resolve();}else if(controller.skipToKey===null){cursor.continue();}else{cursor.continue(controller.skipToKey);}};}).next(function(){return PersistencePromise.waitFor(results);});};SimpleDbStore.prototype.options=function(indexOrRange,range){var indexName=undefined;if(indexOrRange!==undefined){if(typeof indexOrRange==='string'){indexName=indexOrRange;}else{assert(range===undefined,'3rd argument must not be defined if 2nd is a range.');range=indexOrRange;}}return{index:indexName,range:range};};SimpleDbStore.prototype.cursor=function(options){var direction='next';if(options.reverse){direction='prev';}if(options.index){var index=this.store.index(options.index);if(options.keysOnly){return index.openKeyCursor(options.range,direction);}else{return index.openCursor(options.range,direction);}}else{return this.store.openCursor(options.range,direction);}};return SimpleDbStore;}();/**
 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
 * handlers to resolve / reject the PersistencePromise as appropriate.
 */function wrapRequest(request){return new PersistencePromise(function(resolve,reject){request.onsuccess=function(event){var result=event.target.result;resolve(result);};request.onerror=function(event){var error=checkForAndReportiOSError(event.target.error);reject(error);};});}// Guard so we only report the error once.
var reportedIOSError=false;function checkForAndReportiOSError(error){var iOSVersion=SimpleDb.getIOSVersion(util.getUA());if(iOSVersion>=12.2&&iOSVersion<13){var IOS_ERROR='An internal error was encountered in the Indexed Database server';if(error.message.indexOf(IOS_ERROR)>=0){// Wrap error in a more descriptive one.
var newError_1=new FirestoreError('internal',"IOS_INDEXEDDB_BUG1: IndexedDb has thrown '"+IOS_ERROR+"'. This is likely "+"due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 "+"for details and a potential workaround.");if(!reportedIOSError){reportedIOSError=true;// Throw a global exception outside of this promise chain, for the user to
// potentially catch.
setTimeout(function(){throw newError_1;},0);}return newError_1;}}return error;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** A mutation queue for a specific user, backed by IndexedDB. */var IndexedDbMutationQueue=/** @class */function(){function IndexedDbMutationQueue(/**
     * The normalized userId (e.g. null UID => "" userId) used to store /
     * retrieve mutations.
     */userId,serializer,indexManager,referenceDelegate){this.userId=userId;this.serializer=serializer;this.indexManager=indexManager;this.referenceDelegate=referenceDelegate;/**
         * Caches the document keys for pending mutation batches. If the mutation
         * has been removed from IndexedDb, the cached value may continue to
         * be used to retrieve the batch's document keys. To remove a cached value
         * locally, `removeCachedMutationKeys()` should be invoked either directly
         * or through `removeMutationBatches()`.
         *
         * With multi-tab, when the primary client acknowledges or rejects a mutation,
         * this cache is used by secondary clients to invalidate the local
         * view of the documents that were previously affected by the mutation.
         */ // PORTING NOTE: Multi-tab only.
this.documentKeysByBatchId={};}/**
     * Creates a new mutation queue for the given user.
     * @param user The user for which to create a mutation queue.
     * @param serializer The serializer to use when persisting to IndexedDb.
     */IndexedDbMutationQueue.forUser=function(user,serializer,indexManager,referenceDelegate){// TODO(mcg): Figure out what constraints there are on userIDs
// In particular, are there any reserved characters? are empty ids allowed?
// For the moment store these together in the same mutations table assuming
// that empty userIDs aren't allowed.
assert(user.uid!=='','UserID must not be an empty string.');var userId=user.isAuthenticated()?user.uid:'';return new IndexedDbMutationQueue(userId,serializer,indexManager,referenceDelegate);};IndexedDbMutationQueue.prototype.checkEmpty=function(transaction){var empty=true;var range=IDBKeyRange.bound([this.userId,Number.NEGATIVE_INFINITY],[this.userId,Number.POSITIVE_INFINITY]);return mutationsStore(transaction).iterate({index:DbMutationBatch.userMutationsIndex,range:range},function(key,value,control){empty=false;control.done();}).next(function(){return empty;});};IndexedDbMutationQueue.prototype.acknowledgeBatch=function(transaction,batch,streamToken){return this.getMutationQueueMetadata(transaction).next(function(metadata){metadata.lastStreamToken=convertStreamToken(streamToken);return mutationQueuesStore(transaction).put(metadata);});};IndexedDbMutationQueue.prototype.getLastStreamToken=function(transaction){return this.getMutationQueueMetadata(transaction).next(function(metadata){return metadata.lastStreamToken;});};IndexedDbMutationQueue.prototype.setLastStreamToken=function(transaction,streamToken){return this.getMutationQueueMetadata(transaction).next(function(metadata){metadata.lastStreamToken=convertStreamToken(streamToken);return mutationQueuesStore(transaction).put(metadata);});};IndexedDbMutationQueue.prototype.addMutationBatch=function(transaction,localWriteTime,baseMutations,mutations){var _this=this;var documentStore=documentMutationsStore(transaction);var mutationStore=mutationsStore(transaction);// The IndexedDb implementation in Chrome (and Firefox) does not handle
// compound indices that include auto-generated keys correctly. To ensure
// that the index entry is added correctly in all browsers, we perform two
// writes: The first write is used to retrieve the next auto-generated Batch
// ID, and the second write populates the index and stores the actual
// mutation batch.
// See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
// We write an empty object to obtain key
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return mutationStore.add({}).next(function(batchId){assert(typeof batchId==='number','Auto-generated key is not a number');var batch=new MutationBatch(batchId,localWriteTime,baseMutations,mutations);var dbBatch=_this.serializer.toDbMutationBatch(_this.userId,batch);var promises=[];var collectionParents=new SortedSet(function(l,r){return primitiveComparator(l.canonicalString(),r.canonicalString());});for(var _i=0,mutations_1=mutations;_i<mutations_1.length;_i++){var mutation=mutations_1[_i];var indexKey=DbDocumentMutation.key(_this.userId,mutation.key.path,batchId);collectionParents=collectionParents.add(mutation.key.path.popLast());promises.push(mutationStore.put(dbBatch));promises.push(documentStore.put(indexKey,DbDocumentMutation.PLACEHOLDER));}collectionParents.forEach(function(parent){promises.push(_this.indexManager.addToCollectionParentIndex(transaction,parent));});transaction.addOnCommittedListener(function(){_this.documentKeysByBatchId[batchId]=batch.keys();});return PersistencePromise.waitFor(promises).next(function(){return batch;});});};IndexedDbMutationQueue.prototype.lookupMutationBatch=function(transaction,batchId){var _this=this;return mutationsStore(transaction).get(batchId).next(function(dbBatch){if(dbBatch){assert(dbBatch.userId===_this.userId,"Unexpected user '"+dbBatch.userId+"' for mutation batch "+batchId);return _this.serializer.fromDbMutationBatch(dbBatch);}return null;});};IndexedDbMutationQueue.prototype.lookupMutationKeys=function(transaction,batchId){var _this=this;if(this.documentKeysByBatchId[batchId]){return PersistencePromise.resolve(this.documentKeysByBatchId[batchId]);}else{return this.lookupMutationBatch(transaction,batchId).next(function(batch){if(batch){var keys=batch.keys();_this.documentKeysByBatchId[batchId]=keys;return keys;}else{return null;}});}};IndexedDbMutationQueue.prototype.getNextMutationBatchAfterBatchId=function(transaction,batchId){var _this=this;var nextBatchId=batchId+1;var range=IDBKeyRange.lowerBound([this.userId,nextBatchId]);var foundBatch=null;return mutationsStore(transaction).iterate({index:DbMutationBatch.userMutationsIndex,range:range},function(key,dbBatch,control){if(dbBatch.userId===_this.userId){assert(dbBatch.batchId>=nextBatchId,'Should have found mutation after '+nextBatchId);foundBatch=_this.serializer.fromDbMutationBatch(dbBatch);}control.done();}).next(function(){return foundBatch;});};IndexedDbMutationQueue.prototype.getHighestUnacknowledgedBatchId=function(transaction){var range=IDBKeyRange.upperBound([this.userId,Number.POSITIVE_INFINITY]);var batchId=BATCHID_UNKNOWN;return mutationsStore(transaction).iterate({index:DbMutationBatch.userMutationsIndex,range:range,reverse:true},function(key,dbBatch,control){batchId=dbBatch.batchId;control.done();}).next(function(){return batchId;});};IndexedDbMutationQueue.prototype.getAllMutationBatches=function(transaction){var _this=this;var range=IDBKeyRange.bound([this.userId,BATCHID_UNKNOWN],[this.userId,Number.POSITIVE_INFINITY]);return mutationsStore(transaction).loadAll(DbMutationBatch.userMutationsIndex,range).next(function(dbBatches){return dbBatches.map(function(dbBatch){return _this.serializer.fromDbMutationBatch(dbBatch);});});};IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey=function(transaction,documentKey){var _this=this;// Scan the document-mutation index starting with a prefix starting with
// the given documentKey.
var indexPrefix=DbDocumentMutation.prefixForPath(this.userId,documentKey.path);var indexStart=IDBKeyRange.lowerBound(indexPrefix);var results=[];return documentMutationsStore(transaction).iterate({range:indexStart},function(indexKey,_,control){var userID=indexKey[0],encodedPath=indexKey[1],batchId=indexKey[2];// Only consider rows matching exactly the specific key of
// interest. Note that because we order by path first, and we
// order terminators before path separators, we'll encounter all
// the index rows for documentKey contiguously. In particular, all
// the rows for documentKey will occur before any rows for
// documents nested in a subcollection beneath documentKey so we
// can stop as soon as we hit any such row.
var path=decode(encodedPath);if(userID!==_this.userId||!documentKey.path.isEqual(path)){control.done();return;}// Look up the mutation batch in the store.
return mutationsStore(transaction).get(batchId).next(function(mutation){if(!mutation){throw fail('Dangling document-mutation reference found: '+indexKey+' which points to '+batchId);}assert(mutation.userId===_this.userId,"Unexpected user '"+mutation.userId+"' for mutation batch "+batchId);results.push(_this.serializer.fromDbMutationBatch(mutation));});}).next(function(){return results;});};IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKeys=function(transaction,documentKeys){var _this=this;var uniqueBatchIDs=new SortedSet(primitiveComparator);var promises=[];documentKeys.forEach(function(documentKey){var indexStart=DbDocumentMutation.prefixForPath(_this.userId,documentKey.path);var range=IDBKeyRange.lowerBound(indexStart);var promise=documentMutationsStore(transaction).iterate({range:range},function(indexKey,_,control){var userID=indexKey[0],encodedPath=indexKey[1],batchID=indexKey[2];// Only consider rows matching exactly the specific key of
// interest. Note that because we order by path first, and we
// order terminators before path separators, we'll encounter all
// the index rows for documentKey contiguously. In particular, all
// the rows for documentKey will occur before any rows for
// documents nested in a subcollection beneath documentKey so we
// can stop as soon as we hit any such row.
var path=decode(encodedPath);if(userID!==_this.userId||!documentKey.path.isEqual(path)){control.done();return;}uniqueBatchIDs=uniqueBatchIDs.add(batchID);});promises.push(promise);});return PersistencePromise.waitFor(promises).next(function(){return _this.lookupMutationBatches(transaction,uniqueBatchIDs);});};IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingQuery=function(transaction,query){var _this=this;assert(!query.isDocumentQuery(),"Document queries shouldn't go down this path");assert(!query.isCollectionGroupQuery(),'CollectionGroup queries should be handled in LocalDocumentsView');var queryPath=query.path;var immediateChildrenLength=queryPath.length+1;// TODO(mcg): Actually implement a single-collection query
//
// This is actually executing an ancestor query, traversing the whole
// subtree below the collection which can be horrifically inefficient for
// some structures. The right way to solve this is to implement the full
// value index, but that's not in the cards in the near future so this is
// the best we can do for the moment.
//
// Since we don't yet index the actual properties in the mutations, our
// current approach is to just return all mutation batches that affect
// documents in the collection being queried.
var indexPrefix=DbDocumentMutation.prefixForPath(this.userId,queryPath);var indexStart=IDBKeyRange.lowerBound(indexPrefix);// Collect up unique batchIDs encountered during a scan of the index. Use a
// SortedSet to accumulate batch IDs so they can be traversed in order in a
// scan of the main table.
var uniqueBatchIDs=new SortedSet(primitiveComparator);return documentMutationsStore(transaction).iterate({range:indexStart},function(indexKey,_,control){var userID=indexKey[0],encodedPath=indexKey[1],batchID=indexKey[2];var path=decode(encodedPath);if(userID!==_this.userId||!queryPath.isPrefixOf(path)){control.done();return;}// Rows with document keys more than one segment longer than the
// query path can't be matches. For example, a query on 'rooms'
// can't match the document /rooms/abc/messages/xyx.
// TODO(mcg): we'll need a different scanner when we implement
// ancestor queries.
if(path.length!==immediateChildrenLength){return;}uniqueBatchIDs=uniqueBatchIDs.add(batchID);}).next(function(){return _this.lookupMutationBatches(transaction,uniqueBatchIDs);});};IndexedDbMutationQueue.prototype.lookupMutationBatches=function(transaction,batchIDs){var _this=this;var results=[];var promises=[];// TODO(rockwood): Implement this using iterate.
batchIDs.forEach(function(batchId){promises.push(mutationsStore(transaction).get(batchId).next(function(mutation){if(mutation===null){throw fail('Dangling document-mutation reference found, '+'which points to '+batchId);}assert(mutation.userId===_this.userId,"Unexpected user '"+mutation.userId+"' for mutation batch "+batchId);results.push(_this.serializer.fromDbMutationBatch(mutation));}));});return PersistencePromise.waitFor(promises).next(function(){return results;});};IndexedDbMutationQueue.prototype.removeMutationBatch=function(transaction,batch){var _this=this;return removeMutationBatch(transaction.simpleDbTransaction,this.userId,batch).next(function(removedDocuments){transaction.addOnCommittedListener(function(){_this.removeCachedMutationKeys(batch.batchId);});return PersistencePromise.forEach(removedDocuments,function(key){return _this.referenceDelegate.removeMutationReference(transaction,key);});});};IndexedDbMutationQueue.prototype.removeCachedMutationKeys=function(batchId){delete this.documentKeysByBatchId[batchId];};IndexedDbMutationQueue.prototype.performConsistencyCheck=function(txn){var _this=this;return this.checkEmpty(txn).next(function(empty){if(!empty){return PersistencePromise.resolve();}// Verify that there are no entries in the documentMutations index if
// the queue is empty.
var startRange=IDBKeyRange.lowerBound(DbDocumentMutation.prefixForUser(_this.userId));var danglingMutationReferences=[];return documentMutationsStore(txn).iterate({range:startRange},function(key,_,control){var userID=key[0];if(userID!==_this.userId){control.done();return;}else{var path=decode(key[1]);danglingMutationReferences.push(path);}}).next(function(){assert(danglingMutationReferences.length===0,'Document leak -- detected dangling mutation references when queue is empty. '+'Dangling keys: '+danglingMutationReferences.map(function(p){return p.canonicalString();}));});});};IndexedDbMutationQueue.prototype.containsKey=function(txn,key){return mutationQueueContainsKey(txn,this.userId,key);};// PORTING NOTE: Multi-tab only (state is held in memory in other clients).
/** Returns the mutation queue's metadata from IndexedDb. */IndexedDbMutationQueue.prototype.getMutationQueueMetadata=function(transaction){var _this=this;return mutationQueuesStore(transaction).get(this.userId).next(function(metadata){return metadata||new DbMutationQueue(_this.userId,BATCHID_UNKNOWN,/*lastStreamToken=*/'');});};return IndexedDbMutationQueue;}();/**
 * @return true if the mutation queue for the given user contains a pending
 *         mutation for the given key.
 */function mutationQueueContainsKey(txn,userId,key){var indexKey=DbDocumentMutation.prefixForPath(userId,key.path);var encodedPath=indexKey[1];var startRange=IDBKeyRange.lowerBound(indexKey);var containsKey=false;return documentMutationsStore(txn).iterate({range:startRange,keysOnly:true},function(key,value,control){var userID=key[0],keyPath=key[1],/*batchID*/_=key[2];if(userID===userId&&keyPath===encodedPath){containsKey=true;}control.done();}).next(function(){return containsKey;});}/** Returns true if any mutation queue contains the given document. */function mutationQueuesContainKey(txn,docKey){var found=false;return mutationQueuesStore(txn).iterateSerial(function(userId){return mutationQueueContainsKey(txn,userId,docKey).next(function(containsKey){if(containsKey){found=true;}return PersistencePromise.resolve(!containsKey);});}).next(function(){return found;});}/**
 * Delete a mutation batch and the associated document mutations.
 * @return A PersistencePromise of the document mutations that were removed.
 */function removeMutationBatch(txn,userId,batch){var mutationStore=txn.store(DbMutationBatch.store);var indexTxn=txn.store(DbDocumentMutation.store);var promises=[];var range=IDBKeyRange.only(batch.batchId);var numDeleted=0;var removePromise=mutationStore.iterate({range:range},function(key,value,control){numDeleted++;return control.delete();});promises.push(removePromise.next(function(){assert(numDeleted===1,'Dangling document-mutation reference found: Missing batch '+batch.batchId);}));var removedDocuments=[];for(var _i=0,_a=batch.mutations;_i<_a.length;_i++){var mutation=_a[_i];var indexKey=DbDocumentMutation.key(userId,mutation.key.path,batch.batchId);promises.push(indexTxn.delete(indexKey));removedDocuments.push(mutation.key);}return PersistencePromise.waitFor(promises).next(function(){return removedDocuments;});}function convertStreamToken(token){if(token instanceof Uint8Array){// TODO(b/78771403): Convert tokens to strings during deserialization
assert(SimpleDb.isMockPersistence(),'Persisting non-string stream tokens is only supported with mock persistence.');return token.toString();}else{return token;}}/**
 * Helper to get a typed SimpleDbStore for the mutations object store.
 */function mutationsStore(txn){return IndexedDbPersistence.getStore(txn,DbMutationBatch.store);}/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */function documentMutationsStore(txn){return IndexedDbPersistence.getStore(txn,DbDocumentMutation.store);}/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */function mutationQueuesStore(txn){return IndexedDbPersistence.getStore(txn,DbMutationQueue.store);}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var RESERVED_BITS=1;var GeneratorIds;(function(GeneratorIds){GeneratorIds[GeneratorIds["QueryCache"]=0]="QueryCache";GeneratorIds[GeneratorIds["SyncEngine"]=1]="SyncEngine";// The target IDs for limbo detection are odd (end in 1).
})(GeneratorIds||(GeneratorIds={}));/**
 * Generates monotonically increasing target IDs for sending targets to the
 * watch stream.
 *
 * The client constructs two generators, one for the query cache (via
 * forQueryCache()), and one for limbo documents (via forSyncEngine()). These
 * two generators produce non-overlapping IDs (by using even and odd IDs
 * respectively).
 *
 * By separating the target ID space, the query cache can generate target IDs
 * that persist across client restarts, while sync engine can independently
 * generate in-memory target IDs that are transient and can be reused after a
 * restart.
 */ // TODO(mrschmidt): Explore removing this class in favor of generating these IDs
// directly in SyncEngine and LocalStore.
var TargetIdGenerator=/** @class */function(){/**
     * Instantiates a new TargetIdGenerator. If a seed is provided, the generator
     * will use the seed value as the next target ID.
     */function TargetIdGenerator(generatorId,seed){this.generatorId=generatorId;assert((generatorId&RESERVED_BITS)===generatorId,"Generator ID "+generatorId+" contains more than "+RESERVED_BITS+" reserved bits");this.seek(seed!==undefined?seed:this.generatorId);}TargetIdGenerator.prototype.next=function(){var nextId=this.nextId;this.nextId+=1<<RESERVED_BITS;return nextId;};/**
     * Returns the ID that follows the given ID. Subsequent calls to `next()`
     * use the newly returned target ID as their base.
     */ // PORTING NOTE: Multi-tab only.
TargetIdGenerator.prototype.after=function(targetId){this.seek(targetId+(1<<RESERVED_BITS));return this.next();};TargetIdGenerator.prototype.seek=function(targetId){assert((targetId&RESERVED_BITS)===this.generatorId,'Cannot supply target ID from different generator ID');this.nextId=targetId;};TargetIdGenerator.forTargetCache=function(){// We seed the query cache generator to return '2' as its first ID, as there
// is no differentiation in the protocol layer between an unset number and
// the number '0'. If we were to sent a target with target ID '0', the
// backend would consider it unset and replace it with its own ID.
var targetIdGenerator=new TargetIdGenerator(GeneratorIds.QueryCache,2);return targetIdGenerator;};TargetIdGenerator.forSyncEngine=function(){// Sync engine assigns target IDs for limbo document detection.
return new TargetIdGenerator(GeneratorIds.SyncEngine);};return TargetIdGenerator;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var IndexedDbTargetCache=/** @class */function(){function IndexedDbTargetCache(referenceDelegate,serializer){this.referenceDelegate=referenceDelegate;this.serializer=serializer;// PORTING NOTE: We don't cache global metadata for the target cache, since
// some of it (in particular `highestTargetId`) can be modified by secondary
// tabs. We could perhaps be more granular (and e.g. still cache
// `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
// to IndexedDb whenever we need to read metadata. We can revisit if it turns
// out to have a meaningful performance impact.
this.targetIdGenerator=TargetIdGenerator.forTargetCache();}IndexedDbTargetCache.prototype.allocateTargetId=function(transaction){var _this=this;return this.retrieveMetadata(transaction).next(function(metadata){metadata.highestTargetId=_this.targetIdGenerator.after(metadata.highestTargetId);return _this.saveMetadata(transaction,metadata).next(function(){return metadata.highestTargetId;});});};IndexedDbTargetCache.prototype.getLastRemoteSnapshotVersion=function(transaction){return this.retrieveMetadata(transaction).next(function(metadata){return SnapshotVersion.fromTimestamp(new Timestamp(metadata.lastRemoteSnapshotVersion.seconds,metadata.lastRemoteSnapshotVersion.nanoseconds));});};IndexedDbTargetCache.prototype.getHighestSequenceNumber=function(transaction){return getHighestListenSequenceNumber(transaction.simpleDbTransaction);};IndexedDbTargetCache.prototype.setTargetsMetadata=function(transaction,highestListenSequenceNumber,lastRemoteSnapshotVersion){var _this=this;return this.retrieveMetadata(transaction).next(function(metadata){metadata.highestListenSequenceNumber=highestListenSequenceNumber;if(lastRemoteSnapshotVersion){metadata.lastRemoteSnapshotVersion=lastRemoteSnapshotVersion.toTimestamp();}if(highestListenSequenceNumber>metadata.highestListenSequenceNumber){metadata.highestListenSequenceNumber=highestListenSequenceNumber;}return _this.saveMetadata(transaction,metadata);});};IndexedDbTargetCache.prototype.addTargetData=function(transaction,targetData){var _this=this;return this.saveTargetData(transaction,targetData).next(function(){return _this.retrieveMetadata(transaction).next(function(metadata){metadata.targetCount+=1;_this.updateMetadataFromTargetData(targetData,metadata);return _this.saveMetadata(transaction,metadata);});});};IndexedDbTargetCache.prototype.updateTargetData=function(transaction,targetData){return this.saveTargetData(transaction,targetData);};IndexedDbTargetCache.prototype.removeTargetData=function(transaction,targetData){var _this=this;return this.removeMatchingKeysForTargetId(transaction,targetData.targetId).next(function(){return targetsStore(transaction).delete(targetData.targetId);}).next(function(){return _this.retrieveMetadata(transaction);}).next(function(metadata){assert(metadata.targetCount>0,'Removing from an empty target cache');metadata.targetCount-=1;return _this.saveMetadata(transaction,metadata);});};/**
     * Drops any targets with sequence number less than or equal to the upper bound, excepting those
     * present in `activeTargetIds`. Document associations for the removed targets are also removed.
     * Returns the number of targets removed.
     */IndexedDbTargetCache.prototype.removeTargets=function(txn,upperBound,activeTargetIds){var _this=this;var count=0;var promises=[];return targetsStore(txn).iterate(function(key,value){var targetData=_this.serializer.fromDbTarget(value);if(targetData.sequenceNumber<=upperBound&&activeTargetIds.get(targetData.targetId)===null){count++;promises.push(_this.removeTargetData(txn,targetData));}}).next(function(){return PersistencePromise.waitFor(promises);}).next(function(){return count;});};/**
     * Call provided function with each `TargetData` that we have cached.
     */IndexedDbTargetCache.prototype.forEachTarget=function(txn,f){var _this=this;return targetsStore(txn).iterate(function(key,value){var targetData=_this.serializer.fromDbTarget(value);f(targetData);});};IndexedDbTargetCache.prototype.retrieveMetadata=function(transaction){return retrieveMetadata(transaction.simpleDbTransaction);};IndexedDbTargetCache.prototype.saveMetadata=function(transaction,metadata){return globalTargetStore(transaction).put(DbTargetGlobal.key,metadata);};IndexedDbTargetCache.prototype.saveTargetData=function(transaction,targetData){return targetsStore(transaction).put(this.serializer.toDbTarget(targetData));};/**
     * In-place updates the provided metadata to account for values in the given
     * TargetData. Saving is done separately. Returns true if there were any
     * changes to the metadata.
     */IndexedDbTargetCache.prototype.updateMetadataFromTargetData=function(targetData,metadata){var updated=false;if(targetData.targetId>metadata.highestTargetId){metadata.highestTargetId=targetData.targetId;updated=true;}if(targetData.sequenceNumber>metadata.highestListenSequenceNumber){metadata.highestListenSequenceNumber=targetData.sequenceNumber;updated=true;}return updated;};IndexedDbTargetCache.prototype.getTargetCount=function(transaction){return this.retrieveMetadata(transaction).next(function(metadata){return metadata.targetCount;});};IndexedDbTargetCache.prototype.getTargetData=function(transaction,target){var _this=this;// Iterating by the canonicalId may yield more than one result because
// canonicalId values are not required to be unique per target. This query
// depends on the queryTargets index to be efficient.
var canonicalId=target.canonicalId();var range=IDBKeyRange.bound([canonicalId,Number.NEGATIVE_INFINITY],[canonicalId,Number.POSITIVE_INFINITY]);var result=null;return targetsStore(transaction).iterate({range:range,index:DbTarget.queryTargetsIndexName},function(key,value,control){var found=_this.serializer.fromDbTarget(value);// After finding a potential match, check that the target is
// actually equal to the requested target.
if(target.isEqual(found.target)){result=found;control.done();}}).next(function(){return result;});};IndexedDbTargetCache.prototype.addMatchingKeys=function(txn,keys,targetId){var _this=this;// PORTING NOTE: The reverse index (documentsTargets) is maintained by
// IndexedDb.
var promises=[];var store=documentTargetStore(txn);keys.forEach(function(key){var path=encode(key.path);promises.push(store.put(new DbTargetDocument(targetId,path)));promises.push(_this.referenceDelegate.addReference(txn,key));});return PersistencePromise.waitFor(promises);};IndexedDbTargetCache.prototype.removeMatchingKeys=function(txn,keys,targetId){var _this=this;// PORTING NOTE: The reverse index (documentsTargets) is maintained by
// IndexedDb.
var store=documentTargetStore(txn);return PersistencePromise.forEach(keys,function(key){var path=encode(key.path);return PersistencePromise.waitFor([store.delete([targetId,path]),_this.referenceDelegate.removeReference(txn,key)]);});};IndexedDbTargetCache.prototype.removeMatchingKeysForTargetId=function(txn,targetId){var store=documentTargetStore(txn);var range=IDBKeyRange.bound([targetId],[targetId+1],/*lowerOpen=*/false,/*upperOpen=*/true);return store.delete(range);};IndexedDbTargetCache.prototype.getMatchingKeysForTargetId=function(txn,targetId){var range=IDBKeyRange.bound([targetId],[targetId+1],/*lowerOpen=*/false,/*upperOpen=*/true);var store=documentTargetStore(txn);var result=documentKeySet();return store.iterate({range:range,keysOnly:true},function(key,_,control){var path=decode(key[1]);var docKey=new DocumentKey(path);result=result.add(docKey);}).next(function(){return result;});};IndexedDbTargetCache.prototype.containsKey=function(txn,key){var path=encode(key.path);var range=IDBKeyRange.bound([path],[immediateSuccessor(path)],/*lowerOpen=*/false,/*upperOpen=*/true);var count=0;return documentTargetStore(txn).iterate({index:DbTargetDocument.documentTargetsIndex,keysOnly:true,range:range},function(_a,_,control){var targetId=_a[0],path=_a[1];// Having a sentinel row for a document does not count as containing that document;
// For the target cache, containing the document means the document is part of some
// target.
if(targetId!==0){count++;control.done();}}).next(function(){return count>0;});};IndexedDbTargetCache.prototype.getTargetDataForTarget=function(transaction,targetId){var _this=this;return targetsStore(transaction).get(targetId).next(function(found){if(found){return _this.serializer.fromDbTarget(found);}else{return null;}});};return IndexedDbTargetCache;}();/**
 * Helper to get a typed SimpleDbStore for the queries object store.
 */function targetsStore(txn){return IndexedDbPersistence.getStore(txn,DbTarget.store);}/**
 * Helper to get a typed SimpleDbStore for the target globals object store.
 */function globalTargetStore(txn){return IndexedDbPersistence.getStore(txn,DbTargetGlobal.store);}function retrieveMetadata(txn){var globalStore=SimpleDb.getStore(txn,DbTargetGlobal.store);return globalStore.get(DbTargetGlobal.key).next(function(metadata){assert(metadata!==null,'Missing metadata row.');return metadata;});}function getHighestListenSequenceNumber(txn){return retrieveMetadata(txn).next(function(targetGlobal){return targetGlobal.highestListenSequenceNumber;});}/**
 * Helper to get a typed SimpleDbStore for the document target object store.
 */function documentTargetStore(txn){return IndexedDbPersistence.getStore(txn,DbTargetDocument.store);}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Provides a set of fields that can be used to partially patch a document.
 * FieldMask is used in conjunction with ObjectValue.
 * Examples:
 *   foo - Overwrites foo entirely with the provided value. If foo is not
 *         present in the companion ObjectValue, the field is deleted.
 *   foo.bar - Overwrites only the field bar of the object foo.
 *             If foo is not an object, foo is replaced with an object
 *             containing foo
 */var FieldMask=/** @class */function(){function FieldMask(fields){this.fields=fields;// TODO(dimond): validation of FieldMask
}FieldMask.fromSet=function(fields){return new FieldMask(fields);};FieldMask.fromArray=function(fields){var fieldsAsSet=new SortedSet(FieldPath.comparator);fields.forEach(function(fieldPath){return fieldsAsSet=fieldsAsSet.add(fieldPath);});return new FieldMask(fieldsAsSet);};/**
     * Verifies that `fieldPath` is included by at least one field in this field
     * mask.
     *
     * This is an O(n) operation, where `n` is the size of the field mask.
     */FieldMask.prototype.covers=function(fieldPath){var found=false;this.fields.forEach(function(fieldMaskPath){if(fieldMaskPath.isPrefixOf(fieldPath)){found=true;}});return found;};FieldMask.prototype.isEqual=function(other){return this.fields.isEqual(other.fields);};return FieldMask;}();/** A field path and the TransformOperation to perform upon it. */var FieldTransform=/** @class */function(){function FieldTransform(field,transform){this.field=field;this.transform=transform;}FieldTransform.prototype.isEqual=function(other){return this.field.isEqual(other.field)&&this.transform.isEqual(other.transform);};return FieldTransform;}();/** The result of successfully applying a mutation to the backend. */var MutationResult=/** @class */function(){function MutationResult(/**
     * The version at which the mutation was committed:
     *
     * - For most operations, this is the updateTime in the WriteResult.
     * - For deletes, the commitTime of the WriteResponse (because deletes are
     *   not stored and have no updateTime).
     *
     * Note that these versions can be different: No-op writes will not change
     * the updateTime even though the commitTime advances.
     */version,/**
     * The resulting fields returned from the backend after a
     * TransformMutation has been committed. Contains one FieldValue for each
     * FieldTransform that was in the mutation.
     *
     * Will be null if the mutation was not a TransformMutation.
     */transformResults){this.version=version;this.transformResults=transformResults;}return MutationResult;}();var MutationType;(function(MutationType){MutationType[MutationType["Set"]=0]="Set";MutationType[MutationType["Patch"]=1]="Patch";MutationType[MutationType["Transform"]=2]="Transform";MutationType[MutationType["Delete"]=3]="Delete";})(MutationType||(MutationType={}));/**
 * Encodes a precondition for a mutation. This follows the model that the
 * backend accepts with the special case of an explicit "empty" precondition
 * (meaning no precondition).
 */var Precondition=/** @class */function(){function Precondition(updateTime,exists){this.updateTime=updateTime;this.exists=exists;assert(updateTime===undefined||exists===undefined,'Precondition can specify "exists" or "updateTime" but not both');}/** Creates a new Precondition with an exists flag. */Precondition.exists=function(exists){return new Precondition(undefined,exists);};/** Creates a new Precondition based on a version a document exists at. */Precondition.updateTime=function(version){return new Precondition(version);};Object.defineProperty(Precondition.prototype,"isNone",{/** Returns whether this Precondition is empty. */get:function get(){return this.updateTime===undefined&&this.exists===undefined;},enumerable:true,configurable:true});/**
     * Returns true if the preconditions is valid for the given document
     * (or null if no document is available).
     */Precondition.prototype.isValidFor=function(maybeDoc){if(this.updateTime!==undefined){return maybeDoc instanceof Document&&maybeDoc.version.isEqual(this.updateTime);}else if(this.exists!==undefined){return this.exists===maybeDoc instanceof Document;}else{assert(this.isNone,'Precondition should be empty');return true;}};Precondition.prototype.isEqual=function(other){return equals(this.updateTime,other.updateTime)&&this.exists===other.exists;};Precondition.NONE=new Precondition();return Precondition;}();/**
 * A mutation describes a self-contained change to a document. Mutations can
 * create, replace, delete, and update subsets of documents.
 *
 * Mutations not only act on the value of the document but also it version.
 *
 * For local mutations (mutations that haven't been committed yet), we preserve
 * the existing version for Set, Patch, and Transform mutations. For Delete
 * mutations, we reset the version to 0.
 *
 * Here's the expected transition table.
 *
 * MUTATION           APPLIED TO            RESULTS IN
 *
 * SetMutation        Document(v3)          Document(v3)
 * SetMutation        NoDocument(v3)        Document(v0)
 * SetMutation        null                  Document(v0)
 * PatchMutation      Document(v3)          Document(v3)
 * PatchMutation      NoDocument(v3)        NoDocument(v3)
 * PatchMutation      null                  null
 * TransformMutation  Document(v3)          Document(v3)
 * TransformMutation  NoDocument(v3)        NoDocument(v3)
 * TransformMutation  null                  null
 * DeleteMutation     Document(v3)          NoDocument(v0)
 * DeleteMutation     NoDocument(v3)        NoDocument(v0)
 * DeleteMutation     null                  NoDocument(v0)
 *
 * For acknowledged mutations, we use the updateTime of the WriteResponse as
 * the resulting version for Set, Patch, and Transform mutations. As deletes
 * have no explicit update time, we use the commitTime of the WriteResponse for
 * Delete mutations.
 *
 * If a mutation is acknowledged by the backend but fails the precondition check
 * locally, we return an `UnknownDocument` and rely on Watch to send us the
 * updated version.
 *
 * Note that TransformMutations don't create Documents (in the case of being
 * applied to a NoDocument), even though they would on the backend. This is
 * because the client always combines the TransformMutation with a SetMutation
 * or PatchMutation and we only want to apply the transform if the prior
 * mutation resulted in a Document (always true for a SetMutation, but not
 * necessarily for a PatchMutation).
 *
 * ## Subclassing Notes
 *
 * Subclasses of Mutation need to implement applyToRemoteDocument() and
 * applyToLocalView() to implement the actual behavior of applying the mutation
 * to some source document.
 */var Mutation=/** @class */function(){function Mutation(){}Mutation.prototype.verifyKeyMatches=function(maybeDoc){if(maybeDoc!=null){assert(maybeDoc.key.isEqual(this.key),'Can only apply a mutation to a document with the same key');}};/**
     * Returns the version from the given document for use as the result of a
     * mutation. Mutations are defined to return the version of the base document
     * only if it is an existing document. Deleted and unknown documents have a
     * post-mutation version of SnapshotVersion.MIN.
     */Mutation.getPostMutationVersion=function(maybeDoc){if(maybeDoc instanceof Document){return maybeDoc.version;}else{return SnapshotVersion.MIN;}};return Mutation;}();/**
 * A mutation that creates or replaces the document at the given key with the
 * object value contents.
 */var SetMutation=/** @class */function(_super){tslib.__extends(SetMutation,_super);function SetMutation(key,value,precondition){var _this=_super.call(this)||this;_this.key=key;_this.value=value;_this.precondition=precondition;_this.type=MutationType.Set;return _this;}SetMutation.prototype.applyToRemoteDocument=function(maybeDoc,mutationResult){this.verifyKeyMatches(maybeDoc);assert(mutationResult.transformResults==null,'Transform results received by SetMutation.');// Unlike applyToLocalView, if we're applying a mutation to a remote
// document the server has accepted the mutation so the precondition must
// have held.
var version=mutationResult.version;return new Document(this.key,version,{hasCommittedMutations:true},this.value);};SetMutation.prototype.applyToLocalView=function(maybeDoc,baseDoc,localWriteTime){this.verifyKeyMatches(maybeDoc);if(!this.precondition.isValidFor(maybeDoc)){return maybeDoc;}var version=Mutation.getPostMutationVersion(maybeDoc);return new Document(this.key,version,{hasLocalMutations:true},this.value);};SetMutation.prototype.extractBaseValue=function(maybeDoc){return null;};SetMutation.prototype.isEqual=function(other){return other instanceof SetMutation&&this.key.isEqual(other.key)&&this.value.isEqual(other.value)&&this.precondition.isEqual(other.precondition);};return SetMutation;}(Mutation);/**
 * A mutation that modifies fields of the document at the given key with the
 * given values. The values are applied through a field mask:
 *
 *  * When a field is in both the mask and the values, the corresponding field
 *    is updated.
 *  * When a field is in neither the mask nor the values, the corresponding
 *    field is unmodified.
 *  * When a field is in the mask but not in the values, the corresponding field
 *    is deleted.
 *  * When a field is not in the mask but is in the values, the values map is
 *    ignored.
 */var PatchMutation=/** @class */function(_super){tslib.__extends(PatchMutation,_super);function PatchMutation(key,data,fieldMask,precondition){var _this=_super.call(this)||this;_this.key=key;_this.data=data;_this.fieldMask=fieldMask;_this.precondition=precondition;_this.type=MutationType.Patch;return _this;}PatchMutation.prototype.applyToRemoteDocument=function(maybeDoc,mutationResult){this.verifyKeyMatches(maybeDoc);assert(mutationResult.transformResults==null,'Transform results received by PatchMutation.');if(!this.precondition.isValidFor(maybeDoc)){// Since the mutation was not rejected, we know that the  precondition
// matched on the backend. We therefore must not have the expected version
// of the document in our cache and return an UnknownDocument with the
// known updateTime.
return new UnknownDocument(this.key,mutationResult.version);}var newData=this.patchDocument(maybeDoc);return new Document(this.key,mutationResult.version,{hasCommittedMutations:true},newData);};PatchMutation.prototype.applyToLocalView=function(maybeDoc,baseDoc,localWriteTime){this.verifyKeyMatches(maybeDoc);if(!this.precondition.isValidFor(maybeDoc)){return maybeDoc;}var version=Mutation.getPostMutationVersion(maybeDoc);var newData=this.patchDocument(maybeDoc);return new Document(this.key,version,{hasLocalMutations:true},newData);};PatchMutation.prototype.extractBaseValue=function(maybeDoc){return null;};PatchMutation.prototype.isEqual=function(other){return other instanceof PatchMutation&&this.key.isEqual(other.key)&&this.fieldMask.isEqual(other.fieldMask)&&this.precondition.isEqual(other.precondition);};/**
     * Patches the data of document if available or creates a new document. Note
     * that this does not check whether or not the precondition of this patch
     * holds.
     */PatchMutation.prototype.patchDocument=function(maybeDoc){var data;if(maybeDoc instanceof Document){data=maybeDoc.data();}else{data=ObjectValue.EMPTY;}return this.patchObject(data);};PatchMutation.prototype.patchObject=function(data){var _this=this;this.fieldMask.fields.forEach(function(fieldPath){if(!fieldPath.isEmpty()){var newValue=_this.data.field(fieldPath);if(newValue!==null){data=data.set(fieldPath,newValue);}else{data=data.delete(fieldPath);}}});return data;};return PatchMutation;}(Mutation);/**
 * A mutation that modifies specific fields of the document with transform
 * operations. Currently the only supported transform is a server timestamp, but
 * IP Address, increment(n), etc. could be supported in the future.
 *
 * It is somewhat similar to a PatchMutation in that it patches specific fields
 * and has no effect when applied to a null or NoDocument (see comment on
 * Mutation for rationale).
 */var TransformMutation=/** @class */function(_super){tslib.__extends(TransformMutation,_super);function TransformMutation(key,fieldTransforms){var _this=_super.call(this)||this;_this.key=key;_this.fieldTransforms=fieldTransforms;_this.type=MutationType.Transform;// NOTE: We set a precondition of exists: true as a safety-check, since we
// always combine TransformMutations with a SetMutation or PatchMutation which
// (if successful) should end up with an existing document.
_this.precondition=Precondition.exists(true);return _this;}TransformMutation.prototype.applyToRemoteDocument=function(maybeDoc,mutationResult){this.verifyKeyMatches(maybeDoc);assert(mutationResult.transformResults!=null,'Transform results missing for TransformMutation.');if(!this.precondition.isValidFor(maybeDoc)){// Since the mutation was not rejected, we know that the  precondition
// matched on the backend. We therefore must not have the expected version
// of the document in our cache and return an UnknownDocument with the
// known updateTime.
return new UnknownDocument(this.key,mutationResult.version);}var doc=this.requireDocument(maybeDoc);var transformResults=this.serverTransformResults(maybeDoc,mutationResult.transformResults);var version=mutationResult.version;var newData=this.transformObject(doc.data(),transformResults);return new Document(this.key,version,{hasCommittedMutations:true},newData);};TransformMutation.prototype.applyToLocalView=function(maybeDoc,baseDoc,localWriteTime){this.verifyKeyMatches(maybeDoc);if(!this.precondition.isValidFor(maybeDoc)){return maybeDoc;}var doc=this.requireDocument(maybeDoc);var transformResults=this.localTransformResults(localWriteTime,maybeDoc,baseDoc);var newData=this.transformObject(doc.data(),transformResults);return new Document(this.key,doc.version,{hasLocalMutations:true},newData);};TransformMutation.prototype.extractBaseValue=function(maybeDoc){var baseObject=null;for(var _i=0,_a=this.fieldTransforms;_i<_a.length;_i++){var fieldTransform=_a[_i];var existingValue=maybeDoc instanceof Document?maybeDoc.field(fieldTransform.field):undefined;var coercedValue=fieldTransform.transform.computeBaseValue(existingValue||null);if(coercedValue!=null){if(baseObject==null){baseObject=ObjectValue.EMPTY.set(fieldTransform.field,coercedValue);}else{baseObject=baseObject.set(fieldTransform.field,coercedValue);}}}return baseObject;};TransformMutation.prototype.isEqual=function(other){return other instanceof TransformMutation&&this.key.isEqual(other.key)&&arrayEquals(this.fieldTransforms,other.fieldTransforms)&&this.precondition.isEqual(other.precondition);};/**
     * Asserts that the given MaybeDocument is actually a Document and verifies
     * that it matches the key for this mutation. Since we only support
     * transformations with precondition exists this method is guaranteed to be
     * safe.
     */TransformMutation.prototype.requireDocument=function(maybeDoc){assert(maybeDoc instanceof Document,'Unknown MaybeDocument type '+maybeDoc);assert(maybeDoc.key.isEqual(this.key),'Can only transform a document with the same key');return maybeDoc;};/**
     * Creates a list of "transform results" (a transform result is a field value
     * representing the result of applying a transform) for use after a
     * TransformMutation has been acknowledged by the server.
     *
     * @param baseDoc The document prior to applying this mutation batch.
     * @param serverTransformResults The transform results received by the server.
     * @return The transform results list.
     */TransformMutation.prototype.serverTransformResults=function(baseDoc,serverTransformResults){var transformResults=[];assert(this.fieldTransforms.length===serverTransformResults.length,"server transform result count ("+serverTransformResults.length+") "+("should match field transform count ("+this.fieldTransforms.length+")"));for(var i=0;i<serverTransformResults.length;i++){var fieldTransform=this.fieldTransforms[i];var transform=fieldTransform.transform;var previousValue=null;if(baseDoc instanceof Document){previousValue=baseDoc.field(fieldTransform.field);}transformResults.push(transform.applyToRemoteDocument(previousValue,serverTransformResults[i]));}return transformResults;};/**
     * Creates a list of "transform results" (a transform result is a field value
     * representing the result of applying a transform) for use when applying a
     * TransformMutation locally.
     *
     * @param localWriteTime The local time of the transform mutation (used to
     *     generate ServerTimestampValues).
     * @param maybeDoc The current state of the document after applying all
     *     previous mutations.
     * @param baseDoc The document prior to applying this mutation batch.
     * @return The transform results list.
     */TransformMutation.prototype.localTransformResults=function(localWriteTime,maybeDoc,baseDoc){var transformResults=[];for(var _i=0,_a=this.fieldTransforms;_i<_a.length;_i++){var fieldTransform=_a[_i];var transform=fieldTransform.transform;var previousValue=null;if(maybeDoc instanceof Document){previousValue=maybeDoc.field(fieldTransform.field);}if(previousValue===null&&baseDoc instanceof Document){// If the current document does not contain a value for the mutated
// field, use the value that existed before applying this mutation
// batch. This solves an edge case where a PatchMutation clears the
// values in a nested map before the TransformMutation is applied.
previousValue=baseDoc.field(fieldTransform.field);}transformResults.push(transform.applyToLocalView(previousValue,localWriteTime));}return transformResults;};TransformMutation.prototype.transformObject=function(data,transformResults){assert(transformResults.length===this.fieldTransforms.length,'TransformResults length mismatch.');for(var i=0;i<this.fieldTransforms.length;i++){var fieldTransform=this.fieldTransforms[i];var fieldPath=fieldTransform.field;data=data.set(fieldPath,transformResults[i]);}return data;};return TransformMutation;}(Mutation);/** A mutation that deletes the document at the given key. */var DeleteMutation=/** @class */function(_super){tslib.__extends(DeleteMutation,_super);function DeleteMutation(key,precondition){var _this=_super.call(this)||this;_this.key=key;_this.precondition=precondition;_this.type=MutationType.Delete;return _this;}DeleteMutation.prototype.applyToRemoteDocument=function(maybeDoc,mutationResult){this.verifyKeyMatches(maybeDoc);assert(mutationResult.transformResults==null,'Transform results received by DeleteMutation.');// Unlike applyToLocalView, if we're applying a mutation to a remote
// document the server has accepted the mutation so the precondition must
// have held.
return new NoDocument(this.key,mutationResult.version,{hasCommittedMutations:true});};DeleteMutation.prototype.applyToLocalView=function(maybeDoc,baseDoc,localWriteTime){this.verifyKeyMatches(maybeDoc);if(!this.precondition.isValidFor(maybeDoc)){return maybeDoc;}if(maybeDoc){assert(maybeDoc.key.isEqual(this.key),'Can only apply mutation to document with same key');}return new NoDocument(this.key,SnapshotVersion.forDeletedDoc());};DeleteMutation.prototype.extractBaseValue=function(maybeDoc){return null;};DeleteMutation.prototype.isEqual=function(other){return other instanceof DeleteMutation&&this.key.isEqual(other.key)&&this.precondition.isEqual(other.precondition);};return DeleteMutation;}(Mutation);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var TypeOrder;(function(TypeOrder){// This order is defined by the backend.
TypeOrder[TypeOrder["NullValue"]=0]="NullValue";TypeOrder[TypeOrder["BooleanValue"]=1]="BooleanValue";TypeOrder[TypeOrder["NumberValue"]=2]="NumberValue";TypeOrder[TypeOrder["TimestampValue"]=3]="TimestampValue";TypeOrder[TypeOrder["StringValue"]=4]="StringValue";TypeOrder[TypeOrder["BlobValue"]=5]="BlobValue";TypeOrder[TypeOrder["RefValue"]=6]="RefValue";TypeOrder[TypeOrder["GeoPointValue"]=7]="GeoPointValue";TypeOrder[TypeOrder["ArrayValue"]=8]="ArrayValue";TypeOrder[TypeOrder["ObjectValue"]=9]="ObjectValue";})(TypeOrder||(TypeOrder={}));/** Defines the return value for pending server timestamps. */var ServerTimestampBehavior;(function(ServerTimestampBehavior){ServerTimestampBehavior[ServerTimestampBehavior["Default"]=0]="Default";ServerTimestampBehavior[ServerTimestampBehavior["Estimate"]=1]="Estimate";ServerTimestampBehavior[ServerTimestampBehavior["Previous"]=2]="Previous";})(ServerTimestampBehavior||(ServerTimestampBehavior={}));/** Holds properties that define field value deserialization options. */var FieldValueOptions=/** @class */function(){function FieldValueOptions(serverTimestampBehavior,timestampsInSnapshots){this.serverTimestampBehavior=serverTimestampBehavior;this.timestampsInSnapshots=timestampsInSnapshots;}FieldValueOptions.fromSnapshotOptions=function(options,timestampsInSnapshots){switch(options.serverTimestamps){case'estimate':return new FieldValueOptions(ServerTimestampBehavior.Estimate,timestampsInSnapshots);case'previous':return new FieldValueOptions(ServerTimestampBehavior.Previous,timestampsInSnapshots);case'none':// Fall-through intended.
case undefined:return new FieldValueOptions(ServerTimestampBehavior.Default,timestampsInSnapshots);default:return fail('fromSnapshotOptions() called with invalid options.');}};return FieldValueOptions;}();/**
 * A field value represents a datatype as stored by Firestore.
 */var FieldValue=/** @class */function(){function FieldValue(){}FieldValue.prototype.toString=function(){var val=this.value();return val===null?'null':val.toString();};FieldValue.prototype.defaultCompareTo=function(other){assert(this.typeOrder!==other.typeOrder,'Default compareTo should not be used for values of same type.');var cmp=primitiveComparator(this.typeOrder,other.typeOrder);return cmp;};return FieldValue;}();var NullValue=/** @class */function(_super){tslib.__extends(NullValue,_super);function NullValue(){var _this=_super.call(this)||this;_this.typeOrder=TypeOrder.NullValue;// internalValue is unused but we add it to work around
// https://github.com/Microsoft/TypeScript/issues/15585
_this.internalValue=null;return _this;}NullValue.prototype.value=function(options){return null;};NullValue.prototype.isEqual=function(other){return other instanceof NullValue;};NullValue.prototype.compareTo=function(other){if(other instanceof NullValue){return 0;}return this.defaultCompareTo(other);};NullValue.INSTANCE=new NullValue();return NullValue;}(FieldValue);var BooleanValue=/** @class */function(_super){tslib.__extends(BooleanValue,_super);function BooleanValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.BooleanValue;return _this;}BooleanValue.prototype.value=function(options){return this.internalValue;};BooleanValue.prototype.isEqual=function(other){return other instanceof BooleanValue&&this.internalValue===other.internalValue;};BooleanValue.prototype.compareTo=function(other){if(other instanceof BooleanValue){return primitiveComparator(this,other);}return this.defaultCompareTo(other);};BooleanValue.of=function(value){return value?BooleanValue.TRUE:BooleanValue.FALSE;};BooleanValue.TRUE=new BooleanValue(true);BooleanValue.FALSE=new BooleanValue(false);return BooleanValue;}(FieldValue);/** Base class for IntegerValue and DoubleValue. */var NumberValue=/** @class */function(_super){tslib.__extends(NumberValue,_super);function NumberValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.NumberValue;return _this;}NumberValue.prototype.value=function(options){return this.internalValue;};NumberValue.prototype.compareTo=function(other){if(other instanceof NumberValue){return numericComparator(this.internalValue,other.internalValue);}return this.defaultCompareTo(other);};return NumberValue;}(FieldValue);/** Utility function to compare doubles (using Firestore semantics for NaN). */function numericComparator(left,right){if(left<right){return-1;}else if(left>right){return 1;}else if(left===right){return 0;}else{// one or both are NaN.
if(isNaN(left)){return isNaN(right)?0:-1;}else{return 1;}}}/**
 * Utility function to check numbers for equality using Firestore semantics
 * (NaN === NaN, -0.0 !== 0.0).
 */function numericEquals(left,right){// Implemented based on Object.is() polyfill from
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
if(left===right){// +0 != -0
return left!==0||1/left===1/right;}else{// NaN == NaN
return left!==left&&right!==right;}}var IntegerValue=/** @class */function(_super){tslib.__extends(IntegerValue,_super);function IntegerValue(){return _super!==null&&_super.apply(this,arguments)||this;}IntegerValue.prototype.isEqual=function(other){// NOTE: DoubleValue and IntegerValue instances may compareTo() the same,
// but that doesn't make them equal via isEqual().
if(other instanceof IntegerValue){return numericEquals(this.internalValue,other.internalValue);}else{return false;}};return IntegerValue;}(NumberValue);var DoubleValue=/** @class */function(_super){tslib.__extends(DoubleValue,_super);function DoubleValue(){return _super!==null&&_super.apply(this,arguments)||this;}DoubleValue.prototype.isEqual=function(other){// NOTE: DoubleValue and IntegerValue instances may compareTo() the same,
// but that doesn't make them equal via isEqual().
if(other instanceof DoubleValue){return numericEquals(this.internalValue,other.internalValue);}else{return false;}};DoubleValue.NAN=new DoubleValue(NaN);DoubleValue.POSITIVE_INFINITY=new DoubleValue(Infinity);DoubleValue.NEGATIVE_INFINITY=new DoubleValue(-Infinity);return DoubleValue;}(NumberValue);// TODO(b/37267885): Add truncation support
var StringValue=/** @class */function(_super){tslib.__extends(StringValue,_super);function StringValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.StringValue;return _this;}StringValue.prototype.value=function(options){return this.internalValue;};StringValue.prototype.isEqual=function(other){return other instanceof StringValue&&this.internalValue===other.internalValue;};StringValue.prototype.compareTo=function(other){if(other instanceof StringValue){return primitiveComparator(this.internalValue,other.internalValue);}return this.defaultCompareTo(other);};return StringValue;}(FieldValue);var TimestampValue=/** @class */function(_super){tslib.__extends(TimestampValue,_super);function TimestampValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.TimestampValue;return _this;}TimestampValue.prototype.value=function(options){if(!options||options.timestampsInSnapshots){return this.internalValue;}else{return this.internalValue.toDate();}};TimestampValue.prototype.isEqual=function(other){return other instanceof TimestampValue&&this.internalValue.isEqual(other.internalValue);};TimestampValue.prototype.compareTo=function(other){if(other instanceof TimestampValue){return this.internalValue._compareTo(other.internalValue);}else if(other instanceof ServerTimestampValue){// Concrete timestamps come before server timestamps.
return-1;}else{return this.defaultCompareTo(other);}};return TimestampValue;}(FieldValue);/**
 * Represents a locally-applied ServerTimestamp.
 *
 * Notes:
 * - ServerTimestampValue instances are created as the result of applying a
 *   TransformMutation (see TransformMutation.applyTo()). They can only exist in
 *   the local view of a document. Therefore they do not need to be parsed or
 *   serialized.
 * - When evaluated locally (e.g. for snapshot.data()), they by default
 *   evaluate to `null`. This behavior can be configured by passing custom
 *   FieldValueOptions to value().
 * - With respect to other ServerTimestampValues, they sort by their
 *   localWriteTime.
 */var ServerTimestampValue=/** @class */function(_super){tslib.__extends(ServerTimestampValue,_super);function ServerTimestampValue(localWriteTime,previousValue){var _this=_super.call(this)||this;_this.localWriteTime=localWriteTime;_this.previousValue=previousValue;_this.typeOrder=TypeOrder.TimestampValue;return _this;}ServerTimestampValue.prototype.value=function(options){if(options&&options.serverTimestampBehavior===ServerTimestampBehavior.Estimate){return new TimestampValue(this.localWriteTime).value(options);}else if(options&&options.serverTimestampBehavior===ServerTimestampBehavior.Previous){return this.previousValue?this.previousValue.value(options):null;}else{return null;}};ServerTimestampValue.prototype.isEqual=function(other){return other instanceof ServerTimestampValue&&this.localWriteTime.isEqual(other.localWriteTime);};ServerTimestampValue.prototype.compareTo=function(other){if(other instanceof ServerTimestampValue){return this.localWriteTime._compareTo(other.localWriteTime);}else if(other instanceof TimestampValue){// Server timestamps come after all concrete timestamps.
return 1;}else{return this.defaultCompareTo(other);}};ServerTimestampValue.prototype.toString=function(){return'<ServerTimestamp localTime='+this.localWriteTime.toString()+'>';};return ServerTimestampValue;}(FieldValue);var BlobValue=/** @class */function(_super){tslib.__extends(BlobValue,_super);function BlobValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.BlobValue;return _this;}BlobValue.prototype.value=function(options){return this.internalValue;};BlobValue.prototype.isEqual=function(other){return other instanceof BlobValue&&this.internalValue.isEqual(other.internalValue);};BlobValue.prototype.compareTo=function(other){if(other instanceof BlobValue){return this.internalValue._compareTo(other.internalValue);}return this.defaultCompareTo(other);};return BlobValue;}(FieldValue);var RefValue=/** @class */function(_super){tslib.__extends(RefValue,_super);function RefValue(databaseId,key){var _this=_super.call(this)||this;_this.databaseId=databaseId;_this.key=key;_this.typeOrder=TypeOrder.RefValue;return _this;}RefValue.prototype.value=function(options){return this.key;};RefValue.prototype.isEqual=function(other){if(other instanceof RefValue){return this.key.isEqual(other.key)&&this.databaseId.isEqual(other.databaseId);}else{return false;}};RefValue.prototype.compareTo=function(other){if(other instanceof RefValue){var cmp=this.databaseId.compareTo(other.databaseId);return cmp!==0?cmp:DocumentKey.comparator(this.key,other.key);}return this.defaultCompareTo(other);};return RefValue;}(FieldValue);var GeoPointValue=/** @class */function(_super){tslib.__extends(GeoPointValue,_super);function GeoPointValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.GeoPointValue;return _this;}GeoPointValue.prototype.value=function(options){return this.internalValue;};GeoPointValue.prototype.isEqual=function(other){return other instanceof GeoPointValue&&this.internalValue.isEqual(other.internalValue);};GeoPointValue.prototype.compareTo=function(other){if(other instanceof GeoPointValue){return this.internalValue._compareTo(other.internalValue);}return this.defaultCompareTo(other);};return GeoPointValue;}(FieldValue);var ObjectValue=/** @class */function(_super){tslib.__extends(ObjectValue,_super);function ObjectValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.ObjectValue;return _this;}ObjectValue.prototype.value=function(options){var result={};this.internalValue.inorderTraversal(function(key,val){result[key]=val.value(options);});return result;};ObjectValue.prototype.forEach=function(action){this.internalValue.inorderTraversal(action);};ObjectValue.prototype.isEqual=function(other){if(other instanceof ObjectValue){var it1=this.internalValue.getIterator();var it2=other.internalValue.getIterator();while(it1.hasNext()&&it2.hasNext()){var next1=it1.getNext();var next2=it2.getNext();if(next1.key!==next2.key||!next1.value.isEqual(next2.value)){return false;}}return!it1.hasNext()&&!it2.hasNext();}return false;};ObjectValue.prototype.compareTo=function(other){if(other instanceof ObjectValue){var it1=this.internalValue.getIterator();var it2=other.internalValue.getIterator();while(it1.hasNext()&&it2.hasNext()){var next1=it1.getNext();var next2=it2.getNext();var cmp=primitiveComparator(next1.key,next2.key)||next1.value.compareTo(next2.value);if(cmp){return cmp;}}// Only equal if both iterators are exhausted
return primitiveComparator(it1.hasNext(),it2.hasNext());}else{return this.defaultCompareTo(other);}};ObjectValue.prototype.set=function(path,to){assert(!path.isEmpty(),'Cannot set field for empty path on ObjectValue');if(path.length===1){return this.setChild(path.firstSegment(),to);}else{var child=this.child(path.firstSegment());if(!(child instanceof ObjectValue)){child=ObjectValue.EMPTY;}var newChild=child.set(path.popFirst(),to);return this.setChild(path.firstSegment(),newChild);}};ObjectValue.prototype.delete=function(path){assert(!path.isEmpty(),'Cannot delete field for empty path on ObjectValue');if(path.length===1){return new ObjectValue(this.internalValue.remove(path.firstSegment()));}else{// nested field
var child=this.child(path.firstSegment());if(child instanceof ObjectValue){var newChild=child.delete(path.popFirst());return new ObjectValue(this.internalValue.insert(path.firstSegment(),newChild));}else{// Don't actually change a primitive value to an object for a delete
return this;}}};ObjectValue.prototype.contains=function(path){return this.field(path)!==null;};ObjectValue.prototype.field=function(path){assert(!path.isEmpty(),"Can't get field of empty path");var field=this;path.forEach(function(pathSegment){if(field instanceof ObjectValue){field=field.internalValue.get(pathSegment);}else{field=null;}});return field;};/**
     * Returns a FieldMask built from all FieldPaths starting from this ObjectValue,
     * including paths from nested objects.
     */ObjectValue.prototype.fieldMask=function(){var fields=new SortedSet(FieldPath.comparator);this.internalValue.forEach(function(key,value){var currentPath=new FieldPath([key]);if(value instanceof ObjectValue){var nestedMask=value.fieldMask();var nestedFields=nestedMask.fields;if(nestedFields.isEmpty()){// Preserve the empty map by adding it to the FieldMask.
fields=fields.add(currentPath);}else{// For nested and non-empty ObjectValues, add the FieldPath of the
// leaf nodes.
nestedFields.forEach(function(nestedPath){fields=fields.add(currentPath.child(nestedPath));});}}else{fields=fields.add(currentPath);}});return FieldMask.fromSet(fields);};ObjectValue.prototype.toString=function(){return this.internalValue.toString();};ObjectValue.prototype.child=function(childName){return this.internalValue.get(childName)||undefined;};ObjectValue.prototype.setChild=function(childName,value){return new ObjectValue(this.internalValue.insert(childName,value));};ObjectValue.EMPTY=new ObjectValue(new SortedMap(primitiveComparator));return ObjectValue;}(FieldValue);var ArrayValue=/** @class */function(_super){tslib.__extends(ArrayValue,_super);function ArrayValue(internalValue){var _this=_super.call(this)||this;_this.internalValue=internalValue;_this.typeOrder=TypeOrder.ArrayValue;return _this;}ArrayValue.prototype.value=function(options){return this.internalValue.map(function(v){return v.value(options);});};/**
     * Returns true if the given value is contained in this array.
     */ArrayValue.prototype.contains=function(value){for(var _i=0,_a=this.internalValue;_i<_a.length;_i++){var element=_a[_i];if(element.isEqual(value)){return true;}}return false;};ArrayValue.prototype.forEach=function(action){this.internalValue.forEach(action);};ArrayValue.prototype.isEqual=function(other){if(other instanceof ArrayValue){if(this.internalValue.length!==other.internalValue.length){return false;}for(var i=0;i<this.internalValue.length;i++){if(!this.internalValue[i].isEqual(other.internalValue[i])){return false;}}return true;}return false;};ArrayValue.prototype.compareTo=function(other){if(other instanceof ArrayValue){var minLength=Math.min(this.internalValue.length,other.internalValue.length);for(var i=0;i<minLength;i++){var cmp=this.internalValue[i].compareTo(other.internalValue[i]);if(cmp){return cmp;}}return primitiveComparator(this.internalValue.length,other.internalValue.length);}else{return this.defaultCompareTo(other);}};ArrayValue.prototype.toString=function(){var descriptions=this.internalValue.map(function(v){return v.toString();});return"["+descriptions.join(',')+"]";};return ArrayValue;}(FieldValue);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * The result of a lookup for a given path may be an existing document or a
 * marker that this document does not exist at a given version.
 */var MaybeDocument=/** @class */function(){function MaybeDocument(key,version){this.key=key;this.version=version;}MaybeDocument.compareByKey=function(d1,d2){return DocumentKey.comparator(d1.key,d2.key);};return MaybeDocument;}();/**
 * Represents a document in Firestore with a key, version, data and whether the
 * data has local mutations applied to it.
 */var Document=/** @class */function(_super){tslib.__extends(Document,_super);function Document(key,version,options,objectValue,proto,converter){var _this=_super.call(this,key,version)||this;_this.objectValue=objectValue;_this.proto=proto;_this.converter=converter;assert(_this.objectValue!==undefined||_this.proto!==undefined&&_this.converter!==undefined,'If objectValue is not defined, proto and converter need to be set.');_this.hasLocalMutations=!!options.hasLocalMutations;_this.hasCommittedMutations=!!options.hasCommittedMutations;return _this;}Document.prototype.field=function(path){if(this.objectValue){return this.objectValue.field(path);}else{if(!this.fieldValueCache){// TODO(b/136090445): Remove the cache when `getField` is no longer
// called during Query ordering.
this.fieldValueCache=new Map();}var canonicalPath=path.canonicalString();var fieldValue=this.fieldValueCache.get(canonicalPath);if(fieldValue===undefined){// Instead of deserializing the full Document proto, we only
// deserialize the value at the requested field path. This speeds up
// Query execution as query filters can discard documents based on a
// single field.
var protoValue=this.getProtoField(path);if(protoValue===undefined){fieldValue=null;}else{fieldValue=this.converter(protoValue);}this.fieldValueCache.set(canonicalPath,fieldValue);}return fieldValue;}};Document.prototype.data=function(){var _this=this;if(!this.objectValue){var result_1=ObjectValue.EMPTY;forEach(this.proto.fields||{},function(key,value){result_1=result_1.set(new FieldPath([key]),_this.converter(value));});this.objectValue=result_1;// Once objectValue is computed, values inside the fieldValueCache are no
// longer accessed.
this.fieldValueCache=undefined;}return this.objectValue;};Document.prototype.value=function(){return this.data().value();};Document.prototype.isEqual=function(other){return other instanceof Document&&this.key.isEqual(other.key)&&this.version.isEqual(other.version)&&this.hasLocalMutations===other.hasLocalMutations&&this.hasCommittedMutations===other.hasCommittedMutations&&this.data().isEqual(other.data());};Document.prototype.toString=function(){return"Document("+this.key+", "+this.version+", "+this.data().toString()+", "+("{hasLocalMutations: "+this.hasLocalMutations+"}), ")+("{hasCommittedMutations: "+this.hasCommittedMutations+"})");};Object.defineProperty(Document.prototype,"hasPendingWrites",{get:function get(){return this.hasLocalMutations||this.hasCommittedMutations;},enumerable:true,configurable:true});/**
     * Returns the nested Protobuf value for 'path`. Can only be called if
     * `proto` was provided at construction time.
     */Document.prototype.getProtoField=function(path){assert(this.proto!==undefined,'Can only call getProtoField() when proto is defined');var protoValue=this.proto.fields?this.proto.fields[path.firstSegment()]:undefined;for(var i=1;i<path.length;++i){if(!protoValue||!protoValue.mapValue||!protoValue.mapValue.fields){return undefined;}protoValue=protoValue.mapValue.fields[path.get(i)];}return protoValue;};Document.compareByField=function(field,d1,d2){var v1=d1.field(field);var v2=d2.field(field);if(v1!==null&&v2!==null){return v1.compareTo(v2);}else{return fail("Trying to compare documents on fields that don't exist");}};return Document;}(MaybeDocument);/**
 * A class representing a deleted document.
 * Version is set to 0 if we don't point to any specific time, otherwise it
 * denotes time we know it didn't exist at.
 */var NoDocument=/** @class */function(_super){tslib.__extends(NoDocument,_super);function NoDocument(key,version,options){var _this=_super.call(this,key,version)||this;_this.hasCommittedMutations=!!(options&&options.hasCommittedMutations);return _this;}NoDocument.prototype.toString=function(){return"NoDocument("+this.key+", "+this.version+")";};Object.defineProperty(NoDocument.prototype,"hasPendingWrites",{get:function get(){return this.hasCommittedMutations;},enumerable:true,configurable:true});NoDocument.prototype.isEqual=function(other){return other instanceof NoDocument&&other.hasCommittedMutations===this.hasCommittedMutations&&other.version.isEqual(this.version)&&other.key.isEqual(this.key);};return NoDocument;}(MaybeDocument);/**
 * A class representing an existing document whose data is unknown (e.g. a
 * document that was updated without a known base document).
 */var UnknownDocument=/** @class */function(_super){tslib.__extends(UnknownDocument,_super);function UnknownDocument(){return _super!==null&&_super.apply(this,arguments)||this;}UnknownDocument.prototype.toString=function(){return"UnknownDocument("+this.key+", "+this.version+")";};Object.defineProperty(UnknownDocument.prototype,"hasPendingWrites",{get:function get(){return true;},enumerable:true,configurable:true});UnknownDocument.prototype.isEqual=function(other){return other instanceof UnknownDocument&&other.version.isEqual(this.version)&&other.key.isEqual(this.key);};return UnknownDocument;}(MaybeDocument);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A map implementation that uses objects as keys. Objects must implement the
 * Equatable interface and must be immutable. Entries in the map are stored
 * together with the key being produced from the mapKeyFn. This map
 * automatically handles collisions of keys.
 */var ObjectMap=/** @class */function(){function ObjectMap(mapKeyFn){this.mapKeyFn=mapKeyFn;/**
         * The inner map for a key -> value pair. Due to the possibility of
         * collisions we keep a list of entries that we do a linear search through
         * to find an actual match. Note that collisions should be rare, so we still
         * expect near constant time lookups in practice.
         */this.inner={};}/** Get a value for this key, or undefined if it does not exist. */ObjectMap.prototype.get=function(key){var id=this.mapKeyFn(key);var matches=this.inner[id];if(matches===undefined){return undefined;}for(var _i=0,matches_1=matches;_i<matches_1.length;_i++){var _a=matches_1[_i],otherKey=_a[0],value=_a[1];if(otherKey.isEqual(key)){return value;}}return undefined;};ObjectMap.prototype.has=function(key){return this.get(key)!==undefined;};/** Put this key and value in the map. */ObjectMap.prototype.set=function(key,value){var id=this.mapKeyFn(key);var matches=this.inner[id];if(matches===undefined){this.inner[id]=[[key,value]];return;}for(var i=0;i<matches.length;i++){if(matches[i][0].isEqual(key)){matches[i]=[key,value];return;}}matches.push([key,value]);};/**
     * Remove this key from the map. Returns a boolean if anything was deleted.
     */ObjectMap.prototype.delete=function(key){var id=this.mapKeyFn(key);var matches=this.inner[id];if(matches===undefined){return false;}for(var i=0;i<matches.length;i++){if(matches[i][0].isEqual(key)){if(matches.length===1){delete this.inner[id];}else{matches.splice(i,1);}return true;}}return false;};ObjectMap.prototype.forEach=function(fn){forEach(this.inner,function(_,entries){for(var _i=0,entries_1=entries;_i<entries_1.length;_i++){var _a=entries_1[_i],k=_a[0],v=_a[1];fn(k,v);}});};ObjectMap.prototype.isEmpty=function(){return isEmpty(this.inner);};return ObjectMap;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * An in-memory buffer of entries to be written to a RemoteDocumentCache.
 * It can be used to batch up a set of changes to be written to the cache, but
 * additionally supports reading entries back with the `getEntry()` method,
 * falling back to the underlying RemoteDocumentCache if no entry is
 * buffered.
 *
 * Entries added to the cache *must* be read first. This is to facilitate
 * calculating the size delta of the pending changes.
 *
 * PORTING NOTE: This class was implemented then removed from other platforms.
 * If byte-counting ends up being needed on the other platforms, consider
 * porting this class as part of that implementation work.
 */var RemoteDocumentChangeBuffer=/** @class */function(){function RemoteDocumentChangeBuffer(){// A mapping of document key to the new cache entry that should be written (or null if any
// existing cache entry should be removed).
this.changes=new ObjectMap(function(key){return key.toString();});this.changesApplied=false;}Object.defineProperty(RemoteDocumentChangeBuffer.prototype,"readTime",{get:function get(){assert(this._readTime!==undefined,'Read time is not set. All removeEntry() calls must include a readTime if `trackRemovals` is used.');return this._readTime;},set:function set(value){// Right now (for simplicity) we just track a single readTime for all the
// added entries since we expect them to all be the same, but we could
// rework to store per-entry readTimes if necessary.
assert(this._readTime===undefined||this._readTime.isEqual(value),'All changes in a RemoteDocumentChangeBuffer must have the same read time');this._readTime=value;},enumerable:true,configurable:true});/**
     * Buffers a `RemoteDocumentCache.addEntry()` call.
     *
     * You can only modify documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */RemoteDocumentChangeBuffer.prototype.addEntry=function(maybeDocument,readTime){this.assertNotApplied();this.readTime=readTime;this.changes.set(maybeDocument.key,maybeDocument);};/**
     * Buffers a `RemoteDocumentCache.removeEntry()` call.
     *
     * You can only remove documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */RemoteDocumentChangeBuffer.prototype.removeEntry=function(key,readTime){this.assertNotApplied();if(readTime){this.readTime=readTime;}this.changes.set(key,null);};/**
     * Looks up an entry in the cache. The buffered changes will first be checked,
     * and if no buffered change applies, this will forward to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction The transaction in which to perform any persistence
     *     operations.
     * @param documentKey The key of the entry to look up.
     * @return The cached Document or NoDocument entry, or null if we have nothing
     * cached.
     */RemoteDocumentChangeBuffer.prototype.getEntry=function(transaction,documentKey){this.assertNotApplied();var bufferedEntry=this.changes.get(documentKey);if(bufferedEntry!==undefined){return PersistencePromise.resolve(bufferedEntry);}else{return this.getFromCache(transaction,documentKey);}};/**
     * Looks up several entries in the cache, forwarding to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction The transaction in which to perform any persistence
     *     operations.
     * @param documentKeys The keys of the entries to look up.
     * @return A map of cached `Document`s or `NoDocument`s, indexed by key. If an
     *     entry cannot be found, the corresponding key will be mapped to a null
     *     value.
     */RemoteDocumentChangeBuffer.prototype.getEntries=function(transaction,documentKeys){return this.getAllFromCache(transaction,documentKeys);};/**
     * Applies buffered changes to the underlying RemoteDocumentCache, using
     * the provided transaction.
     */RemoteDocumentChangeBuffer.prototype.apply=function(transaction){this.assertNotApplied();this.changesApplied=true;return this.applyChanges(transaction);};/** Helper to assert this.changes is not null  */RemoteDocumentChangeBuffer.prototype.assertNotApplied=function(){assert(!this.changesApplied,'Changes have already been applied.');};return RemoteDocumentChangeBuffer;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var IndexedDbRemoteDocumentCache=/** @class */function(){/**
     * @param {LocalSerializer} serializer The document serializer.
     * @param {IndexManager} indexManager The query indexes that need to be maintained.
     */function IndexedDbRemoteDocumentCache(serializer,indexManager){this.serializer=serializer;this.indexManager=indexManager;}/**
     * Adds the supplied entries to the cache.
     *
     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */IndexedDbRemoteDocumentCache.prototype.addEntry=function(transaction,key,doc){var documentStore=remoteDocumentsStore(transaction);return documentStore.put(dbKey(key),doc);};/**
     * Removes a document from the cache.
     *
     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */IndexedDbRemoteDocumentCache.prototype.removeEntry=function(transaction,documentKey){var store=remoteDocumentsStore(transaction);var key=dbKey(documentKey);return store.delete(key);};/**
     * Updates the current cache size.
     *
     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
     * cache's metadata.
     */IndexedDbRemoteDocumentCache.prototype.updateMetadata=function(transaction,sizeDelta){var _this=this;return this.getMetadata(transaction).next(function(metadata){metadata.byteSize+=sizeDelta;return _this.setMetadata(transaction,metadata);});};IndexedDbRemoteDocumentCache.prototype.getEntry=function(transaction,documentKey){var _this=this;return remoteDocumentsStore(transaction).get(dbKey(documentKey)).next(function(dbRemoteDoc){return _this.maybeDecodeDocument(dbRemoteDoc);});};/**
     * Looks up an entry in the cache.
     *
     * @param documentKey The key of the entry to look up.
     * @return The cached MaybeDocument entry and its size, or null if we have nothing cached.
     */IndexedDbRemoteDocumentCache.prototype.getSizedEntry=function(transaction,documentKey){var _this=this;return remoteDocumentsStore(transaction).get(dbKey(documentKey)).next(function(dbRemoteDoc){var doc=_this.maybeDecodeDocument(dbRemoteDoc);return doc?{maybeDocument:doc,size:dbDocumentSize(dbRemoteDoc)}:null;});};IndexedDbRemoteDocumentCache.prototype.getEntries=function(transaction,documentKeys){var _this=this;var results=nullableMaybeDocumentMap();return this.forEachDbEntry(transaction,documentKeys,function(key,dbRemoteDoc){var doc=_this.maybeDecodeDocument(dbRemoteDoc);results=results.insert(key,doc);}).next(function(){return results;});};/**
     * Looks up several entries in the cache.
     *
     * @param documentKeys The set of keys entries to look up.
     * @return A map of MaybeDocuments indexed by key (if a document cannot be
     *     found, the key will be mapped to null) and a map of sizes indexed by
     *     key (zero if the key cannot be found).
     */IndexedDbRemoteDocumentCache.prototype.getSizedEntries=function(transaction,documentKeys){var _this=this;var results=nullableMaybeDocumentMap();var sizeMap=new SortedMap(DocumentKey.comparator);return this.forEachDbEntry(transaction,documentKeys,function(key,dbRemoteDoc){var doc=_this.maybeDecodeDocument(dbRemoteDoc);if(doc){results=results.insert(key,doc);sizeMap=sizeMap.insert(key,dbDocumentSize(dbRemoteDoc));}else{results=results.insert(key,null);sizeMap=sizeMap.insert(key,0);}}).next(function(){return{maybeDocuments:results,sizeMap:sizeMap};});};IndexedDbRemoteDocumentCache.prototype.forEachDbEntry=function(transaction,documentKeys,callback){if(documentKeys.isEmpty()){return PersistencePromise.resolve();}var range=IDBKeyRange.bound(documentKeys.first().path.toArray(),documentKeys.last().path.toArray());var keyIter=documentKeys.getIterator();var nextKey=keyIter.getNext();return remoteDocumentsStore(transaction).iterate({range:range},function(potentialKeyRaw,dbRemoteDoc,control){var potentialKey=DocumentKey.fromSegments(potentialKeyRaw);// Go through keys not found in cache.
while(nextKey&&DocumentKey.comparator(nextKey,potentialKey)<0){callback(nextKey,null);nextKey=keyIter.getNext();}if(nextKey&&nextKey.isEqual(potentialKey)){// Key found in cache.
callback(nextKey,dbRemoteDoc);nextKey=keyIter.hasNext()?keyIter.getNext():null;}// Skip to the next key (if there is one).
if(nextKey){control.skip(nextKey.path.toArray());}else{control.done();}}).next(function(){// The rest of the keys are not in the cache. One case where `iterate`
// above won't go through them is when the cache is empty.
while(nextKey){callback(nextKey,null);nextKey=keyIter.hasNext()?keyIter.getNext():null;}});};IndexedDbRemoteDocumentCache.prototype.getDocumentsMatchingQuery=function(transaction,query,sinceReadTime){var _this=this;assert(!query.isCollectionGroupQuery(),'CollectionGroup queries should be handled in LocalDocumentsView');var results=documentMap();var immediateChildrenPathLength=query.path.length+1;var iterationOptions={};if(sinceReadTime.isEqual(SnapshotVersion.MIN)){// Documents are ordered by key, so we can use a prefix scan to narrow
// down the documents we need to match the query against.
var startKey=query.path.toArray();iterationOptions.range=IDBKeyRange.lowerBound(startKey);}else{// Execute an index-free query and filter by read time. This is safe
// since all document changes to queries that have a
// lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
var collectionKey=query.path.toArray();var readTimeKey=this.serializer.toDbTimestampKey(sinceReadTime);iterationOptions.range=IDBKeyRange.lowerBound([collectionKey,readTimeKey],/* open= */true);iterationOptions.index=DbRemoteDocument.collectionReadTimeIndex;}return remoteDocumentsStore(transaction).iterate(iterationOptions,function(key,dbRemoteDoc,control){// The query is actually returning any path that starts with the query
// path prefix which may include documents in subcollections. For
// example, a query on 'rooms' will return rooms/abc/messages/xyx but we
// shouldn't match it. Fix this by discarding rows with document keys
// more than one segment longer than the query path.
if(key.length!==immediateChildrenPathLength){return;}var maybeDoc=_this.serializer.fromDbRemoteDocument(dbRemoteDoc);if(!query.path.isPrefixOf(maybeDoc.key.path)){control.done();}else if(maybeDoc instanceof Document&&query.matches(maybeDoc)){results=results.insert(maybeDoc.key,maybeDoc);}}).next(function(){return results;});};/**
     * Returns the set of documents that have been updated since the specified read
     * time.
     */ // PORTING NOTE: This is only used for multi-tab synchronization.
IndexedDbRemoteDocumentCache.prototype.getNewDocumentChanges=function(transaction,sinceReadTime){var _this=this;var changedDocs=maybeDocumentMap();var lastReadTime=this.serializer.toDbTimestampKey(sinceReadTime);var documentsStore=remoteDocumentsStore(transaction);var range=IDBKeyRange.lowerBound(lastReadTime,true);return documentsStore.iterate({index:DbRemoteDocument.readTimeIndex,range:range},function(_,dbRemoteDoc){// Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
// the documents directly since we want to keep sentinel deletes.
var doc=_this.serializer.fromDbRemoteDocument(dbRemoteDoc);changedDocs=changedDocs.insert(doc.key,doc);lastReadTime=dbRemoteDoc.readTime;}).next(function(){return{changedDocs:changedDocs,readTime:_this.serializer.fromDbTimestampKey(lastReadTime)};});};/**
     * Returns the last document that has changed, as well as the read time of the
     * last change. If no document has changed, returns SnapshotVersion.MIN.
     */ // PORTING NOTE: This is only used for multi-tab synchronization.
IndexedDbRemoteDocumentCache.prototype.getLastDocumentChange=function(transaction){var _this=this;var documentsStore=remoteDocumentsStore(transaction);// If there are no existing entries, we return SnapshotVersion.MIN.
var readTime=SnapshotVersion.MIN;var changedDoc;return documentsStore.iterate({index:DbRemoteDocument.readTimeIndex,reverse:true},function(key,dbRemoteDoc,control){changedDoc=_this.serializer.fromDbRemoteDocument(dbRemoteDoc);if(dbRemoteDoc.readTime){readTime=_this.serializer.fromDbTimestampKey(dbRemoteDoc.readTime);}control.done();}).next(function(){return{changedDoc:changedDoc,readTime:readTime};});};IndexedDbRemoteDocumentCache.prototype.newChangeBuffer=function(options){return new IndexedDbRemoteDocumentCache.RemoteDocumentChangeBuffer(this,!!options&&options.trackRemovals);};IndexedDbRemoteDocumentCache.prototype.getSize=function(txn){return this.getMetadata(txn).next(function(metadata){return metadata.byteSize;});};IndexedDbRemoteDocumentCache.prototype.getMetadata=function(txn){return documentGlobalStore(txn).get(DbRemoteDocumentGlobal.key).next(function(metadata){assert(!!metadata,'Missing document cache metadata');return metadata;});};IndexedDbRemoteDocumentCache.prototype.setMetadata=function(txn,metadata){return documentGlobalStore(txn).put(DbRemoteDocumentGlobal.key,metadata);};/**
     * Decodes `remoteDoc` and returns the document (or null, if the document
     * corresponds to the format used for sentinel deletes).
     */IndexedDbRemoteDocumentCache.prototype.maybeDecodeDocument=function(dbRemoteDoc){if(dbRemoteDoc){var doc=this.serializer.fromDbRemoteDocument(dbRemoteDoc);if(doc instanceof NoDocument&&doc.version.isEqual(SnapshotVersion.forDeletedDoc())){// The document is a sentinel removal and should only be used in the
// `getNewDocumentChanges()`.
return null;}return doc;}return null;};/**
     * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.
     *
     * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size
     * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb
     * when we apply the changes.
     */IndexedDbRemoteDocumentCache.RemoteDocumentChangeBuffer=/** @class */function(_super){tslib.__extends(class_1,_super);/**
         * @param documentCache The IndexedDbRemoteDocumentCache to apply the changes to.
         * @param trackRemovals Whether to create sentinel deletes that can be tracked by
         * `getNewDocumentChanges()`.
         */function class_1(documentCache,trackRemovals){var _this=_super.call(this)||this;_this.documentCache=documentCache;_this.trackRemovals=trackRemovals;// A map of document sizes prior to applying the changes in this buffer.
_this.documentSizes=new ObjectMap(function(key){return key.toString();});return _this;}class_1.prototype.applyChanges=function(transaction){var _this=this;var promises=[];var sizeDelta=0;var collectionParents=new SortedSet(function(l,r){return primitiveComparator(l.canonicalString(),r.canonicalString());});this.changes.forEach(function(key,maybeDocument){var previousSize=_this.documentSizes.get(key);assert(previousSize!==undefined,"Cannot modify a document that wasn't read (for "+key+")");if(maybeDocument){assert(!_this.readTime.isEqual(SnapshotVersion.MIN),'Cannot add a document with a read time of zero');var doc=_this.documentCache.serializer.toDbRemoteDocument(maybeDocument,_this.readTime);collectionParents=collectionParents.add(key.path.popLast());var size=dbDocumentSize(doc);sizeDelta+=size-previousSize;promises.push(_this.documentCache.addEntry(transaction,key,doc));}else{sizeDelta-=previousSize;if(_this.trackRemovals){// In order to track removals, we store a "sentinel delete" in the
// RemoteDocumentCache. This entry is represented by a NoDocument
// with a version of 0 and ignored by `maybeDecodeDocument()` but
// preserved in `getNewDocumentChanges()`.
var deletedDoc=_this.documentCache.serializer.toDbRemoteDocument(new NoDocument(key,SnapshotVersion.forDeletedDoc()),_this.readTime);promises.push(_this.documentCache.addEntry(transaction,key,deletedDoc));}else{promises.push(_this.documentCache.removeEntry(transaction,key));}}});collectionParents.forEach(function(parent){promises.push(_this.documentCache.indexManager.addToCollectionParentIndex(transaction,parent));});promises.push(this.documentCache.updateMetadata(transaction,sizeDelta));return PersistencePromise.waitFor(promises);};class_1.prototype.getFromCache=function(transaction,documentKey){var _this=this;// Record the size of everything we load from the cache so we can compute a delta later.
return this.documentCache.getSizedEntry(transaction,documentKey).next(function(getResult){if(getResult===null){_this.documentSizes.set(documentKey,0);return null;}else{_this.documentSizes.set(documentKey,getResult.size);return getResult.maybeDocument;}});};class_1.prototype.getAllFromCache=function(transaction,documentKeys){var _this=this;// Record the size of everything we load from the cache so we can compute
// a delta later.
return this.documentCache.getSizedEntries(transaction,documentKeys).next(function(_a){var maybeDocuments=_a.maybeDocuments,sizeMap=_a.sizeMap;// Note: `getAllFromCache` returns two maps instead of a single map from
// keys to `DocumentSizeEntry`s. This is to allow returning the
// `NullableMaybeDocumentMap` directly, without a conversion.
sizeMap.forEach(function(documentKey,size){_this.documentSizes.set(documentKey,size);});return maybeDocuments;});};return class_1;}(RemoteDocumentChangeBuffer);return IndexedDbRemoteDocumentCache;}();function documentGlobalStore(txn){return IndexedDbPersistence.getStore(txn,DbRemoteDocumentGlobal.store);}/**
 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
 */function remoteDocumentsStore(txn){return IndexedDbPersistence.getStore(txn,DbRemoteDocument.store);}function dbKey(docKey){return docKey.path.toArray();}/**
 * Retrusn an approximate size for the given document.
 */function dbDocumentSize(doc){var value;if(doc.document){value=doc.document;}else if(doc.unknownDocument){value=doc.unknownDocument;}else if(doc.noDocument){value=doc.noDocument;}else{throw fail('Unknown remote document type');}return JSON.stringify(value).length;}/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * An in-memory implementation of IndexManager.
 */var MemoryIndexManager=/** @class */function(){function MemoryIndexManager(){this.collectionParentIndex=new MemoryCollectionParentIndex();}MemoryIndexManager.prototype.addToCollectionParentIndex=function(transaction,collectionPath){this.collectionParentIndex.add(collectionPath);return PersistencePromise.resolve();};MemoryIndexManager.prototype.getCollectionParents=function(transaction,collectionId){return PersistencePromise.resolve(this.collectionParentIndex.getEntries(collectionId));};return MemoryIndexManager;}();/**
 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
 * in indexeddb_schema.ts
 */var MemoryCollectionParentIndex=/** @class */function(){function MemoryCollectionParentIndex(){this.index={};}// Returns false if the entry already existed.
MemoryCollectionParentIndex.prototype.add=function(collectionPath){assert(collectionPath.length%2===1,'Expected a collection path.');var collectionId=collectionPath.lastSegment();var parentPath=collectionPath.popLast();var existingParents=this.index[collectionId]||new SortedSet(ResourcePath.comparator);var added=!existingParents.has(parentPath);this.index[collectionId]=existingParents.add(parentPath);return added;};MemoryCollectionParentIndex.prototype.has=function(collectionPath){var collectionId=collectionPath.lastSegment();var parentPath=collectionPath.popLast();var existingParents=this.index[collectionId];return existingParents&&existingParents.has(parentPath);};MemoryCollectionParentIndex.prototype.getEntries=function(collectionId){var parentPaths=this.index[collectionId]||new SortedSet(ResourcePath.comparator);return parentPaths.toArray();};return MemoryCollectionParentIndex;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Schema Version for the Web client:
 * 1. Initial version including Mutation Queue, Query Cache, and Remote Document
 *    Cache
 * 2. Used to ensure a targetGlobal object exists and add targetCount to it. No
 *    longer required because migration 3 unconditionally clears it.
 * 3. Dropped and re-created Query Cache to deal with cache corruption related
 *    to limbo resolution. Addresses
 *    https://github.com/firebase/firebase-ios-sdk/issues/1548
 * 4. Multi-Tab Support.
 * 5. Removal of held write acks.
 * 6. Create document global for tracking document cache size.
 * 7. Ensure every cached document has a sentinel row with a sequence number.
 * 8. Add collection-parent index for Collection Group queries.
 * 9. Change RemoteDocumentChanges store to be keyed by readTime rather than
 *    an auto-incrementing ID. This is required for Index-Free queries.
 */var SCHEMA_VERSION=9;/** Performs database creation and schema upgrades. */var SchemaConverter=/** @class */function(){function SchemaConverter(serializer){this.serializer=serializer;}/**
     * Performs database creation and schema upgrades.
     *
     * Note that in production, this method is only ever used to upgrade the schema
     * to SCHEMA_VERSION. Different values of toVersion are only used for testing
     * and local feature development.
     */SchemaConverter.prototype.createOrUpgrade=function(db,txn,fromVersion,toVersion){var _this=this;assert(fromVersion<toVersion&&fromVersion>=0&&toVersion<=SCHEMA_VERSION,"Unexpected schema upgrade from v"+fromVersion+" to v{toVersion}.");var simpleDbTransaction=new SimpleDbTransaction(txn);if(fromVersion<1&&toVersion>=1){createPrimaryClientStore(db);createMutationQueue(db);createQueryCache(db);createRemoteDocumentCache(db);}// Migration 2 to populate the targetGlobal object no longer needed since
// migration 3 unconditionally clears it.
var p=PersistencePromise.resolve();if(fromVersion<3&&toVersion>=3){// Brand new clients don't need to drop and recreate--only clients that
// potentially have corrupt data.
if(fromVersion!==0){dropQueryCache(db);createQueryCache(db);}p=p.next(function(){return writeEmptyTargetGlobalEntry(simpleDbTransaction);});}if(fromVersion<4&&toVersion>=4){if(fromVersion!==0){// Schema version 3 uses auto-generated keys to generate globally unique
// mutation batch IDs (this was previously ensured internally by the
// client). To migrate to the new schema, we have to read all mutations
// and write them back out. We preserve the existing batch IDs to guarantee
// consistency with other object stores. Any further mutation batch IDs will
// be auto-generated.
p=p.next(function(){return upgradeMutationBatchSchemaAndMigrateData(db,simpleDbTransaction);});}p=p.next(function(){createClientMetadataStore(db);});}if(fromVersion<5&&toVersion>=5){p=p.next(function(){return _this.removeAcknowledgedMutations(simpleDbTransaction);});}if(fromVersion<6&&toVersion>=6){p=p.next(function(){createDocumentGlobalStore(db);return _this.addDocumentGlobal(simpleDbTransaction);});}if(fromVersion<7&&toVersion>=7){p=p.next(function(){return _this.ensureSequenceNumbers(simpleDbTransaction);});}if(fromVersion<8&&toVersion>=8){p=p.next(function(){return _this.createCollectionParentIndex(db,simpleDbTransaction);});}if(fromVersion<9&&toVersion>=9){p=p.next(function(){// Multi-Tab used to manage its own changelog, but this has been moved
// to the DbRemoteDocument object store itself. Since the previous change
// log only contained transient data, we can drop its object store.
dropRemoteDocumentChangesStore(db);createRemoteDocumentReadTimeIndex(txn);});}return p;};SchemaConverter.prototype.addDocumentGlobal=function(txn){var byteCount=0;return txn.store(DbRemoteDocument.store).iterate(function(_,doc){byteCount+=dbDocumentSize(doc);}).next(function(){var metadata=new DbRemoteDocumentGlobal(byteCount);return txn.store(DbRemoteDocumentGlobal.store).put(DbRemoteDocumentGlobal.key,metadata);});};SchemaConverter.prototype.removeAcknowledgedMutations=function(txn){var _this=this;var queuesStore=txn.store(DbMutationQueue.store);var mutationsStore=txn.store(DbMutationBatch.store);return queuesStore.loadAll().next(function(queues){return PersistencePromise.forEach(queues,function(queue){var range=IDBKeyRange.bound([queue.userId,BATCHID_UNKNOWN],[queue.userId,queue.lastAcknowledgedBatchId]);return mutationsStore.loadAll(DbMutationBatch.userMutationsIndex,range).next(function(dbBatches){return PersistencePromise.forEach(dbBatches,function(dbBatch){assert(dbBatch.userId===queue.userId,"Cannot process batch "+dbBatch.batchId+" from unexpected user");var batch=_this.serializer.fromDbMutationBatch(dbBatch);return removeMutationBatch(txn,queue.userId,batch).next(function(){});});});});});};/**
     * Ensures that every document in the remote document cache has a corresponding sentinel row
     * with a sequence number. Missing rows are given the most recently used sequence number.
     */SchemaConverter.prototype.ensureSequenceNumbers=function(txn){var documentTargetStore=txn.store(DbTargetDocument.store);var documentsStore=txn.store(DbRemoteDocument.store);return getHighestListenSequenceNumber(txn).next(function(currentSequenceNumber){var writeSentinelKey=function writeSentinelKey(path){return documentTargetStore.put(new DbTargetDocument(0,encode(path),currentSequenceNumber));};var promises=[];return documentsStore.iterate(function(key,doc){var path=new ResourcePath(key);var docSentinelKey=sentinelKey(path);promises.push(documentTargetStore.get(docSentinelKey).next(function(maybeSentinel){if(!maybeSentinel){return writeSentinelKey(path);}else{return PersistencePromise.resolve();}}));}).next(function(){return PersistencePromise.waitFor(promises);});});};SchemaConverter.prototype.createCollectionParentIndex=function(db,txn){// Create the index.
db.createObjectStore(DbCollectionParent.store,{keyPath:DbCollectionParent.keyPath});var collectionParentsStore=txn.store(DbCollectionParent.store);// Helper to add an index entry iff we haven't already written it.
var cache=new MemoryCollectionParentIndex();var addEntry=function addEntry(collectionPath){if(cache.add(collectionPath)){var collectionId=collectionPath.lastSegment();var parentPath=collectionPath.popLast();return collectionParentsStore.put({collectionId:collectionId,parent:encode(parentPath)});}};// Index existing remote documents.
return txn.store(DbRemoteDocument.store).iterate({keysOnly:true},function(pathSegments,_){var path=new ResourcePath(pathSegments);return addEntry(path.popLast());}).next(function(){// Index existing mutations.
return txn.store(DbDocumentMutation.store).iterate({keysOnly:true},function(_a,_){var userID=_a[0],encodedPath=_a[1],batchId=_a[2];var path=decode(encodedPath);return addEntry(path.popLast());});});};return SchemaConverter;}();function sentinelKey(path){return[0,encode(path)];}/**
 * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.
 */var DbTimestamp=/** @class */function(){function DbTimestamp(seconds,nanoseconds){this.seconds=seconds;this.nanoseconds=nanoseconds;}return DbTimestamp;}();/**
 * A singleton object to be stored in the 'owner' store in IndexedDb.
 *
 * A given database can have a single primary tab assigned at a given time. That
 * tab must validate that it is still holding the primary lease before every
 * operation that requires locked access. The primary tab should regularly
 * write an updated timestamp to this lease to prevent other tabs from
 * "stealing" the primary lease
 */var DbPrimaryClient=/** @class */function(){function DbPrimaryClient(ownerId,/** Whether to allow shared access from multiple tabs. */allowTabSynchronization,leaseTimestampMs){this.ownerId=ownerId;this.allowTabSynchronization=allowTabSynchronization;this.leaseTimestampMs=leaseTimestampMs;}/**
     * Name of the IndexedDb object store.
     *
     * Note that the name 'owner' is chosen to ensure backwards compatibility with
     * older clients that only supported single locked access to the persistence
     * layer.
     */DbPrimaryClient.store='owner';/**
     * The key string used for the single object that exists in the
     * DbPrimaryClient store.
     */DbPrimaryClient.key='owner';return DbPrimaryClient;}();function createPrimaryClientStore(db){db.createObjectStore(DbPrimaryClient.store);}/**
 * An object to be stored in the 'mutationQueues' store in IndexedDb.
 *
 * Each user gets a single queue of MutationBatches to apply to the server.
 * DbMutationQueue tracks the metadata about the queue.
 */var DbMutationQueue=/** @class */function(){function DbMutationQueue(/**
     * The normalized user ID to which this queue belongs.
     */userId,/**
     * An identifier for the highest numbered batch that has been acknowledged
     * by the server. All MutationBatches in this queue with batchIds less
     * than or equal to this value are considered to have been acknowledged by
     * the server.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */lastAcknowledgedBatchId,/**
     * A stream token that was previously sent by the server.
     *
     * See StreamingWriteRequest in datastore.proto for more details about
     * usage.
     *
     * After sending this token, earlier tokens may not be used anymore so
     * only a single stream token is retained.
     */lastStreamToken){this.userId=userId;this.lastAcknowledgedBatchId=lastAcknowledgedBatchId;this.lastStreamToken=lastStreamToken;}/** Name of the IndexedDb object store.  */DbMutationQueue.store='mutationQueues';/** Keys are automatically assigned via the userId property. */DbMutationQueue.keyPath='userId';return DbMutationQueue;}();/**
 * An object to be stored in the 'mutations' store in IndexedDb.
 *
 * Represents a batch of user-level mutations intended to be sent to the server
 * in a single write. Each user-level batch gets a separate DbMutationBatch
 * with a new batchId.
 */var DbMutationBatch=/** @class */function(){function DbMutationBatch(/**
     * The normalized user ID to which this batch belongs.
     */userId,/**
     * An identifier for this batch, allocated using an auto-generated key.
     */batchId,/**
     * The local write time of the batch, stored as milliseconds since the
     * epoch.
     */localWriteTimeMs,/**
     * A list of "mutations" that represent a partial base state from when this
     * write batch was initially created. During local application of the write
     * batch, these baseMutations are applied prior to the real writes in order
     * to override certain document fields from the remote document cache. This
     * is necessary in the case of non-idempotent writes (e.g. `increment()`
     * transforms) to make sure that the local view of the modified documents
     * doesn't flicker if the remote document cache receives the result of the
     * non-idempotent write before the write is removed from the queue.
     *
     * These mutations are never sent to the backend.
     */baseMutations,/**
     * A list of mutations to apply. All mutations will be applied atomically.
     *
     * Mutations are serialized via JsonProtoSerializer.toMutation().
     */mutations){this.userId=userId;this.batchId=batchId;this.localWriteTimeMs=localWriteTimeMs;this.baseMutations=baseMutations;this.mutations=mutations;}/** Name of the IndexedDb object store.  */DbMutationBatch.store='mutations';/** Keys are automatically assigned via the userId, batchId properties. */DbMutationBatch.keyPath='batchId';/** The index name for lookup of mutations by user. */DbMutationBatch.userMutationsIndex='userMutationsIndex';/** The user mutations index is keyed by [userId, batchId] pairs. */DbMutationBatch.userMutationsKeyPath=['userId','batchId'];return DbMutationBatch;}();function createMutationQueue(db){db.createObjectStore(DbMutationQueue.store,{keyPath:DbMutationQueue.keyPath});var mutationBatchesStore=db.createObjectStore(DbMutationBatch.store,{keyPath:DbMutationBatch.keyPath,autoIncrement:true});mutationBatchesStore.createIndex(DbMutationBatch.userMutationsIndex,DbMutationBatch.userMutationsKeyPath,{unique:true});db.createObjectStore(DbDocumentMutation.store);}/**
 * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads
 * and rewrites all data.
 */function upgradeMutationBatchSchemaAndMigrateData(db,txn){var v1MutationsStore=txn.store(DbMutationBatch.store);return v1MutationsStore.loadAll().next(function(existingMutations){db.deleteObjectStore(DbMutationBatch.store);var mutationsStore=db.createObjectStore(DbMutationBatch.store,{keyPath:DbMutationBatch.keyPath,autoIncrement:true});mutationsStore.createIndex(DbMutationBatch.userMutationsIndex,DbMutationBatch.userMutationsKeyPath,{unique:true});var v3MutationsStore=txn.store(DbMutationBatch.store);var writeAll=existingMutations.map(function(mutation){return v3MutationsStore.put(mutation);});return PersistencePromise.waitFor(writeAll);});}/**
 * An object to be stored in the 'documentMutations' store in IndexedDb.
 *
 * A manually maintained index of all the mutation batches that affect a given
 * document key. The rows in this table are references based on the contents of
 * DbMutationBatch.mutations.
 */var DbDocumentMutation=/** @class */function(){function DbDocumentMutation(){}/**
     * Creates a [userId] key for use in the DbDocumentMutations index to iterate
     * over all of a user's document mutations.
     */DbDocumentMutation.prefixForUser=function(userId){return[userId];};/**
     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
     * index to iterate over all at document mutations for a given path or lower.
     */DbDocumentMutation.prefixForPath=function(userId,path){return[userId,encode(path)];};/**
     * Creates a full index key of [userId, encodedPath, batchId] for inserting
     * and deleting into the DbDocumentMutations index.
     */DbDocumentMutation.key=function(userId,path,batchId){return[userId,encode(path),batchId];};DbDocumentMutation.store='documentMutations';/**
     * Because we store all the useful information for this store in the key,
     * there is no useful information to store as the value. The raw (unencoded)
     * path cannot be stored because IndexedDb doesn't store prototype
     * information.
     */DbDocumentMutation.PLACEHOLDER=new DbDocumentMutation();return DbDocumentMutation;}();function createRemoteDocumentCache(db){db.createObjectStore(DbRemoteDocument.store);}/**
 * Represents the known absence of a document at a particular version.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */var DbNoDocument=/** @class */function(){function DbNoDocument(path,readTime){this.path=path;this.readTime=readTime;}return DbNoDocument;}();/**
 * Represents a document that is known to exist but whose data is unknown.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */var DbUnknownDocument=/** @class */function(){function DbUnknownDocument(path,version){this.path=path;this.version=version;}return DbUnknownDocument;}();/**
 * An object to be stored in the 'remoteDocuments' store in IndexedDb.
 * It represents either:
 *
 * - A complete document.
 * - A "no document" representing a document that is known not to exist (at
 * some version).
 * - An "unknown document" representing a document that is known to exist (at
 * some version) but whose contents are unknown.
 *
 * Note: This is the persisted equivalent of a MaybeDocument and could perhaps
 * be made more general if necessary.
 */var DbRemoteDocument=/** @class */function(){// TODO: We are currently storing full document keys almost three times
// (once as part of the primary key, once - partly - as `parentPath` and once
// inside the encoded documents). During our next migration, we should
// rewrite the primary key as parentPath + document ID which would allow us
// to drop one value.
function DbRemoteDocument(/**
     * Set to an instance of DbUnknownDocument if the data for a document is
     * not known, but it is known that a document exists at the specified
     * version (e.g. it had a successful update applied to it)
     */unknownDocument,/**
     * Set to an instance of a DbNoDocument if it is known that no document
     * exists.
     */noDocument,/**
     * Set to an instance of a Document if there's a cached version of the
     * document.
     */document,/**
     * Documents that were written to the remote document store based on
     * a write acknowledgment are marked with `hasCommittedMutations`. These
     * documents are potentially inconsistent with the backend's copy and use
     * the write's commit version as their document version.
     */hasCommittedMutations,/**
     * When the document was read from the backend. Undefined for data written
     * prior to schema version 9.
     */readTime,/**
     * The path of the collection this document is part of. Undefined for data
     * written prior to schema version 9.
     */parentPath){this.unknownDocument=unknownDocument;this.noDocument=noDocument;this.document=document;this.hasCommittedMutations=hasCommittedMutations;this.readTime=readTime;this.parentPath=parentPath;}DbRemoteDocument.store='remoteDocuments';/**
     * An index that provides access to all entries sorted by read time (which
     * corresponds to the last modification time of each row).
     *
     * This index is used to provide a changelog for Multi-Tab.
     */DbRemoteDocument.readTimeIndex='readTimeIndex';DbRemoteDocument.readTimeIndexPath='readTime';/**
     * An index that provides access to documents in a collection sorted by read
     * time.
     *
     * This index is used to allow the RemoteDocumentCache to fetch newly changed
     * documents in a collection.
     */DbRemoteDocument.collectionReadTimeIndex='collectionReadTimeIndex';DbRemoteDocument.collectionReadTimeIndexPath=['parentPath','readTime'];return DbRemoteDocument;}();/**
 * Contains a single entry that has metadata about the remote document cache.
 */var DbRemoteDocumentGlobal=/** @class */function(){/**
     * @param byteSize Approximately the total size in bytes of all the documents in the document
     * cache.
     */function DbRemoteDocumentGlobal(byteSize){this.byteSize=byteSize;}DbRemoteDocumentGlobal.store='remoteDocumentGlobal';DbRemoteDocumentGlobal.key='remoteDocumentGlobalKey';return DbRemoteDocumentGlobal;}();function createDocumentGlobalStore(db){db.createObjectStore(DbRemoteDocumentGlobal.store);}/**
 * An object to be stored in the 'targets' store in IndexedDb.
 *
 * This is based on and should be kept in sync with the proto used in the iOS
 * client.
 *
 * Each query the client listens to against the server is tracked on disk so
 * that the query can be efficiently resumed on restart.
 */var DbTarget=/** @class */function(){function DbTarget(/**
     * An auto-generated sequential numeric identifier for the query.
     *
     * Queries are stored using their canonicalId as the key, but these
     * canonicalIds can be quite long so we additionally assign a unique
     * queryId which can be used by referenced data structures (e.g.
     * indexes) to minimize the on-disk cost.
     */targetId,/**
     * The canonical string representing this query. This is not unique.
     */canonicalId,/**
     * The last readTime received from the Watch Service for this query.
     *
     * This is the same value as TargetChange.read_time in the protos.
     */readTime,/**
     * An opaque, server-assigned token that allows watching a query to be
     * resumed after disconnecting without retransmitting all the data
     * that matches the query. The resume token essentially identifies a
     * point in time from which the server should resume sending results.
     *
     * This is related to the snapshotVersion in that the resumeToken
     * effectively also encodes that value, but the resumeToken is opaque
     * and sometimes encodes additional information.
     *
     * A consequence of this is that the resumeToken should be used when
     * asking the server to reason about where this client is in the watch
     * stream, but the client should use the snapshotVersion for its own
     * purposes.
     *
     * This is the same value as TargetChange.resume_token in the protos.
     */resumeToken,/**
     * A sequence number representing the last time this query was
     * listened to, used for garbage collection purposes.
     *
     * Conventionally this would be a timestamp value, but device-local
     * clocks are unreliable and they must be able to create new listens
     * even while disconnected. Instead this should be a monotonically
     * increasing number that's incremented on each listen call.
     *
     * This is different from the queryId since the queryId is an
     * immutable identifier assigned to the Query on first use while
     * lastListenSequenceNumber is updated every time the query is
     * listened to.
     */lastListenSequenceNumber,/**
     * Denotes the maximum snapshot version at which the associated query view
     * contained no limbo documents.  Undefined for data written prior to
     * schema version 9.
     */lastLimboFreeSnapshotVersion,/**
     * The query for this target.
     *
     * Because canonical ids are not unique we must store the actual query. We
     * use the proto to have an object we can persist without having to
     * duplicate translation logic to and from a `Query` object.
     */query){this.targetId=targetId;this.canonicalId=canonicalId;this.readTime=readTime;this.resumeToken=resumeToken;this.lastListenSequenceNumber=lastListenSequenceNumber;this.lastLimboFreeSnapshotVersion=lastLimboFreeSnapshotVersion;this.query=query;}DbTarget.store='targets';/** Keys are automatically assigned via the targetId property. */DbTarget.keyPath='targetId';/** The name of the queryTargets index. */DbTarget.queryTargetsIndexName='queryTargetsIndex';/**
     * The index of all canonicalIds to the targets that they match. This is not
     * a unique mapping because canonicalId does not promise a unique name for all
     * possible queries, so we append the targetId to make the mapping unique.
     */DbTarget.queryTargetsKeyPath=['canonicalId','targetId'];return DbTarget;}();/**
 * An object representing an association between a target and a document, or a
 * sentinel row marking the last sequence number at which a document was used.
 * Each document cached must have a corresponding sentinel row before lru
 * garbage collection is enabled.
 *
 * The target associations and sentinel rows are co-located so that orphaned
 * documents and their sequence numbers can be identified efficiently via a scan
 * of this store.
 */var DbTargetDocument=/** @class */function(){function DbTargetDocument(/**
     * The targetId identifying a target or 0 for a sentinel row.
     */targetId,/**
     * The path to the document, as encoded in the key.
     */path,/**
     * If this is a sentinel row, this should be the sequence number of the last
     * time the document specified by `path` was used. Otherwise, it should be
     * `undefined`.
     */sequenceNumber){this.targetId=targetId;this.path=path;this.sequenceNumber=sequenceNumber;assert(targetId===0===(sequenceNumber!==undefined),'A target-document row must either have targetId == 0 and a defined sequence number, or a non-zero targetId and no sequence number');}/** Name of the IndexedDb object store.  */DbTargetDocument.store='targetDocuments';/** Keys are automatically assigned via the targetId, path properties. */DbTargetDocument.keyPath=['targetId','path'];/** The index name for the reverse index. */DbTargetDocument.documentTargetsIndex='documentTargetsIndex';/** We also need to create the reverse index for these properties. */DbTargetDocument.documentTargetsKeyPath=['path','targetId'];return DbTargetDocument;}();/**
 * A record of global state tracked across all Targets, tracked separately
 * to avoid the need for extra indexes.
 *
 * This should be kept in-sync with the proto used in the iOS client.
 */var DbTargetGlobal=/** @class */function(){function DbTargetGlobal(/**
     * The highest numbered target id across all targets.
     *
     * See DbTarget.targetId.
     */highestTargetId,/**
     * The highest numbered lastListenSequenceNumber across all targets.
     *
     * See DbTarget.lastListenSequenceNumber.
     */highestListenSequenceNumber,/**
     * A global snapshot version representing the last consistent snapshot we
     * received from the backend. This is monotonically increasing and any
     * snapshots received from the backend prior to this version (e.g. for
     * targets resumed with a resumeToken) should be suppressed (buffered)
     * until the backend has caught up to this snapshot version again. This
     * prevents our cache from ever going backwards in time.
     */lastRemoteSnapshotVersion,/**
     * The number of targets persisted.
     */targetCount){this.highestTargetId=highestTargetId;this.highestListenSequenceNumber=highestListenSequenceNumber;this.lastRemoteSnapshotVersion=lastRemoteSnapshotVersion;this.targetCount=targetCount;}/**
     * The key string used for the single object that exists in the
     * DbTargetGlobal store.
     */DbTargetGlobal.key='targetGlobalKey';DbTargetGlobal.store='targetGlobal';return DbTargetGlobal;}();/**
 * An object representing an association between a Collection id (e.g. 'messages')
 * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.
 * This is used to efficiently find all collections to query when performing
 * a Collection Group query.
 */var DbCollectionParent=/** @class */function(){function DbCollectionParent(/**
     * The collectionId (e.g. 'messages')
     */collectionId,/**
     * The path to the parent (either a document location or an empty path for
     * a root-level collection).
     */parent){this.collectionId=collectionId;this.parent=parent;}/** Name of the IndexedDb object store. */DbCollectionParent.store='collectionParents';/** Keys are automatically assigned via the collectionId, parent properties. */DbCollectionParent.keyPath=['collectionId','parent'];return DbCollectionParent;}();function createQueryCache(db){var targetDocumentsStore=db.createObjectStore(DbTargetDocument.store,{keyPath:DbTargetDocument.keyPath});targetDocumentsStore.createIndex(DbTargetDocument.documentTargetsIndex,DbTargetDocument.documentTargetsKeyPath,{unique:true});var targetStore=db.createObjectStore(DbTarget.store,{keyPath:DbTarget.keyPath});// NOTE: This is unique only because the TargetId is the suffix.
targetStore.createIndex(DbTarget.queryTargetsIndexName,DbTarget.queryTargetsKeyPath,{unique:true});db.createObjectStore(DbTargetGlobal.store);}function dropQueryCache(db){db.deleteObjectStore(DbTargetDocument.store);db.deleteObjectStore(DbTarget.store);db.deleteObjectStore(DbTargetGlobal.store);}function dropRemoteDocumentChangesStore(db){if(db.objectStoreNames.contains('remoteDocumentChanges')){db.deleteObjectStore('remoteDocumentChanges');}}/**
 * Creates the target global singleton row.
 *
 * @param {IDBTransaction} txn The version upgrade transaction for indexeddb
 */function writeEmptyTargetGlobalEntry(txn){var globalStore=txn.store(DbTargetGlobal.store);var metadata=new DbTargetGlobal(/*highestTargetId=*/0,/*lastListenSequenceNumber=*/0,SnapshotVersion.MIN.toTimestamp(),/*targetCount=*/0);return globalStore.put(DbTargetGlobal.key,metadata);}/**
 * Creates indices on the RemoteDocuments store used for both multi-tab
 * and Index-Free queries.
 */function createRemoteDocumentReadTimeIndex(txn){var remoteDocumentStore=txn.objectStore(DbRemoteDocument.store);remoteDocumentStore.createIndex(DbRemoteDocument.readTimeIndex,DbRemoteDocument.readTimeIndexPath,{unique:false});remoteDocumentStore.createIndex(DbRemoteDocument.collectionReadTimeIndex,DbRemoteDocument.collectionReadTimeIndexPath,{unique:false});}/**
 * A record of the metadata state of each client.
 *
 * PORTING NOTE: This is used to synchronize multi-tab state and does not need
 * to be ported to iOS or Android.
 */var DbClientMetadata=/** @class */function(){function DbClientMetadata(// Note: Previous schema versions included a field
// "lastProcessedDocumentChangeId". Don't use anymore.
/** The auto-generated client id assigned at client startup. */clientId,/** The last time this state was updated. */updateTimeMs,/** Whether the client's network connection is enabled. */networkEnabled,/** Whether this client is running in a foreground tab. */inForeground){this.clientId=clientId;this.updateTimeMs=updateTimeMs;this.networkEnabled=networkEnabled;this.inForeground=inForeground;}/** Name of the IndexedDb object store. */DbClientMetadata.store='clientMetadata';/** Keys are automatically assigned via the clientId properties. */DbClientMetadata.keyPath='clientId';return DbClientMetadata;}();function createClientMetadataStore(db){db.createObjectStore(DbClientMetadata.store,{keyPath:DbClientMetadata.keyPath});}// Visible for testing
var V1_STORES=[DbMutationQueue.store,DbMutationBatch.store,DbDocumentMutation.store,DbRemoteDocument.store,DbTarget.store,DbPrimaryClient.store,DbTargetGlobal.store,DbTargetDocument.store];// V2 is no longer usable (see comment at top of file)
// Visible for testing
var V3_STORES=V1_STORES;// Visible for testing
// Note: DbRemoteDocumentChanges is no longer used and dropped with v9.
var V4_STORES=tslib.__spreadArrays(V3_STORES,[DbClientMetadata.store]);// V5 does not change the set of stores.
var V6_STORES=tslib.__spreadArrays(V4_STORES,[DbRemoteDocumentGlobal.store]);// V7 does not change the set of stores.
var V8_STORES=tslib.__spreadArrays(V6_STORES,[DbCollectionParent.store]);// V9 does not change the set of stores.
/**
 * The list of all default IndexedDB stores used throughout the SDK. This is
 * used when creating transactions so that access across all stores is done
 * atomically.
 */var ALL_STORES=V8_STORES;/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A persisted implementation of IndexManager.
 */var IndexedDbIndexManager=/** @class */function(){function IndexedDbIndexManager(){/**
         * An in-memory copy of the index entries we've already written since the SDK
         * launched. Used to avoid re-writing the same entry repeatedly.
         *
         * This is *NOT* a complete cache of what's in persistence and so can never be used to
         * satisfy reads.
         */this.collectionParentsCache=new MemoryCollectionParentIndex();}/**
     * Adds a new entry to the collection parent index.
     *
     * Repeated calls for the same collectionPath should be avoided within a
     * transaction as IndexedDbIndexManager only caches writes once a transaction
     * has been committed.
     */IndexedDbIndexManager.prototype.addToCollectionParentIndex=function(transaction,collectionPath){var _this=this;assert(collectionPath.length%2===1,'Expected a collection path.');if(!this.collectionParentsCache.has(collectionPath)){var collectionId=collectionPath.lastSegment();var parentPath=collectionPath.popLast();transaction.addOnCommittedListener(function(){// Add the collection to the in memory cache only if the transaction was
// successfully committed.
_this.collectionParentsCache.add(collectionPath);});var collectionParent={collectionId:collectionId,parent:encode(parentPath)};return collectionParentsStore(transaction).put(collectionParent);}return PersistencePromise.resolve();};IndexedDbIndexManager.prototype.getCollectionParents=function(transaction,collectionId){var parentPaths=[];var range=IDBKeyRange.bound([collectionId,''],[immediateSuccessor(collectionId),''],/*lowerOpen=*/false,/*upperOpen=*/true);return collectionParentsStore(transaction).loadAll(range).next(function(entries){for(var _i=0,entries_1=entries;_i<entries_1.length;_i++){var entry=entries_1[_i];// This collectionId guard shouldn't be necessary (and isn't as long
// as we're running in a real browser), but there's a bug in
// indexeddbshim that breaks our range in our tests running in node:
// https://github.com/axemclion/IndexedDBShim/issues/334
if(entry.collectionId!==collectionId){break;}parentPaths.push(decode(entry.parent));}return parentPaths;});};return IndexedDbIndexManager;}();/**
 * Helper to get a typed SimpleDbStore for the collectionParents
 * document store.
 */function collectionParentsStore(txn){return IndexedDbPersistence.getStore(txn,DbCollectionParent.store);}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** An enumeration of the different purposes we have for targets. */var TargetPurpose;(function(TargetPurpose){/** A regular, normal query target. */TargetPurpose[TargetPurpose["Listen"]=0]="Listen";/**
     * The query target was used to refill a query after an existence filter mismatch.
     */TargetPurpose[TargetPurpose["ExistenceFilterMismatch"]=1]="ExistenceFilterMismatch";/** The query target was used to resolve a limbo document. */TargetPurpose[TargetPurpose["LimboResolution"]=2]="LimboResolution";})(TargetPurpose||(TargetPurpose={}));/**
 * An immutable set of metadata that the local store tracks for each target.
 */var TargetData=/** @class */function(){function TargetData(/** The target being listened to. */target,/**
     * The target ID to which the target corresponds; Assigned by the
     * LocalStore for user listens and by the SyncEngine for limbo watches.
     */targetId,/** The purpose of the target. */purpose,/**
     * The sequence number of the last transaction during which this target data
     * was modified.
     */sequenceNumber,/** The latest snapshot version seen for this target. */snapshotVersion,/**
     * The maximum snapshot version at which the associated view
     * contained no limbo documents.
     */lastLimboFreeSnapshotVersion,/**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */resumeToken){if(snapshotVersion===void 0){snapshotVersion=SnapshotVersion.MIN;}if(lastLimboFreeSnapshotVersion===void 0){lastLimboFreeSnapshotVersion=SnapshotVersion.MIN;}if(resumeToken===void 0){resumeToken=emptyByteString();}this.target=target;this.targetId=targetId;this.purpose=purpose;this.sequenceNumber=sequenceNumber;this.snapshotVersion=snapshotVersion;this.lastLimboFreeSnapshotVersion=lastLimboFreeSnapshotVersion;this.resumeToken=resumeToken;}/** Creates a new target data instance with an updated sequence number. */TargetData.prototype.withSequenceNumber=function(sequenceNumber){return new TargetData(this.target,this.targetId,this.purpose,sequenceNumber,this.snapshotVersion,this.lastLimboFreeSnapshotVersion,this.resumeToken);};/**
     * Creates a new target data instance with an updated resume token and
     * snapshot version.
     */TargetData.prototype.withResumeToken=function(resumeToken,snapshotVersion){return new TargetData(this.target,this.targetId,this.purpose,this.sequenceNumber,snapshotVersion,this.lastLimboFreeSnapshotVersion,resumeToken);};/**
     * Creates a new target data instance with an updated last limbo free
     * snapshot version number.
     */TargetData.prototype.withLastLimboFreeSnapshotVersion=function(lastLimboFreeSnapshotVersion){return new TargetData(this.target,this.targetId,this.purpose,this.sequenceNumber,this.snapshotVersion,lastLimboFreeSnapshotVersion,this.resumeToken);};TargetData.prototype.isEqual=function(other){return this.targetId===other.targetId&&this.purpose===other.purpose&&this.sequenceNumber===other.sequenceNumber&&this.snapshotVersion.isEqual(other.snapshotVersion)&&this.lastLimboFreeSnapshotVersion.isEqual(other.lastLimboFreeSnapshotVersion)&&this.resumeToken===other.resumeToken&&this.target.isEqual(other.target);};return TargetData;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** Serializer for values stored in the LocalStore. */var LocalSerializer=/** @class */function(){function LocalSerializer(remoteSerializer){this.remoteSerializer=remoteSerializer;}/** Decodes a remote document from storage locally to a Document. */LocalSerializer.prototype.fromDbRemoteDocument=function(remoteDoc){if(remoteDoc.document){return this.remoteSerializer.fromDocument(remoteDoc.document,!!remoteDoc.hasCommittedMutations);}else if(remoteDoc.noDocument){var key=DocumentKey.fromSegments(remoteDoc.noDocument.path);var version=this.fromDbTimestamp(remoteDoc.noDocument.readTime);return new NoDocument(key,version,{hasCommittedMutations:!!remoteDoc.hasCommittedMutations});}else if(remoteDoc.unknownDocument){var key=DocumentKey.fromSegments(remoteDoc.unknownDocument.path);var version=this.fromDbTimestamp(remoteDoc.unknownDocument.version);return new UnknownDocument(key,version);}else{return fail('Unexpected DbRemoteDocument');}};/** Encodes a document for storage locally. */LocalSerializer.prototype.toDbRemoteDocument=function(maybeDoc,readTime){var dbReadTime=this.toDbTimestampKey(readTime);var parentPath=maybeDoc.key.path.popLast().toArray();if(maybeDoc instanceof Document){var doc=maybeDoc.proto?maybeDoc.proto:this.remoteSerializer.toDocument(maybeDoc);var hasCommittedMutations=maybeDoc.hasCommittedMutations;return new DbRemoteDocument(/* unknownDocument= */null,/* noDocument= */null,doc,hasCommittedMutations,dbReadTime,parentPath);}else if(maybeDoc instanceof NoDocument){var path=maybeDoc.key.path.toArray();var readTime_1=this.toDbTimestamp(maybeDoc.version);var hasCommittedMutations=maybeDoc.hasCommittedMutations;return new DbRemoteDocument(/* unknownDocument= */null,new DbNoDocument(path,readTime_1),/* document= */null,hasCommittedMutations,dbReadTime,parentPath);}else if(maybeDoc instanceof UnknownDocument){var path=maybeDoc.key.path.toArray();var readTime_2=this.toDbTimestamp(maybeDoc.version);return new DbRemoteDocument(new DbUnknownDocument(path,readTime_2),/* noDocument= */null,/* document= */null,/* hasCommittedMutations= */true,dbReadTime,parentPath);}else{return fail('Unexpected MaybeDocument');}};LocalSerializer.prototype.toDbTimestampKey=function(snapshotVersion){var timestamp=snapshotVersion.toTimestamp();return[timestamp.seconds,timestamp.nanoseconds];};LocalSerializer.prototype.fromDbTimestampKey=function(dbTimestampKey){var timestamp=new Timestamp(dbTimestampKey[0],dbTimestampKey[1]);return SnapshotVersion.fromTimestamp(timestamp);};LocalSerializer.prototype.toDbTimestamp=function(snapshotVersion){var timestamp=snapshotVersion.toTimestamp();return new DbTimestamp(timestamp.seconds,timestamp.nanoseconds);};LocalSerializer.prototype.fromDbTimestamp=function(dbTimestamp){var timestamp=new Timestamp(dbTimestamp.seconds,dbTimestamp.nanoseconds);return SnapshotVersion.fromTimestamp(timestamp);};/** Encodes a batch of mutations into a DbMutationBatch for local storage. */LocalSerializer.prototype.toDbMutationBatch=function(userId,batch){var _this=this;var serializedBaseMutations=batch.baseMutations.map(function(m){return _this.remoteSerializer.toMutation(m);});var serializedMutations=batch.mutations.map(function(m){return _this.remoteSerializer.toMutation(m);});return new DbMutationBatch(userId,batch.batchId,batch.localWriteTime.toMillis(),serializedBaseMutations,serializedMutations);};/** Decodes a DbMutationBatch into a MutationBatch */LocalSerializer.prototype.fromDbMutationBatch=function(dbBatch){var _this=this;var baseMutations=(dbBatch.baseMutations||[]).map(function(m){return _this.remoteSerializer.fromMutation(m);});var mutations=dbBatch.mutations.map(function(m){return _this.remoteSerializer.fromMutation(m);});var timestamp=Timestamp.fromMillis(dbBatch.localWriteTimeMs);return new MutationBatch(dbBatch.batchId,timestamp,baseMutations,mutations);};/*
     * Encodes a set of document keys into an array of EncodedResourcePaths.
     */LocalSerializer.prototype.toDbResourcePaths=function(keys){var encodedKeys=[];keys.forEach(function(key){encodedKeys.push(encode(key.path));});return encodedKeys;};/** Decodes an array of EncodedResourcePaths into a set of document keys. */LocalSerializer.prototype.fromDbResourcePaths=function(encodedPaths){var keys=documentKeySet();for(var _i=0,encodedPaths_1=encodedPaths;_i<encodedPaths_1.length;_i++){var documentKey=encodedPaths_1[_i];keys=keys.add(new DocumentKey(decode(documentKey)));}return keys;};/** Decodes a DbTarget into TargetData */LocalSerializer.prototype.fromDbTarget=function(dbTarget){var version=this.fromDbTimestamp(dbTarget.readTime);var lastLimboFreeSnapshotVersion=dbTarget.lastLimboFreeSnapshotVersion!==undefined?this.fromDbTimestamp(dbTarget.lastLimboFreeSnapshotVersion):SnapshotVersion.MIN;// TODO(b/140573486): Convert to platform representation
var resumeToken=dbTarget.resumeToken;var target;if(isDocumentQuery(dbTarget.query)){target=this.remoteSerializer.fromDocumentsTarget(dbTarget.query);}else{target=this.remoteSerializer.fromQueryTarget(dbTarget.query);}return new TargetData(target,dbTarget.targetId,TargetPurpose.Listen,dbTarget.lastListenSequenceNumber,version,lastLimboFreeSnapshotVersion,resumeToken);};/** Encodes TargetData into a DbTarget for storage locally. */LocalSerializer.prototype.toDbTarget=function(targetData){assert(TargetPurpose.Listen===targetData.purpose,'Only queries with purpose '+TargetPurpose.Listen+' may be stored, got '+targetData.purpose);var dbTimestamp=this.toDbTimestamp(targetData.snapshotVersion);var dbLastLimboFreeTimestamp=this.toDbTimestamp(targetData.lastLimboFreeSnapshotVersion);var queryProto;if(targetData.target.isDocumentQuery()){queryProto=this.remoteSerializer.toDocumentsTarget(targetData.target);}else{queryProto=this.remoteSerializer.toQueryTarget(targetData.target);}var resumeToken;if(targetData.resumeToken instanceof Uint8Array){// TODO(b/78771403): Convert tokens to strings during deserialization
assert(SimpleDb.isMockPersistence(),'Persisting non-string stream tokens is only supported with mock persistence .');resumeToken=targetData.resumeToken.toString();}else{resumeToken=targetData.resumeToken;}// lastListenSequenceNumber is always 0 until we do real GC.
return new DbTarget(targetData.targetId,targetData.target.canonicalId(),dbTimestamp,resumeToken,targetData.sequenceNumber,dbLastLimboFreeTimestamp,queryProto);};return LocalSerializer;}();/**
 * A helper function for figuring out what kind of query has been stored.
 */function isDocumentQuery(dbQuery){return dbQuery.documents!==undefined;}/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function bufferEntryComparator(_a,_b){var aSequence=_a[0],aIndex=_a[1];var bSequence=_b[0],bIndex=_b[1];var seqCmp=primitiveComparator(aSequence,bSequence);if(seqCmp===0){// This order doesn't matter, but we can bias against churn by sorting
// entries created earlier as less than newer entries.
return primitiveComparator(aIndex,bIndex);}else{return seqCmp;}}/**
 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
 * lowest n values passed to `addElement`, and finally reports the largest of
 * them in `maxValue`.
 */var RollingSequenceNumberBuffer=/** @class */function(){function RollingSequenceNumberBuffer(maxElements){this.maxElements=maxElements;this.buffer=new SortedSet(bufferEntryComparator);this.previousIndex=0;}RollingSequenceNumberBuffer.prototype.nextIndex=function(){return++this.previousIndex;};RollingSequenceNumberBuffer.prototype.addElement=function(sequenceNumber){var entry=[sequenceNumber,this.nextIndex()];if(this.buffer.size<this.maxElements){this.buffer=this.buffer.add(entry);}else{var highestValue=this.buffer.last();if(bufferEntryComparator(entry,highestValue)<0){this.buffer=this.buffer.delete(highestValue).add(entry);}}};Object.defineProperty(RollingSequenceNumberBuffer.prototype,"maxValue",{get:function get(){// Guaranteed to be non-empty. If we decide we are not collecting any
// sequence numbers, nthSequenceNumber below short-circuits. If we have
// decided that we are collecting n sequence numbers, it's because n is some
// percentage of the existing sequence numbers. That means we should never
// be in a situation where we are collecting sequence numbers but don't
// actually have any.
return this.buffer.last()[0];},enumerable:true,configurable:true});return RollingSequenceNumberBuffer;}();var GC_DID_NOT_RUN={didRun:false,sequenceNumbersCollected:0,targetsRemoved:0,documentsRemoved:0};var LruParams=/** @class */function(){function LruParams(// When we attempt to collect, we will only do so if the cache size is greater than this
// threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
cacheSizeCollectionThreshold,// The percentage of sequence numbers that we will attempt to collect
percentileToCollect,// A cap on the total number of sequence numbers that will be collected. This prevents
// us from collecting a huge number of sequence numbers if the cache has grown very large.
maximumSequenceNumbersToCollect){this.cacheSizeCollectionThreshold=cacheSizeCollectionThreshold;this.percentileToCollect=percentileToCollect;this.maximumSequenceNumbersToCollect=maximumSequenceNumbersToCollect;}LruParams.withCacheSize=function(cacheSize){return new LruParams(cacheSize,LruParams.DEFAULT_COLLECTION_PERCENTILE,LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);};LruParams.COLLECTION_DISABLED=-1;LruParams.MINIMUM_CACHE_SIZE_BYTES=1*1024*1024;LruParams.DEFAULT_CACHE_SIZE_BYTES=40*1024*1024;LruParams.DEFAULT_COLLECTION_PERCENTILE=10;LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT=1000;LruParams.DEFAULT=new LruParams(LruParams.DEFAULT_CACHE_SIZE_BYTES,LruParams.DEFAULT_COLLECTION_PERCENTILE,LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);LruParams.DISABLED=new LruParams(LruParams.COLLECTION_DISABLED,0,0);return LruParams;}();/** How long we wait to try running LRU GC after SDK initialization. */var INITIAL_GC_DELAY_MS=1*60*1000;/** Minimum amount of time between GC checks, after the first one. */var REGULAR_GC_DELAY_MS=5*60*1000;/**
 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
 * whether or not GC is enabled, as well as which delay to use before the next run.
 */var LruScheduler=/** @class */function(){function LruScheduler(garbageCollector,asyncQueue,localStore){this.garbageCollector=garbageCollector;this.asyncQueue=asyncQueue;this.localStore=localStore;this.hasRun=false;this.gcTask=null;}LruScheduler.prototype.start=function(){assert(this.gcTask===null,'Cannot start an already started LruScheduler');if(this.garbageCollector.params.cacheSizeCollectionThreshold!==LruParams.COLLECTION_DISABLED){this.scheduleGC();}};LruScheduler.prototype.stop=function(){if(this.gcTask){this.gcTask.cancel();this.gcTask=null;}};Object.defineProperty(LruScheduler.prototype,"started",{get:function get(){return this.gcTask!==null;},enumerable:true,configurable:true});LruScheduler.prototype.scheduleGC=function(){var _this=this;assert(this.gcTask===null,'Cannot schedule GC while a task is pending');var delay=this.hasRun?REGULAR_GC_DELAY_MS:INITIAL_GC_DELAY_MS;debug('LruGarbageCollector',"Garbage collection scheduled in "+delay+"ms");this.gcTask=this.asyncQueue.enqueueAfterDelay(TimerId.LruGarbageCollection,delay,function(){_this.gcTask=null;_this.hasRun=true;return _this.localStore.collectGarbage(_this.garbageCollector).then(function(){return _this.scheduleGC();}).catch(ignoreIfPrimaryLeaseLoss);});};return LruScheduler;}();/** Implements the steps for LRU garbage collection. */var LruGarbageCollector=/** @class */function(){function LruGarbageCollector(delegate,params){this.delegate=delegate;this.params=params;}/** Given a percentile of target to collect, returns the number of targets to collect. */LruGarbageCollector.prototype.calculateTargetCount=function(txn,percentile){return this.delegate.getSequenceNumberCount(txn).next(function(targetCount){return Math.floor(percentile/100.0*targetCount);});};/** Returns the nth sequence number, counting in order from the smallest. */LruGarbageCollector.prototype.nthSequenceNumber=function(txn,n){var _this=this;if(n===0){return PersistencePromise.resolve(ListenSequence.INVALID);}var buffer=new RollingSequenceNumberBuffer(n);return this.delegate.forEachTarget(txn,function(target){return buffer.addElement(target.sequenceNumber);}).next(function(){return _this.delegate.forEachOrphanedDocumentSequenceNumber(txn,function(sequenceNumber){return buffer.addElement(sequenceNumber);});}).next(function(){return buffer.maxValue;});};/**
     * Removes targets with a sequence number equal to or less than the given upper bound, and removes
     * document associations with those targets.
     */LruGarbageCollector.prototype.removeTargets=function(txn,upperBound,activeTargetIds){return this.delegate.removeTargets(txn,upperBound,activeTargetIds);};/**
     * Removes documents that have a sequence number equal to or less than the upper bound and are not
     * otherwise pinned.
     */LruGarbageCollector.prototype.removeOrphanedDocuments=function(txn,upperBound){return this.delegate.removeOrphanedDocuments(txn,upperBound);};LruGarbageCollector.prototype.collect=function(txn,activeTargetIds){var _this=this;if(this.params.cacheSizeCollectionThreshold===LruParams.COLLECTION_DISABLED){debug('LruGarbageCollector','Garbage collection skipped; disabled');return PersistencePromise.resolve(GC_DID_NOT_RUN);}return this.getCacheSize(txn).next(function(cacheSize){if(cacheSize<_this.params.cacheSizeCollectionThreshold){debug('LruGarbageCollector',"Garbage collection skipped; Cache size "+cacheSize+" "+("is lower than threshold "+_this.params.cacheSizeCollectionThreshold));return GC_DID_NOT_RUN;}else{return _this.runGarbageCollection(txn,activeTargetIds);}});};LruGarbageCollector.prototype.getCacheSize=function(txn){return this.delegate.getCacheSize(txn);};LruGarbageCollector.prototype.runGarbageCollection=function(txn,activeTargetIds){var _this=this;var upperBoundSequenceNumber;var sequenceNumbersToCollect,targetsRemoved;// Timestamps for various pieces of the process
var countedTargetsTs,foundUpperBoundTs,removedTargetsTs,removedDocumentsTs;var startTs=Date.now();return this.calculateTargetCount(txn,this.params.percentileToCollect).next(function(sequenceNumbers){// Cap at the configured max
if(sequenceNumbers>_this.params.maximumSequenceNumbersToCollect){debug('LruGarbageCollector','Capping sequence numbers to collect down '+("to the maximum of "+_this.params.maximumSequenceNumbersToCollect+" ")+("from "+sequenceNumbers));sequenceNumbersToCollect=_this.params.maximumSequenceNumbersToCollect;}else{sequenceNumbersToCollect=sequenceNumbers;}countedTargetsTs=Date.now();return _this.nthSequenceNumber(txn,sequenceNumbersToCollect);}).next(function(upperBound){upperBoundSequenceNumber=upperBound;foundUpperBoundTs=Date.now();return _this.removeTargets(txn,upperBoundSequenceNumber,activeTargetIds);}).next(function(numTargetsRemoved){targetsRemoved=numTargetsRemoved;removedTargetsTs=Date.now();return _this.removeOrphanedDocuments(txn,upperBoundSequenceNumber);}).next(function(documentsRemoved){removedDocumentsTs=Date.now();if(getLogLevel()<=LogLevel.DEBUG){var desc='LRU Garbage Collection\n'+("\tCounted targets in "+(countedTargetsTs-startTs)+"ms\n")+("\tDetermined least recently used "+sequenceNumbersToCollect+" in ")+(foundUpperBoundTs-countedTargetsTs+"ms\n")+("\tRemoved "+targetsRemoved+" targets in ")+(removedTargetsTs-foundUpperBoundTs+"ms\n")+("\tRemoved "+documentsRemoved+" documents in ")+(removedDocumentsTs-removedTargetsTs+"ms\n")+("Total Duration: "+(removedDocumentsTs-startTs)+"ms");debug('LruGarbageCollector',desc);}return PersistencePromise.resolve({didRun:true,sequenceNumbersCollected:sequenceNumbersToCollect,targetsRemoved:targetsRemoved,documentsRemoved:documentsRemoved});});};return LruGarbageCollector;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A base class representing a persistence transaction, encapsulating both the
 * transaction's sequence numbers as well as a list of onCommitted listeners.
 *
 * When you call Persistence.runTransaction(), it will create a transaction and
 * pass it to your callback. You then pass it to any method that operates
 * on persistence.
 */var PersistenceTransaction=/** @class */function(){function PersistenceTransaction(){this.onCommittedListeners=[];}PersistenceTransaction.prototype.addOnCommittedListener=function(listener){this.onCommittedListeners.push(listener);};PersistenceTransaction.prototype.raiseOnCommittedEvent=function(){this.onCommittedListeners.forEach(function(listener){return listener();});};return PersistenceTransaction;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$1='IndexedDbPersistence';/**
 * Oldest acceptable age in milliseconds for client metadata before the client
 * is considered inactive and its associated data is garbage collected.
 */var MAX_CLIENT_AGE_MS=30*60*1000;// 30 minutes
/**
 * Oldest acceptable metadata age for clients that may participate in the
 * primary lease election. Clients that have not updated their client metadata
 * within 5 seconds are not eligible to receive a primary lease.
 */var MAX_PRIMARY_ELIGIBLE_AGE_MS=5000;/**
 * The interval at which clients will update their metadata, including
 * refreshing their primary lease if held or potentially trying to acquire it if
 * not held.
 *
 * Primary clients may opportunistically refresh their metadata earlier
 * if they're already performing an IndexedDB operation.
 */var CLIENT_METADATA_REFRESH_INTERVAL_MS=4000;/** User-facing error when the primary lease is required but not available. */var PRIMARY_LEASE_LOST_ERROR_MSG='The current tab is not in the required state to perform this operation. '+'It might be necessary to refresh the browser tab.';var PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG='Another tab has exclusive access to the persistence layer. '+'To allow shared access, make sure to invoke '+'`enablePersistence()` with `synchronizeTabs:true` in all tabs.';var UNSUPPORTED_PLATFORM_ERROR_MSG='This platform is either missing'+' IndexedDB or is known to have an incomplete implementation. Offline'+' persistence has been disabled.';// The format of the LocalStorage key that stores zombied client is:
//     firestore_zombie_<persistence_prefix>_<instance_key>
var ZOMBIED_CLIENTS_KEY_PREFIX='firestore_zombie';var IndexedDbTransaction=/** @class */function(_super){tslib.__extends(IndexedDbTransaction,_super);function IndexedDbTransaction(simpleDbTransaction,currentSequenceNumber){var _this=_super.call(this)||this;_this.simpleDbTransaction=simpleDbTransaction;_this.currentSequenceNumber=currentSequenceNumber;return _this;}return IndexedDbTransaction;}(PersistenceTransaction);/**
 * An IndexedDB-backed instance of Persistence. Data is stored persistently
 * across sessions.
 *
 * On Web only, the Firestore SDKs support shared access to its persistence
 * layer. This allows multiple browser tabs to read and write to IndexedDb and
 * to synchronize state even without network connectivity. Shared access is
 * currently optional and not enabled unless all clients invoke
 * `enablePersistence()` with `{synchronizeTabs:true}`.
 *
 * In multi-tab mode, if multiple clients are active at the same time, the SDK
 * will designate one client as the “primary client”. An effort is made to pick
 * a visible, network-connected and active client, and this client is
 * responsible for letting other clients know about its presence. The primary
 * client writes a unique client-generated identifier (the client ID) to
 * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to
 * update this entry, another client can acquire the lease and take over as
 * primary.
 *
 * Some persistence operations in the SDK are designated as primary-client only
 * operations. This includes the acknowledgment of mutations and all updates of
 * remote documents. The effects of these operations are written to persistence
 * and then broadcast to other tabs via LocalStorage (see
 * `WebStorageSharedClientState`), which then refresh their state from
 * persistence.
 *
 * Similarly, the primary client listens to notifications sent by secondary
 * clients to discover persistence changes written by secondary clients, such as
 * the addition of new mutations and query targets.
 *
 * If multi-tab is not enabled and another tab already obtained the primary
 * lease, IndexedDbPersistence enters a failed state and all subsequent
 * operations will automatically fail.
 *
 * Additionally, there is an optimization so that when a tab is closed, the
 * primary lease is released immediately (this is especially important to make
 * sure that a refreshed tab is able to immediately re-acquire the primary
 * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload
 * since it is an asynchronous API. So in addition to attempting to give up the
 * lease, the leaseholder writes its client ID to a "zombiedClient" entry in
 * LocalStorage which acts as an indicator that another tab should go ahead and
 * take the primary lease immediately regardless of the current lease timestamp.
 *
 * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no
 * longer optional.
 */var IndexedDbPersistence=/** @class */function(){function IndexedDbPersistence(allowTabSynchronization,persistenceKey,clientId,platform,lruParams,queue,serializer,sequenceNumberSyncer){this.allowTabSynchronization=allowTabSynchronization;this.persistenceKey=persistenceKey;this.clientId=clientId;this.queue=queue;this.sequenceNumberSyncer=sequenceNumberSyncer;this._started=false;this.isPrimary=false;this.networkEnabled=true;/** Our window.unload handler, if registered. */this.windowUnloadHandler=null;this.inForeground=false;/** Our 'visibilitychange' listener if registered. */this.documentVisibilityHandler=null;/** The client metadata refresh task. */this.clientMetadataRefresher=null;/** The last time we garbage collected the client metadata object store. */this.lastGarbageCollectionTime=Number.NEGATIVE_INFINITY;/** A listener to notify on primary state changes. */this.primaryStateListener=function(_){return Promise.resolve();};this.referenceDelegate=new IndexedDbLruDelegate(this,lruParams);this.dbName=persistenceKey+IndexedDbPersistence.MAIN_DATABASE;this.serializer=new LocalSerializer(serializer);this.document=platform.document;this.targetCache=new IndexedDbTargetCache(this.referenceDelegate,this.serializer);this.indexManager=new IndexedDbIndexManager();this.remoteDocumentCache=new IndexedDbRemoteDocumentCache(this.serializer,this.indexManager);if(platform.window&&platform.window.localStorage){this.window=platform.window;this.webStorage=this.window.localStorage;}else{throw new FirestoreError(Code.UNIMPLEMENTED,'IndexedDB persistence is only available on platforms that support LocalStorage.');}}IndexedDbPersistence.getStore=function(txn,store){if(txn instanceof IndexedDbTransaction){return SimpleDb.getStore(txn.simpleDbTransaction,store);}else{throw fail('IndexedDbPersistence must use instances of IndexedDbTransaction');}};IndexedDbPersistence.createIndexedDbPersistence=function(options){return tslib.__awaiter(this,void 0,void 0,function(){var persistence;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!IndexedDbPersistence.isAvailable()){throw new FirestoreError(Code.UNIMPLEMENTED,UNSUPPORTED_PLATFORM_ERROR_MSG);}persistence=new IndexedDbPersistence(options.allowTabSynchronization,options.persistenceKey,options.clientId,options.platform,options.lruParams,options.queue,options.serializer,options.sequenceNumberSyncer);return[4/*yield*/,persistence.start()];case 1:_a.sent();return[2/*return*/,persistence];}});});};/**
     * Attempt to start IndexedDb persistence.
     *
     * @return {Promise<void>} Whether persistence was enabled.
     */IndexedDbPersistence.prototype.start=function(){var _this=this;assert(!this.started,'IndexedDbPersistence double-started!');assert(this.window!==null,"Expected 'window' to be defined");return SimpleDb.openOrCreate(this.dbName,SCHEMA_VERSION,new SchemaConverter(this.serializer)).then(function(db){_this.simpleDb=db;// NOTE: This is expected to fail sometimes (in the case of another tab already
// having the persistence lock), so it's the first thing we should do.
return _this.updateClientMetadataAndTryBecomePrimary();}).then(function(){_this.attachVisibilityHandler();_this.attachWindowUnloadHook();_this.scheduleClientMetadataAndPrimaryLeaseRefreshes();return _this.simpleDb.runTransaction('readonly-idempotent',[DbTargetGlobal.store],function(txn){return getHighestListenSequenceNumber(txn);});}).then(function(highestListenSequenceNumber){_this.listenSequence=new ListenSequence(highestListenSequenceNumber,_this.sequenceNumberSyncer);}).then(function(){_this._started=true;}).catch(function(reason){_this.simpleDb&&_this.simpleDb.close();return Promise.reject(reason);});};IndexedDbPersistence.prototype.setPrimaryStateListener=function(primaryStateListener){var _this=this;this.primaryStateListener=function(primaryState){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(this.started){return[2/*return*/,primaryStateListener(primaryState)];}return[2/*return*/];});});};return primaryStateListener(this.isPrimary);};IndexedDbPersistence.prototype.setDatabaseDeletedListener=function(databaseDeletedListener){var _this=this;this.simpleDb.setVersionChangeListener(function(event){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!(event.newVersion===null))return[3/*break*/,2];return[4/*yield*/,databaseDeletedListener()];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});});};IndexedDbPersistence.prototype.setNetworkEnabled=function(networkEnabled){var _this=this;if(this.networkEnabled!==networkEnabled){this.networkEnabled=networkEnabled;// Schedule a primary lease refresh for immediate execution. The eventual
// lease update will be propagated via `primaryStateListener`.
this.queue.enqueueAndForget(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.started)return[3/*break*/,2];return[4/*yield*/,this.updateClientMetadataAndTryBecomePrimary()];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});});}};/**
     * Updates the client metadata in IndexedDb and attempts to either obtain or
     * extend the primary lease for the local client. Asynchronously notifies the
     * primary state listener if the client either newly obtained or released its
     * primary lease.
     */IndexedDbPersistence.prototype.updateClientMetadataAndTryBecomePrimary=function(){var _this=this;return this.simpleDb.runTransaction('readwrite-idempotent',ALL_STORES,function(txn){var metadataStore=clientMetadataStore(txn);return metadataStore.put(new DbClientMetadata(_this.clientId,Date.now(),_this.networkEnabled,_this.inForeground)).next(function(){if(_this.isPrimary){return _this.verifyPrimaryLease(txn).next(function(success){if(!success){_this.isPrimary=false;_this.queue.enqueueAndForget(function(){return _this.primaryStateListener(false);});}});}}).next(function(){return _this.canActAsPrimary(txn);}).next(function(canActAsPrimary){if(_this.isPrimary&&!canActAsPrimary){return _this.releasePrimaryLeaseIfHeld(txn).next(function(){return false;});}else if(canActAsPrimary){return _this.acquireOrExtendPrimaryLease(txn).next(function(){return true;});}else{return(/* canActAsPrimary= */false);}});}).catch(function(e){if(!_this.allowTabSynchronization){throw e;}debug(LOG_TAG$1,'Releasing owner lease after error during lease refresh',e);return(/* isPrimary= */false);}).then(function(isPrimary){if(_this.isPrimary!==isPrimary){_this.queue.enqueueAndForget(function(){return _this.primaryStateListener(isPrimary);});}_this.isPrimary=isPrimary;});};IndexedDbPersistence.prototype.verifyPrimaryLease=function(txn){var _this=this;var store=primaryClientStore(txn);return store.get(DbPrimaryClient.key).next(function(primaryClient){return PersistencePromise.resolve(_this.isLocalClient(primaryClient));});};IndexedDbPersistence.prototype.removeClientMetadata=function(txn){var metadataStore=clientMetadataStore(txn);return metadataStore.delete(this.clientId);};/**
     * If the garbage collection threshold has passed, prunes the
     * RemoteDocumentChanges and the ClientMetadata store based on the last update
     * time of all clients.
     */IndexedDbPersistence.prototype.maybeGarbageCollectMultiClientState=function(){return tslib.__awaiter(this,void 0,void 0,function(){var inactiveClients;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!(this.isPrimary&&!this.isWithinAge(this.lastGarbageCollectionTime,MAX_CLIENT_AGE_MS)))return[3/*break*/,2];this.lastGarbageCollectionTime=Date.now();return[4/*yield*/,this.runTransaction('maybeGarbageCollectMultiClientState','readwrite-primary-idempotent',function(txn){var metadataStore=IndexedDbPersistence.getStore(txn,DbClientMetadata.store);return metadataStore.loadAll().next(function(existingClients){var active=_this.filterActiveClients(existingClients,MAX_CLIENT_AGE_MS);var inactive=existingClients.filter(function(client){return active.indexOf(client)===-1;});// Delete metadata for clients that are no longer considered active.
return PersistencePromise.forEach(inactive,function(inactiveClient){return metadataStore.delete(inactiveClient.clientId);}).next(function(){return inactive;});});})];case 1:inactiveClients=_a.sent();// Delete potential leftover entries that may continue to mark the
// inactive clients as zombied in LocalStorage.
// Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
// the client atomically, but we can't. So we opt to delete the IndexedDb
// entries first to avoid potentially reviving a zombied client.
inactiveClients.forEach(function(inactiveClient){_this.window.localStorage.removeItem(_this.zombiedClientLocalStorageKey(inactiveClient.clientId));});_a.label=2;case 2:return[2/*return*/];}});});};/**
     * Schedules a recurring timer to update the client metadata and to either
     * extend or acquire the primary lease if the client is eligible.
     */IndexedDbPersistence.prototype.scheduleClientMetadataAndPrimaryLeaseRefreshes=function(){var _this=this;this.clientMetadataRefresher=this.queue.enqueueAfterDelay(TimerId.ClientMetadataRefresh,CLIENT_METADATA_REFRESH_INTERVAL_MS,function(){return _this.updateClientMetadataAndTryBecomePrimary().then(function(){return _this.maybeGarbageCollectMultiClientState();}).then(function(){return _this.scheduleClientMetadataAndPrimaryLeaseRefreshes();});});};/** Checks whether `client` is the local client. */IndexedDbPersistence.prototype.isLocalClient=function(client){return client?client.ownerId===this.clientId:false;};/**
     * Evaluate the state of all active clients and determine whether the local
     * client is or can act as the holder of the primary lease. Returns whether
     * the client is eligible for the lease, but does not actually acquire it.
     * May return 'false' even if there is no active leaseholder and another
     * (foreground) client should become leaseholder instead.
     */IndexedDbPersistence.prototype.canActAsPrimary=function(txn){var _this=this;var store=primaryClientStore(txn);return store.get(DbPrimaryClient.key).next(function(currentPrimary){var currentLeaseIsValid=currentPrimary!==null&&_this.isWithinAge(currentPrimary.leaseTimestampMs,MAX_PRIMARY_ELIGIBLE_AGE_MS)&&!_this.isClientZombied(currentPrimary.ownerId);// A client is eligible for the primary lease if:
// - its network is enabled and the client's tab is in the foreground.
// - its network is enabled and no other client's tab is in the
//   foreground.
// - every clients network is disabled and the client's tab is in the
//   foreground.
// - every clients network is disabled and no other client's tab is in
//   the foreground.
if(currentLeaseIsValid){if(_this.isLocalClient(currentPrimary)&&_this.networkEnabled){return true;}if(!_this.isLocalClient(currentPrimary)){if(!currentPrimary.allowTabSynchronization){// Fail the `canActAsPrimary` check if the current leaseholder has
// not opted into multi-tab synchronization. If this happens at
// client startup, we reject the Promise returned by
// `enablePersistence()` and the user can continue to use Firestore
// with in-memory persistence.
// If this fails during a lease refresh, we will instead block the
// AsyncQueue from executing further operations. Note that this is
// acceptable since mixing & matching different `synchronizeTabs`
// settings is not supported.
//
// TODO(b/114226234): Remove this check when `synchronizeTabs` can
// no longer be turned off.
throw new FirestoreError(Code.FAILED_PRECONDITION,PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);}return false;}}if(_this.networkEnabled&&_this.inForeground){return true;}return clientMetadataStore(txn).loadAll().next(function(existingClients){// Process all existing clients and determine whether at least one of
// them is better suited to obtain the primary lease.
var preferredCandidate=_this.filterActiveClients(existingClients,MAX_PRIMARY_ELIGIBLE_AGE_MS).find(function(otherClient){if(_this.clientId!==otherClient.clientId){var otherClientHasBetterNetworkState=!_this.networkEnabled&&otherClient.networkEnabled;var otherClientHasBetterVisibility=!_this.inForeground&&otherClient.inForeground;var otherClientHasSameNetworkState=_this.networkEnabled===otherClient.networkEnabled;if(otherClientHasBetterNetworkState||otherClientHasBetterVisibility&&otherClientHasSameNetworkState){return true;}}return false;});return preferredCandidate===undefined;});}).next(function(canActAsPrimary){if(_this.isPrimary!==canActAsPrimary){debug(LOG_TAG$1,"Client "+(canActAsPrimary?'is':'is not')+" eligible for a primary lease.");}return canActAsPrimary;});};IndexedDbPersistence.prototype.shutdown=function(){return tslib.__awaiter(this,void 0,void 0,function(){var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:// The shutdown() operations are idempotent and can be called even when
// start() aborted (e.g. because it couldn't acquire the persistence lease).
this._started=false;this.markClientZombied();if(this.clientMetadataRefresher){this.clientMetadataRefresher.cancel();this.clientMetadataRefresher=null;}this.detachVisibilityHandler();this.detachWindowUnloadHook();return[4/*yield*/,this.simpleDb.runTransaction('readwrite-idempotent',[DbPrimaryClient.store,DbClientMetadata.store],function(txn){return _this.releasePrimaryLeaseIfHeld(txn).next(function(){return _this.removeClientMetadata(txn);});})];case 1:_a.sent();this.simpleDb.close();// Remove the entry marking the client as zombied from LocalStorage since
// we successfully deleted its metadata from IndexedDb.
this.removeClientZombiedEntry();return[2/*return*/];}});});};/**
     * Returns clients that are not zombied and have an updateTime within the
     * provided threshold.
     */IndexedDbPersistence.prototype.filterActiveClients=function(clients,activityThresholdMs){var _this=this;return clients.filter(function(client){return _this.isWithinAge(client.updateTimeMs,activityThresholdMs)&&!_this.isClientZombied(client.clientId);});};IndexedDbPersistence.prototype.getActiveClients=function(){var _this=this;return this.simpleDb.runTransaction('readonly-idempotent',[DbClientMetadata.store],function(txn){return clientMetadataStore(txn).loadAll().next(function(clients){return _this.filterActiveClients(clients,MAX_CLIENT_AGE_MS).map(function(clientMetadata){return clientMetadata.clientId;});});});};IndexedDbPersistence.clearPersistence=function(persistenceKey){return tslib.__awaiter(this,void 0,void 0,function(){var dbName;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!IndexedDbPersistence.isAvailable()){return[2/*return*/,Promise.resolve()];}dbName=persistenceKey+IndexedDbPersistence.MAIN_DATABASE;return[4/*yield*/,SimpleDb.delete(dbName)];case 1:_a.sent();return[2/*return*/];}});});};Object.defineProperty(IndexedDbPersistence.prototype,"started",{get:function get(){return this._started;},enumerable:true,configurable:true});IndexedDbPersistence.prototype.getMutationQueue=function(user){assert(this.started,'Cannot initialize MutationQueue before persistence is started.');return IndexedDbMutationQueue.forUser(user,this.serializer,this.indexManager,this.referenceDelegate);};IndexedDbPersistence.prototype.getTargetCache=function(){assert(this.started,'Cannot initialize TargetCache before persistence is started.');return this.targetCache;};IndexedDbPersistence.prototype.getRemoteDocumentCache=function(){assert(this.started,'Cannot initialize RemoteDocumentCache before persistence is started.');return this.remoteDocumentCache;};IndexedDbPersistence.prototype.getIndexManager=function(){assert(this.started,'Cannot initialize IndexManager before persistence is started.');return this.indexManager;};IndexedDbPersistence.prototype.runTransaction=function(action,mode,transactionOperation){var _this=this;debug(LOG_TAG$1,'Starting transaction:',action);// TODO(schmidt-sebastian): Simplify once all transactions are idempotent.
var idempotent=mode.endsWith('idempotent');var readonly=mode.startsWith('readonly');var simpleDbMode=readonly?idempotent?'readonly-idempotent':'readonly':idempotent?'readwrite-idempotent':'readwrite';var persistenceTransaction;// Do all transactions as readwrite against all object stores, since we
// are the only reader/writer.
return this.simpleDb.runTransaction(simpleDbMode,ALL_STORES,function(simpleDbTxn){persistenceTransaction=new IndexedDbTransaction(simpleDbTxn,_this.listenSequence.next());if(mode==='readwrite-primary'||mode==='readwrite-primary-idempotent'){// While we merely verify that we have (or can acquire) the lease
// immediately, we wait to extend the primary lease until after
// executing transactionOperation(). This ensures that even if the
// transactionOperation takes a long time, we'll use a recent
// leaseTimestampMs in the extended (or newly acquired) lease.
return _this.verifyPrimaryLease(simpleDbTxn).next(function(holdsPrimaryLease){if(holdsPrimaryLease){return(/* holdsPrimaryLease= */true);}return _this.canActAsPrimary(simpleDbTxn);}).next(function(holdsPrimaryLease){if(!holdsPrimaryLease){error("Failed to obtain primary lease for action '"+action+"'.");_this.isPrimary=false;_this.queue.enqueueAndForget(function(){return _this.primaryStateListener(false);});throw new FirestoreError(Code.FAILED_PRECONDITION,PRIMARY_LEASE_LOST_ERROR_MSG);}return transactionOperation(persistenceTransaction);}).next(function(result){return _this.acquireOrExtendPrimaryLease(simpleDbTxn).next(function(){return result;});});}else{return _this.verifyAllowTabSynchronization(simpleDbTxn).next(function(){return transactionOperation(persistenceTransaction);});}}).then(function(result){persistenceTransaction.raiseOnCommittedEvent();return result;});};/**
     * Verifies that the current tab is the primary leaseholder or alternatively
     * that the leaseholder has opted into multi-tab synchronization.
     */ // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
// be turned off.
IndexedDbPersistence.prototype.verifyAllowTabSynchronization=function(txn){var _this=this;var store=primaryClientStore(txn);return store.get(DbPrimaryClient.key).next(function(currentPrimary){var currentLeaseIsValid=currentPrimary!==null&&_this.isWithinAge(currentPrimary.leaseTimestampMs,MAX_PRIMARY_ELIGIBLE_AGE_MS)&&!_this.isClientZombied(currentPrimary.ownerId);if(currentLeaseIsValid&&!_this.isLocalClient(currentPrimary)){if(!currentPrimary.allowTabSynchronization){throw new FirestoreError(Code.FAILED_PRECONDITION,PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);}}});};/**
     * Obtains or extends the new primary lease for the local client. This
     * method does not verify that the client is eligible for this lease.
     */IndexedDbPersistence.prototype.acquireOrExtendPrimaryLease=function(txn){var newPrimary=new DbPrimaryClient(this.clientId,this.allowTabSynchronization,Date.now());return primaryClientStore(txn).put(DbPrimaryClient.key,newPrimary);};IndexedDbPersistence.isAvailable=function(){return SimpleDb.isAvailable();};/**
     * Generates a string used as a prefix when storing data in IndexedDB and
     * LocalStorage.
     */IndexedDbPersistence.buildStoragePrefix=function(databaseInfo){// Use two different prefix formats:
//
//   * firestore / persistenceKey / projectID . databaseID / ...
//   * firestore / persistenceKey / projectID / ...
//
// projectIDs are DNS-compatible names and cannot contain dots
// so there's no danger of collisions.
var database=databaseInfo.databaseId.projectId;if(!databaseInfo.databaseId.isDefaultDatabase){database+='.'+databaseInfo.databaseId.database;}return'firestore/'+databaseInfo.persistenceKey+'/'+database+'/';};/** Checks the primary lease and removes it if we are the current primary. */IndexedDbPersistence.prototype.releasePrimaryLeaseIfHeld=function(txn){var _this=this;var store=primaryClientStore(txn);return store.get(DbPrimaryClient.key).next(function(primaryClient){if(_this.isLocalClient(primaryClient)){debug(LOG_TAG$1,'Releasing primary lease.');return store.delete(DbPrimaryClient.key);}else{return PersistencePromise.resolve();}});};/** Verifies that `updateTimeMs` is within `maxAgeMs`. */IndexedDbPersistence.prototype.isWithinAge=function(updateTimeMs,maxAgeMs){var now=Date.now();var minAcceptable=now-maxAgeMs;var maxAcceptable=now;if(updateTimeMs<minAcceptable){return false;}else if(updateTimeMs>maxAcceptable){error("Detected an update time that is in the future: "+updateTimeMs+" > "+maxAcceptable);return false;}return true;};IndexedDbPersistence.prototype.attachVisibilityHandler=function(){var _this=this;if(this.document!==null&&typeof this.document.addEventListener==='function'){this.documentVisibilityHandler=function(){_this.queue.enqueueAndForget(function(){_this.inForeground=_this.document.visibilityState==='visible';return _this.updateClientMetadataAndTryBecomePrimary();});};this.document.addEventListener('visibilitychange',this.documentVisibilityHandler);this.inForeground=this.document.visibilityState==='visible';}};IndexedDbPersistence.prototype.detachVisibilityHandler=function(){if(this.documentVisibilityHandler){assert(this.document!==null&&typeof this.document.addEventListener==='function',"Expected 'document.addEventListener' to be a function");this.document.removeEventListener('visibilitychange',this.documentVisibilityHandler);this.documentVisibilityHandler=null;}};/**
     * Attaches a window.unload handler that will synchronously write our
     * clientId to a "zombie client id" location in LocalStorage. This can be used
     * by tabs trying to acquire the primary lease to determine that the lease
     * is no longer valid even if the timestamp is recent. This is particularly
     * important for the refresh case (so the tab correctly re-acquires the
     * primary lease). LocalStorage is used for this rather than IndexedDb because
     * it is a synchronous API and so can be used reliably from  an unload
     * handler.
     */IndexedDbPersistence.prototype.attachWindowUnloadHook=function(){var _this=this;if(typeof this.window.addEventListener==='function'){this.windowUnloadHandler=function(){// Note: In theory, this should be scheduled on the AsyncQueue since it
// accesses internal state. We execute this code directly during shutdown
// to make sure it gets a chance to run.
_this.markClientZombied();_this.queue.enqueueAndForget(function(){// Attempt graceful shutdown (including releasing our primary lease),
// but there's no guarantee it will complete.
return _this.shutdown();});};this.window.addEventListener('unload',this.windowUnloadHandler);}};IndexedDbPersistence.prototype.detachWindowUnloadHook=function(){if(this.windowUnloadHandler){assert(typeof this.window.removeEventListener==='function',"Expected 'window.removeEventListener' to be a function");this.window.removeEventListener('unload',this.windowUnloadHandler);this.windowUnloadHandler=null;}};/**
     * Returns whether a client is "zombied" based on its LocalStorage entry.
     * Clients become zombied when their tab closes without running all of the
     * cleanup logic in `shutdown()`.
     */IndexedDbPersistence.prototype.isClientZombied=function(clientId){try{var isZombied=this.webStorage.getItem(this.zombiedClientLocalStorageKey(clientId))!==null;debug(LOG_TAG$1,"Client '"+clientId+"' "+(isZombied?'is':'is not')+" zombied in LocalStorage");return isZombied;}catch(e){// Gracefully handle if LocalStorage isn't working.
error(LOG_TAG$1,'Failed to get zombied client id.',e);return false;}};/**
     * Record client as zombied (a client that had its tab closed). Zombied
     * clients are ignored during primary tab selection.
     */IndexedDbPersistence.prototype.markClientZombied=function(){try{this.webStorage.setItem(this.zombiedClientLocalStorageKey(this.clientId),String(Date.now()));}catch(e){// Gracefully handle if LocalStorage isn't available / working.
error('Failed to set zombie client id.',e);}};/** Removes the zombied client entry if it exists. */IndexedDbPersistence.prototype.removeClientZombiedEntry=function(){try{this.webStorage.removeItem(this.zombiedClientLocalStorageKey(this.clientId));}catch(e){// Ignore
}};IndexedDbPersistence.prototype.zombiedClientLocalStorageKey=function(clientId){return ZOMBIED_CLIENTS_KEY_PREFIX+"_"+this.persistenceKey+"_"+clientId;};/**
     * The name of the main (and currently only) IndexedDB database. this name is
     * appended to the prefix provided to the IndexedDbPersistence constructor.
     */IndexedDbPersistence.MAIN_DATABASE='main';return IndexedDbPersistence;}();function isPrimaryLeaseLostError(err){return err.code===Code.FAILED_PRECONDITION&&err.message===PRIMARY_LEASE_LOST_ERROR_MSG;}/**
 * Verifies the error thrown by a LocalStore operation. If a LocalStore
 * operation fails because the primary lease has been taken by another client,
 * we ignore the error (the persistence layer will immediately call
 * `applyPrimaryLease` to propagate the primary state change). All other errors
 * are re-thrown.
 *
 * @param err An error returned by a LocalStore operation.
 * @return A Promise that resolves after we recovered, or the original error.
 */function ignoreIfPrimaryLeaseLoss(err){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(isPrimaryLeaseLostError(err)){debug(LOG_TAG$1,'Unexpectedly lost primary lease');}else{throw err;}return[2/*return*/];});});}/**
 * Helper to get a typed SimpleDbStore for the primary client object store.
 */function primaryClientStore(txn){return txn.store(DbPrimaryClient.store);}/**
 * Helper to get a typed SimpleDbStore for the client metadata object store.
 */function clientMetadataStore(txn){return txn.store(DbClientMetadata.store);}/** Provides LRU functionality for IndexedDB persistence. */var IndexedDbLruDelegate=/** @class */function(){function IndexedDbLruDelegate(db,params){this.db=db;this.inMemoryPins=null;this.garbageCollector=new LruGarbageCollector(this,params);}IndexedDbLruDelegate.prototype.getSequenceNumberCount=function(txn){var docCountPromise=this.orphanedDocmentCount(txn);var targetCountPromise=this.db.getTargetCache().getTargetCount(txn);return targetCountPromise.next(function(targetCount){return docCountPromise.next(function(docCount){return targetCount+docCount;});});};IndexedDbLruDelegate.prototype.orphanedDocmentCount=function(txn){var orphanedCount=0;return this.forEachOrphanedDocumentSequenceNumber(txn,function(_){orphanedCount++;}).next(function(){return orphanedCount;});};IndexedDbLruDelegate.prototype.forEachTarget=function(txn,f){return this.db.getTargetCache().forEachTarget(txn,f);};IndexedDbLruDelegate.prototype.forEachOrphanedDocumentSequenceNumber=function(txn,f){return this.forEachOrphanedDocument(txn,function(docKey,sequenceNumber){return f(sequenceNumber);});};IndexedDbLruDelegate.prototype.setInMemoryPins=function(inMemoryPins){this.inMemoryPins=inMemoryPins;};IndexedDbLruDelegate.prototype.addReference=function(txn,key){return writeSentinelKey(txn,key);};IndexedDbLruDelegate.prototype.removeReference=function(txn,key){return writeSentinelKey(txn,key);};IndexedDbLruDelegate.prototype.removeTargets=function(txn,upperBound,activeTargetIds){return this.db.getTargetCache().removeTargets(txn,upperBound,activeTargetIds);};IndexedDbLruDelegate.prototype.removeMutationReference=function(txn,key){return writeSentinelKey(txn,key);};/**
     * Returns true if anything would prevent this document from being garbage
     * collected, given that the document in question is not present in any
     * targets and has a sequence number less than or equal to the upper bound for
     * the collection run.
     */IndexedDbLruDelegate.prototype.isPinned=function(txn,docKey){if(this.inMemoryPins.containsKey(docKey)){return PersistencePromise.resolve(true);}else{return mutationQueuesContainKey(txn,docKey);}};IndexedDbLruDelegate.prototype.removeOrphanedDocuments=function(txn,upperBound){var _this=this;var documentCache=this.db.getRemoteDocumentCache();var changeBuffer=documentCache.newChangeBuffer();var promises=[];var documentCount=0;var iteration=this.forEachOrphanedDocument(txn,function(docKey,sequenceNumber){if(sequenceNumber<=upperBound){var p=_this.isPinned(txn,docKey).next(function(isPinned){if(!isPinned){documentCount++;// Our size accounting requires us to read all documents before
// removing them.
return changeBuffer.getEntry(txn,docKey).next(function(){changeBuffer.removeEntry(docKey);return documentTargetStore(txn).delete(sentinelKey$1(docKey));});}});promises.push(p);}});return iteration.next(function(){return PersistencePromise.waitFor(promises);}).next(function(){return changeBuffer.apply(txn);}).next(function(){return documentCount;});};IndexedDbLruDelegate.prototype.removeTarget=function(txn,targetData){var updated=targetData.withSequenceNumber(txn.currentSequenceNumber);return this.db.getTargetCache().updateTargetData(txn,updated);};IndexedDbLruDelegate.prototype.updateLimboDocument=function(txn,key){return writeSentinelKey(txn,key);};/**
     * Call provided function for each document in the cache that is 'orphaned'. Orphaned
     * means not a part of any target, so the only entry in the target-document index for
     * that document will be the sentinel row (targetId 0), which will also have the sequence
     * number for the last time the document was accessed.
     */IndexedDbLruDelegate.prototype.forEachOrphanedDocument=function(txn,f){var store=documentTargetStore(txn);var nextToReport=ListenSequence.INVALID;var nextPath;return store.iterate({index:DbTargetDocument.documentTargetsIndex},function(_a,_b){var targetId=_a[0],docKey=_a[1];var path=_b.path,sequenceNumber=_b.sequenceNumber;if(targetId===0){// if nextToReport is valid, report it, this is a new key so the
// last one must not be a member of any targets.
if(nextToReport!==ListenSequence.INVALID){f(new DocumentKey(decode(nextPath)),nextToReport);}// set nextToReport to be this sequence number. It's the next one we
// might report, if we don't find any targets for this document.
// Note that the sequence number must be defined when the targetId
// is 0.
nextToReport=sequenceNumber;nextPath=path;}else{// set nextToReport to be invalid, we know we don't need to report
// this one since we found a target for it.
nextToReport=ListenSequence.INVALID;}}).next(function(){// Since we report sequence numbers after getting to the next key, we
// need to check if the last key we iterated over was an orphaned
// document and report it.
if(nextToReport!==ListenSequence.INVALID){f(new DocumentKey(decode(nextPath)),nextToReport);}});};IndexedDbLruDelegate.prototype.getCacheSize=function(txn){return this.db.getRemoteDocumentCache().getSize(txn);};return IndexedDbLruDelegate;}();function sentinelKey$1(key){return[0,encode(key.path)];}/**
 * @return A value suitable for writing a sentinel row in the target-document
 * store.
 */function sentinelRow(key,sequenceNumber){return new DbTargetDocument(0,encode(key.path),sequenceNumber);}function writeSentinelKey(txn,key){return documentTargetStore(txn).put(sentinelRow(key,txn.currentSequenceNumber));}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // Untyped Number alias we can use to check for ES6 methods / properties.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var NumberAsAny=Number;/**
 * Minimum safe integer in Javascript because of floating point precision.
 * Added to not rely on ES6 features.
 */var MIN_SAFE_INTEGER=NumberAsAny.MIN_SAFE_INTEGER||-(Math.pow(2,53)-1);/**
 * Maximum safe integer in Javascript because of floating point precision.
 * Added to not rely on ES6 features.
 */var MAX_SAFE_INTEGER=NumberAsAny.MAX_SAFE_INTEGER||Math.pow(2,53)-1;/**
 * Returns whether an number is an integer, uses native implementation if
 * available.
 * Added to not rely on ES6 features.
 * @param value The value to test for being an integer
 */var isInteger=NumberAsAny.isInteger||function(value){return typeof value==='number'&&isFinite(value)&&Math.floor(value)===value;};/**
 * Returns whether a variable is either undefined or null.
 */function isNullOrUndefined(value){return value===null||value===undefined;}/**
 * Returns whether a value is an integer and in the safe integer range
 * @param value The value to test for being an integer and in the safe range
 */function isSafeInteger(value){return isInteger(value)&&value<=MAX_SAFE_INTEGER&&value>=MIN_SAFE_INTEGER;}/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A Target represents the WatchTarget representation of a Query, which is used
 * by the LocalStore and the RemoteStore to keep track of and to execute
 * backend queries. While a Query can represent multiple Targets, each Targets
 * maps to a single WatchTarget in RemoteStore and a single TargetData entry
 * in persistence.
 */var Target=/** @class */function(){/**
     * Initializes a Target with a path and optional additional query constraints.
     * Path must currently be empty if this is a collection group query.
     *
     * NOTE: you should always construct `Target` from `Query.toTarget` instead of
     * using this constructor, because `Query` provides an implicit `orderBy`
     * property.
     */function Target(path,collectionGroup,orderBy,filters,limit,startAt,endAt){if(collectionGroup===void 0){collectionGroup=null;}if(orderBy===void 0){orderBy=[];}if(filters===void 0){filters=[];}if(limit===void 0){limit=null;}if(startAt===void 0){startAt=null;}if(endAt===void 0){endAt=null;}this.path=path;this.collectionGroup=collectionGroup;this.orderBy=orderBy;this.filters=filters;this.limit=limit;this.startAt=startAt;this.endAt=endAt;this.memoizedCanonicalId=null;}Target.prototype.canonicalId=function(){if(this.memoizedCanonicalId===null){var canonicalId=this.path.canonicalString();if(this.collectionGroup!==null){canonicalId+='|cg:'+this.collectionGroup;}canonicalId+='|f:';for(var _i=0,_a=this.filters;_i<_a.length;_i++){var filter=_a[_i];canonicalId+=filter.canonicalId();canonicalId+=',';}canonicalId+='|ob:';// TODO(dimond): make this collision resistant
for(var _b=0,_c=this.orderBy;_b<_c.length;_b++){var orderBy=_c[_b];canonicalId+=orderBy.canonicalId();canonicalId+=',';}if(!isNullOrUndefined(this.limit)){canonicalId+='|l:';canonicalId+=this.limit;}if(this.startAt){canonicalId+='|lb:';canonicalId+=this.startAt.canonicalId();}if(this.endAt){canonicalId+='|ub:';canonicalId+=this.endAt.canonicalId();}this.memoizedCanonicalId=canonicalId;}return this.memoizedCanonicalId;};Target.prototype.toString=function(){var str=this.path.canonicalString();if(this.collectionGroup!==null){str+=' collectionGroup='+this.collectionGroup;}if(this.filters.length>0){str+=", filters: ["+this.filters.join(', ')+"]";}if(!isNullOrUndefined(this.limit)){str+=', limit: '+this.limit;}if(this.orderBy.length>0){str+=", orderBy: ["+this.orderBy.join(', ')+"]";}if(this.startAt){str+=', startAt: '+this.startAt.canonicalId();}if(this.endAt){str+=', endAt: '+this.endAt.canonicalId();}return"Target("+str+")";};Target.prototype.isEqual=function(other){if(this.limit!==other.limit){return false;}if(this.orderBy.length!==other.orderBy.length){return false;}for(var i=0;i<this.orderBy.length;i++){if(!this.orderBy[i].isEqual(other.orderBy[i])){return false;}}if(this.filters.length!==other.filters.length){return false;}for(var i=0;i<this.filters.length;i++){if(!this.filters[i].isEqual(other.filters[i])){return false;}}if(this.collectionGroup!==other.collectionGroup){return false;}if(!this.path.isEqual(other.path)){return false;}if(this.startAt!==null?!this.startAt.isEqual(other.startAt):other.startAt!==null){return false;}return this.endAt!==null?this.endAt.isEqual(other.endAt):other.endAt===null;};Target.prototype.isDocumentQuery=function(){return DocumentKey.isDocumentKey(this.path)&&this.collectionGroup===null&&this.filters.length===0;};return Target;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LimitType;(function(LimitType){LimitType["First"]="F";LimitType["Last"]="L";})(LimitType||(LimitType={}));/**
 * Query encapsulates all the query attributes we support in the SDK. It can
 * be run against the LocalStore, as well as be converted to a `Target` to
 * query the RemoteStore results.
 */var Query=/** @class */function(){/**
     * Initializes a Query with a path and optional additional query constraints.
     * Path must currently be empty if this is a collection group query.
     */function Query(path,collectionGroup,explicitOrderBy,filters,limit,limitType,startAt,endAt){if(collectionGroup===void 0){collectionGroup=null;}if(explicitOrderBy===void 0){explicitOrderBy=[];}if(filters===void 0){filters=[];}if(limit===void 0){limit=null;}if(limitType===void 0){limitType=LimitType.First;}if(startAt===void 0){startAt=null;}if(endAt===void 0){endAt=null;}this.path=path;this.collectionGroup=collectionGroup;this.explicitOrderBy=explicitOrderBy;this.filters=filters;this.limit=limit;this.limitType=limitType;this.startAt=startAt;this.endAt=endAt;this.memoizedOrderBy=null;// The corresponding `Target` of this `Query` instance.
this.memoizedTarget=null;if(this.startAt){this.assertValidBound(this.startAt);}if(this.endAt){this.assertValidBound(this.endAt);}}Query.atPath=function(path){return new Query(path);};Object.defineProperty(Query.prototype,"orderBy",{get:function get(){if(this.memoizedOrderBy===null){var inequalityField=this.getInequalityFilterField();var firstOrderByField=this.getFirstOrderByField();if(inequalityField!==null&&firstOrderByField===null){// In order to implicitly add key ordering, we must also add the
// inequality filter field for it to be a valid query.
// Note that the default inequality field and key ordering is ascending.
if(inequalityField.isKeyField()){this.memoizedOrderBy=[KEY_ORDERING_ASC];}else{this.memoizedOrderBy=[new OrderBy(inequalityField),KEY_ORDERING_ASC];}}else{assert(inequalityField===null||firstOrderByField!==null&&inequalityField.isEqual(firstOrderByField),'First orderBy should match inequality field.');this.memoizedOrderBy=[];var foundKeyOrdering=false;for(var _i=0,_a=this.explicitOrderBy;_i<_a.length;_i++){var orderBy=_a[_i];this.memoizedOrderBy.push(orderBy);if(orderBy.field.isKeyField()){foundKeyOrdering=true;}}if(!foundKeyOrdering){// The order of the implicit key ordering always matches the last
// explicit order by
var lastDirection=this.explicitOrderBy.length>0?this.explicitOrderBy[this.explicitOrderBy.length-1].dir:Direction.ASCENDING;this.memoizedOrderBy.push(lastDirection===Direction.ASCENDING?KEY_ORDERING_ASC:KEY_ORDERING_DESC);}}}return this.memoizedOrderBy;},enumerable:true,configurable:true});Query.prototype.addFilter=function(filter){assert(this.getInequalityFilterField()==null||!(filter instanceof FieldFilter)||!filter.isInequality()||filter.field.isEqual(this.getInequalityFilterField()),'Query must only have one inequality field.');assert(!this.isDocumentQuery(),'No filtering allowed for document query');var newFilters=this.filters.concat([filter]);return new Query(this.path,this.collectionGroup,this.explicitOrderBy.slice(),newFilters,this.limit,this.limitType,this.startAt,this.endAt);};Query.prototype.addOrderBy=function(orderBy){assert(!this.startAt&&!this.endAt,'Bounds must be set after orderBy');// TODO(dimond): validate that orderBy does not list the same key twice.
var newOrderBy=this.explicitOrderBy.concat([orderBy]);return new Query(this.path,this.collectionGroup,newOrderBy,this.filters.slice(),this.limit,this.limitType,this.startAt,this.endAt);};Query.prototype.withLimitToFirst=function(limit){return new Query(this.path,this.collectionGroup,this.explicitOrderBy.slice(),this.filters.slice(),limit,LimitType.First,this.startAt,this.endAt);};Query.prototype.withLimitToLast=function(limit){return new Query(this.path,this.collectionGroup,this.explicitOrderBy.slice(),this.filters.slice(),limit,LimitType.Last,this.startAt,this.endAt);};Query.prototype.withStartAt=function(bound){return new Query(this.path,this.collectionGroup,this.explicitOrderBy.slice(),this.filters.slice(),this.limit,this.limitType,bound,this.endAt);};Query.prototype.withEndAt=function(bound){return new Query(this.path,this.collectionGroup,this.explicitOrderBy.slice(),this.filters.slice(),this.limit,this.limitType,this.startAt,bound);};/**
     * Helper to convert a collection group query into a collection query at a
     * specific path. This is used when executing collection group queries, since
     * we have to split the query into a set of collection queries at multiple
     * paths.
     */Query.prototype.asCollectionQueryAtPath=function(path){return new Query(path,/*collectionGroup=*/null,this.explicitOrderBy.slice(),this.filters.slice(),this.limit,this.limitType,this.startAt,this.endAt);};/**
     * Returns true if this query does not specify any query constraints that
     * could remove results.
     */Query.prototype.matchesAllDocuments=function(){return this.filters.length===0&&this.limit===null&&this.startAt==null&&this.endAt==null&&(this.explicitOrderBy.length===0||this.explicitOrderBy.length===1&&this.explicitOrderBy[0].field.isKeyField());};// TODO(b/29183165): This is used to get a unique string from a query to, for
// example, use as a dictionary key, but the implementation is subject to
// collisions. Make it collision-free.
Query.prototype.canonicalId=function(){return this.toTarget().canonicalId()+"|lt:"+this.limitType;};Query.prototype.toString=function(){return"Query(target="+this.toTarget().toString()+"; limitType="+this.limitType+")";};Query.prototype.isEqual=function(other){return this.toTarget().isEqual(other.toTarget())&&this.limitType===other.limitType;};Query.prototype.docComparator=function(d1,d2){var comparedOnKeyField=false;for(var _i=0,_a=this.orderBy;_i<_a.length;_i++){var orderBy=_a[_i];var comp=orderBy.compare(d1,d2);if(comp!==0){return comp;}comparedOnKeyField=comparedOnKeyField||orderBy.field.isKeyField();}// Assert that we actually compared by key
assert(comparedOnKeyField,"orderBy used that doesn't compare on key field");return 0;};Query.prototype.matches=function(doc){return this.matchesPathAndCollectionGroup(doc)&&this.matchesOrderBy(doc)&&this.matchesFilters(doc)&&this.matchesBounds(doc);};Query.prototype.hasLimitToFirst=function(){return!isNullOrUndefined(this.limit)&&this.limitType===LimitType.First;};Query.prototype.hasLimitToLast=function(){return!isNullOrUndefined(this.limit)&&this.limitType===LimitType.Last;};Query.prototype.getFirstOrderByField=function(){return this.explicitOrderBy.length>0?this.explicitOrderBy[0].field:null;};Query.prototype.getInequalityFilterField=function(){for(var _i=0,_a=this.filters;_i<_a.length;_i++){var filter=_a[_i];if(filter instanceof FieldFilter&&filter.isInequality()){return filter.field;}}return null;};// Checks if any of the provided Operators are included in the query and
// returns the first one that is, or null if none are.
Query.prototype.findFilterOperator=function(operators){for(var _i=0,_a=this.filters;_i<_a.length;_i++){var filter=_a[_i];if(filter instanceof FieldFilter){if(operators.indexOf(filter.op)>=0){return filter.op;}}}return null;};Query.prototype.isDocumentQuery=function(){return this.toTarget().isDocumentQuery();};Query.prototype.isCollectionGroupQuery=function(){return this.collectionGroup!==null;};/**
     * Converts this `Query` instance to it's corresponding `Target`
     * representation.
     */Query.prototype.toTarget=function(){if(!this.memoizedTarget){if(this.limitType===LimitType.First){this.memoizedTarget=new Target(this.path,this.collectionGroup,this.orderBy,this.filters,this.limit,this.startAt,this.endAt);}else{// Flip the orderBy directions since we want the last results
var orderBys=[];for(var _i=0,_a=this.orderBy;_i<_a.length;_i++){var orderBy=_a[_i];var dir=orderBy.dir===Direction.DESCENDING?Direction.ASCENDING:Direction.DESCENDING;orderBys.push(new OrderBy(orderBy.field,dir));}// We need to swap the cursors to match the now-flipped query ordering.
var startAt=this.endAt?new Bound(this.endAt.position,!this.endAt.before):null;var endAt=this.startAt?new Bound(this.startAt.position,!this.startAt.before):null;// Now return as a LimitType.First query.
this.memoizedTarget=new Target(this.path,this.collectionGroup,orderBys,this.filters,this.limit,startAt,endAt);}}return this.memoizedTarget;};Query.prototype.matchesPathAndCollectionGroup=function(doc){var docPath=doc.key.path;if(this.collectionGroup!==null){// NOTE: this.path is currently always empty since we don't expose Collection
// Group queries rooted at a document path yet.
return doc.key.hasCollectionId(this.collectionGroup)&&this.path.isPrefixOf(docPath);}else if(DocumentKey.isDocumentKey(this.path)){// exact match for document queries
return this.path.isEqual(docPath);}else{// shallow ancestor queries by default
return this.path.isImmediateParentOf(docPath);}};/**
     * A document must have a value for every ordering clause in order to show up
     * in the results.
     */Query.prototype.matchesOrderBy=function(doc){for(var _i=0,_a=this.explicitOrderBy;_i<_a.length;_i++){var orderBy=_a[_i];// order by key always matches
if(!orderBy.field.isKeyField()&&doc.field(orderBy.field)===null){return false;}}return true;};Query.prototype.matchesFilters=function(doc){for(var _i=0,_a=this.filters;_i<_a.length;_i++){var filter=_a[_i];if(!filter.matches(doc)){return false;}}return true;};/**
     * Makes sure a document is within the bounds, if provided.
     */Query.prototype.matchesBounds=function(doc){if(this.startAt&&!this.startAt.sortsBeforeDocument(this.orderBy,doc)){return false;}if(this.endAt&&this.endAt.sortsBeforeDocument(this.orderBy,doc)){return false;}return true;};Query.prototype.assertValidBound=function(bound){assert(bound.position.length<=this.orderBy.length,'Bound is longer than orderBy');};return Query;}();var Filter=/** @class */function(){function Filter(){}return Filter;}();var Operator=/** @class */function(){function Operator(name){this.name=name;}Operator.fromString=function(op){switch(op){case'<':return Operator.LESS_THAN;case'<=':return Operator.LESS_THAN_OR_EQUAL;case'==':return Operator.EQUAL;case'>=':return Operator.GREATER_THAN_OR_EQUAL;case'>':return Operator.GREATER_THAN;case'array-contains':return Operator.ARRAY_CONTAINS;case'in':return Operator.IN;case'array-contains-any':return Operator.ARRAY_CONTAINS_ANY;default:return fail('Unknown FieldFilter operator: '+op);}};Operator.prototype.toString=function(){return this.name;};Operator.prototype.isEqual=function(other){return this.name===other.name;};Operator.LESS_THAN=new Operator('<');Operator.LESS_THAN_OR_EQUAL=new Operator('<=');Operator.EQUAL=new Operator('==');Operator.GREATER_THAN=new Operator('>');Operator.GREATER_THAN_OR_EQUAL=new Operator('>=');Operator.ARRAY_CONTAINS=new Operator('array-contains');Operator.IN=new Operator('in');Operator.ARRAY_CONTAINS_ANY=new Operator('array-contains-any');return Operator;}();var FieldFilter=/** @class */function(_super){tslib.__extends(FieldFilter,_super);function FieldFilter(field,op,value){var _this=_super.call(this)||this;_this.field=field;_this.op=op;_this.value=value;return _this;}/**
     * Creates a filter based on the provided arguments.
     */FieldFilter.create=function(field,op,value){if(field.isKeyField()){if(op===Operator.IN){assert(value instanceof ArrayValue,'Comparing on key with IN, but filter value not an ArrayValue');assert(value.internalValue.every(function(elem){return elem instanceof RefValue;}),'Comparing on key with IN, but an array value was not a RefValue');return new KeyFieldInFilter(field,value);}else{assert(value instanceof RefValue,'Comparing on key, but filter value not a RefValue');assert(op!==Operator.ARRAY_CONTAINS&&op!==Operator.ARRAY_CONTAINS_ANY,"'"+op.toString()+"' queries don't make sense on document keys.");return new KeyFieldFilter(field,op,value);}}else if(value.isEqual(NullValue.INSTANCE)){if(op!==Operator.EQUAL){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. Null supports only equality comparisons.');}return new FieldFilter(field,op,value);}else if(value.isEqual(DoubleValue.NAN)){if(op!==Operator.EQUAL){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. NaN supports only equality comparisons.');}return new FieldFilter(field,op,value);}else if(op===Operator.ARRAY_CONTAINS){return new ArrayContainsFilter(field,value);}else if(op===Operator.IN){assert(value instanceof ArrayValue,'IN filter has invalid value: '+value.toString());return new InFilter(field,value);}else if(op===Operator.ARRAY_CONTAINS_ANY){assert(value instanceof ArrayValue,'ARRAY_CONTAINS_ANY filter has invalid value: '+value.toString());return new ArrayContainsAnyFilter(field,value);}else{return new FieldFilter(field,op,value);}};FieldFilter.prototype.matches=function(doc){var other=doc.field(this.field);// Only compare types with matching backend order (such as double and int).
return other!==null&&this.value.typeOrder===other.typeOrder&&this.matchesComparison(other.compareTo(this.value));};FieldFilter.prototype.matchesComparison=function(comparison){switch(this.op){case Operator.LESS_THAN:return comparison<0;case Operator.LESS_THAN_OR_EQUAL:return comparison<=0;case Operator.EQUAL:return comparison===0;case Operator.GREATER_THAN:return comparison>0;case Operator.GREATER_THAN_OR_EQUAL:return comparison>=0;default:return fail('Unknown FieldFilter operator: '+this.op);}};FieldFilter.prototype.isInequality=function(){return[Operator.LESS_THAN,Operator.LESS_THAN_OR_EQUAL,Operator.GREATER_THAN,Operator.GREATER_THAN_OR_EQUAL].indexOf(this.op)>=0;};FieldFilter.prototype.canonicalId=function(){// TODO(b/29183165): Technically, this won't be unique if two values have
// the same description, such as the int 3 and the string "3". So we should
// add the types in here somehow, too.
return this.field.canonicalString()+this.op.toString()+this.value.toString();};FieldFilter.prototype.isEqual=function(other){if(other instanceof FieldFilter){return this.op.isEqual(other.op)&&this.field.isEqual(other.field)&&this.value.isEqual(other.value);}else{return false;}};FieldFilter.prototype.toString=function(){return this.field.canonicalString()+" "+this.op+" "+this.value.value();};return FieldFilter;}(Filter);/** Filter that matches on key fields (i.e. '__name__'). */var KeyFieldFilter=/** @class */function(_super){tslib.__extends(KeyFieldFilter,_super);function KeyFieldFilter(){return _super!==null&&_super.apply(this,arguments)||this;}KeyFieldFilter.prototype.matches=function(doc){var refValue=this.value;var comparison=DocumentKey.comparator(doc.key,refValue.key);return this.matchesComparison(comparison);};return KeyFieldFilter;}(FieldFilter);/** Filter that matches on key fields within an array. */var KeyFieldInFilter=/** @class */function(_super){tslib.__extends(KeyFieldInFilter,_super);function KeyFieldInFilter(field,value){var _this=_super.call(this,field,Operator.IN,value)||this;_this.value=value;return _this;}KeyFieldInFilter.prototype.matches=function(doc){var arrayValue=this.value;return arrayValue.internalValue.some(function(refValue){return doc.key.isEqual(refValue.key);});};return KeyFieldInFilter;}(FieldFilter);/** A Filter that implements the array-contains operator. */var ArrayContainsFilter=/** @class */function(_super){tslib.__extends(ArrayContainsFilter,_super);function ArrayContainsFilter(field,value){return _super.call(this,field,Operator.ARRAY_CONTAINS,value)||this;}ArrayContainsFilter.prototype.matches=function(doc){var other=doc.field(this.field);return other instanceof ArrayValue&&other.contains(this.value);};return ArrayContainsFilter;}(FieldFilter);/** A Filter that implements the IN operator. */var InFilter=/** @class */function(_super){tslib.__extends(InFilter,_super);function InFilter(field,value){var _this=_super.call(this,field,Operator.IN,value)||this;_this.value=value;return _this;}InFilter.prototype.matches=function(doc){var arrayValue=this.value;var other=doc.field(this.field);return other!==null&&arrayValue.contains(other);};return InFilter;}(FieldFilter);/** A Filter that implements the array-contains-any operator. */var ArrayContainsAnyFilter=/** @class */function(_super){tslib.__extends(ArrayContainsAnyFilter,_super);function ArrayContainsAnyFilter(field,value){var _this=_super.call(this,field,Operator.ARRAY_CONTAINS_ANY,value)||this;_this.value=value;return _this;}ArrayContainsAnyFilter.prototype.matches=function(doc){var _this=this;var other=doc.field(this.field);return other instanceof ArrayValue&&other.internalValue.some(function(lhsElem){return _this.value.contains(lhsElem);});};return ArrayContainsAnyFilter;}(FieldFilter);/**
 * The direction of sorting in an order by.
 */var Direction=/** @class */function(){function Direction(name){this.name=name;}Direction.prototype.toString=function(){return this.name;};Direction.ASCENDING=new Direction('asc');Direction.DESCENDING=new Direction('desc');return Direction;}();/**
 * Represents a bound of a query.
 *
 * The bound is specified with the given components representing a position and
 * whether it's just before or just after the position (relative to whatever the
 * query order is).
 *
 * The position represents a logical index position for a query. It's a prefix
 * of values for the (potentially implicit) order by clauses of a query.
 *
 * Bound provides a function to determine whether a document comes before or
 * after a bound. This is influenced by whether the position is just before or
 * just after the provided values.
 */var Bound=/** @class */function(){function Bound(position,before){this.position=position;this.before=before;}Bound.prototype.canonicalId=function(){// TODO(b/29183165): Make this collision robust.
var canonicalId=this.before?'b:':'a:';for(var _i=0,_a=this.position;_i<_a.length;_i++){var component=_a[_i];canonicalId+=component.toString();}return canonicalId;};/**
     * Returns true if a document sorts before a bound using the provided sort
     * order.
     */Bound.prototype.sortsBeforeDocument=function(orderBy,doc){assert(this.position.length<=orderBy.length,"Bound has more components than query's orderBy");var comparison=0;for(var i=0;i<this.position.length;i++){var orderByComponent=orderBy[i];var component=this.position[i];if(orderByComponent.field.isKeyField()){assert(component instanceof RefValue,'Bound has a non-key value where the key path is being used.');comparison=DocumentKey.comparator(component.key,doc.key);}else{var docValue=doc.field(orderByComponent.field);assert(docValue!==null,'Field should exist since document matched the orderBy already.');comparison=component.compareTo(docValue);}if(orderByComponent.dir===Direction.DESCENDING){comparison=comparison*-1;}if(comparison!==0){break;}}return this.before?comparison<=0:comparison<0;};Bound.prototype.isEqual=function(other){if(other===null){return false;}if(this.before!==other.before||this.position.length!==other.position.length){return false;}for(var i=0;i<this.position.length;i++){var thisPosition=this.position[i];var otherPosition=other.position[i];if(!thisPosition.isEqual(otherPosition)){return false;}}return true;};return Bound;}();/**
 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
 */var OrderBy=/** @class */function(){function OrderBy(field,dir){this.field=field;if(dir===undefined){dir=Direction.ASCENDING;}this.dir=dir;this.isKeyOrderBy=field.isKeyField();}OrderBy.prototype.compare=function(d1,d2){var comparison=this.isKeyOrderBy?Document.compareByKey(d1,d2):Document.compareByField(this.field,d1,d2);switch(this.dir){case Direction.ASCENDING:return comparison;case Direction.DESCENDING:return-1*comparison;default:return fail('Unknown direction: '+this.dir);}};OrderBy.prototype.canonicalId=function(){// TODO(b/29183165): Make this collision robust.
return this.field.canonicalString()+this.dir.toString();};OrderBy.prototype.toString=function(){return this.field.canonicalString()+" ("+this.dir+")";};OrderBy.prototype.isEqual=function(other){return this.dir===other.dir&&this.field.isEqual(other.field);};return OrderBy;}();var KEY_ORDERING_ASC=new OrderBy(FieldPath.keyField(),Direction.ASCENDING);var KEY_ORDERING_DESC=new OrderBy(FieldPath.keyField(),Direction.DESCENDING);/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // TOOD(b/140938512): Drop SimpleQueryEngine and rename IndexFreeQueryEngine.
/**
 * A query engine that takes advantage of the target document mapping in the
 * QueryCache. The IndexFreeQueryEngine optimizes query execution by only
 * reading the documents that previously matched a query plus any documents that were
 * edited after the query was last listened to.
 *
 * There are some cases where Index-Free queries are not guaranteed to produce
 * the same results as full collection scans. In these cases, the
 * IndexFreeQueryEngine falls back to full query processing. These cases are:
 *
 * - Limit queries where a document that matched the query previously no longer
 *   matches the query.
 *
 * - Limit queries where a document edit may cause the document to sort below
 *   another document that is in the local cache.
 *
 * - Queries that have never been CURRENT or free of Limbo documents.
 */var IndexFreeQueryEngine=/** @class */function(){function IndexFreeQueryEngine(){}IndexFreeQueryEngine.prototype.setLocalDocumentsView=function(localDocuments){this.localDocumentsView=localDocuments;};IndexFreeQueryEngine.prototype.getDocumentsMatchingQuery=function(transaction,query,lastLimboFreeSnapshotVersion,remoteKeys){var _this=this;assert(this.localDocumentsView!==undefined,'setLocalDocumentsView() not called');// Queries that match all documents don't benefit from using
// IndexFreeQueries. It is more efficient to scan all documents in a
// collection, rather than to perform individual lookups.
if(query.matchesAllDocuments()){return this.executeFullCollectionScan(transaction,query);}// Queries that have never seen a snapshot without limbo free documents
// should also be run as a full collection scan.
if(lastLimboFreeSnapshotVersion.isEqual(SnapshotVersion.MIN)){return this.executeFullCollectionScan(transaction,query);}return this.localDocumentsView.getDocuments(transaction,remoteKeys).next(function(documents){var previousResults=_this.applyQuery(query,documents);if((query.hasLimitToFirst()||query.hasLimitToLast())&&_this.needsRefill(query.limitType,previousResults,remoteKeys,lastLimboFreeSnapshotVersion)){return _this.executeFullCollectionScan(transaction,query);}if(getLogLevel()<=LogLevel.DEBUG){debug('IndexFreeQueryEngine','Re-using previous result from %s to execute query: %s',lastLimboFreeSnapshotVersion.toString(),query.toString());}// Retrieve all results for documents that were updated since the last
// limbo-document free remote snapshot.
return _this.localDocumentsView.getDocumentsMatchingQuery(transaction,query,lastLimboFreeSnapshotVersion).next(function(updatedResults){// We merge `previousResults` into `updateResults`, since
// `updateResults` is already a DocumentMap. If a document is
// contained in both lists, then its contents are the same.
previousResults.forEach(function(doc){updatedResults=updatedResults.insert(doc.key,doc);});return updatedResults;});});};/** Applies the query filter and sorting to the provided documents.  */IndexFreeQueryEngine.prototype.applyQuery=function(query,documents){// Sort the documents and re-apply the query filter since previously
// matching documents do not necessarily still match the query.
var queryResults=new SortedSet(function(d1,d2){return query.docComparator(d1,d2);});documents.forEach(function(_,maybeDoc){if(maybeDoc instanceof Document&&query.matches(maybeDoc)){queryResults=queryResults.add(maybeDoc);}});return queryResults;};/**
     * Determines if a limit query needs to be refilled from cache, making it
     * ineligible for index-free execution.
     *
     * @param sortedPreviousResults The documents that matched the query when it
     * was last synchronized, sorted by the query's comparator.
     * @param remoteKeys The document keys that matched the query at the last
     * snapshot.
     * @param limboFreeSnapshotVersion The version of the snapshot when the query
     * was last synchronized.
     */IndexFreeQueryEngine.prototype.needsRefill=function(limitType,sortedPreviousResults,remoteKeys,limboFreeSnapshotVersion){// The query needs to be refilled if a previously matching document no
// longer matches.
if(remoteKeys.size!==sortedPreviousResults.size){return true;}// Limit queries are not eligible for index-free query execution if there is
// a potential that an older document from cache now sorts before a document
// that was previously part of the limit. This, however, can only happen if
// the document at the edge of the limit goes out of limit.
// If a document that is not the limit boundary sorts differently,
// the boundary of the limit itself did not change and documents from cache
// will continue to be "rejected" by this boundary. Therefore, we can ignore
// any modifications that don't affect the last document.
var docAtLimitEdge=limitType===LimitType.First?sortedPreviousResults.last():sortedPreviousResults.first();if(!docAtLimitEdge){// We don't need to refill the query if there were already no documents.
return false;}return docAtLimitEdge.hasPendingWrites||docAtLimitEdge.version.compareTo(limboFreeSnapshotVersion)>0;};IndexFreeQueryEngine.prototype.executeFullCollectionScan=function(transaction,query){if(getLogLevel()<=LogLevel.DEBUG){debug('IndexFreeQueryEngine','Using full collection scan to execute query: %s',query.toString());}return this.localDocumentsView.getDocumentsMatchingQuery(transaction,query,SnapshotVersion.MIN);};return IndexFreeQueryEngine;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A readonly view of the local state of all documents we're tracking (i.e. we
 * have a cached version in remoteDocumentCache or local mutations for the
 * document). The view is computed by applying the mutations in the
 * MutationQueue to the RemoteDocumentCache.
 */var LocalDocumentsView=/** @class */function(){function LocalDocumentsView(remoteDocumentCache,mutationQueue,indexManager){this.remoteDocumentCache=remoteDocumentCache;this.mutationQueue=mutationQueue;this.indexManager=indexManager;}/**
     * Get the local view of the document identified by `key`.
     *
     * @return Local view of the document or null if we don't have any cached
     * state for it.
     */LocalDocumentsView.prototype.getDocument=function(transaction,key){var _this=this;return this.mutationQueue.getAllMutationBatchesAffectingDocumentKey(transaction,key).next(function(batches){return _this.getDocumentInternal(transaction,key,batches);});};/** Internal version of `getDocument` that allows reusing batches. */LocalDocumentsView.prototype.getDocumentInternal=function(transaction,key,inBatches){return this.remoteDocumentCache.getEntry(transaction,key).next(function(doc){for(var _i=0,inBatches_1=inBatches;_i<inBatches_1.length;_i++){var batch=inBatches_1[_i];doc=batch.applyToLocalView(key,doc);}return doc;});};// Returns the view of the given `docs` as they would appear after applying
// all mutations in the given `batches`.
LocalDocumentsView.prototype.applyLocalMutationsToDocuments=function(transaction,docs,batches){var results=nullableMaybeDocumentMap();docs.forEach(function(key,localView){for(var _i=0,batches_1=batches;_i<batches_1.length;_i++){var batch=batches_1[_i];localView=batch.applyToLocalView(key,localView);}results=results.insert(key,localView);});return results;};/**
     * Gets the local view of the documents identified by `keys`.
     *
     * If we don't have cached state for a document in `keys`, a NoDocument will
     * be stored for that key in the resulting set.
     */LocalDocumentsView.prototype.getDocuments=function(transaction,keys){var _this=this;return this.remoteDocumentCache.getEntries(transaction,keys).next(function(docs){return _this.getLocalViewOfDocuments(transaction,docs);});};/**
     * Similar to `getDocuments`, but creates the local view from the given
     * `baseDocs` without retrieving documents from the local store.
     */LocalDocumentsView.prototype.getLocalViewOfDocuments=function(transaction,baseDocs){var _this=this;return this.mutationQueue.getAllMutationBatchesAffectingDocumentKeys(transaction,baseDocs).next(function(batches){var docs=_this.applyLocalMutationsToDocuments(transaction,baseDocs,batches);var results=maybeDocumentMap();docs.forEach(function(key,maybeDoc){// TODO(http://b/32275378): Don't conflate missing / deleted.
if(!maybeDoc){maybeDoc=new NoDocument(key,SnapshotVersion.forDeletedDoc());}results=results.insert(key,maybeDoc);});return results;});};/**
     * Performs a query against the local view of all documents.
     *
     * @param transaction The persistence transaction.
     * @param query The query to match documents against.
     * @param sinceReadTime If not set to SnapshotVersion.MIN, return only
     *     documents that have been read since this snapshot version (exclusive).
     */LocalDocumentsView.prototype.getDocumentsMatchingQuery=function(transaction,query,sinceReadTime){if(query.isDocumentQuery()){return this.getDocumentsMatchingDocumentQuery(transaction,query.path);}else if(query.isCollectionGroupQuery()){return this.getDocumentsMatchingCollectionGroupQuery(transaction,query,sinceReadTime);}else{return this.getDocumentsMatchingCollectionQuery(transaction,query,sinceReadTime);}};LocalDocumentsView.prototype.getDocumentsMatchingDocumentQuery=function(transaction,docPath){// Just do a simple document lookup.
return this.getDocument(transaction,new DocumentKey(docPath)).next(function(maybeDoc){var result=documentMap();if(maybeDoc instanceof Document){result=result.insert(maybeDoc.key,maybeDoc);}return result;});};LocalDocumentsView.prototype.getDocumentsMatchingCollectionGroupQuery=function(transaction,query,sinceReadTime){var _this=this;assert(query.path.isEmpty(),'Currently we only support collection group queries at the root.');var collectionId=query.collectionGroup;var results=documentMap();return this.indexManager.getCollectionParents(transaction,collectionId).next(function(parents){// Perform a collection query against each parent that contains the
// collectionId and aggregate the results.
return PersistencePromise.forEach(parents,function(parent){var collectionQuery=query.asCollectionQueryAtPath(parent.child(collectionId));return _this.getDocumentsMatchingCollectionQuery(transaction,collectionQuery,sinceReadTime).next(function(r){r.forEach(function(key,doc){results=results.insert(key,doc);});});}).next(function(){return results;});});};LocalDocumentsView.prototype.getDocumentsMatchingCollectionQuery=function(transaction,query,sinceReadTime){var _this=this;// Query the remote documents and overlay mutations.
var results;var mutationBatches;return this.remoteDocumentCache.getDocumentsMatchingQuery(transaction,query,sinceReadTime).next(function(queryResults){results=queryResults;return _this.mutationQueue.getAllMutationBatchesAffectingQuery(transaction,query);}).next(function(matchingMutationBatches){mutationBatches=matchingMutationBatches;// It is possible that a PatchMutation can make a document match a query, even if
// the version in the RemoteDocumentCache is not a match yet (waiting for server
// to ack). To handle this, we find all document keys affected by the PatchMutations
// that are not in `result` yet, and back fill them via `remoteDocumentCache.getEntries`,
// otherwise those `PatchMutations` will be ignored because no base document can be found,
// and lead to missing result for the query.
return _this.addMissingBaseDocuments(transaction,mutationBatches,results).next(function(mergedDocuments){results=mergedDocuments;for(var _i=0,mutationBatches_1=mutationBatches;_i<mutationBatches_1.length;_i++){var batch=mutationBatches_1[_i];for(var _a=0,_b=batch.mutations;_a<_b.length;_a++){var mutation=_b[_a];var key=mutation.key;var baseDoc=results.get(key);var mutatedDoc=mutation.applyToLocalView(baseDoc,baseDoc,batch.localWriteTime);if(mutatedDoc instanceof Document){results=results.insert(key,mutatedDoc);}else{results=results.remove(key);}}}});}).next(function(){// Finally, filter out any documents that don't actually match
// the query.
results.forEach(function(key,doc){if(!query.matches(doc)){results=results.remove(key);}});return results;});};LocalDocumentsView.prototype.addMissingBaseDocuments=function(transaction,matchingMutationBatches,existingDocuments){var missingBaseDocEntriesForPatching=documentKeySet();for(var _i=0,matchingMutationBatches_1=matchingMutationBatches;_i<matchingMutationBatches_1.length;_i++){var batch=matchingMutationBatches_1[_i];for(var _a=0,_b=batch.mutations;_a<_b.length;_a++){var mutation=_b[_a];if(mutation instanceof PatchMutation&&existingDocuments.get(mutation.key)===null){missingBaseDocEntriesForPatching=missingBaseDocEntriesForPatching.add(mutation.key);}}}var mergedDocuments=existingDocuments;return this.remoteDocumentCache.getEntries(transaction,missingBaseDocEntriesForPatching).next(function(missingBaseDocs){missingBaseDocs.forEach(function(key,doc){if(doc!==null&&doc instanceof Document){mergedDocuments=mergedDocuments.insert(key,doc);}});return mergedDocuments;});};return LocalDocumentsView;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A collection of references to a document from some kind of numbered entity
 * (either a target ID or batch ID). As references are added to or removed from
 * the set corresponding events are emitted to a registered garbage collector.
 *
 * Each reference is represented by a DocumentReference object. Each of them
 * contains enough information to uniquely identify the reference. They are all
 * stored primarily in a set sorted by key. A document is considered garbage if
 * there's no references in that set (this can be efficiently checked thanks to
 * sorting by key).
 *
 * ReferenceSet also keeps a secondary set that contains references sorted by
 * IDs. This one is used to efficiently implement removal of all references by
 * some target ID.
 */var ReferenceSet=/** @class */function(){function ReferenceSet(){// A set of outstanding references to a document sorted by key.
this.refsByKey=new SortedSet(DocReference.compareByKey);// A set of outstanding references to a document sorted by target id.
this.refsByTarget=new SortedSet(DocReference.compareByTargetId);}/** Returns true if the reference set contains no references. */ReferenceSet.prototype.isEmpty=function(){return this.refsByKey.isEmpty();};/** Adds a reference to the given document key for the given ID. */ReferenceSet.prototype.addReference=function(key,id){var ref=new DocReference(key,id);this.refsByKey=this.refsByKey.add(ref);this.refsByTarget=this.refsByTarget.add(ref);};/** Add references to the given document keys for the given ID. */ReferenceSet.prototype.addReferences=function(keys,id){var _this=this;keys.forEach(function(key){return _this.addReference(key,id);});};/**
     * Removes a reference to the given document key for the given
     * ID.
     */ReferenceSet.prototype.removeReference=function(key,id){this.removeRef(new DocReference(key,id));};ReferenceSet.prototype.removeReferences=function(keys,id){var _this=this;keys.forEach(function(key){return _this.removeReference(key,id);});};/**
     * Clears all references with a given ID. Calls removeRef() for each key
     * removed.
     */ReferenceSet.prototype.removeReferencesForId=function(id){var _this=this;var emptyKey=DocumentKey.EMPTY;var startRef=new DocReference(emptyKey,id);var endRef=new DocReference(emptyKey,id+1);var keys=[];this.refsByTarget.forEachInRange([startRef,endRef],function(ref){_this.removeRef(ref);keys.push(ref.key);});return keys;};ReferenceSet.prototype.removeAllReferences=function(){var _this=this;this.refsByKey.forEach(function(ref){return _this.removeRef(ref);});};ReferenceSet.prototype.removeRef=function(ref){this.refsByKey=this.refsByKey.delete(ref);this.refsByTarget=this.refsByTarget.delete(ref);};ReferenceSet.prototype.referencesForId=function(id){var emptyKey=DocumentKey.EMPTY;var startRef=new DocReference(emptyKey,id);var endRef=new DocReference(emptyKey,id+1);var keys=documentKeySet();this.refsByTarget.forEachInRange([startRef,endRef],function(ref){keys=keys.add(ref.key);});return keys;};ReferenceSet.prototype.containsKey=function(key){var ref=new DocReference(key,0);var firstRef=this.refsByKey.firstAfterOrEqual(ref);return firstRef!==null&&key.isEqual(firstRef.key);};return ReferenceSet;}();var DocReference=/** @class */function(){function DocReference(key,targetOrBatchId){this.key=key;this.targetOrBatchId=targetOrBatchId;}/** Compare by key then by ID */DocReference.compareByKey=function(left,right){return DocumentKey.comparator(left.key,right.key)||primitiveComparator(left.targetOrBatchId,right.targetOrBatchId);};/** Compare by ID then by key */DocReference.compareByTargetId=function(left,right){return primitiveComparator(left.targetOrBatchId,right.targetOrBatchId)||DocumentKey.comparator(left.key,right.key);};return DocReference;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$2='LocalStore';/**
 * Local storage in the Firestore client. Coordinates persistence components
 * like the mutation queue and remote document cache to present a
 * latency-compensated view of stored data.
 *
 * The LocalStore is responsible for accepting mutations from the Sync Engine.
 * Writes from the client are put into a queue as provisional Mutations until
 * they are processed by the RemoteStore and confirmed as having been written
 * to the server.
 *
 * The local store provides the local version of documents that have been
 * modified locally. It maintains the constraint:
 *
 *   LocalDocument = RemoteDocument + Active(LocalMutations)
 *
 * (Active mutations are those that are enqueued and have not been previously
 * acknowledged or rejected).
 *
 * The RemoteDocument ("ground truth") state is provided via the
 * applyChangeBatch method. It will be some version of a server-provided
 * document OR will be a server-provided document PLUS acknowledged mutations:
 *
 *   RemoteDocument' = RemoteDocument + Acknowledged(LocalMutations)
 *
 * Note that this "dirty" version of a RemoteDocument will not be identical to a
 * server base version, since it has LocalMutations added to it pending getting
 * an authoritative copy from the server.
 *
 * Since LocalMutations can be rejected by the server, we have to be able to
 * revert a LocalMutation that has already been applied to the LocalDocument
 * (typically done by replaying all remaining LocalMutations to the
 * RemoteDocument to re-apply).
 *
 * The LocalStore is responsible for the garbage collection of the documents it
 * contains. For now, it every doc referenced by a view, the mutation queue, or
 * the RemoteStore.
 *
 * It also maintains the persistence of mapping queries to resume tokens and
 * target ids. It needs to know this data about queries to properly know what
 * docs it would be allowed to garbage collect.
 *
 * The LocalStore must be able to efficiently execute queries against its local
 * cache of the documents, to provide the initial set of results before any
 * remote changes have been received.
 *
 * Note: In TypeScript, most methods return Promises since the implementation
 * may rely on fetching data from IndexedDB which is async.
 * These Promises will only be rejected on an I/O error or other internal
 * (unexpected) failure (e.g. failed assert) and always represent an
 * unrecoverable error (should be caught / reported by the async_queue).
 */var LocalStore=/** @class */function(){function LocalStore(/** Manages our in-memory or durable persistence. */persistence,queryEngine,initialUser){this.persistence=persistence;this.queryEngine=queryEngine;/**
         * The set of document references maintained by any local views.
         */this.localViewReferences=new ReferenceSet();/**
         * Maps a targetID to data about its target.
         *
         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
         * of `applyRemoteEvent()` idempotent.
         */this.targetDataByTarget=new SortedMap(primitiveComparator);/** Maps a target to its targetID. */ // TODO(wuandy): Evaluate if TargetId can be part of Target.
this.targetIdByTarget=new ObjectMap(function(t){return t.canonicalId();});/**
         * The read time of the last entry processed by `getNewDocumentChanges()`.
         *
         * PORTING NOTE: This is only used for multi-tab synchronization.
         */this.lastDocumentChangeReadTime=SnapshotVersion.MIN;assert(persistence.started,'LocalStore was passed an unstarted persistence implementation');this.persistence.referenceDelegate.setInMemoryPins(this.localViewReferences);this.mutationQueue=persistence.getMutationQueue(initialUser);this.remoteDocuments=persistence.getRemoteDocumentCache();this.targetCache=persistence.getTargetCache();this.localDocuments=new LocalDocumentsView(this.remoteDocuments,this.mutationQueue,this.persistence.getIndexManager());this.queryEngine.setLocalDocumentsView(this.localDocuments);}/** Starts the LocalStore. */LocalStore.prototype.start=function(){return this.synchronizeLastDocumentChangeReadTime();};/**
     * Tells the LocalStore that the currently authenticated user has changed.
     *
     * In response the local store switches the mutation queue to the new user and
     * returns any resulting document changes.
     */ // PORTING NOTE: Android and iOS only return the documents affected by the
// change.
LocalStore.prototype.handleUserChange=function(user){return tslib.__awaiter(this,void 0,void 0,function(){var newMutationQueue,newLocalDocuments,result;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:newMutationQueue=this.mutationQueue;newLocalDocuments=this.localDocuments;return[4/*yield*/,this.persistence.runTransaction('Handle user change','readonly-idempotent',function(txn){// Swap out the mutation queue, grabbing the pending mutation batches
// before and after.
var oldBatches;return _this.mutationQueue.getAllMutationBatches(txn).next(function(promisedOldBatches){oldBatches=promisedOldBatches;newMutationQueue=_this.persistence.getMutationQueue(user);// Recreate our LocalDocumentsView using the new
// MutationQueue.
newLocalDocuments=new LocalDocumentsView(_this.remoteDocuments,newMutationQueue,_this.persistence.getIndexManager());return newMutationQueue.getAllMutationBatches(txn);}).next(function(newBatches){var removedBatchIds=[];var addedBatchIds=[];// Union the old/new changed keys.
var changedKeys=documentKeySet();for(var _i=0,oldBatches_1=oldBatches;_i<oldBatches_1.length;_i++){var batch=oldBatches_1[_i];removedBatchIds.push(batch.batchId);for(var _a=0,_b=batch.mutations;_a<_b.length;_a++){var mutation=_b[_a];changedKeys=changedKeys.add(mutation.key);}}for(var _c=0,newBatches_1=newBatches;_c<newBatches_1.length;_c++){var batch=newBatches_1[_c];addedBatchIds.push(batch.batchId);for(var _d=0,_e=batch.mutations;_d<_e.length;_d++){var mutation=_e[_d];changedKeys=changedKeys.add(mutation.key);}}// Return the set of all (potentially) changed documents and the list
// of mutation batch IDs that were affected by change.
return newLocalDocuments.getDocuments(txn,changedKeys).next(function(affectedDocuments){return{affectedDocuments:affectedDocuments,removedBatchIds:removedBatchIds,addedBatchIds:addedBatchIds};});});})];case 1:result=_a.sent();this.mutationQueue=newMutationQueue;this.localDocuments=newLocalDocuments;this.queryEngine.setLocalDocumentsView(this.localDocuments);return[2/*return*/,result];}});});};/* Accept locally generated Mutations and commit them to storage. */LocalStore.prototype.localWrite=function(mutations){var _this=this;var localWriteTime=Timestamp.now();var keys=mutations.reduce(function(keys,m){return keys.add(m.key);},documentKeySet());var existingDocs;return this.persistence.runTransaction('Locally write mutations','readwrite-idempotent',function(txn){// Load and apply all existing mutations. This lets us compute the
// current base state for all non-idempotent transforms before applying
// any additional user-provided writes.
return _this.localDocuments.getDocuments(txn,keys).next(function(docs){existingDocs=docs;// For non-idempotent mutations (such as `FieldValue.increment()`),
// we record the base state in a separate patch mutation. This is
// later used to guarantee consistent values and prevents flicker
// even if the backend sends us an update that already includes our
// transform.
var baseMutations=[];for(var _i=0,mutations_1=mutations;_i<mutations_1.length;_i++){var mutation=mutations_1[_i];var baseValue=mutation.extractBaseValue(existingDocs.get(mutation.key));if(baseValue!=null){// NOTE: The base state should only be applied if there's some
// existing document to override, so use a Precondition of
// exists=true
baseMutations.push(new PatchMutation(mutation.key,baseValue,baseValue.fieldMask(),Precondition.exists(true)));}}return _this.mutationQueue.addMutationBatch(txn,localWriteTime,baseMutations,mutations);});}).then(function(batch){var changes=batch.applyToLocalDocumentSet(existingDocs);return{batchId:batch.batchId,changes:changes};});};/** Returns the local view of the documents affected by a mutation batch. */ // PORTING NOTE: Multi-tab only.
LocalStore.prototype.lookupMutationDocuments=function(batchId){var _this=this;return this.persistence.runTransaction('Lookup mutation documents','readonly-idempotent',function(txn){return _this.mutationQueue.lookupMutationKeys(txn,batchId).next(function(keys){if(keys){return _this.localDocuments.getDocuments(txn,keys);}else{return PersistencePromise.resolve(null);}});});};/**
     * Acknowledge the given batch.
     *
     * On the happy path when a batch is acknowledged, the local store will
     *
     *  + remove the batch from the mutation queue;
     *  + apply the changes to the remote document cache;
     *  + recalculate the latency compensated view implied by those changes (there
     *    may be mutations in the queue that affect the documents but haven't been
     *    acknowledged yet); and
     *  + give the changed documents back the sync engine
     *
     * @returns The resulting (modified) documents.
     */LocalStore.prototype.acknowledgeBatch=function(batchResult){var _this=this;return this.persistence.runTransaction('Acknowledge batch','readwrite-primary-idempotent',function(txn){var affected=batchResult.batch.keys();var documentBuffer=_this.remoteDocuments.newChangeBuffer({trackRemovals:true// Make sure document removals show up in `getNewDocumentChanges()`
});return _this.mutationQueue.acknowledgeBatch(txn,batchResult.batch,batchResult.streamToken).next(function(){return _this.applyWriteToRemoteDocuments(txn,batchResult,documentBuffer);}).next(function(){return documentBuffer.apply(txn);}).next(function(){return _this.mutationQueue.performConsistencyCheck(txn);}).next(function(){return _this.localDocuments.getDocuments(txn,affected);});});};/**
     * Remove mutations from the MutationQueue for the specified batch;
     * LocalDocuments will be recalculated.
     *
     * @returns The resulting modified documents.
     */LocalStore.prototype.rejectBatch=function(batchId){var _this=this;return this.persistence.runTransaction('Reject batch','readwrite-primary-idempotent',function(txn){var affectedKeys;return _this.mutationQueue.lookupMutationBatch(txn,batchId).next(function(batch){assert(batch!==null,'Attempt to reject nonexistent batch!');affectedKeys=batch.keys();return _this.mutationQueue.removeMutationBatch(txn,batch);}).next(function(){return _this.mutationQueue.performConsistencyCheck(txn);}).next(function(){return _this.localDocuments.getDocuments(txn,affectedKeys);});});};/**
     * Returns the largest (latest) batch id in mutation queue that is pending server response.
     * Returns `BATCHID_UNKNOWN` if the queue is empty.
     */LocalStore.prototype.getHighestUnacknowledgedBatchId=function(){var _this=this;return this.persistence.runTransaction('Get highest unacknowledged batch id','readonly-idempotent',function(txn){return _this.mutationQueue.getHighestUnacknowledgedBatchId(txn);});};/** Returns the last recorded stream token for the current user. */LocalStore.prototype.getLastStreamToken=function(){var _this=this;return this.persistence.runTransaction('Get last stream token','readonly-idempotent',function(txn){return _this.mutationQueue.getLastStreamToken(txn);});};/**
     * Sets the stream token for the current user without acknowledging any
     * mutation batch. This is usually only useful after a stream handshake or in
     * response to an error that requires clearing the stream token.
     */LocalStore.prototype.setLastStreamToken=function(streamToken){var _this=this;return this.persistence.runTransaction('Set last stream token','readwrite-primary-idempotent',function(txn){return _this.mutationQueue.setLastStreamToken(txn,streamToken);});};/**
     * Returns the last consistent snapshot processed (used by the RemoteStore to
     * determine whether to buffer incoming snapshots from the backend).
     */LocalStore.prototype.getLastRemoteSnapshotVersion=function(){var _this=this;return this.persistence.runTransaction('Get last remote snapshot version','readonly-idempotent',function(txn){return _this.targetCache.getLastRemoteSnapshotVersion(txn);});};/**
     * Update the "ground-state" (remote) documents. We assume that the remote
     * event reflects any write batches that have been acknowledged or rejected
     * (i.e. we do not re-apply local mutations to updates from this event).
     *
     * LocalDocuments are re-calculated if there are remaining mutations in the
     * queue.
     */LocalStore.prototype.applyRemoteEvent=function(remoteEvent){var _this=this;var remoteVersion=remoteEvent.snapshotVersion;var newTargetDataByTargetMap=this.targetDataByTarget;return this.persistence.runTransaction('Apply remote event','readwrite-primary-idempotent',function(txn){var documentBuffer=_this.remoteDocuments.newChangeBuffer({trackRemovals:true// Make sure document removals show up in `getNewDocumentChanges()`
});// Reset newTargetDataByTargetMap in case this transaction gets re-run.
newTargetDataByTargetMap=_this.targetDataByTarget;var promises=[];forEachNumber(remoteEvent.targetChanges,function(targetId,change){var oldTargetData=newTargetDataByTargetMap.get(targetId);if(!oldTargetData){return;}// Only update the remote keys if the target is still active. This
// ensures that we can persist the updated target data along with
// the updated assignment.
promises.push(_this.targetCache.removeMatchingKeys(txn,change.removedDocuments,targetId).next(function(){return _this.targetCache.addMatchingKeys(txn,change.addedDocuments,targetId);}));var resumeToken=change.resumeToken;// Update the resume token if the change includes one.
if(resumeToken.length>0){var newTargetData=oldTargetData.withResumeToken(resumeToken,remoteVersion).withSequenceNumber(txn.currentSequenceNumber);newTargetDataByTargetMap=newTargetDataByTargetMap.insert(targetId,newTargetData);// Update the target data if there are target changes (or if
// sufficient time has passed since the last update).
if(LocalStore.shouldPersistTargetData(oldTargetData,newTargetData,change)){promises.push(_this.targetCache.updateTargetData(txn,newTargetData));}}});var changedDocs=maybeDocumentMap();var updatedKeys=documentKeySet();remoteEvent.documentUpdates.forEach(function(key,doc){updatedKeys=updatedKeys.add(key);});// Each loop iteration only affects its "own" doc, so it's safe to get all the remote
// documents in advance in a single call.
promises.push(documentBuffer.getEntries(txn,updatedKeys).next(function(existingDocs){remoteEvent.documentUpdates.forEach(function(key,doc){var existingDoc=existingDocs.get(key);// Note: The order of the steps below is important, since we want
// to ensure that rejected limbo resolutions (which fabricate
// NoDocuments with SnapshotVersion.MIN) never add documents to
// cache.
if(doc instanceof NoDocument&&doc.version.isEqual(SnapshotVersion.MIN)){// NoDocuments with SnapshotVersion.MIN are used in manufactured
// events. We remove these documents from cache since we lost
// access.
documentBuffer.removeEntry(key,remoteVersion);changedDocs=changedDocs.insert(key,doc);}else if(existingDoc==null||doc.version.compareTo(existingDoc.version)>0||doc.version.compareTo(existingDoc.version)===0&&existingDoc.hasPendingWrites){assert(!SnapshotVersion.MIN.isEqual(remoteVersion),'Cannot add a document when the remote version is zero');documentBuffer.addEntry(doc,remoteVersion);changedDocs=changedDocs.insert(key,doc);}else{debug(LOG_TAG$2,'Ignoring outdated watch update for ',key,'. Current version:',existingDoc.version,' Watch version:',doc.version);}if(remoteEvent.resolvedLimboDocuments.has(key)){promises.push(_this.persistence.referenceDelegate.updateLimboDocument(txn,key));}});}));// HACK: The only reason we allow a null snapshot version is so that we
// can synthesize remote events when we get permission denied errors while
// trying to resolve the state of a locally cached document that is in
// limbo.
if(!remoteVersion.isEqual(SnapshotVersion.MIN)){var updateRemoteVersion=_this.targetCache.getLastRemoteSnapshotVersion(txn).next(function(lastRemoteSnapshotVersion){assert(remoteVersion.compareTo(lastRemoteSnapshotVersion)>=0,'Watch stream reverted to previous snapshot?? '+remoteVersion+' < '+lastRemoteSnapshotVersion);return _this.targetCache.setTargetsMetadata(txn,txn.currentSequenceNumber,remoteVersion);});promises.push(updateRemoteVersion);}return PersistencePromise.waitFor(promises).next(function(){return documentBuffer.apply(txn);}).next(function(){return _this.localDocuments.getLocalViewOfDocuments(txn,changedDocs);});}).then(function(changedDocs){_this.targetDataByTarget=newTargetDataByTargetMap;return changedDocs;});};/**
     * Returns true if the newTargetData should be persisted during an update of
     * an active target. TargetData should always be persisted when a target is
     * being released and should not call this function.
     *
     * While the target is active, TargetData updates can be omitted when nothing
     * about the target has changed except metadata like the resume token or
     * snapshot version. Occasionally it's worth the extra write to prevent these
     * values from getting too stale after a crash, but this doesn't have to be
     * too frequent.
     */LocalStore.shouldPersistTargetData=function(oldTargetData,newTargetData,change){assert(newTargetData.resumeToken.length>0,'Attempted to persist target data with no resume token');// Always persist target data if we don't already have a resume token.
if(oldTargetData.resumeToken.length===0){return true;}// Don't allow resume token changes to be buffered indefinitely. This
// allows us to be reasonably up-to-date after a crash and avoids needing
// to loop over all active queries on shutdown. Especially in the browser
// we may not get time to do anything interesting while the current tab is
// closing.
var timeDelta=newTargetData.snapshotVersion.toMicroseconds()-oldTargetData.snapshotVersion.toMicroseconds();if(timeDelta>=this.RESUME_TOKEN_MAX_AGE_MICROS){return true;}// Otherwise if the only thing that has changed about a target is its resume
// token it's not worth persisting. Note that the RemoteStore keeps an
// in-memory view of the currently active targets which includes the current
// resume token, so stream failure or user changes will still use an
// up-to-date resume token regardless of what we do here.
var changes=change.addedDocuments.size+change.modifiedDocuments.size+change.removedDocuments.size;return changes>0;};/**
     * Notify local store of the changed views to locally pin documents.
     */LocalStore.prototype.notifyLocalViewChanges=function(viewChanges){var _this=this;for(var _i=0,viewChanges_1=viewChanges;_i<viewChanges_1.length;_i++){var viewChange=viewChanges_1[_i];var targetId=viewChange.targetId;this.localViewReferences.addReferences(viewChange.addedKeys,targetId);this.localViewReferences.removeReferences(viewChange.removedKeys,targetId);if(!viewChange.fromCache){var targetData=this.targetDataByTarget.get(targetId);assert(targetData!==null,"Can't set limbo-free snapshot version for unknown target: "+targetId);// Advance the last limbo free snapshot version
var lastLimboFreeSnapshotVersion=targetData.snapshotVersion;var updatedTargetData=targetData.withLastLimboFreeSnapshotVersion(lastLimboFreeSnapshotVersion);this.targetDataByTarget=this.targetDataByTarget.insert(targetId,updatedTargetData);}}return this.persistence.runTransaction('notifyLocalViewChanges','readwrite-idempotent',function(txn){return PersistencePromise.forEach(viewChanges,function(viewChange){return PersistencePromise.forEach(viewChange.removedKeys,function(key){return _this.persistence.referenceDelegate.removeReference(txn,key);});});});};/**
     * Gets the mutation batch after the passed in batchId in the mutation queue
     * or null if empty.
     * @param afterBatchId If provided, the batch to search after.
     * @returns The next mutation or null if there wasn't one.
     */LocalStore.prototype.nextMutationBatch=function(afterBatchId){var _this=this;return this.persistence.runTransaction('Get next mutation batch','readonly-idempotent',function(txn){if(afterBatchId===undefined){afterBatchId=BATCHID_UNKNOWN;}return _this.mutationQueue.getNextMutationBatchAfterBatchId(txn,afterBatchId);});};/**
     * Read the current value of a Document with a given key or null if not
     * found - used for testing.
     */LocalStore.prototype.readDocument=function(key){var _this=this;return this.persistence.runTransaction('read document','readonly-idempotent',function(txn){return _this.localDocuments.getDocument(txn,key);});};/**
     * Assigns the given target an internal ID so that its results can be pinned so
     * they don't get GC'd. A target must be allocated in the local store before
     * the store can be used to manage its view.
     *
     * Allocating an already allocated `Target` will return the existing `TargetData`
     * for that `Target`.
     */LocalStore.prototype.allocateTarget=function(target){var _this=this;return this.persistence.runTransaction('Allocate target','readwrite-idempotent',function(txn){var targetData;return _this.targetCache.getTargetData(txn,target).next(function(cached){if(cached){// This target has been listened to previously, so reuse the
// previous targetID.
// TODO(mcg): freshen last accessed date?
targetData=cached;return PersistencePromise.resolve(targetData);}else{return _this.targetCache.allocateTargetId(txn).next(function(targetId){targetData=new TargetData(target,targetId,TargetPurpose.Listen,txn.currentSequenceNumber);return _this.targetCache.addTargetData(txn,targetData).next(function(){return targetData;});});}});}).then(function(targetData){if(_this.targetDataByTarget.get(targetData.targetId)===null){_this.targetDataByTarget=_this.targetDataByTarget.insert(targetData.targetId,targetData);_this.targetIdByTarget.set(target,targetData.targetId);}return targetData;});};/**
     * Returns the TargetData as seen by the LocalStore, including updates that may
     * have not yet been persisted to the TargetCache.
     */ // Visible for testing.
LocalStore.prototype.getTargetData=function(transaction,target){var targetId=this.targetIdByTarget.get(target);if(targetId!==undefined){return PersistencePromise.resolve(this.targetDataByTarget.get(targetId));}else{return this.targetCache.getTargetData(transaction,target);}};/**
     * Unpin all the documents associated with the given target. If
     * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
     * directly removes the associated target data from the target cache.
     *
     * Releasing a non-existing `Target` is a no-op.
     */ // PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
LocalStore.prototype.releaseTarget=function(targetId,keepPersistedTargetData){var _this=this;var targetData=this.targetDataByTarget.get(targetId);assert(targetData!==null,"Tried to release nonexistent target: "+targetId);var mode=keepPersistedTargetData?'readwrite-idempotent':'readwrite-primary-idempotent';return this.persistence.runTransaction('Release target',mode,function(txn){// References for documents sent via Watch are automatically removed
// when we delete a target's data from the reference delegate.
// Since this does not remove references for locally mutated documents,
// we have to remove the target associations for these documents
// manually.
// This operation needs to be run inside the transaction since EagerGC
// uses the local view references during the transaction's commit.
// Fortunately, the operation is safe to be re-run in case the
// transaction fails since there are no side effects if the target has
// already been removed.
var removed=_this.localViewReferences.removeReferencesForId(targetId);if(!keepPersistedTargetData){return PersistencePromise.forEach(removed,function(key){return _this.persistence.referenceDelegate.removeReference(txn,key);}).next(function(){_this.persistence.referenceDelegate.removeTarget(txn,targetData);});}else{return PersistencePromise.resolve();}}).then(function(){_this.targetDataByTarget=_this.targetDataByTarget.remove(targetId);_this.targetIdByTarget.delete(targetData.target);});};/**
     * Runs the specified query against the local store and returns the results,
     * potentially taking advantage of query data from previous executions (such
     * as the set of remote keys).
     *
     * @param usePreviousResults Whether results from previous executions can
     * be used to optimize this query execution.
     */LocalStore.prototype.executeQuery=function(query,usePreviousResults){var _this=this;var lastLimboFreeSnapshotVersion=SnapshotVersion.MIN;var remoteKeys=documentKeySet();return this.persistence.runTransaction('Execute query','readonly-idempotent',function(txn){return _this.getTargetData(txn,query.toTarget()).next(function(targetData){if(targetData){lastLimboFreeSnapshotVersion=targetData.lastLimboFreeSnapshotVersion;return _this.targetCache.getMatchingKeysForTargetId(txn,targetData.targetId).next(function(result){remoteKeys=result;});}}).next(function(){return _this.queryEngine.getDocumentsMatchingQuery(txn,query,usePreviousResults?lastLimboFreeSnapshotVersion:SnapshotVersion.MIN,usePreviousResults?remoteKeys:documentKeySet());}).next(function(documents){return{documents:documents,remoteKeys:remoteKeys};});});};/**
     * Returns the keys of the documents that are associated with the given
     * target id in the remote table.
     */LocalStore.prototype.remoteDocumentKeys=function(targetId){var _this=this;return this.persistence.runTransaction('Remote document keys','readonly-idempotent',function(txn){return _this.targetCache.getMatchingKeysForTargetId(txn,targetId);});};// PORTING NOTE: Multi-tab only.
LocalStore.prototype.getActiveClients=function(){return this.persistence.getActiveClients();};// PORTING NOTE: Multi-tab only.
LocalStore.prototype.removeCachedMutationBatchMetadata=function(batchId){this.mutationQueue.removeCachedMutationKeys(batchId);};// PORTING NOTE: Multi-tab only.
LocalStore.prototype.setNetworkEnabled=function(networkEnabled){this.persistence.setNetworkEnabled(networkEnabled);};LocalStore.prototype.applyWriteToRemoteDocuments=function(txn,batchResult,documentBuffer){var _this=this;var batch=batchResult.batch;var docKeys=batch.keys();var promiseChain=PersistencePromise.resolve();docKeys.forEach(function(docKey){promiseChain=promiseChain.next(function(){return documentBuffer.getEntry(txn,docKey);}).next(function(remoteDoc){var doc=remoteDoc;var ackVersion=batchResult.docVersions.get(docKey);assert(ackVersion!==null,'ackVersions should contain every doc in the write.');if(!doc||doc.version.compareTo(ackVersion)<0){doc=batch.applyToRemoteDocument(docKey,doc,batchResult);if(!doc){assert(!remoteDoc,'Mutation batch '+batch+' applied to document '+remoteDoc+' resulted in null');}else{// We use the commitVersion as the readTime rather than the
// document's updateTime since the updateTime is not advanced
// for updates that do not modify the underlying document.
documentBuffer.addEntry(doc,batchResult.commitVersion);}}});});return promiseChain.next(function(){return _this.mutationQueue.removeMutationBatch(txn,batch);});};LocalStore.prototype.collectGarbage=function(garbageCollector){var _this=this;return this.persistence.runTransaction('Collect garbage','readwrite-primary-idempotent',function(txn){return garbageCollector.collect(txn,_this.targetDataByTarget);});};// PORTING NOTE: Multi-tab only.
LocalStore.prototype.getTarget=function(targetId){var _this=this;var cachedTargetData=this.targetDataByTarget.get(targetId);if(cachedTargetData){return Promise.resolve(cachedTargetData.target);}else{return this.persistence.runTransaction('Get target data','readonly-idempotent',function(txn){return _this.targetCache.getTargetDataForTarget(txn,targetId).next(function(targetData){return targetData?targetData.target:null;});});}};/**
     * Returns the set of documents that have been updated since the last call.
     * If this is the first call, returns the set of changes since client
     * initialization. Further invocations will return document changes since
     * the point of rejection.
     */ // PORTING NOTE: Multi-tab only.
LocalStore.prototype.getNewDocumentChanges=function(){var _this=this;return this.persistence.runTransaction('Get new document changes','readonly-idempotent',function(txn){return _this.remoteDocuments.getNewDocumentChanges(txn,_this.lastDocumentChangeReadTime);}).then(function(_a){var changedDocs=_a.changedDocs,readTime=_a.readTime;_this.lastDocumentChangeReadTime=readTime;return changedDocs;});};/**
     * Reads the newest document change from persistence and forwards the internal
     * synchronization marker so that calls to `getNewDocumentChanges()`
     * only return changes that happened after client initialization.
     */ // PORTING NOTE: Multi-tab only.
LocalStore.prototype.synchronizeLastDocumentChangeReadTime=function(){return tslib.__awaiter(this,void 0,void 0,function(){var remoteDocumentCache_1;var _this=this;return tslib.__generator(this,function(_a){if(this.remoteDocuments instanceof IndexedDbRemoteDocumentCache){remoteDocumentCache_1=this.remoteDocuments;return[2/*return*/,this.persistence.runTransaction('Synchronize last document change read time','readonly-idempotent',function(txn){return remoteDocumentCache_1.getLastDocumentChange(txn);}).then(function(_a){var readTime=_a.readTime;_this.lastDocumentChangeReadTime=readTime;})];}return[2/*return*/];});});};/**
     * The maximum time to leave a resume token buffered without writing it out.
     * This value is arbitrary: it's long enough to avoid several writes
     * (possibly indefinitely if updates come more frequently than this) but
     * short enough that restarting after crashing will still have a pretty
     * recent resume token.
     */LocalStore.RESUME_TOKEN_MAX_AGE_MICROS=5*60*1e6;return LocalStore;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var MemoryMutationQueue=/** @class */function(){function MemoryMutationQueue(indexManager,referenceDelegate){this.indexManager=indexManager;this.referenceDelegate=referenceDelegate;/**
         * The set of all mutations that have been sent but not yet been applied to
         * the backend.
         */this.mutationQueue=[];/** Next value to use when assigning sequential IDs to each mutation batch. */this.nextBatchId=1;/** The last received stream token from the server, used to acknowledge which
         * responses the client has processed. Stream tokens are opaque checkpoint
         * markers whose only real value is their inclusion in the next request.
         */this.lastStreamToken=emptyByteString();/** An ordered mapping between documents and the mutations batch IDs. */this.batchesByDocumentKey=new SortedSet(DocReference.compareByKey);}MemoryMutationQueue.prototype.checkEmpty=function(transaction){return PersistencePromise.resolve(this.mutationQueue.length===0);};MemoryMutationQueue.prototype.acknowledgeBatch=function(transaction,batch,streamToken){var batchId=batch.batchId;var batchIndex=this.indexOfExistingBatchId(batchId,'acknowledged');assert(batchIndex===0,'Can only acknowledge the first batch in the mutation queue');// Verify that the batch in the queue is the one to be acknowledged.
var check=this.mutationQueue[batchIndex];assert(batchId===check.batchId,'Queue ordering failure: expected batch '+batchId+', got batch '+check.batchId);this.lastStreamToken=streamToken;return PersistencePromise.resolve();};MemoryMutationQueue.prototype.getLastStreamToken=function(transaction){return PersistencePromise.resolve(this.lastStreamToken);};MemoryMutationQueue.prototype.setLastStreamToken=function(transaction,streamToken){this.lastStreamToken=streamToken;return PersistencePromise.resolve();};MemoryMutationQueue.prototype.addMutationBatch=function(transaction,localWriteTime,baseMutations,mutations){assert(mutations.length!==0,'Mutation batches should not be empty');var batchId=this.nextBatchId;this.nextBatchId++;if(this.mutationQueue.length>0){var prior=this.mutationQueue[this.mutationQueue.length-1];assert(prior.batchId<batchId,'Mutation batchIDs must be monotonically increasing order');}var batch=new MutationBatch(batchId,localWriteTime,baseMutations,mutations);this.mutationQueue.push(batch);// Track references by document key and index collection parents.
for(var _i=0,mutations_1=mutations;_i<mutations_1.length;_i++){var mutation=mutations_1[_i];this.batchesByDocumentKey=this.batchesByDocumentKey.add(new DocReference(mutation.key,batchId));this.indexManager.addToCollectionParentIndex(transaction,mutation.key.path.popLast());}return PersistencePromise.resolve(batch);};MemoryMutationQueue.prototype.lookupMutationBatch=function(transaction,batchId){return PersistencePromise.resolve(this.findMutationBatch(batchId));};MemoryMutationQueue.prototype.lookupMutationKeys=function(transaction,batchId){var mutationBatch=this.findMutationBatch(batchId);assert(mutationBatch!=null,'Failed to find local mutation batch.');return PersistencePromise.resolve(mutationBatch.keys());};MemoryMutationQueue.prototype.getNextMutationBatchAfterBatchId=function(transaction,batchId){var nextBatchId=batchId+1;// The requested batchId may still be out of range so normalize it to the
// start of the queue.
var rawIndex=this.indexOfBatchId(nextBatchId);var index=rawIndex<0?0:rawIndex;return PersistencePromise.resolve(this.mutationQueue.length>index?this.mutationQueue[index]:null);};MemoryMutationQueue.prototype.getHighestUnacknowledgedBatchId=function(){return PersistencePromise.resolve(this.mutationQueue.length===0?BATCHID_UNKNOWN:this.nextBatchId-1);};MemoryMutationQueue.prototype.getAllMutationBatches=function(transaction){return PersistencePromise.resolve(this.mutationQueue.slice());};MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey=function(transaction,documentKey){var _this=this;var start=new DocReference(documentKey,0);var end=new DocReference(documentKey,Number.POSITIVE_INFINITY);var result=[];this.batchesByDocumentKey.forEachInRange([start,end],function(ref){assert(documentKey.isEqual(ref.key),"Should only iterate over a single key's batches");var batch=_this.findMutationBatch(ref.targetOrBatchId);assert(batch!==null,'Batches in the index must exist in the main table');result.push(batch);});return PersistencePromise.resolve(result);};MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKeys=function(transaction,documentKeys){var _this=this;var uniqueBatchIDs=new SortedSet(primitiveComparator);documentKeys.forEach(function(documentKey){var start=new DocReference(documentKey,0);var end=new DocReference(documentKey,Number.POSITIVE_INFINITY);_this.batchesByDocumentKey.forEachInRange([start,end],function(ref){assert(documentKey.isEqual(ref.key),"For each key, should only iterate over a single key's batches");uniqueBatchIDs=uniqueBatchIDs.add(ref.targetOrBatchId);});});return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));};MemoryMutationQueue.prototype.getAllMutationBatchesAffectingQuery=function(transaction,query){assert(!query.isCollectionGroupQuery(),'CollectionGroup queries should be handled in LocalDocumentsView');// Use the query path as a prefix for testing if a document matches the
// query.
var prefix=query.path;var immediateChildrenPathLength=prefix.length+1;// Construct a document reference for actually scanning the index. Unlike
// the prefix the document key in this reference must have an even number of
// segments. The empty segment can be used a suffix of the query path
// because it precedes all other segments in an ordered traversal.
var startPath=prefix;if(!DocumentKey.isDocumentKey(startPath)){startPath=startPath.child('');}var start=new DocReference(new DocumentKey(startPath),0);// Find unique batchIDs referenced by all documents potentially matching the
// query.
var uniqueBatchIDs=new SortedSet(primitiveComparator);this.batchesByDocumentKey.forEachWhile(function(ref){var rowKeyPath=ref.key.path;if(!prefix.isPrefixOf(rowKeyPath)){return false;}else{// Rows with document keys more than one segment longer than the query
// path can't be matches. For example, a query on 'rooms' can't match
// the document /rooms/abc/messages/xyx.
// TODO(mcg): we'll need a different scanner when we implement
// ancestor queries.
if(rowKeyPath.length===immediateChildrenPathLength){uniqueBatchIDs=uniqueBatchIDs.add(ref.targetOrBatchId);}return true;}},start);return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));};MemoryMutationQueue.prototype.findMutationBatches=function(batchIDs){var _this=this;// Construct an array of matching batches, sorted by batchID to ensure that
// multiple mutations affecting the same document key are applied in order.
var result=[];batchIDs.forEach(function(batchId){var batch=_this.findMutationBatch(batchId);if(batch!==null){result.push(batch);}});return result;};MemoryMutationQueue.prototype.removeMutationBatch=function(transaction,batch){var _this=this;// Find the position of the first batch for removal. This need not be the
// first entry in the queue.
var batchIndex=this.indexOfExistingBatchId(batch.batchId,'removed');assert(batchIndex===0,'Can only remove the first entry of the mutation queue');this.mutationQueue.shift();var references=this.batchesByDocumentKey;return PersistencePromise.forEach(batch.mutations,function(mutation){var ref=new DocReference(mutation.key,batch.batchId);references=references.delete(ref);return _this.referenceDelegate.removeMutationReference(transaction,mutation.key);}).next(function(){_this.batchesByDocumentKey=references;});};MemoryMutationQueue.prototype.removeCachedMutationKeys=function(batchId){// No-op since the memory mutation queue does not maintain a separate cache.
};MemoryMutationQueue.prototype.containsKey=function(txn,key){var ref=new DocReference(key,0);var firstRef=this.batchesByDocumentKey.firstAfterOrEqual(ref);return PersistencePromise.resolve(key.isEqual(firstRef&&firstRef.key));};MemoryMutationQueue.prototype.performConsistencyCheck=function(txn){if(this.mutationQueue.length===0){assert(this.batchesByDocumentKey.isEmpty(),'Document leak -- detected dangling mutation references when queue is empty.');}return PersistencePromise.resolve();};/**
     * Finds the index of the given batchId in the mutation queue and asserts that
     * the resulting index is within the bounds of the queue.
     *
     * @param batchId The batchId to search for
     * @param action A description of what the caller is doing, phrased in passive
     * form (e.g. "acknowledged" in a routine that acknowledges batches).
     */MemoryMutationQueue.prototype.indexOfExistingBatchId=function(batchId,action){var index=this.indexOfBatchId(batchId);assert(index>=0&&index<this.mutationQueue.length,'Batches must exist to be '+action);return index;};/**
     * Finds the index of the given batchId in the mutation queue. This operation
     * is O(1).
     *
     * @return The computed index of the batch with the given batchId, based on
     * the state of the queue. Note this index can be negative if the requested
     * batchId has already been remvoed from the queue or past the end of the
     * queue if the batchId is larger than the last added batch.
     */MemoryMutationQueue.prototype.indexOfBatchId=function(batchId){if(this.mutationQueue.length===0){// As an index this is past the end of the queue
return 0;}// Examine the front of the queue to figure out the difference between the
// batchId and indexes in the array. Note that since the queue is ordered
// by batchId, if the first batch has a larger batchId then the requested
// batchId doesn't exist in the queue.
var firstBatchId=this.mutationQueue[0].batchId;return batchId-firstBatchId;};/**
     * A version of lookupMutationBatch that doesn't return a promise, this makes
     * other functions that uses this code easier to read and more efficent.
     */MemoryMutationQueue.prototype.findMutationBatch=function(batchId){var index=this.indexOfBatchId(batchId);if(index<0||index>=this.mutationQueue.length){return null;}var batch=this.mutationQueue[index];assert(batch.batchId===batchId,'If found batch must match');return batch;};return MemoryMutationQueue;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function documentEntryMap(){return new SortedMap(DocumentKey.comparator);}var MemoryRemoteDocumentCache=/** @class */function(){/**
     * @param sizer Used to assess the size of a document. For eager GC, this is expected to just
     * return 0 to avoid unnecessarily doing the work of calculating the size.
     */function MemoryRemoteDocumentCache(indexManager,sizer){this.indexManager=indexManager;this.sizer=sizer;/** Underlying cache of documents and their read times. */this.docs=documentEntryMap();/** Size of all cached documents. */this.size=0;}/**
     * Adds the supplied entry to the cache and updates the cache size as appropriate.
     *
     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */MemoryRemoteDocumentCache.prototype.addEntry=function(transaction,doc,readTime){assert(!readTime.isEqual(SnapshotVersion.MIN),'Cannot add a document with a read time of zero');var key=doc.key;var entry=this.docs.get(key);var previousSize=entry?entry.size:0;var currentSize=this.sizer(doc);this.docs=this.docs.insert(key,{maybeDocument:doc,size:currentSize,readTime:readTime});this.size+=currentSize-previousSize;return this.indexManager.addToCollectionParentIndex(transaction,key.path.popLast());};/**
     * Removes the specified entry from the cache and updates the cache size as appropriate.
     *
     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */MemoryRemoteDocumentCache.prototype.removeEntry=function(documentKey){var entry=this.docs.get(documentKey);if(entry){this.docs=this.docs.remove(documentKey);this.size-=entry.size;}};MemoryRemoteDocumentCache.prototype.getEntry=function(transaction,documentKey){var entry=this.docs.get(documentKey);return PersistencePromise.resolve(entry?entry.maybeDocument:null);};MemoryRemoteDocumentCache.prototype.getEntries=function(transaction,documentKeys){var _this=this;var results=nullableMaybeDocumentMap();documentKeys.forEach(function(documentKey){var entry=_this.docs.get(documentKey);results=results.insert(documentKey,entry?entry.maybeDocument:null);});return PersistencePromise.resolve(results);};MemoryRemoteDocumentCache.prototype.getDocumentsMatchingQuery=function(transaction,query,sinceReadTime){assert(!query.isCollectionGroupQuery(),'CollectionGroup queries should be handled in LocalDocumentsView');var results=documentMap();// Documents are ordered by key, so we can use a prefix scan to narrow down
// the documents we need to match the query against.
var prefix=new DocumentKey(query.path.child(''));var iterator=this.docs.getIteratorFrom(prefix);while(iterator.hasNext()){var _a=iterator.getNext(),key=_a.key,_b=_a.value,maybeDocument=_b.maybeDocument,readTime=_b.readTime;if(!query.path.isPrefixOf(key.path)){break;}if(readTime.compareTo(sinceReadTime)<=0){continue;}if(maybeDocument instanceof Document&&query.matches(maybeDocument)){results=results.insert(maybeDocument.key,maybeDocument);}}return PersistencePromise.resolve(results);};MemoryRemoteDocumentCache.prototype.forEachDocumentKey=function(transaction,f){return PersistencePromise.forEach(this.docs,function(key){return f(key);});};MemoryRemoteDocumentCache.prototype.getNewDocumentChanges=function(transaction,sinceReadTime){throw new Error('getNewDocumentChanges() is not supported with MemoryPersistence');};MemoryRemoteDocumentCache.prototype.newChangeBuffer=function(options){// `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
// a separate changelog and does not need special handling for removals.
return new MemoryRemoteDocumentCache.RemoteDocumentChangeBuffer(this);};MemoryRemoteDocumentCache.prototype.getSize=function(txn){return PersistencePromise.resolve(this.size);};/**
     * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.
     */MemoryRemoteDocumentCache.RemoteDocumentChangeBuffer=/** @class */function(_super){tslib.__extends(class_1,_super);function class_1(documentCache){var _this=_super.call(this)||this;_this.documentCache=documentCache;return _this;}class_1.prototype.applyChanges=function(transaction){var _this=this;var promises=[];this.changes.forEach(function(key,doc){if(doc){promises.push(_this.documentCache.addEntry(transaction,doc,_this.readTime));}else{_this.documentCache.removeEntry(key);}});return PersistencePromise.waitFor(promises);};class_1.prototype.getFromCache=function(transaction,documentKey){return this.documentCache.getEntry(transaction,documentKey);};class_1.prototype.getAllFromCache=function(transaction,documentKeys){return this.documentCache.getEntries(transaction,documentKeys);};return class_1;}(RemoteDocumentChangeBuffer);return MemoryRemoteDocumentCache;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var MemoryTargetCache=/** @class */function(){function MemoryTargetCache(persistence){this.persistence=persistence;/**
         * Maps a target to the data about that target
         */this.targets=new ObjectMap(function(t){return t.canonicalId();});/** The last received snapshot version. */this.lastRemoteSnapshotVersion=SnapshotVersion.MIN;/** The highest numbered target ID encountered. */this.highestTargetId=0;/** The highest sequence number encountered. */this.highestSequenceNumber=0;/**
         * A ordered bidirectional mapping between documents and the remote target
         * IDs.
         */this.references=new ReferenceSet();this.targetCount=0;this.targetIdGenerator=TargetIdGenerator.forTargetCache();}MemoryTargetCache.prototype.forEachTarget=function(txn,f){this.targets.forEach(function(_,targetData){return f(targetData);});return PersistencePromise.resolve();};MemoryTargetCache.prototype.getLastRemoteSnapshotVersion=function(transaction){return PersistencePromise.resolve(this.lastRemoteSnapshotVersion);};MemoryTargetCache.prototype.getHighestSequenceNumber=function(transaction){return PersistencePromise.resolve(this.highestSequenceNumber);};MemoryTargetCache.prototype.allocateTargetId=function(transaction){var nextTargetId=this.targetIdGenerator.after(this.highestTargetId);this.highestTargetId=nextTargetId;return PersistencePromise.resolve(nextTargetId);};MemoryTargetCache.prototype.setTargetsMetadata=function(transaction,highestListenSequenceNumber,lastRemoteSnapshotVersion){if(lastRemoteSnapshotVersion){this.lastRemoteSnapshotVersion=lastRemoteSnapshotVersion;}if(highestListenSequenceNumber>this.highestSequenceNumber){this.highestSequenceNumber=highestListenSequenceNumber;}return PersistencePromise.resolve();};MemoryTargetCache.prototype.saveTargetData=function(targetData){this.targets.set(targetData.target,targetData);var targetId=targetData.targetId;if(targetId>this.highestTargetId){this.highestTargetId=targetId;}if(targetData.sequenceNumber>this.highestSequenceNumber){this.highestSequenceNumber=targetData.sequenceNumber;}};MemoryTargetCache.prototype.addTargetData=function(transaction,targetData){assert(!this.targets.has(targetData.target),'Adding a target that already exists');this.saveTargetData(targetData);this.targetCount+=1;return PersistencePromise.resolve();};MemoryTargetCache.prototype.updateTargetData=function(transaction,targetData){assert(this.targets.has(targetData.target),'Updating a non-existent target');this.saveTargetData(targetData);return PersistencePromise.resolve();};MemoryTargetCache.prototype.removeTargetData=function(transaction,targetData){assert(this.targetCount>0,'Removing a target from an empty cache');assert(this.targets.has(targetData.target),'Removing a non-existent target from the cache');this.targets.delete(targetData.target);this.references.removeReferencesForId(targetData.targetId);this.targetCount-=1;return PersistencePromise.resolve();};MemoryTargetCache.prototype.removeTargets=function(transaction,upperBound,activeTargetIds){var _this=this;var count=0;var removals=[];this.targets.forEach(function(key,targetData){if(targetData.sequenceNumber<=upperBound&&activeTargetIds.get(targetData.targetId)===null){_this.targets.delete(key);removals.push(_this.removeMatchingKeysForTargetId(transaction,targetData.targetId));count++;}});return PersistencePromise.waitFor(removals).next(function(){return count;});};MemoryTargetCache.prototype.getTargetCount=function(transaction){return PersistencePromise.resolve(this.targetCount);};MemoryTargetCache.prototype.getTargetData=function(transaction,target){var targetData=this.targets.get(target)||null;return PersistencePromise.resolve(targetData);};MemoryTargetCache.prototype.getTargetDataForTarget=function(transaction,targetId){// This method is only needed for multi-tab and we can't implement it
// efficiently without additional data structures.
return fail('Not yet implemented.');};MemoryTargetCache.prototype.addMatchingKeys=function(txn,keys,targetId){this.references.addReferences(keys,targetId);var referenceDelegate=this.persistence.referenceDelegate;var promises=[];if(referenceDelegate){keys.forEach(function(key){promises.push(referenceDelegate.addReference(txn,key));});}return PersistencePromise.waitFor(promises);};MemoryTargetCache.prototype.removeMatchingKeys=function(txn,keys,targetId){this.references.removeReferences(keys,targetId);var referenceDelegate=this.persistence.referenceDelegate;var promises=[];if(referenceDelegate){keys.forEach(function(key){promises.push(referenceDelegate.removeReference(txn,key));});}return PersistencePromise.waitFor(promises);};MemoryTargetCache.prototype.removeMatchingKeysForTargetId=function(txn,targetId){this.references.removeReferencesForId(targetId);return PersistencePromise.resolve();};MemoryTargetCache.prototype.getMatchingKeysForTargetId=function(txn,targetId){var matchingKeys=this.references.referencesForId(targetId);return PersistencePromise.resolve(matchingKeys);};MemoryTargetCache.prototype.containsKey=function(txn,key){return PersistencePromise.resolve(this.references.containsKey(key));};return MemoryTargetCache;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$3='MemoryPersistence';/**
 * A memory-backed instance of Persistence. Data is stored only in RAM and
 * not persisted across sessions.
 */var MemoryPersistence=/** @class */function(){/**
     * The constructor accepts a factory for creating a reference delegate. This
     * allows both the delegate and this instance to have strong references to
     * each other without having nullable fields that would then need to be
     * checked or asserted on every access.
     */function MemoryPersistence(clientId,referenceDelegateFactory){var _this=this;this.clientId=clientId;this.mutationQueues={};this.listenSequence=new ListenSequence(0);this._started=false;this._started=true;this.referenceDelegate=referenceDelegateFactory(this);this.targetCache=new MemoryTargetCache(this);var sizer=function sizer(doc){return _this.referenceDelegate.documentSize(doc);};this.indexManager=new MemoryIndexManager();this.remoteDocumentCache=new MemoryRemoteDocumentCache(this.indexManager,sizer);}MemoryPersistence.createLruPersistence=function(clientId,serializer,params){var factory=function factory(p){return new MemoryLruDelegate(p,new LocalSerializer(serializer),params);};return new MemoryPersistence(clientId,factory);};MemoryPersistence.createEagerPersistence=function(clientId){var factory=function factory(p){return new MemoryEagerDelegate(p);};return new MemoryPersistence(clientId,factory);};MemoryPersistence.prototype.shutdown=function(){// No durable state to ensure is closed on shutdown.
this._started=false;return Promise.resolve();};Object.defineProperty(MemoryPersistence.prototype,"started",{get:function get(){return this._started;},enumerable:true,configurable:true});MemoryPersistence.prototype.getActiveClients=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){return[2/*return*/,[this.clientId]];});});};MemoryPersistence.prototype.setPrimaryStateListener=function(primaryStateListener){// All clients using memory persistence act as primary.
return primaryStateListener(true);};MemoryPersistence.prototype.setDatabaseDeletedListener=function(){// No op.
};MemoryPersistence.prototype.setNetworkEnabled=function(networkEnabled){// No op.
};MemoryPersistence.prototype.getIndexManager=function(){return this.indexManager;};MemoryPersistence.prototype.getMutationQueue=function(user){var queue=this.mutationQueues[user.toKey()];if(!queue){queue=new MemoryMutationQueue(this.indexManager,this.referenceDelegate);this.mutationQueues[user.toKey()]=queue;}return queue;};MemoryPersistence.prototype.getTargetCache=function(){return this.targetCache;};MemoryPersistence.prototype.getRemoteDocumentCache=function(){return this.remoteDocumentCache;};MemoryPersistence.prototype.runTransaction=function(action,mode,transactionOperation){var _this=this;debug(LOG_TAG$3,'Starting transaction:',action);var txn=new MemoryTransaction(this.listenSequence.next());this.referenceDelegate.onTransactionStarted();return transactionOperation(txn).next(function(result){return _this.referenceDelegate.onTransactionCommitted(txn).next(function(){return result;});}).toPromise().then(function(result){txn.raiseOnCommittedEvent();return result;});};MemoryPersistence.prototype.mutationQueuesContainKey=function(transaction,key){return PersistencePromise.or(values(this.mutationQueues).map(function(queue){return function(){return queue.containsKey(transaction,key);};}));};return MemoryPersistence;}();/**
 * Memory persistence is not actually transactional, but future implementations
 * may have transaction-scoped state.
 */var MemoryTransaction=/** @class */function(_super){tslib.__extends(MemoryTransaction,_super);function MemoryTransaction(currentSequenceNumber){var _this=_super.call(this)||this;_this.currentSequenceNumber=currentSequenceNumber;return _this;}return MemoryTransaction;}(PersistenceTransaction);var MemoryEagerDelegate=/** @class */function(){function MemoryEagerDelegate(persistence){this.persistence=persistence;this.inMemoryPins=null;this._orphanedDocuments=null;}Object.defineProperty(MemoryEagerDelegate.prototype,"orphanedDocuments",{get:function get(){if(!this._orphanedDocuments){throw fail('orphanedDocuments is only valid during a transaction.');}else{return this._orphanedDocuments;}},enumerable:true,configurable:true});MemoryEagerDelegate.prototype.setInMemoryPins=function(inMemoryPins){this.inMemoryPins=inMemoryPins;};MemoryEagerDelegate.prototype.addReference=function(txn,key){this.orphanedDocuments.delete(key);return PersistencePromise.resolve();};MemoryEagerDelegate.prototype.removeReference=function(txn,key){this.orphanedDocuments.add(key);return PersistencePromise.resolve();};MemoryEagerDelegate.prototype.removeMutationReference=function(txn,key){this.orphanedDocuments.add(key);return PersistencePromise.resolve();};MemoryEagerDelegate.prototype.removeTarget=function(txn,targetData){var _this=this;var cache=this.persistence.getTargetCache();return cache.getMatchingKeysForTargetId(txn,targetData.targetId).next(function(keys){keys.forEach(function(key){return _this.orphanedDocuments.add(key);});}).next(function(){return cache.removeTargetData(txn,targetData);});};MemoryEagerDelegate.prototype.onTransactionStarted=function(){this._orphanedDocuments=new Set();};MemoryEagerDelegate.prototype.onTransactionCommitted=function(txn){var _this=this;// Remove newly orphaned documents.
var cache=this.persistence.getRemoteDocumentCache();var changeBuffer=cache.newChangeBuffer();return PersistencePromise.forEach(this.orphanedDocuments,function(key){return _this.isReferenced(txn,key).next(function(isReferenced){if(!isReferenced){changeBuffer.removeEntry(key);}});}).next(function(){_this._orphanedDocuments=null;return changeBuffer.apply(txn);});};MemoryEagerDelegate.prototype.updateLimboDocument=function(txn,key){var _this=this;return this.isReferenced(txn,key).next(function(isReferenced){if(isReferenced){_this.orphanedDocuments.delete(key);}else{_this.orphanedDocuments.add(key);}});};MemoryEagerDelegate.prototype.documentSize=function(doc){// For eager GC, we don't care about the document size, there are no size thresholds.
return 0;};MemoryEagerDelegate.prototype.isReferenced=function(txn,key){var _this=this;return PersistencePromise.or([function(){return _this.persistence.getTargetCache().containsKey(txn,key);},function(){return _this.persistence.mutationQueuesContainKey(txn,key);},function(){return PersistencePromise.resolve(_this.inMemoryPins.containsKey(key));}]);};return MemoryEagerDelegate;}();var MemoryLruDelegate=/** @class */function(){function MemoryLruDelegate(persistence,serializer,lruParams){this.persistence=persistence;this.serializer=serializer;this.inMemoryPins=null;this.orphanedSequenceNumbers=new ObjectMap(function(k){return encode(k.path);});this.garbageCollector=new LruGarbageCollector(this,lruParams);}// No-ops, present so memory persistence doesn't have to care which delegate
// it has.
MemoryLruDelegate.prototype.onTransactionStarted=function(){};MemoryLruDelegate.prototype.onTransactionCommitted=function(txn){return PersistencePromise.resolve();};MemoryLruDelegate.prototype.forEachTarget=function(txn,f){return this.persistence.getTargetCache().forEachTarget(txn,f);};MemoryLruDelegate.prototype.getSequenceNumberCount=function(txn){var docCountPromise=this.orphanedDocumentCount(txn);var targetCountPromise=this.persistence.getTargetCache().getTargetCount(txn);return targetCountPromise.next(function(targetCount){return docCountPromise.next(function(docCount){return targetCount+docCount;});});};MemoryLruDelegate.prototype.orphanedDocumentCount=function(txn){var orphanedCount=0;return this.forEachOrphanedDocumentSequenceNumber(txn,function(_){orphanedCount++;}).next(function(){return orphanedCount;});};MemoryLruDelegate.prototype.forEachOrphanedDocumentSequenceNumber=function(txn,f){var _this=this;return PersistencePromise.forEach(this.orphanedSequenceNumbers,function(key,sequenceNumber){// Pass in the exact sequence number as the upper bound so we know it won't be pinned by
// being too recent.
return _this.isPinned(txn,key,sequenceNumber).next(function(isPinned){if(!isPinned){return f(sequenceNumber);}else{return PersistencePromise.resolve();}});});};MemoryLruDelegate.prototype.setInMemoryPins=function(inMemoryPins){this.inMemoryPins=inMemoryPins;};MemoryLruDelegate.prototype.removeTargets=function(txn,upperBound,activeTargetIds){return this.persistence.getTargetCache().removeTargets(txn,upperBound,activeTargetIds);};MemoryLruDelegate.prototype.removeOrphanedDocuments=function(txn,upperBound){var _this=this;var count=0;var cache=this.persistence.getRemoteDocumentCache();var changeBuffer=cache.newChangeBuffer();var p=cache.forEachDocumentKey(txn,function(key){return _this.isPinned(txn,key,upperBound).next(function(isPinned){if(!isPinned){count++;changeBuffer.removeEntry(key);}});});return p.next(function(){return changeBuffer.apply(txn);}).next(function(){return count;});};MemoryLruDelegate.prototype.removeMutationReference=function(txn,key){this.orphanedSequenceNumbers.set(key,txn.currentSequenceNumber);return PersistencePromise.resolve();};MemoryLruDelegate.prototype.removeTarget=function(txn,targetData){var updated=targetData.withSequenceNumber(txn.currentSequenceNumber);return this.persistence.getTargetCache().updateTargetData(txn,updated);};MemoryLruDelegate.prototype.addReference=function(txn,key){this.orphanedSequenceNumbers.set(key,txn.currentSequenceNumber);return PersistencePromise.resolve();};MemoryLruDelegate.prototype.removeReference=function(txn,key){this.orphanedSequenceNumbers.set(key,txn.currentSequenceNumber);return PersistencePromise.resolve();};MemoryLruDelegate.prototype.updateLimboDocument=function(txn,key){this.orphanedSequenceNumbers.set(key,txn.currentSequenceNumber);return PersistencePromise.resolve();};MemoryLruDelegate.prototype.documentSize=function(maybeDoc){var remoteDocument=this.serializer.toDbRemoteDocument(maybeDoc,maybeDoc.version);var value;if(remoteDocument.document){value=remoteDocument.document;}else if(remoteDocument.unknownDocument){value=remoteDocument.unknownDocument;}else if(remoteDocument.noDocument){value=remoteDocument.noDocument;}else{throw fail('Unknown remote document type');}return JSON.stringify(value).length;};MemoryLruDelegate.prototype.isPinned=function(txn,key,upperBound){var _this=this;return PersistencePromise.or([function(){return _this.persistence.mutationQueuesContainKey(txn,key);},function(){return PersistencePromise.resolve(_this.inMemoryPins.containsKey(key));},function(){return _this.persistence.getTargetCache().containsKey(txn,key);},function(){var orphanedAt=_this.orphanedSequenceNumbers.get(key);return PersistencePromise.resolve(orphanedAt!==undefined&&orphanedAt>upperBound);}]);};MemoryLruDelegate.prototype.getCacheSize=function(txn){return this.persistence.getRemoteDocumentCache().getSize(txn);};return MemoryLruDelegate;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$4='ExponentialBackoff';/**
 * Initial backoff time in milliseconds after an error.
 * Set to 1s according to https://cloud.google.com/apis/design/errors.
 */var DEFAULT_BACKOFF_INITIAL_DELAY_MS=1000;var DEFAULT_BACKOFF_FACTOR=1.5;/** Maximum backoff time in milliseconds */var DEFAULT_BACKOFF_MAX_DELAY_MS=60*1000;/**
 * A helper for running delayed tasks following an exponential backoff curve
 * between attempts.
 *
 * Each delay is made up of a "base" delay which follows the exponential
 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
 * base delay. This prevents clients from accidentally synchronizing their
 * delays causing spikes of load to the backend.
 */var ExponentialBackoff=/** @class */function(){function ExponentialBackoff(/**
     * The AsyncQueue to run backoff operations on.
     */queue,/**
     * The ID to use when scheduling backoff operations on the AsyncQueue.
     */timerId,/**
     * The initial delay (used as the base delay on the first retry attempt).
     * Note that jitter will still be applied, so the actual delay could be as
     * little as 0.5*initialDelayMs.
     */initialDelayMs,/**
     * The multiplier to use to determine the extended base delay after each
     * attempt.
     */backoffFactor,/**
     * The maximum base delay after which no further backoff is performed.
     * Note that jitter will still be applied, so the actual delay could be as
     * much as 1.5*maxDelayMs.
     */maxDelayMs){if(initialDelayMs===void 0){initialDelayMs=DEFAULT_BACKOFF_INITIAL_DELAY_MS;}if(backoffFactor===void 0){backoffFactor=DEFAULT_BACKOFF_FACTOR;}if(maxDelayMs===void 0){maxDelayMs=DEFAULT_BACKOFF_MAX_DELAY_MS;}this.queue=queue;this.timerId=timerId;this.initialDelayMs=initialDelayMs;this.backoffFactor=backoffFactor;this.maxDelayMs=maxDelayMs;this.currentBaseMs=0;this.timerPromise=null;/** The last backoff attempt, as epoch milliseconds. */this.lastAttemptTime=Date.now();this.reset();}/**
     * Resets the backoff delay.
     *
     * The very next backoffAndWait() will have no delay. If it is called again
     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
     * subsequent ones will increase according to the backoffFactor.
     */ExponentialBackoff.prototype.reset=function(){this.currentBaseMs=0;};/**
     * Resets the backoff delay to the maximum delay (e.g. for use after a
     * RESOURCE_EXHAUSTED error).
     */ExponentialBackoff.prototype.resetToMax=function(){this.currentBaseMs=this.maxDelayMs;};/**
     * Returns a promise that resolves after currentDelayMs, and increases the
     * delay for any subsequent attempts. If there was a pending backoff operation
     * already, it will be canceled.
     */ExponentialBackoff.prototype.backoffAndRun=function(op){var _this=this;// Cancel any pending backoff operation.
this.cancel();// First schedule using the current base (which may be 0 and should be
// honored as such).
var desiredDelayWithJitterMs=Math.floor(this.currentBaseMs+this.jitterDelayMs());// Guard against lastAttemptTime being in the future due to a clock change.
var delaySoFarMs=Math.max(0,Date.now()-this.lastAttemptTime);// Guard against the backoff delay already being past.
var remainingDelayMs=Math.max(0,desiredDelayWithJitterMs-delaySoFarMs);if(this.currentBaseMs>0){debug(LOG_TAG$4,"Backing off for "+remainingDelayMs+" ms "+("(base delay: "+this.currentBaseMs+" ms, ")+("delay with jitter: "+desiredDelayWithJitterMs+" ms, ")+("last attempt: "+delaySoFarMs+" ms ago)"));}this.timerPromise=this.queue.enqueueAfterDelay(this.timerId,remainingDelayMs,function(){_this.lastAttemptTime=Date.now();return op();});// Apply backoff factor to determine next delay and ensure it is within
// bounds.
this.currentBaseMs*=this.backoffFactor;if(this.currentBaseMs<this.initialDelayMs){this.currentBaseMs=this.initialDelayMs;}if(this.currentBaseMs>this.maxDelayMs){this.currentBaseMs=this.maxDelayMs;}};ExponentialBackoff.prototype.cancel=function(){if(this.timerPromise!==null){this.timerPromise.cancel();this.timerPromise=null;}};/** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */ExponentialBackoff.prototype.jitterDelayMs=function(){return(Math.random()-0.5)*this.currentBaseMs;};return ExponentialBackoff;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$5='PersistentStream';/**
 * PersistentStream can be in one of 5 states (each described in detail below)
 * based on the following state transition diagram:
 *
 *          start() called             auth & connection succeeded
 * INITIAL ----------------> STARTING -----------------------------> OPEN
 *                             ^  |                                   |
 *                             |  |                    error occurred |
 *                             |  \-----------------------------v-----/
 *                             |                                |
 *                    backoff  |                                |
 *                    elapsed  |              start() called    |
 *                             \--- BACKOFF <---------------- ERROR
 *
 * [any state] --------------------------> INITIAL
 *               stop() called or
 *               idle timer expired
 */var PersistentStreamState;(function(PersistentStreamState){/**
     * The streaming RPC is not yet running and there's no error condition.
     * Calling start() will start the stream immediately without backoff.
     * While in this state isStarted() will return false.
     */PersistentStreamState[PersistentStreamState["Initial"]=0]="Initial";/**
     * The stream is starting, either waiting for an auth token or for the stream
     * to successfully open. While in this state, isStarted() will return true but
     * isOpen() will return false.
     */PersistentStreamState[PersistentStreamState["Starting"]=1]="Starting";/**
     * The streaming RPC is up and running. Requests and responses can flow
     * freely. Both isStarted() and isOpen() will return true.
     */PersistentStreamState[PersistentStreamState["Open"]=2]="Open";/**
     * The stream encountered an error. The next start attempt will back off.
     * While in this state isStarted() will return false.
     */PersistentStreamState[PersistentStreamState["Error"]=3]="Error";/**
     * An in-between state after an error where the stream is waiting before
     * re-starting. After waiting is complete, the stream will try to open.
     * While in this state isStarted() will return true but isOpen() will return
     * false.
     */PersistentStreamState[PersistentStreamState["Backoff"]=4]="Backoff";})(PersistentStreamState||(PersistentStreamState={}));/** The time a stream stays open after it is marked idle. */var IDLE_TIMEOUT_MS=60*1000;/**
 * A PersistentStream is an abstract base class that represents a streaming RPC
 * to the Firestore backend. It's built on top of the connections own support
 * for streaming RPCs, and adds several critical features for our clients:
 *
 *   - Exponential backoff on failure
 *   - Authentication via CredentialsProvider
 *   - Dispatching all callbacks into the shared worker queue
 *   - Closing idle streams after 60 seconds of inactivity
 *
 * Subclasses of PersistentStream implement serialization of models to and
 * from the JSON representation of the protocol buffers for a specific
 * streaming RPC.
 *
 * ## Starting and Stopping
 *
 * Streaming RPCs are stateful and need to be start()ed before messages can
 * be sent and received. The PersistentStream will call the onOpen() function
 * of the listener once the stream is ready to accept requests.
 *
 * Should a start() fail, PersistentStream will call the registered onClose()
 * listener with a FirestoreError indicating what went wrong.
 *
 * A PersistentStream can be started and stopped repeatedly.
 *
 * Generic types:
 *  SendType: The type of the outgoing message of the underlying
 *    connection stream
 *  ReceiveType: The type of the incoming message of the underlying
 *    connection stream
 *  ListenerType: The type of the listener that will be used for callbacks
 */var PersistentStream=/** @class */function(){function PersistentStream(queue,connectionTimerId,idleTimerId,connection,credentialsProvider,listener){this.queue=queue;this.idleTimerId=idleTimerId;this.connection=connection;this.credentialsProvider=credentialsProvider;this.listener=listener;this.state=PersistentStreamState.Initial;/**
         * A close count that's incremented every time the stream is closed; used by
         * getCloseGuardedDispatcher() to invalidate callbacks that happen after
         * close.
         */this.closeCount=0;this.idleTimer=null;this.stream=null;this.backoff=new ExponentialBackoff(queue,connectionTimerId);}/**
     * Returns true if start() has been called and no error has occurred. True
     * indicates the stream is open or in the process of opening (which
     * encompasses respecting backoff, getting auth tokens, and starting the
     * actual RPC). Use isOpen() to determine if the stream is open and ready for
     * outbound requests.
     */PersistentStream.prototype.isStarted=function(){return this.state===PersistentStreamState.Starting||this.state===PersistentStreamState.Open||this.state===PersistentStreamState.Backoff;};/**
     * Returns true if the underlying RPC is open (the onOpen() listener has been
     * called) and the stream is ready for outbound requests.
     */PersistentStream.prototype.isOpen=function(){return this.state===PersistentStreamState.Open;};/**
     * Starts the RPC. Only allowed if isStarted() returns false. The stream is
     * not immediately ready for use: onOpen() will be invoked when the RPC is
     * ready for outbound requests, at which point isOpen() will return true.
     *
     * When start returns, isStarted() will return true.
     */PersistentStream.prototype.start=function(){if(this.state===PersistentStreamState.Error){this.performBackoff();return;}assert(this.state===PersistentStreamState.Initial,'Already started');this.auth();};/**
     * Stops the RPC. This call is idempotent and allowed regardless of the
     * current isStarted() state.
     *
     * When stop returns, isStarted() and isOpen() will both return false.
     */PersistentStream.prototype.stop=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.isStarted())return[3/*break*/,2];return[4/*yield*/,this.close(PersistentStreamState.Initial)];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});};/**
     * After an error the stream will usually back off on the next attempt to
     * start it. If the error warrants an immediate restart of the stream, the
     * sender can use this to indicate that the receiver should not back off.
     *
     * Each error will call the onClose() listener. That function can decide to
     * inhibit backoff if required.
     */PersistentStream.prototype.inhibitBackoff=function(){assert(!this.isStarted(),'Can only inhibit backoff in a stopped state');this.state=PersistentStreamState.Initial;this.backoff.reset();};/**
     * Marks this stream as idle. If no further actions are performed on the
     * stream for one minute, the stream will automatically close itself and
     * notify the stream's onClose() handler with Status.OK. The stream will then
     * be in a !isStarted() state, requiring the caller to start the stream again
     * before further use.
     *
     * Only streams that are in state 'Open' can be marked idle, as all other
     * states imply pending network operations.
     */PersistentStream.prototype.markIdle=function(){var _this=this;// Starts the idle time if we are in state 'Open' and are not yet already
// running a timer (in which case the previous idle timeout still applies).
if(this.isOpen()&&this.idleTimer===null){this.idleTimer=this.queue.enqueueAfterDelay(this.idleTimerId,IDLE_TIMEOUT_MS,function(){return _this.handleIdleCloseTimer();});}};/** Sends a message to the underlying stream. */PersistentStream.prototype.sendRequest=function(msg){this.cancelIdleCheck();this.stream.send(msg);};/** Called by the idle timer when the stream should close due to inactivity. */PersistentStream.prototype.handleIdleCloseTimer=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(this.isOpen()){// When timing out an idle stream there's no reason to force the stream into backoff when
// it restarts so set the stream state to Initial instead of Error.
return[2/*return*/,this.close(PersistentStreamState.Initial)];}return[2/*return*/];});});};/** Marks the stream as active again. */PersistentStream.prototype.cancelIdleCheck=function(){if(this.idleTimer){this.idleTimer.cancel();this.idleTimer=null;}};/**
     * Closes the stream and cleans up as necessary:
     *
     * * closes the underlying GRPC stream;
     * * calls the onClose handler with the given 'error';
     * * sets internal stream state to 'finalState';
     * * adjusts the backoff timer based on the error
     *
     * A new stream can be opened by calling start().
     *
     * @param finalState the intended state of the stream after closing.
     * @param error the error the connection was closed with.
     */PersistentStream.prototype.close=function(finalState,error$1){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:assert(this.isStarted(),'Only started streams should be closed.');assert(finalState===PersistentStreamState.Error||isNullOrUndefined(error$1),"Can't provide an error when not in an error state.");// Cancel any outstanding timers (they're guaranteed not to execute).
this.cancelIdleCheck();this.backoff.cancel();// Invalidates any stream-related callbacks (e.g. from auth or the
// underlying stream), guaranteeing they won't execute.
this.closeCount++;if(finalState!==PersistentStreamState.Error){// If this is an intentional close ensure we don't delay our next connection attempt.
this.backoff.reset();}else if(error$1&&error$1.code===Code.RESOURCE_EXHAUSTED){// Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
error(error$1.toString());error('Using maximum backoff delay to prevent overloading the backend.');this.backoff.resetToMax();}else if(error$1&&error$1.code===Code.UNAUTHENTICATED){// "unauthenticated" error means the token was rejected. Try force refreshing it in case it
// just expired.
this.credentialsProvider.invalidateToken();}// Clean up the underlying stream because we are no longer interested in events.
if(this.stream!==null){this.tearDown();this.stream.close();this.stream=null;}// This state must be assigned before calling onClose() to allow the callback to
// inhibit backoff or otherwise manipulate the state in its non-started state.
this.state=finalState;// Notify the listener that the stream closed.
return[4/*yield*/,this.listener.onClose(error$1)];case 1:// Notify the listener that the stream closed.
_a.sent();return[2/*return*/];}});});};/**
     * Can be overridden to perform additional cleanup before the stream is closed.
     * Calling super.tearDown() is not required.
     */PersistentStream.prototype.tearDown=function(){};PersistentStream.prototype.auth=function(){var _this=this;assert(this.state===PersistentStreamState.Initial,'Must be in initial state to auth');this.state=PersistentStreamState.Starting;var dispatchIfNotClosed=this.getCloseGuardedDispatcher(this.closeCount);// TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.
var closeCount=this.closeCount;this.credentialsProvider.getToken().then(function(token){// Stream can be stopped while waiting for authentication.
// TODO(mikelehen): We really should just use dispatchIfNotClosed
// and let this dispatch onto the queue, but that opened a spec test can
// of worms that I don't want to deal with in this PR.
if(_this.closeCount===closeCount){// Normally we'd have to schedule the callback on the AsyncQueue.
// However, the following calls are safe to be called outside the
// AsyncQueue since they don't chain asynchronous calls
_this.startStream(token);}},function(error){dispatchIfNotClosed(function(){var rpcError=new FirestoreError(Code.UNKNOWN,'Fetching auth token failed: '+error.message);return _this.handleStreamClose(rpcError);});});};PersistentStream.prototype.startStream=function(token){var _this=this;assert(this.state===PersistentStreamState.Starting,'Trying to start stream in a non-starting state');var dispatchIfNotClosed=this.getCloseGuardedDispatcher(this.closeCount);this.stream=this.startRpc(token);this.stream.onOpen(function(){dispatchIfNotClosed(function(){assert(_this.state===PersistentStreamState.Starting,'Expected stream to be in state Starting, but was '+_this.state);_this.state=PersistentStreamState.Open;return _this.listener.onOpen();});});this.stream.onClose(function(error){dispatchIfNotClosed(function(){return _this.handleStreamClose(error);});});this.stream.onMessage(function(msg){dispatchIfNotClosed(function(){return _this.onMessage(msg);});});};PersistentStream.prototype.performBackoff=function(){var _this=this;assert(this.state===PersistentStreamState.Error,'Should only perform backoff when in Error state');this.state=PersistentStreamState.Backoff;this.backoff.backoffAndRun(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){assert(this.state===PersistentStreamState.Backoff,'Backoff elapsed but state is now: '+this.state);this.state=PersistentStreamState.Initial;this.start();assert(this.isStarted(),'PersistentStream should have started');return[2/*return*/];});});});};// Visible for tests
PersistentStream.prototype.handleStreamClose=function(error){assert(this.isStarted(),"Can't handle server close on non-started stream");debug(LOG_TAG$5,"close with error: "+error);this.stream=null;// In theory the stream could close cleanly, however, in our current model
// we never expect this to happen because if we stop a stream ourselves,
// this callback will never be called. To prevent cases where we retry
// without a backoff accidentally, we set the stream to error in all cases.
return this.close(PersistentStreamState.Error,error);};/**
     * Returns a "dispatcher" function that dispatches operations onto the
     * AsyncQueue but only runs them if closeCount remains unchanged. This allows
     * us to turn auth / stream callbacks into no-ops if the stream is closed /
     * re-opened, etc.
     */PersistentStream.prototype.getCloseGuardedDispatcher=function(startCloseCount){var _this=this;return function(fn){_this.queue.enqueueAndForget(function(){if(_this.closeCount===startCloseCount){return fn();}else{debug(LOG_TAG$5,'stream callback skipped by getCloseGuardedDispatcher.');return Promise.resolve();}});};};return PersistentStream;}();/**
 * A PersistentStream that implements the Listen RPC.
 *
 * Once the Listen stream has called the onOpen() listener, any number of
 * listen() and unlisten() calls can be made to control what changes will be
 * sent from the server for ListenResponses.
 */var PersistentListenStream=/** @class */function(_super){tslib.__extends(PersistentListenStream,_super);function PersistentListenStream(queue,connection,credentials,serializer,listener){var _this=_super.call(this,queue,TimerId.ListenStreamConnectionBackoff,TimerId.ListenStreamIdle,connection,credentials,listener)||this;_this.serializer=serializer;return _this;}PersistentListenStream.prototype.startRpc=function(token){return this.connection.openStream('Listen',token);};PersistentListenStream.prototype.onMessage=function(watchChangeProto){// A successful response means the stream is healthy
this.backoff.reset();var watchChange=this.serializer.fromWatchChange(watchChangeProto);var snapshot=this.serializer.versionFromListenResponse(watchChangeProto);return this.listener.onWatchChange(watchChange,snapshot);};/**
     * Registers interest in the results of the given target. If the target
     * includes a resumeToken it will be included in the request. Results that
     * affect the target will be streamed back as WatchChange messages that
     * reference the targetId.
     */PersistentListenStream.prototype.watch=function(targetData){var request={};request.database=this.serializer.encodedDatabaseId;request.addTarget=this.serializer.toTarget(targetData);var labels=this.serializer.toListenRequestLabels(targetData);if(labels){request.labels=labels;}this.sendRequest(request);};/**
     * Unregisters interest in the results of the target associated with the
     * given targetId.
     */PersistentListenStream.prototype.unwatch=function(targetId){var request={};request.database=this.serializer.encodedDatabaseId;request.removeTarget=targetId;this.sendRequest(request);};return PersistentListenStream;}(PersistentStream);/**
 * A Stream that implements the Write RPC.
 *
 * The Write RPC requires the caller to maintain special streamToken
 * state in between calls, to help the server understand which responses the
 * client has processed by the time the next request is made. Every response
 * will contain a streamToken; this value must be passed to the next
 * request.
 *
 * After calling start() on this stream, the next request must be a handshake,
 * containing whatever streamToken is on hand. Once a response to this
 * request is received, all pending mutations may be submitted. When
 * submitting multiple batches of mutations at the same time, it's
 * okay to use the same streamToken for the calls to writeMutations.
 *
 * TODO(b/33271235): Use proto types
 */var PersistentWriteStream=/** @class */function(_super){tslib.__extends(PersistentWriteStream,_super);function PersistentWriteStream(queue,connection,credentials,serializer,listener){var _this=_super.call(this,queue,TimerId.WriteStreamConnectionBackoff,TimerId.WriteStreamIdle,connection,credentials,listener)||this;_this.serializer=serializer;_this.handshakeComplete_=false;/**
         * The last received stream token from the server, used to acknowledge which
         * responses the client has processed. Stream tokens are opaque checkpoint
         * markers whose only real value is their inclusion in the next request.
         *
         * PersistentWriteStream manages propagating this value from responses to the
         * next request.
         */_this.lastStreamToken=emptyByteString();return _this;}Object.defineProperty(PersistentWriteStream.prototype,"handshakeComplete",{/**
         * Tracks whether or not a handshake has been successfully exchanged and
         * the stream is ready to accept mutations.
         */get:function get(){return this.handshakeComplete_;},enumerable:true,configurable:true});// Override of PersistentStream.start
PersistentWriteStream.prototype.start=function(){this.handshakeComplete_=false;_super.prototype.start.call(this);};PersistentWriteStream.prototype.tearDown=function(){if(this.handshakeComplete_){this.writeMutations([]);}};PersistentWriteStream.prototype.startRpc=function(token){return this.connection.openStream('Write',token);};PersistentWriteStream.prototype.onMessage=function(responseProto){// Always capture the last stream token.
assert(!!responseProto.streamToken,'Got a write response without a stream token');this.lastStreamToken=responseProto.streamToken;if(!this.handshakeComplete_){// The first response is always the handshake response
assert(!responseProto.writeResults||responseProto.writeResults.length===0,'Got mutation results for handshake');this.handshakeComplete_=true;return this.listener.onHandshakeComplete();}else{// A successful first write response means the stream is healthy,
// Note, that we could consider a successful handshake healthy, however,
// the write itself might be causing an error we want to back off from.
this.backoff.reset();var results=this.serializer.fromWriteResults(responseProto.writeResults,responseProto.commitTime);var commitVersion=this.serializer.fromVersion(responseProto.commitTime);return this.listener.onMutationResult(commitVersion,results);}};/**
     * Sends an initial streamToken to the server, performing the handshake
     * required to make the StreamingWrite RPC work. Subsequent
     * calls should wait until onHandshakeComplete was called.
     */PersistentWriteStream.prototype.writeHandshake=function(){assert(this.isOpen(),'Writing handshake requires an opened stream');assert(!this.handshakeComplete_,'Handshake already completed');// TODO(dimond): Support stream resumption. We intentionally do not set the
// stream token on the handshake, ignoring any stream token we might have.
var request={};request.database=this.serializer.encodedDatabaseId;this.sendRequest(request);};/** Sends a group of mutations to the Firestore backend to apply. */PersistentWriteStream.prototype.writeMutations=function(mutations){var _this=this;assert(this.isOpen(),'Writing mutations requires an opened stream');assert(this.handshakeComplete_,'Handshake must be complete before writing mutations');assert(this.lastStreamToken.length>0,'Trying to write mutation without a token');var request={// Protos are typed with string, but we support UInt8Array on Node
// eslint-disable-next-line @typescript-eslint/no-explicit-any
streamToken:this.lastStreamToken,writes:mutations.map(function(mutation){return _this.serializer.toMutation(mutation);})};this.sendRequest(request);};return PersistentWriteStream;}(PersistentStream);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Datastore is a wrapper around the external Google Cloud Datastore grpc API,
 * which provides an interface that is more convenient for the rest of the
 * client SDK architecture to consume.
 */var Datastore=/** @class */function(){function Datastore(queue,connection,credentials,serializer){this.queue=queue;this.connection=connection;this.credentials=credentials;this.serializer=serializer;}Datastore.prototype.newPersistentWriteStream=function(listener){return new PersistentWriteStream(this.queue,this.connection,this.credentials,this.serializer,listener);};Datastore.prototype.newPersistentWatchStream=function(listener){return new PersistentListenStream(this.queue,this.connection,this.credentials,this.serializer,listener);};Datastore.prototype.commit=function(mutations){var _this=this;var params={database:this.serializer.encodedDatabaseId,writes:mutations.map(function(m){return _this.serializer.toMutation(m);})};return this.invokeRPC('Commit',params).then(function(response){return _this.serializer.fromWriteResults(response.writeResults,response.commitTime);});};Datastore.prototype.lookup=function(keys){var _this=this;var params={database:this.serializer.encodedDatabaseId,documents:keys.map(function(k){return _this.serializer.toName(k);})};return this.invokeStreamingRPC('BatchGetDocuments',params).then(function(response){var docs=maybeDocumentMap();response.forEach(function(proto){var doc=_this.serializer.fromMaybeDocument(proto);docs=docs.insert(doc.key,doc);});var result=[];keys.forEach(function(key){var doc=docs.get(key);assert(!!doc,'Missing entity in write response for '+key);result.push(doc);});return result;});};/** Gets an auth token and invokes the provided RPC. */Datastore.prototype.invokeRPC=function(rpcName,request){var _this=this;return this.credentials.getToken().then(function(token){return _this.connection.invokeRPC(rpcName,request,token);}).catch(function(error){if(error.code===Code.UNAUTHENTICATED){_this.credentials.invalidateToken();}throw error;});};/** Gets an auth token and invokes the provided RPC with streamed results. */Datastore.prototype.invokeStreamingRPC=function(rpcName,request){var _this=this;return this.credentials.getToken().then(function(token){return _this.connection.invokeStreamingRPC(rpcName,request,token);}).catch(function(error){if(error.code===Code.UNAUTHENTICATED){_this.credentials.invalidateToken();}throw error;});};return Datastore;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Internal transaction object responsible for accumulating the mutations to
 * perform and the base versions for any documents read.
 */var Transaction=/** @class */function(){function Transaction(datastore){this.datastore=datastore;// The version of each document that was read during this transaction.
this.readVersions=documentVersionMap();this.mutations=[];this.committed=false;/**
         * A deferred usage error that occurred previously in this transaction that
         * will cause the transaction to fail once it actually commits.
         */this.lastWriteError=null;/**
         * Set of documents that have been written in the transaction.
         *
         * When there's more than one write to the same key in a transaction, any
         * writes after hte first are handled differently.
         */this.writtenDocs=new Set();}Transaction.prototype.lookup=function(keys){return tslib.__awaiter(this,void 0,void 0,function(){var docs;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.ensureCommitNotCalled();if(this.mutations.length>0){throw new FirestoreError(Code.INVALID_ARGUMENT,'Firestore transactions require all reads to be executed before all writes.');}return[4/*yield*/,this.datastore.lookup(keys)];case 1:docs=_a.sent();docs.forEach(function(doc){if(doc instanceof NoDocument||doc instanceof Document){_this.recordVersion(doc);}else{fail('Document in a transaction was a '+doc.constructor.name);}});return[2/*return*/,docs];}});});};Transaction.prototype.set=function(key,data){this.write(data.toMutations(key,this.precondition(key)));this.writtenDocs.add(key);};Transaction.prototype.update=function(key,data){try{this.write(data.toMutations(key,this.preconditionForUpdate(key)));}catch(e){this.lastWriteError=e;}this.writtenDocs.add(key);};Transaction.prototype.delete=function(key){this.write([new DeleteMutation(key,this.precondition(key))]);this.writtenDocs.add(key);};Transaction.prototype.commit=function(){return tslib.__awaiter(this,void 0,void 0,function(){var unwritten;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.ensureCommitNotCalled();if(this.lastWriteError){throw this.lastWriteError;}unwritten=this.readVersions;// For each mutation, note that the doc was written.
this.mutations.forEach(function(mutation){unwritten=unwritten.remove(mutation.key);});if(!unwritten.isEmpty()){throw new FirestoreError(Code.INVALID_ARGUMENT,'Every document read in a transaction must also be written.');}return[4/*yield*/,this.datastore.commit(this.mutations)];case 1:_a.sent();this.committed=true;return[2/*return*/];}});});};Transaction.prototype.recordVersion=function(doc){var docVersion;if(doc instanceof Document){docVersion=doc.version;}else if(doc instanceof NoDocument){// For deleted docs, we must use baseVersion 0 when we overwrite them.
docVersion=SnapshotVersion.forDeletedDoc();}else{throw fail('Document in a transaction was a '+doc.constructor.name);}var existingVersion=this.readVersions.get(doc.key);if(existingVersion!==null){if(!docVersion.isEqual(existingVersion)){// This transaction will fail no matter what.
throw new FirestoreError(Code.ABORTED,'Document version changed between two reads.');}}else{this.readVersions=this.readVersions.insert(doc.key,docVersion);}};/**
     * Returns the version of this document when it was read in this transaction,
     * as a precondition, or no precondition if it was not read.
     */Transaction.prototype.precondition=function(key){var version=this.readVersions.get(key);if(!this.writtenDocs.has(key)&&version){return Precondition.updateTime(version);}else{return Precondition.NONE;}};/**
     * Returns the precondition for a document if the operation is an update.
     */Transaction.prototype.preconditionForUpdate=function(key){var version=this.readVersions.get(key);// The first time a document is written, we want to take into account the
// read time and existence
if(!this.writtenDocs.has(key)&&version){if(version.isEqual(SnapshotVersion.forDeletedDoc())){// The document doesn't exist, so fail the transaction.
// This has to be validated locally because you can't send a
// precondition that a document does not exist without changing the
// semantics of the backend write to be an insert. This is the reverse
// of what we want, since we want to assert that the document doesn't
// exist but then send the update and have it fail. Since we can't
// express that to the backend, we have to validate locally.
// Note: this can change once we can send separate verify writes in the
// transaction.
throw new FirestoreError(Code.INVALID_ARGUMENT,"Can't update a document that doesn't exist.");}// Document exists, base precondition on document update time.
return Precondition.updateTime(version);}else{// Document was not read, so we just use the preconditions for a blind
// update.
return Precondition.exists(true);}};Transaction.prototype.write=function(mutations){this.ensureCommitNotCalled();this.mutations=this.mutations.concat(mutations);};Transaction.prototype.ensureCommitNotCalled=function(){assert(!this.committed,'A transaction object cannot be used after its update callback has been invoked.');};return Transaction;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Describes the online state of the Firestore client. Note that this does not
 * indicate whether or not the remote store is trying to connect or not. This is
 * primarily used by the View / EventManager code to change their behavior while
 * offline (e.g. get() calls shouldn't wait for data from the server and
 * snapshot events should set metadata.isFromCache=true).
 */var OnlineState;(function(OnlineState){/**
     * The Firestore client is in an unknown online state. This means the client
     * is either not actively trying to establish a connection or it is currently
     * trying to establish a connection, but it has not succeeded or failed yet.
     * Higher-level components should not operate in offline mode.
     */OnlineState[OnlineState["Unknown"]=0]="Unknown";/**
     * The client is connected and the connections are healthy. This state is
     * reached after a successful connection and there has been at least one
     * successful message received from the backends.
     */OnlineState[OnlineState["Online"]=1]="Online";/**
     * The client is either trying to establish a connection but failing, or it
     * has been explicitly marked offline via a call to disableNetwork().
     * Higher-level components should operate in offline mode.
     */OnlineState[OnlineState["Offline"]=2]="Offline";})(OnlineState||(OnlineState={}));/** The source of an online state event. */var OnlineStateSource;(function(OnlineStateSource){OnlineStateSource[OnlineStateSource["RemoteStore"]=0]="RemoteStore";OnlineStateSource[OnlineStateSource["SharedClientState"]=1]="SharedClientState";})(OnlineStateSource||(OnlineStateSource={}));/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$6='OnlineStateTracker';// To deal with transient failures, we allow multiple stream attempts before
// giving up and transitioning from OnlineState.Unknown to Offline.
// TODO(mikelehen): This used to be set to 2 as a mitigation for b/66228394.
// @jdimond thinks that bug is sufficiently fixed so that we can set this back
// to 1. If that works okay, we could potentially remove this logic entirely.
var MAX_WATCH_STREAM_FAILURES=1;// To deal with stream attempts that don't succeed or fail in a timely manner,
// we have a timeout for OnlineState to reach Online or Offline.
// If the timeout is reached, we transition to Offline rather than waiting
// indefinitely.
var ONLINE_STATE_TIMEOUT_MS=10*1000;/**
 * A component used by the RemoteStore to track the OnlineState (that is,
 * whether or not the client as a whole should be considered to be online or
 * offline), implementing the appropriate heuristics.
 *
 * In particular, when the client is trying to connect to the backend, we
 * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for
 * a connection to succeed. If we have too many failures or the timeout elapses,
 * then we set the OnlineState to Offline, and the client will behave as if
 * it is offline (get()s will return cached data, etc.).
 */var OnlineStateTracker=/** @class */function(){function OnlineStateTracker(asyncQueue,onlineStateHandler){this.asyncQueue=asyncQueue;this.onlineStateHandler=onlineStateHandler;/** The current OnlineState. */this.state=OnlineState.Unknown;/**
         * A count of consecutive failures to open the stream. If it reaches the
         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
         * Offline.
         */this.watchStreamFailures=0;/**
         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
         * transition from OnlineState.Unknown to OnlineState.Offline without waiting
         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
         */this.onlineStateTimer=null;/**
         * Whether the client should log a warning message if it fails to connect to
         * the backend (initially true, cleared after a successful stream, or if we've
         * logged the message already).
         */this.shouldWarnClientIsOffline=true;}/**
     * Called by RemoteStore when a watch stream is started (including on each
     * backoff attempt).
     *
     * If this is the first attempt, it sets the OnlineState to Unknown and starts
     * the onlineStateTimer.
     */OnlineStateTracker.prototype.handleWatchStreamStart=function(){var _this=this;if(this.watchStreamFailures===0){this.setAndBroadcast(OnlineState.Unknown);assert(this.onlineStateTimer===null,"onlineStateTimer shouldn't be started yet");this.onlineStateTimer=this.asyncQueue.enqueueAfterDelay(TimerId.OnlineStateTimeout,ONLINE_STATE_TIMEOUT_MS,function(){_this.onlineStateTimer=null;assert(_this.state===OnlineState.Unknown,'Timer should be canceled if we transitioned to a different state.');_this.logClientOfflineWarningIfNecessary("Backend didn't respond within "+ONLINE_STATE_TIMEOUT_MS/1000+" "+"seconds.");_this.setAndBroadcast(OnlineState.Offline);// NOTE: handleWatchStreamFailure() will continue to increment
// watchStreamFailures even though we are already marked Offline,
// but this is non-harmful.
return Promise.resolve();});}};/**
     * Updates our OnlineState as appropriate after the watch stream reports a
     * failure. The first failure moves us to the 'Unknown' state. We then may
     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
     * actually transition to the 'Offline' state.
     */OnlineStateTracker.prototype.handleWatchStreamFailure=function(error){if(this.state===OnlineState.Online){this.setAndBroadcast(OnlineState.Unknown);// To get to OnlineState.Online, set() must have been called which would
// have reset our heuristics.
assert(this.watchStreamFailures===0,'watchStreamFailures must be 0');assert(this.onlineStateTimer===null,'onlineStateTimer must be null');}else{this.watchStreamFailures++;if(this.watchStreamFailures>=MAX_WATCH_STREAM_FAILURES){this.clearOnlineStateTimer();this.logClientOfflineWarningIfNecessary("Connection failed "+MAX_WATCH_STREAM_FAILURES+" "+("times. Most recent error: "+error.toString()));this.setAndBroadcast(OnlineState.Offline);}}};/**
     * Explicitly sets the OnlineState to the specified state.
     *
     * Note that this resets our timers / failure counters, etc. used by our
     * Offline heuristics, so must not be used in place of
     * handleWatchStreamStart() and handleWatchStreamFailure().
     */OnlineStateTracker.prototype.set=function(newState){this.clearOnlineStateTimer();this.watchStreamFailures=0;if(newState===OnlineState.Online){// We've connected to watch at least once. Don't warn the developer
// about being offline going forward.
this.shouldWarnClientIsOffline=false;}this.setAndBroadcast(newState);};OnlineStateTracker.prototype.setAndBroadcast=function(newState){if(newState!==this.state){this.state=newState;this.onlineStateHandler(newState);}};OnlineStateTracker.prototype.logClientOfflineWarningIfNecessary=function(details){var message="Could not reach Cloud Firestore backend. "+details+"\n"+"This typically indicates that your device does not have a healthy "+"Internet connection at the moment. The client will operate in offline "+"mode until it is able to successfully connect to the backend.";if(this.shouldWarnClientIsOffline){error(message);this.shouldWarnClientIsOffline=false;}else{debug(LOG_TAG$6,message);}};OnlineStateTracker.prototype.clearOnlineStateTimer=function(){if(this.onlineStateTimer!==null){this.onlineStateTimer.cancel();this.onlineStateTimer=null;}};return OnlineStateTracker;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Error Codes describing the different ways GRPC can fail. These are copied
 * directly from GRPC's sources here:
 *
 * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
 *
 * Important! The names of these identifiers matter because the string forms
 * are used for reverse lookups from the webchannel stream. Do NOT change the
 * names of these identifiers.
 */var RpcCode;(function(RpcCode){RpcCode[RpcCode["OK"]=0]="OK";RpcCode[RpcCode["CANCELLED"]=1]="CANCELLED";RpcCode[RpcCode["UNKNOWN"]=2]="UNKNOWN";RpcCode[RpcCode["INVALID_ARGUMENT"]=3]="INVALID_ARGUMENT";RpcCode[RpcCode["DEADLINE_EXCEEDED"]=4]="DEADLINE_EXCEEDED";RpcCode[RpcCode["NOT_FOUND"]=5]="NOT_FOUND";RpcCode[RpcCode["ALREADY_EXISTS"]=6]="ALREADY_EXISTS";RpcCode[RpcCode["PERMISSION_DENIED"]=7]="PERMISSION_DENIED";RpcCode[RpcCode["UNAUTHENTICATED"]=16]="UNAUTHENTICATED";RpcCode[RpcCode["RESOURCE_EXHAUSTED"]=8]="RESOURCE_EXHAUSTED";RpcCode[RpcCode["FAILED_PRECONDITION"]=9]="FAILED_PRECONDITION";RpcCode[RpcCode["ABORTED"]=10]="ABORTED";RpcCode[RpcCode["OUT_OF_RANGE"]=11]="OUT_OF_RANGE";RpcCode[RpcCode["UNIMPLEMENTED"]=12]="UNIMPLEMENTED";RpcCode[RpcCode["INTERNAL"]=13]="INTERNAL";RpcCode[RpcCode["UNAVAILABLE"]=14]="UNAVAILABLE";RpcCode[RpcCode["DATA_LOSS"]=15]="DATA_LOSS";})(RpcCode||(RpcCode={}));/**
 * Determines whether an error code represents a permanent error when received
 * in response to a non-write operation.
 *
 * See isPermanentWriteError for classifying write errors.
 */function isPermanentError(code){switch(code){case Code.OK:return fail('Treated status OK as error');case Code.CANCELLED:case Code.UNKNOWN:case Code.DEADLINE_EXCEEDED:case Code.RESOURCE_EXHAUSTED:case Code.INTERNAL:case Code.UNAVAILABLE:// Unauthenticated means something went wrong with our token and we need
// to retry with new credentials which will happen automatically.
case Code.UNAUTHENTICATED:return false;case Code.INVALID_ARGUMENT:case Code.NOT_FOUND:case Code.ALREADY_EXISTS:case Code.PERMISSION_DENIED:case Code.FAILED_PRECONDITION:// Aborted might be retried in some scenarios, but that is dependant on
// the context and should handled individually by the calling code.
// See https://cloud.google.com/apis/design/errors.
case Code.ABORTED:case Code.OUT_OF_RANGE:case Code.UNIMPLEMENTED:case Code.DATA_LOSS:return true;default:return fail('Unknown status code: '+code);}}/**
 * Determines whether an error code represents a permanent error when received
 * in response to a write operation.
 *
 * Write operations must be handled specially because as of b/119437764, ABORTED
 * errors on the write stream should be retried too (even though ABORTED errors
 * are not generally retryable).
 *
 * Note that during the initial handshake on the write stream an ABORTED error
 * signals that we should discard our stream token (i.e. it is permanent). This
 * means a handshake error should be classified with isPermanentError, above.
 */function isPermanentWriteError(code){return isPermanentError(code)&&code!==Code.ABORTED;}/**
 * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.
 *
 * @returns The Code equivalent to the given status string or undefined if
 *     there is no match.
 */function mapCodeFromRpcStatus(status){// lookup by string
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var code=RpcCode[status];if(code===undefined){return undefined;}return mapCodeFromRpcCode(code);}/**
 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
 * are not the same as HTTP status codes.
 *
 * @returns The Code equivalent to the given GRPC status code. Fails if there
 *     is no match.
 */function mapCodeFromRpcCode(code){if(code===undefined){// This shouldn't normally happen, but in certain error cases (like trying
// to send invalid proto messages) we may get an error with no GRPC code.
error('GRPC error has no .code');return Code.UNKNOWN;}switch(code){case RpcCode.OK:return Code.OK;case RpcCode.CANCELLED:return Code.CANCELLED;case RpcCode.UNKNOWN:return Code.UNKNOWN;case RpcCode.DEADLINE_EXCEEDED:return Code.DEADLINE_EXCEEDED;case RpcCode.RESOURCE_EXHAUSTED:return Code.RESOURCE_EXHAUSTED;case RpcCode.INTERNAL:return Code.INTERNAL;case RpcCode.UNAVAILABLE:return Code.UNAVAILABLE;case RpcCode.UNAUTHENTICATED:return Code.UNAUTHENTICATED;case RpcCode.INVALID_ARGUMENT:return Code.INVALID_ARGUMENT;case RpcCode.NOT_FOUND:return Code.NOT_FOUND;case RpcCode.ALREADY_EXISTS:return Code.ALREADY_EXISTS;case RpcCode.PERMISSION_DENIED:return Code.PERMISSION_DENIED;case RpcCode.FAILED_PRECONDITION:return Code.FAILED_PRECONDITION;case RpcCode.ABORTED:return Code.ABORTED;case RpcCode.OUT_OF_RANGE:return Code.OUT_OF_RANGE;case RpcCode.UNIMPLEMENTED:return Code.UNIMPLEMENTED;case RpcCode.DATA_LOSS:return Code.DATA_LOSS;default:return fail('Unknown status code: '+code);}}/**
 * Maps an RPC code from a Code. This is the reverse operation from
 * mapCodeFromRpcCode and should really only be used in tests.
 */function mapRpcCodeFromCode(code){if(code===undefined){return RpcCode.OK;}switch(code){case Code.OK:return RpcCode.OK;case Code.CANCELLED:return RpcCode.CANCELLED;case Code.UNKNOWN:return RpcCode.UNKNOWN;case Code.DEADLINE_EXCEEDED:return RpcCode.DEADLINE_EXCEEDED;case Code.RESOURCE_EXHAUSTED:return RpcCode.RESOURCE_EXHAUSTED;case Code.INTERNAL:return RpcCode.INTERNAL;case Code.UNAVAILABLE:return RpcCode.UNAVAILABLE;case Code.UNAUTHENTICATED:return RpcCode.UNAUTHENTICATED;case Code.INVALID_ARGUMENT:return RpcCode.INVALID_ARGUMENT;case Code.NOT_FOUND:return RpcCode.NOT_FOUND;case Code.ALREADY_EXISTS:return RpcCode.ALREADY_EXISTS;case Code.PERMISSION_DENIED:return RpcCode.PERMISSION_DENIED;case Code.FAILED_PRECONDITION:return RpcCode.FAILED_PRECONDITION;case Code.ABORTED:return RpcCode.ABORTED;case Code.OUT_OF_RANGE:return RpcCode.OUT_OF_RANGE;case Code.UNIMPLEMENTED:return RpcCode.UNIMPLEMENTED;case Code.DATA_LOSS:return RpcCode.DATA_LOSS;default:return fail('Unknown status code: '+code);}}/**
 * Converts an HTTP response's error status to the equivalent error code.
 *
 * @param status An HTTP error response status ("FAILED_PRECONDITION",
 * "UNKNOWN", etc.)
 * @returns The equivalent Code. Non-matching responses are mapped to
 *     Code.UNKNOWN.
 */function mapCodeFromHttpResponseErrorStatus(status){var serverError=status.toLowerCase().replace('_','-');return Object.values(Code).indexOf(serverError)>=0?serverError:Code.UNKNOWN;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * DocumentSet is an immutable (copy-on-write) collection that holds documents
 * in order specified by the provided comparator. We always add a document key
 * comparator on top of what is provided to guarantee document equality based on
 * the key.
 */var DocumentSet=/** @class */function(){/** The default ordering is by key if the comparator is omitted */function DocumentSet(comp){// We are adding document key comparator to the end as it's the only
// guaranteed unique property of a document.
if(comp){this.comparator=function(d1,d2){return comp(d1,d2)||DocumentKey.comparator(d1.key,d2.key);};}else{this.comparator=function(d1,d2){return DocumentKey.comparator(d1.key,d2.key);};}this.keyedMap=documentMap();this.sortedSet=new SortedMap(this.comparator);}/**
     * Returns an empty copy of the existing DocumentSet, using the same
     * comparator.
     */DocumentSet.emptySet=function(oldSet){return new DocumentSet(oldSet.comparator);};DocumentSet.prototype.has=function(key){return this.keyedMap.get(key)!=null;};DocumentSet.prototype.get=function(key){return this.keyedMap.get(key);};DocumentSet.prototype.first=function(){return this.sortedSet.minKey();};DocumentSet.prototype.last=function(){return this.sortedSet.maxKey();};DocumentSet.prototype.isEmpty=function(){return this.sortedSet.isEmpty();};/**
     * Returns the index of the provided key in the document set, or -1 if the
     * document key is not present in the set;
     */DocumentSet.prototype.indexOf=function(key){var doc=this.keyedMap.get(key);return doc?this.sortedSet.indexOf(doc):-1;};Object.defineProperty(DocumentSet.prototype,"size",{get:function get(){return this.sortedSet.size;},enumerable:true,configurable:true});/** Iterates documents in order defined by "comparator" */DocumentSet.prototype.forEach=function(cb){this.sortedSet.inorderTraversal(function(k,v){cb(k);return false;});};/** Inserts or updates a document with the same key */DocumentSet.prototype.add=function(doc){// First remove the element if we have it.
var set=this.delete(doc.key);return set.copy(set.keyedMap.insert(doc.key,doc),set.sortedSet.insert(doc,null));};/** Deletes a document with a given key */DocumentSet.prototype.delete=function(key){var doc=this.get(key);if(!doc){return this;}return this.copy(this.keyedMap.remove(key),this.sortedSet.remove(doc));};DocumentSet.prototype.isEqual=function(other){if(!(other instanceof DocumentSet)){return false;}if(this.size!==other.size){return false;}var thisIt=this.sortedSet.getIterator();var otherIt=other.sortedSet.getIterator();while(thisIt.hasNext()){var thisDoc=thisIt.getNext().key;var otherDoc=otherIt.getNext().key;if(!thisDoc.isEqual(otherDoc)){return false;}}return true;};DocumentSet.prototype.toString=function(){var docStrings=[];this.forEach(function(doc){docStrings.push(doc.toString());});if(docStrings.length===0){return'DocumentSet ()';}else{return'DocumentSet (\n  '+docStrings.join('  \n')+'\n)';}};DocumentSet.prototype.copy=function(keyedMap,sortedSet){var newSet=new DocumentSet();newSet.comparator=this.comparator;newSet.keyedMap=keyedMap;newSet.sortedSet=sortedSet;return newSet;};return DocumentSet;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ChangeType;(function(ChangeType){ChangeType[ChangeType["Added"]=0]="Added";ChangeType[ChangeType["Removed"]=1]="Removed";ChangeType[ChangeType["Modified"]=2]="Modified";ChangeType[ChangeType["Metadata"]=3]="Metadata";})(ChangeType||(ChangeType={}));var SyncState;(function(SyncState){SyncState[SyncState["Local"]=0]="Local";SyncState[SyncState["Synced"]=1]="Synced";})(SyncState||(SyncState={}));/**
 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
 * duplicate events for the same doc.
 */var DocumentChangeSet=/** @class */function(){function DocumentChangeSet(){this.changeMap=new SortedMap(DocumentKey.comparator);}DocumentChangeSet.prototype.track=function(change){var key=change.doc.key;var oldChange=this.changeMap.get(key);if(!oldChange){this.changeMap=this.changeMap.insert(key,change);return;}// Merge the new change with the existing change.
if(change.type!==ChangeType.Added&&oldChange.type===ChangeType.Metadata){this.changeMap=this.changeMap.insert(key,change);}else if(change.type===ChangeType.Metadata&&oldChange.type!==ChangeType.Removed){this.changeMap=this.changeMap.insert(key,{type:oldChange.type,doc:change.doc});}else if(change.type===ChangeType.Modified&&oldChange.type===ChangeType.Modified){this.changeMap=this.changeMap.insert(key,{type:ChangeType.Modified,doc:change.doc});}else if(change.type===ChangeType.Modified&&oldChange.type===ChangeType.Added){this.changeMap=this.changeMap.insert(key,{type:ChangeType.Added,doc:change.doc});}else if(change.type===ChangeType.Removed&&oldChange.type===ChangeType.Added){this.changeMap=this.changeMap.remove(key);}else if(change.type===ChangeType.Removed&&oldChange.type===ChangeType.Modified){this.changeMap=this.changeMap.insert(key,{type:ChangeType.Removed,doc:oldChange.doc});}else if(change.type===ChangeType.Added&&oldChange.type===ChangeType.Removed){this.changeMap=this.changeMap.insert(key,{type:ChangeType.Modified,doc:change.doc});}else{// This includes these cases, which don't make sense:
// Added->Added
// Removed->Removed
// Modified->Added
// Removed->Modified
// Metadata->Added
// Removed->Metadata
fail('unsupported combination of changes: '+JSON.stringify(change)+' after '+JSON.stringify(oldChange));}};DocumentChangeSet.prototype.getChanges=function(){var changes=[];this.changeMap.inorderTraversal(function(key,change){changes.push(change);});return changes;};return DocumentChangeSet;}();var ViewSnapshot=/** @class */function(){function ViewSnapshot(query,docs,oldDocs,docChanges,mutatedKeys,fromCache,syncStateChanged,excludesMetadataChanges){this.query=query;this.docs=docs;this.oldDocs=oldDocs;this.docChanges=docChanges;this.mutatedKeys=mutatedKeys;this.fromCache=fromCache;this.syncStateChanged=syncStateChanged;this.excludesMetadataChanges=excludesMetadataChanges;}/** Returns a view snapshot as if all documents in the snapshot were added. */ViewSnapshot.fromInitialDocuments=function(query,documents,mutatedKeys,fromCache){var changes=[];documents.forEach(function(doc){changes.push({type:ChangeType.Added,doc:doc});});return new ViewSnapshot(query,documents,DocumentSet.emptySet(documents),changes,mutatedKeys,fromCache,/* syncStateChanged= */true,/* excludesMetadataChanges= */false);};Object.defineProperty(ViewSnapshot.prototype,"hasPendingWrites",{get:function get(){return!this.mutatedKeys.isEmpty();},enumerable:true,configurable:true});ViewSnapshot.prototype.isEqual=function(other){if(this.fromCache!==other.fromCache||this.syncStateChanged!==other.syncStateChanged||!this.mutatedKeys.isEqual(other.mutatedKeys)||!this.query.isEqual(other.query)||!this.docs.isEqual(other.docs)||!this.oldDocs.isEqual(other.oldDocs)){return false;}var changes=this.docChanges;var otherChanges=other.docChanges;if(changes.length!==otherChanges.length){return false;}for(var i=0;i<changes.length;i++){if(changes[i].type!==otherChanges[i].type||!changes[i].doc.isEqual(otherChanges[i].doc)){return false;}}return true;};return ViewSnapshot;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * An event from the RemoteStore. It is split into targetChanges (changes to the
 * state or the set of documents in our watched targets) and documentUpdates
 * (changes to the actual documents).
 */var RemoteEvent=/** @class */function(){function RemoteEvent(/**
     * The snapshot version this event brings us up to, or MIN if not set.
     */snapshotVersion,/**
     * A map from target to changes to the target. See TargetChange.
     */targetChanges,/**
     * A set of targets that is known to be inconsistent. Listens for these
     * targets should be re-established without resume tokens.
     */targetMismatches,/**
     * A set of which documents have changed or been deleted, along with the
     * doc's new values (if not deleted).
     */documentUpdates,/**
     * A set of which document updates are due only to limbo resolution targets.
     */resolvedLimboDocuments){this.snapshotVersion=snapshotVersion;this.targetChanges=targetChanges;this.targetMismatches=targetMismatches;this.documentUpdates=documentUpdates;this.resolvedLimboDocuments=resolvedLimboDocuments;}/**
     * HACK: Views require RemoteEvents in order to determine whether the view is
     * CURRENT, but secondary tabs don't receive remote events. So this method is
     * used to create a synthesized RemoteEvent that can be used to apply a
     * CURRENT status change to a View, for queries executed in a different tab.
     */ // PORTING NOTE: Multi-tab only
RemoteEvent.createSynthesizedRemoteEventForCurrentChange=function(targetId,current){var _a;var targetChanges=(_a={},_a[targetId]=TargetChange.createSynthesizedTargetChangeForCurrentChange(targetId,current),_a);return new RemoteEvent(SnapshotVersion.MIN,targetChanges,targetIdSet(),maybeDocumentMap(),documentKeySet());};return RemoteEvent;}();/**
 * A TargetChange specifies the set of changes for a specific target as part of
 * a RemoteEvent. These changes track which documents are added, modified or
 * removed, as well as the target's resume token and whether the target is
 * marked CURRENT.
 * The actual changes *to* documents are not part of the TargetChange since
 * documents may be part of multiple targets.
 */var TargetChange=/** @class */function(){function TargetChange(/**
     * An opaque, server-assigned token that allows watching a query to be resumed
     * after disconnecting without retransmitting all the data that matches the
     * query. The resume token essentially identifies a point in time from which
     * the server should resume sending results.
     */resumeToken,/**
     * The "current" (synced) status of this target. Note that "current"
     * has special meaning in the RPC protocol that implies that a target is
     * both up-to-date and consistent with the rest of the watch stream.
     */current,/**
     * The set of documents that were newly assigned to this target as part of
     * this remote event.
     */addedDocuments,/**
     * The set of documents that were already assigned to this target but received
     * an update during this remote event.
     */modifiedDocuments,/**
     * The set of documents that were removed from this target as part of this
     * remote event.
     */removedDocuments){this.resumeToken=resumeToken;this.current=current;this.addedDocuments=addedDocuments;this.modifiedDocuments=modifiedDocuments;this.removedDocuments=removedDocuments;}/**
     * This method is used to create a synthesized TargetChanges that can be used to
     * apply a CURRENT status change to a View (for queries executed in a different
     * tab) or for new queries (to raise snapshots with correct CURRENT status).
     */TargetChange.createSynthesizedTargetChangeForCurrentChange=function(targetId,current){return new TargetChange(emptyByteString(),current,documentKeySet(),documentKeySet(),documentKeySet());};return TargetChange;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Represents a changed document and a list of target ids to which this change
 * applies.
 *
 * If document has been deleted NoDocument will be provided.
 */var DocumentWatchChange=/** @class */function(){function DocumentWatchChange(/** The new document applies to all of these targets. */updatedTargetIds,/** The new document is removed from all of these targets. */removedTargetIds,/** The key of the document for this change. */key,/**
     * The new document or NoDocument if it was deleted. Is null if the
     * document went out of view without the server sending a new document.
     */newDoc){this.updatedTargetIds=updatedTargetIds;this.removedTargetIds=removedTargetIds;this.key=key;this.newDoc=newDoc;}return DocumentWatchChange;}();var ExistenceFilterChange=/** @class */function(){function ExistenceFilterChange(targetId,existenceFilter){this.targetId=targetId;this.existenceFilter=existenceFilter;}return ExistenceFilterChange;}();var WatchTargetChangeState;(function(WatchTargetChangeState){WatchTargetChangeState[WatchTargetChangeState["NoChange"]=0]="NoChange";WatchTargetChangeState[WatchTargetChangeState["Added"]=1]="Added";WatchTargetChangeState[WatchTargetChangeState["Removed"]=2]="Removed";WatchTargetChangeState[WatchTargetChangeState["Current"]=3]="Current";WatchTargetChangeState[WatchTargetChangeState["Reset"]=4]="Reset";})(WatchTargetChangeState||(WatchTargetChangeState={}));var WatchTargetChange=/** @class */function(){function WatchTargetChange(/** What kind of change occurred to the watch target. */state,/** The target IDs that were added/removed/set. */targetIds,/**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */resumeToken,/** An RPC error indicating why the watch failed. */cause){if(resumeToken===void 0){resumeToken=emptyByteString();}if(cause===void 0){cause=null;}this.state=state;this.targetIds=targetIds;this.resumeToken=resumeToken;this.cause=cause;}return WatchTargetChange;}();/** Tracks the internal state of a Watch target. */var TargetState=/** @class */function(){function TargetState(){/**
         * The number of pending responses (adds or removes) that we are waiting on.
         * We only consider targets active that have no pending responses.
         */this.pendingResponses=0;/**
         * Keeps track of the document changes since the last raised snapshot.
         *
         * These changes are continuously updated as we receive document updates and
         * always reflect the current set of changes against the last issued snapshot.
         */this.documentChanges=snapshotChangesMap();/** See public getters for explanations of these fields. */this._resumeToken=emptyByteString();this._current=false;/**
         * Whether this target state should be included in the next snapshot. We
         * initialize to true so that newly-added targets are included in the next
         * RemoteEvent.
         */this._hasPendingChanges=true;}Object.defineProperty(TargetState.prototype,"current",{/**
         * Whether this target has been marked 'current'.
         *
         * 'Current' has special meaning in the RPC protocol: It implies that the
         * Watch backend has sent us all changes up to the point at which the target
         * was added and that the target is consistent with the rest of the watch
         * stream.
         */get:function get(){return this._current;},enumerable:true,configurable:true});Object.defineProperty(TargetState.prototype,"resumeToken",{/** The last resume token sent to us for this target. */get:function get(){return this._resumeToken;},enumerable:true,configurable:true});Object.defineProperty(TargetState.prototype,"isPending",{/** Whether this target has pending target adds or target removes. */get:function get(){return this.pendingResponses!==0;},enumerable:true,configurable:true});Object.defineProperty(TargetState.prototype,"hasPendingChanges",{/** Whether we have modified any state that should trigger a snapshot. */get:function get(){return this._hasPendingChanges;},enumerable:true,configurable:true});/**
     * Applies the resume token to the TargetChange, but only when it has a new
     * value. Empty resumeTokens are discarded.
     */TargetState.prototype.updateResumeToken=function(resumeToken){if(resumeToken.length>0){this._hasPendingChanges=true;this._resumeToken=resumeToken;}};/**
     * Creates a target change from the current set of changes.
     *
     * To reset the document changes after raising this snapshot, call
     * `clearPendingChanges()`.
     */TargetState.prototype.toTargetChange=function(){var addedDocuments=documentKeySet();var modifiedDocuments=documentKeySet();var removedDocuments=documentKeySet();this.documentChanges.forEach(function(key,changeType){switch(changeType){case ChangeType.Added:addedDocuments=addedDocuments.add(key);break;case ChangeType.Modified:modifiedDocuments=modifiedDocuments.add(key);break;case ChangeType.Removed:removedDocuments=removedDocuments.add(key);break;default:fail('Encountered invalid change type: '+changeType);}});return new TargetChange(this._resumeToken,this._current,addedDocuments,modifiedDocuments,removedDocuments);};/**
     * Resets the document changes and sets `hasPendingChanges` to false.
     */TargetState.prototype.clearPendingChanges=function(){this._hasPendingChanges=false;this.documentChanges=snapshotChangesMap();};TargetState.prototype.addDocumentChange=function(key,changeType){this._hasPendingChanges=true;this.documentChanges=this.documentChanges.insert(key,changeType);};TargetState.prototype.removeDocumentChange=function(key){this._hasPendingChanges=true;this.documentChanges=this.documentChanges.remove(key);};TargetState.prototype.recordPendingTargetRequest=function(){this.pendingResponses+=1;};TargetState.prototype.recordTargetResponse=function(){this.pendingResponses-=1;};TargetState.prototype.markCurrent=function(){this._hasPendingChanges=true;this._current=true;};return TargetState;}();var LOG_TAG$7='WatchChangeAggregator';/**
 * A helper class to accumulate watch changes into a RemoteEvent.
 */var WatchChangeAggregator=/** @class */function(){function WatchChangeAggregator(metadataProvider){this.metadataProvider=metadataProvider;/** The internal state of all tracked targets. */this.targetStates={};/** Keeps track of the documents to update since the last raised snapshot. */this.pendingDocumentUpdates=maybeDocumentMap();/** A mapping of document keys to their set of target IDs. */this.pendingDocumentTargetMapping=documentTargetMap();/**
         * A list of targets with existence filter mismatches. These targets are
         * known to be inconsistent and their listens needs to be re-established by
         * RemoteStore.
         */this.pendingTargetResets=new SortedSet(primitiveComparator);}/**
     * Processes and adds the DocumentWatchChange to the current set of changes.
     */WatchChangeAggregator.prototype.handleDocumentChange=function(docChange){for(var _i=0,_a=docChange.updatedTargetIds;_i<_a.length;_i++){var targetId=_a[_i];if(docChange.newDoc instanceof Document){this.addDocumentToTarget(targetId,docChange.newDoc);}else if(docChange.newDoc instanceof NoDocument){this.removeDocumentFromTarget(targetId,docChange.key,docChange.newDoc);}}for(var _b=0,_c=docChange.removedTargetIds;_b<_c.length;_b++){var targetId=_c[_b];this.removeDocumentFromTarget(targetId,docChange.key,docChange.newDoc);}};/** Processes and adds the WatchTargetChange to the current set of changes. */WatchChangeAggregator.prototype.handleTargetChange=function(targetChange){var _this=this;this.forEachTarget(targetChange,function(targetId){var targetState=_this.ensureTargetState(targetId);switch(targetChange.state){case WatchTargetChangeState.NoChange:if(_this.isActiveTarget(targetId)){targetState.updateResumeToken(targetChange.resumeToken);}break;case WatchTargetChangeState.Added:// We need to decrement the number of pending acks needed from watch
// for this targetId.
targetState.recordTargetResponse();if(!targetState.isPending){// We have a freshly added target, so we need to reset any state
// that we had previously. This can happen e.g. when remove and add
// back a target for existence filter mismatches.
targetState.clearPendingChanges();}targetState.updateResumeToken(targetChange.resumeToken);break;case WatchTargetChangeState.Removed:// We need to keep track of removed targets to we can post-filter and
// remove any target changes.
// We need to decrement the number of pending acks needed from watch
// for this targetId.
targetState.recordTargetResponse();if(!targetState.isPending){_this.removeTarget(targetId);}assert(!targetChange.cause,'WatchChangeAggregator does not handle errored targets');break;case WatchTargetChangeState.Current:if(_this.isActiveTarget(targetId)){targetState.markCurrent();targetState.updateResumeToken(targetChange.resumeToken);}break;case WatchTargetChangeState.Reset:if(_this.isActiveTarget(targetId)){// Reset the target and synthesizes removes for all existing
// documents. The backend will re-add any documents that still
// match the target before it sends the next global snapshot.
_this.resetTarget(targetId);targetState.updateResumeToken(targetChange.resumeToken);}break;default:fail('Unknown target watch change state: '+targetChange.state);}});};/**
     * Iterates over all targetIds that the watch change applies to: either the
     * targetIds explicitly listed in the change or the targetIds of all currently
     * active targets.
     */WatchChangeAggregator.prototype.forEachTarget=function(targetChange,fn){if(targetChange.targetIds.length>0){targetChange.targetIds.forEach(fn);}else{forEachNumber(this.targetStates,fn);}};/**
     * Handles existence filters and synthesizes deletes for filter mismatches.
     * Targets that are invalidated by filter mismatches are added to
     * `pendingTargetResets`.
     */WatchChangeAggregator.prototype.handleExistenceFilter=function(watchChange){var targetId=watchChange.targetId;var expectedCount=watchChange.existenceFilter.count;var targetData=this.targetDataForActiveTarget(targetId);if(targetData){var target=targetData.target;if(target.isDocumentQuery()){if(expectedCount===0){// The existence filter told us the document does not exist. We deduce
// that this document does not exist and apply a deleted document to
// our updates. Without applying this deleted document there might be
// another query that will raise this document as part of a snapshot
// until it is resolved, essentially exposing inconsistency between
// queries.
var key=new DocumentKey(target.path);this.removeDocumentFromTarget(targetId,key,new NoDocument(key,SnapshotVersion.forDeletedDoc()));}else{assert(expectedCount===1,'Single document existence filter with count: '+expectedCount);}}else{var currentSize=this.getCurrentDocumentCountForTarget(targetId);if(currentSize!==expectedCount){// Existence filter mismatch: We reset the mapping and raise a new
// snapshot with `isFromCache:true`.
this.resetTarget(targetId);this.pendingTargetResets=this.pendingTargetResets.add(targetId);}}}};/**
     * Converts the currently accumulated state into a remote event at the
     * provided snapshot version. Resets the accumulated changes before returning.
     */WatchChangeAggregator.prototype.createRemoteEvent=function(snapshotVersion){var _this=this;var targetChanges={};forEachNumber(this.targetStates,function(targetId,targetState){var targetData=_this.targetDataForActiveTarget(targetId);if(targetData){if(targetState.current&&targetData.target.isDocumentQuery()){// Document queries for document that don't exist can produce an empty
// result set. To update our local cache, we synthesize a document
// delete if we have not previously received the document. This
// resolves the limbo state of the document, removing it from
// limboDocumentRefs.
//
// TODO(dimond): Ideally we would have an explicit lookup target
// instead resulting in an explicit delete message and we could
// remove this special logic.
var key=new DocumentKey(targetData.target.path);if(_this.pendingDocumentUpdates.get(key)===null&&!_this.targetContainsDocument(targetId,key)){_this.removeDocumentFromTarget(targetId,key,new NoDocument(key,snapshotVersion));}}if(targetState.hasPendingChanges){targetChanges[targetId]=targetState.toTargetChange();targetState.clearPendingChanges();}}});var resolvedLimboDocuments=documentKeySet();// We extract the set of limbo-only document updates as the GC logic
// special-cases documents that do not appear in the target cache.
//
// TODO(gsoltis): Expand on this comment once GC is available in the JS
// client.
this.pendingDocumentTargetMapping.forEach(function(key,targets){var isOnlyLimboTarget=true;targets.forEachWhile(function(targetId){var targetData=_this.targetDataForActiveTarget(targetId);if(targetData&&targetData.purpose!==TargetPurpose.LimboResolution){isOnlyLimboTarget=false;return false;}return true;});if(isOnlyLimboTarget){resolvedLimboDocuments=resolvedLimboDocuments.add(key);}});var remoteEvent=new RemoteEvent(snapshotVersion,targetChanges,this.pendingTargetResets,this.pendingDocumentUpdates,resolvedLimboDocuments);this.pendingDocumentUpdates=maybeDocumentMap();this.pendingDocumentTargetMapping=documentTargetMap();this.pendingTargetResets=new SortedSet(primitiveComparator);return remoteEvent;};/**
     * Adds the provided document to the internal list of document updates and
     * its document key to the given target's mapping.
     */ // Visible for testing.
WatchChangeAggregator.prototype.addDocumentToTarget=function(targetId,document){if(!this.isActiveTarget(targetId)){return;}var changeType=this.targetContainsDocument(targetId,document.key)?ChangeType.Modified:ChangeType.Added;var targetState=this.ensureTargetState(targetId);targetState.addDocumentChange(document.key,changeType);this.pendingDocumentUpdates=this.pendingDocumentUpdates.insert(document.key,document);this.pendingDocumentTargetMapping=this.pendingDocumentTargetMapping.insert(document.key,this.ensureDocumentTargetMapping(document.key).add(targetId));};/**
     * Removes the provided document from the target mapping. If the
     * document no longer matches the target, but the document's state is still
     * known (e.g. we know that the document was deleted or we received the change
     * that caused the filter mismatch), the new document can be provided
     * to update the remote document cache.
     */ // Visible for testing.
WatchChangeAggregator.prototype.removeDocumentFromTarget=function(targetId,key,updatedDocument){if(!this.isActiveTarget(targetId)){return;}var targetState=this.ensureTargetState(targetId);if(this.targetContainsDocument(targetId,key)){targetState.addDocumentChange(key,ChangeType.Removed);}else{// The document may have entered and left the target before we raised a
// snapshot, so we can just ignore the change.
targetState.removeDocumentChange(key);}this.pendingDocumentTargetMapping=this.pendingDocumentTargetMapping.insert(key,this.ensureDocumentTargetMapping(key).delete(targetId));if(updatedDocument){this.pendingDocumentUpdates=this.pendingDocumentUpdates.insert(key,updatedDocument);}};WatchChangeAggregator.prototype.removeTarget=function(targetId){delete this.targetStates[targetId];};/**
     * Returns the current count of documents in the target. This includes both
     * the number of documents that the LocalStore considers to be part of the
     * target as well as any accumulated changes.
     */WatchChangeAggregator.prototype.getCurrentDocumentCountForTarget=function(targetId){var targetState=this.ensureTargetState(targetId);var targetChange=targetState.toTargetChange();return this.metadataProvider.getRemoteKeysForTarget(targetId).size+targetChange.addedDocuments.size-targetChange.removedDocuments.size;};/**
     * Increment the number of acks needed from watch before we can consider the
     * server to be 'in-sync' with the client's active targets.
     */WatchChangeAggregator.prototype.recordPendingTargetRequest=function(targetId){// For each request we get we need to record we need a response for it.
var targetState=this.ensureTargetState(targetId);targetState.recordPendingTargetRequest();};WatchChangeAggregator.prototype.ensureTargetState=function(targetId){if(!this.targetStates[targetId]){this.targetStates[targetId]=new TargetState();}return this.targetStates[targetId];};WatchChangeAggregator.prototype.ensureDocumentTargetMapping=function(key){var targetMapping=this.pendingDocumentTargetMapping.get(key);if(!targetMapping){targetMapping=new SortedSet(primitiveComparator);this.pendingDocumentTargetMapping=this.pendingDocumentTargetMapping.insert(key,targetMapping);}return targetMapping;};/**
     * Verifies that the user is still interested in this target (by calling
     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
     * from watch.
     */WatchChangeAggregator.prototype.isActiveTarget=function(targetId){var targetActive=this.targetDataForActiveTarget(targetId)!==null;if(!targetActive){debug(LOG_TAG$7,'Detected inactive target',targetId);}return targetActive;};/**
     * Returns the TargetData for an active target (i.e. a target that the user
     * is still interested in that has no outstanding target change requests).
     */WatchChangeAggregator.prototype.targetDataForActiveTarget=function(targetId){var targetState=this.targetStates[targetId];return targetState&&targetState.isPending?null:this.metadataProvider.getTargetDataForTarget(targetId);};/**
     * Resets the state of a Watch target to its initial state (e.g. sets
     * 'current' to false, clears the resume token and removes its target mapping
     * from all documents).
     */WatchChangeAggregator.prototype.resetTarget=function(targetId){var _this=this;assert(!this.targetStates[targetId].isPending,'Should only reset active targets');this.targetStates[targetId]=new TargetState();// Trigger removal for any documents currently mapped to this target.
// These removals will be part of the initial snapshot if Watch does not
// resend these documents.
var existingKeys=this.metadataProvider.getRemoteKeysForTarget(targetId);existingKeys.forEach(function(key){_this.removeDocumentFromTarget(targetId,key,/*updatedDocument=*/null);});};/**
     * Returns whether the LocalStore considers the document to be part of the
     * specified target.
     */WatchChangeAggregator.prototype.targetContainsDocument=function(targetId,key){var existingKeys=this.metadataProvider.getRemoteKeysForTarget(targetId);return existingKeys.has(key);};return WatchChangeAggregator;}();function documentTargetMap(){return new SortedMap(DocumentKey.comparator);}function snapshotChangesMap(){return new SortedMap(DocumentKey.comparator);}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$8='RemoteStore';// TODO(b/35853402): Negotiate this with the stream.
var MAX_PENDING_WRITES=10;/**
 * RemoteStore - An interface to remotely stored data, basically providing a
 * wrapper around the Datastore that is more reliable for the rest of the
 * system.
 *
 * RemoteStore is responsible for maintaining the connection to the server.
 * - maintaining a list of active listens.
 * - reconnecting when the connection is dropped.
 * - resuming all the active listens on reconnect.
 *
 * RemoteStore handles all incoming events from the Datastore.
 * - listening to the watch stream and repackaging the events as RemoteEvents
 * - notifying SyncEngine of any changes to the active listens.
 *
 * RemoteStore takes writes from other components and handles them reliably.
 * - pulling pending mutations from LocalStore and sending them to Datastore.
 * - retrying mutations that failed because of network problems.
 * - acking mutations to the SyncEngine once they are accepted or rejected.
 */var RemoteStore=/** @class */function(){function RemoteStore(/**
     * The local store, used to fill the write pipeline with outbound mutations.
     */localStore,/** The client-side proxy for interacting with the backend. */datastore,asyncQueue,onlineStateHandler,connectivityMonitor){var _this=this;this.localStore=localStore;this.datastore=datastore;/**
         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
         * LocalStore via fillWritePipeline() and have or will send to the write
         * stream.
         *
         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
         * restart the write stream. When the stream is established the writes in the
         * pipeline will be sent in order.
         *
         * Writes remain in writePipeline until they are acknowledged by the backend
         * and thus will automatically be re-sent if the stream is interrupted /
         * restarted before they're acknowledged.
         *
         * Write responses from the backend are linked to their originating request
         * purely based on order, and so we can just shift() writes from the front of
         * the writePipeline as we receive responses.
         */this.writePipeline=[];/**
         * A mapping of watched targets that the client cares about tracking and the
         * user has explicitly called a 'listen' for this target.
         *
         * These targets may or may not have been sent to or acknowledged by the
         * server. On re-establishing the listen stream, these targets should be sent
         * to the server. The targets removed with unlistens are removed eagerly
         * without waiting for confirmation from the listen stream.
         */this.listenTargets={};this.watchChangeAggregator=null;/**
         * Set to true by enableNetwork() and false by disableNetwork() and indicates
         * the user-preferred network state.
         */this.networkEnabled=false;this.isPrimary=false;this.connectivityMonitor=connectivityMonitor;this.connectivityMonitor.addCallback(function(status){asyncQueue.enqueueAndForget(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.canUseNetwork())return[3/*break*/,2];debug(LOG_TAG$8,'Restarting streams for network reachability change.');return[4/*yield*/,this.restartNetwork()];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});});});this.onlineStateTracker=new OnlineStateTracker(asyncQueue,onlineStateHandler);// Create streams (but note they're not started yet).
this.watchStream=this.datastore.newPersistentWatchStream({onOpen:this.onWatchStreamOpen.bind(this),onClose:this.onWatchStreamClose.bind(this),onWatchChange:this.onWatchStreamChange.bind(this)});this.writeStream=this.datastore.newPersistentWriteStream({onOpen:this.onWriteStreamOpen.bind(this),onClose:this.onWriteStreamClose.bind(this),onHandshakeComplete:this.onWriteHandshakeComplete.bind(this),onMutationResult:this.onMutationResult.bind(this)});}/**
     * Starts up the remote store, creating streams, restoring state from
     * LocalStore, etc.
     */RemoteStore.prototype.start=function(){return this.enableNetwork();};/** Re-enables the network. Idempotent. */RemoteStore.prototype.enableNetwork=function(){return tslib.__awaiter(this,void 0,void 0,function(){var _a;return tslib.__generator(this,function(_b){switch(_b.label){case 0:this.networkEnabled=true;if(!this.canUseNetwork())return[3/*break*/,3];_a=this.writeStream;return[4/*yield*/,this.localStore.getLastStreamToken()];case 1:_a.lastStreamToken=_b.sent();if(this.shouldStartWatchStream()){this.startWatchStream();}else{this.onlineStateTracker.set(OnlineState.Unknown);}// This will start the write stream if necessary.
return[4/*yield*/,this.fillWritePipeline()];case 2:// This will start the write stream if necessary.
_b.sent();_b.label=3;case 3:return[2/*return*/];}});});};/**
     * Temporarily disables the network. The network can be re-enabled using
     * enableNetwork().
     */RemoteStore.prototype.disableNetwork=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.networkEnabled=false;return[4/*yield*/,this.disableNetworkInternal()];case 1:_a.sent();// Set the OnlineState to Offline so get()s return from cache, etc.
this.onlineStateTracker.set(OnlineState.Offline);return[2/*return*/];}});});};RemoteStore.prototype.disableNetworkInternal=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.writeStream.stop()];case 1:_a.sent();return[4/*yield*/,this.watchStream.stop()];case 2:_a.sent();if(this.writePipeline.length>0){debug(LOG_TAG$8,"Stopping write stream with "+this.writePipeline.length+" pending writes");this.writePipeline=[];}this.cleanUpWatchStreamState();return[2/*return*/];}});});};RemoteStore.prototype.shutdown=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:debug(LOG_TAG$8,'RemoteStore shutting down.');this.networkEnabled=false;return[4/*yield*/,this.disableNetworkInternal()];case 1:_a.sent();this.connectivityMonitor.shutdown();// Set the OnlineState to Unknown (rather than Offline) to avoid potentially
// triggering spurious listener events with cached data, etc.
this.onlineStateTracker.set(OnlineState.Unknown);return[2/*return*/];}});});};/**
     * Starts new listen for the given target. Uses resume token if provided. It
     * is a no-op if the target of given `TargetData` is already being listened to.
     */RemoteStore.prototype.listen=function(targetData){if(contains(this.listenTargets,targetData.targetId)){return;}// Mark this as something the client is currently listening for.
this.listenTargets[targetData.targetId]=targetData;if(this.shouldStartWatchStream()){// The listen will be sent in onWatchStreamOpen
this.startWatchStream();}else if(this.watchStream.isOpen()){this.sendWatchRequest(targetData);}};/**
     * Removes the listen from server. It is a no-op if the given target id is
     * not being listened to.
     */RemoteStore.prototype.unlisten=function(targetId){assert(contains(this.listenTargets,targetId),"unlisten called on target no currently watched: "+targetId);delete this.listenTargets[targetId];if(this.watchStream.isOpen()){this.sendUnwatchRequest(targetId);}if(isEmpty(this.listenTargets)){if(this.watchStream.isOpen()){this.watchStream.markIdle();}else if(this.canUseNetwork()){// Revert to OnlineState.Unknown if the watch stream is not open and we
// have no listeners, since without any listens to send we cannot
// confirm if the stream is healthy and upgrade to OnlineState.Online.
this.onlineStateTracker.set(OnlineState.Unknown);}}};/** {@link TargetMetadataProvider.getTargetDataForTarget} */RemoteStore.prototype.getTargetDataForTarget=function(targetId){return this.listenTargets[targetId]||null;};/** {@link TargetMetadataProvider.getRemoteKeysForTarget} */RemoteStore.prototype.getRemoteKeysForTarget=function(targetId){return this.syncEngine.getRemoteKeysForTarget(targetId);};/**
     * We need to increment the the expected number of pending responses we're due
     * from watch so we wait for the ack to process any messages from this target.
     */RemoteStore.prototype.sendWatchRequest=function(targetData){this.watchChangeAggregator.recordPendingTargetRequest(targetData.targetId);this.watchStream.watch(targetData);};/**
     * We need to increment the expected number of pending responses we're due
     * from watch so we wait for the removal on the server before we process any
     * messages from this target.
     */RemoteStore.prototype.sendUnwatchRequest=function(targetId){this.watchChangeAggregator.recordPendingTargetRequest(targetId);this.watchStream.unwatch(targetId);};RemoteStore.prototype.startWatchStream=function(){assert(this.shouldStartWatchStream(),'startWatchStream() called when shouldStartWatchStream() is false.');this.watchChangeAggregator=new WatchChangeAggregator(this);this.watchStream.start();this.onlineStateTracker.handleWatchStreamStart();};/**
     * Returns whether the watch stream should be started because it's necessary
     * and has not yet been started.
     */RemoteStore.prototype.shouldStartWatchStream=function(){return this.canUseNetwork()&&!this.watchStream.isStarted()&&!isEmpty(this.listenTargets);};RemoteStore.prototype.canUseNetwork=function(){return this.isPrimary&&this.networkEnabled;};RemoteStore.prototype.cleanUpWatchStreamState=function(){this.watchChangeAggregator=null;};RemoteStore.prototype.onWatchStreamOpen=function(){return tslib.__awaiter(this,void 0,void 0,function(){var _this=this;return tslib.__generator(this,function(_a){forEachNumber(this.listenTargets,function(targetId,targetData){_this.sendWatchRequest(targetData);});return[2/*return*/];});});};RemoteStore.prototype.onWatchStreamClose=function(error){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(error===undefined){// Graceful stop (due to stop() or idle timeout). Make sure that's
// desirable.
assert(!this.shouldStartWatchStream(),'Watch stream was stopped gracefully while still needed.');}this.cleanUpWatchStreamState();// If we still need the watch stream, retry the connection.
if(this.shouldStartWatchStream()){this.onlineStateTracker.handleWatchStreamFailure(error);this.startWatchStream();}else{// No need to restart watch stream because there are no active targets.
// The online state is set to unknown because there is no active attempt
// at establishing a connection
this.onlineStateTracker.set(OnlineState.Unknown);}return[2/*return*/];});});};RemoteStore.prototype.onWatchStreamChange=function(watchChange,snapshotVersion){return tslib.__awaiter(this,void 0,void 0,function(){var lastRemoteSnapshotVersion;return tslib.__generator(this,function(_a){switch(_a.label){case 0:// Mark the client as online since we got a message from the server
this.onlineStateTracker.set(OnlineState.Online);if(watchChange instanceof WatchTargetChange&&watchChange.state===WatchTargetChangeState.Removed&&watchChange.cause){// There was an error on a target, don't wait for a consistent snapshot
// to raise events
return[2/*return*/,this.handleTargetError(watchChange)];}if(watchChange instanceof DocumentWatchChange){this.watchChangeAggregator.handleDocumentChange(watchChange);}else if(watchChange instanceof ExistenceFilterChange){this.watchChangeAggregator.handleExistenceFilter(watchChange);}else{assert(watchChange instanceof WatchTargetChange,'Expected watchChange to be an instance of WatchTargetChange');this.watchChangeAggregator.handleTargetChange(watchChange);}if(!!snapshotVersion.isEqual(SnapshotVersion.MIN))return[3/*break*/,3];return[4/*yield*/,this.localStore.getLastRemoteSnapshotVersion()];case 1:lastRemoteSnapshotVersion=_a.sent();if(!(snapshotVersion.compareTo(lastRemoteSnapshotVersion)>=0))return[3/*break*/,3];// We have received a target change with a global snapshot if the snapshot
// version is not equal to SnapshotVersion.MIN.
return[4/*yield*/,this.raiseWatchSnapshot(snapshotVersion)];case 2:// We have received a target change with a global snapshot if the snapshot
// version is not equal to SnapshotVersion.MIN.
_a.sent();_a.label=3;case 3:return[2/*return*/];}});});};/**
     * Takes a batch of changes from the Datastore, repackages them as a
     * RemoteEvent, and passes that on to the listener, which is typically the
     * SyncEngine.
     */RemoteStore.prototype.raiseWatchSnapshot=function(snapshotVersion){var _this=this;assert(!snapshotVersion.isEqual(SnapshotVersion.MIN),"Can't raise event for unknown SnapshotVersion");var remoteEvent=this.watchChangeAggregator.createRemoteEvent(snapshotVersion);// Update in-memory resume tokens. LocalStore will update the
// persistent view of these when applying the completed RemoteEvent.
forEachNumber(remoteEvent.targetChanges,function(targetId,change){if(change.resumeToken.length>0){var targetData=_this.listenTargets[targetId];// A watched target might have been removed already.
if(targetData){_this.listenTargets[targetId]=targetData.withResumeToken(change.resumeToken,snapshotVersion);}}});// Re-establish listens for the targets that have been invalidated by
// existence filter mismatches.
remoteEvent.targetMismatches.forEach(function(targetId){var targetData=_this.listenTargets[targetId];if(!targetData){// A watched target might have been removed already.
return;}// Clear the resume token for the target, since we're in a known mismatch
// state.
_this.listenTargets[targetId]=targetData.withResumeToken(emptyByteString(),targetData.snapshotVersion);// Cause a hard reset by unwatching and rewatching immediately, but
// deliberately don't send a resume token so that we get a full update.
_this.sendUnwatchRequest(targetId);// Mark the target we send as being on behalf of an existence filter
// mismatch, but don't actually retain that in listenTargets. This ensures
// that we flag the first re-listen this way without impacting future
// listens of this target (that might happen e.g. on reconnect).
var requestTargetData=new TargetData(targetData.target,targetId,TargetPurpose.ExistenceFilterMismatch,targetData.sequenceNumber);_this.sendWatchRequest(requestTargetData);});// Finally raise remote event
return this.syncEngine.applyRemoteEvent(remoteEvent);};/** Handles an error on a target */RemoteStore.prototype.handleTargetError=function(watchChange){var _this=this;assert(!!watchChange.cause,'Handling target error without a cause');var error=watchChange.cause;var promiseChain=Promise.resolve();watchChange.targetIds.forEach(function(targetId){promiseChain=promiseChain.then(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){// A watched target might have been removed already.
if(contains(this.listenTargets,targetId)){delete this.listenTargets[targetId];this.watchChangeAggregator.removeTarget(targetId);return[2/*return*/,this.syncEngine.rejectListen(targetId,error)];}return[2/*return*/];});});});});return promiseChain;};/**
     * Attempts to fill our write pipeline with writes from the LocalStore.
     *
     * Called internally to bootstrap or refill the write pipeline and by
     * SyncEngine whenever there are new mutations to process.
     *
     * Starts the write stream if necessary.
     */RemoteStore.prototype.fillWritePipeline=function(){return tslib.__awaiter(this,void 0,void 0,function(){var lastBatchIdRetrieved,batch;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.canAddToWritePipeline())return[3/*break*/,4];lastBatchIdRetrieved=this.writePipeline.length>0?this.writePipeline[this.writePipeline.length-1].batchId:BATCHID_UNKNOWN;return[4/*yield*/,this.localStore.nextMutationBatch(lastBatchIdRetrieved)];case 1:batch=_a.sent();if(!(batch===null))return[3/*break*/,2];if(this.writePipeline.length===0){this.writeStream.markIdle();}return[3/*break*/,4];case 2:this.addToWritePipeline(batch);return[4/*yield*/,this.fillWritePipeline()];case 3:_a.sent();_a.label=4;case 4:if(this.shouldStartWriteStream()){this.startWriteStream();}return[2/*return*/];}});});};/**
     * Returns true if we can add to the write pipeline (i.e. the network is
     * enabled and the write pipeline is not full).
     */RemoteStore.prototype.canAddToWritePipeline=function(){return this.canUseNetwork()&&this.writePipeline.length<MAX_PENDING_WRITES;};// For testing
RemoteStore.prototype.outstandingWrites=function(){return this.writePipeline.length;};/**
     * Queues additional writes to be sent to the write stream, sending them
     * immediately if the write stream is established.
     */RemoteStore.prototype.addToWritePipeline=function(batch){assert(this.canAddToWritePipeline(),'addToWritePipeline called when pipeline is full');this.writePipeline.push(batch);if(this.writeStream.isOpen()&&this.writeStream.handshakeComplete){this.writeStream.writeMutations(batch.mutations);}};RemoteStore.prototype.shouldStartWriteStream=function(){return this.canUseNetwork()&&!this.writeStream.isStarted()&&this.writePipeline.length>0;};RemoteStore.prototype.startWriteStream=function(){assert(this.shouldStartWriteStream(),'startWriteStream() called when shouldStartWriteStream() is false.');this.writeStream.start();};RemoteStore.prototype.onWriteStreamOpen=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){this.writeStream.writeHandshake();return[2/*return*/];});});};RemoteStore.prototype.onWriteHandshakeComplete=function(){var _this=this;// Record the stream token.
return this.localStore.setLastStreamToken(this.writeStream.lastStreamToken).then(function(){// Send the write pipeline now that the stream is established.
for(var _i=0,_a=_this.writePipeline;_i<_a.length;_i++){var batch=_a[_i];_this.writeStream.writeMutations(batch.mutations);}}).catch(ignoreIfPrimaryLeaseLoss);};RemoteStore.prototype.onMutationResult=function(commitVersion,results){var _this=this;// This is a response to a write containing mutations and should be
// correlated to the first write in our write pipeline.
assert(this.writePipeline.length>0,'Got result for empty write pipeline');var batch=this.writePipeline.shift();var success=MutationBatchResult.from(batch,commitVersion,results,this.writeStream.lastStreamToken);return this.syncEngine.applySuccessfulWrite(success).then(function(){// It's possible that with the completion of this mutation another
// slot has freed up.
return _this.fillWritePipeline();});};RemoteStore.prototype.onWriteStreamClose=function(error){return tslib.__awaiter(this,void 0,void 0,function(){var errorHandling;var _this=this;return tslib.__generator(this,function(_a){if(error===undefined){// Graceful stop (due to stop() or idle timeout). Make sure that's
// desirable.
assert(!this.shouldStartWriteStream(),'Write stream was stopped gracefully while still needed.');}// If the write stream closed due to an error, invoke the error callbacks if
// there are pending writes.
if(error&&this.writePipeline.length>0){errorHandling=void 0;if(this.writeStream.handshakeComplete){// This error affects the actual write.
errorHandling=this.handleWriteError(error);}else{// If there was an error before the handshake has finished, it's
// possible that the server is unable to process the stream token
// we're sending. (Perhaps it's too old?)
errorHandling=this.handleHandshakeError(error);}return[2/*return*/,errorHandling.then(function(){// The write stream might have been started by refilling the write
// pipeline for failed writes
if(_this.shouldStartWriteStream()){_this.startWriteStream();}})];}return[2/*return*/];});});};RemoteStore.prototype.handleHandshakeError=function(error){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){// Reset the token if it's a permanent error, signaling the write stream is
// no longer valid. Note that the handshake does not count as a write: see
// comments on isPermanentWriteError for details.
if(isPermanentError(error.code)){debug(LOG_TAG$8,'RemoteStore error before completed handshake; resetting stream token: ',this.writeStream.lastStreamToken);this.writeStream.lastStreamToken=emptyByteString();return[2/*return*/,this.localStore.setLastStreamToken(emptyByteString()).catch(ignoreIfPrimaryLeaseLoss)];}return[2/*return*/];});});};RemoteStore.prototype.handleWriteError=function(error){return tslib.__awaiter(this,void 0,void 0,function(){var batch;var _this=this;return tslib.__generator(this,function(_a){// Only handle permanent errors here. If it's transient, just let the retry
// logic kick in.
if(isPermanentWriteError(error.code)){batch=this.writePipeline.shift();// In this case it's also unlikely that the server itself is melting
// down -- this was just a bad request so inhibit backoff on the next
// restart.
this.writeStream.inhibitBackoff();return[2/*return*/,this.syncEngine.rejectFailedWrite(batch.batchId,error).then(function(){// It's possible that with the completion of this mutation
// another slot has freed up.
return _this.fillWritePipeline();})];}return[2/*return*/];});});};RemoteStore.prototype.createTransaction=function(){return new Transaction(this.datastore);};RemoteStore.prototype.restartNetwork=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.networkEnabled=false;return[4/*yield*/,this.disableNetworkInternal()];case 1:_a.sent();this.onlineStateTracker.set(OnlineState.Unknown);return[4/*yield*/,this.enableNetwork()];case 2:_a.sent();return[2/*return*/];}});});};RemoteStore.prototype.handleCredentialChange=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.canUseNetwork())return[3/*break*/,2];// Tear down and re-create our network streams. This will ensure we get a fresh auth token
// for the new user and re-fill the write pipeline with new mutations from the LocalStore
// (since mutations are per-user).
debug(LOG_TAG$8,'RemoteStore restarting streams for new credential');return[4/*yield*/,this.restartNetwork()];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});};/**
     * Toggles the network state when the client gains or loses its primary lease.
     */RemoteStore.prototype.applyPrimaryState=function(isPrimary){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.isPrimary=isPrimary;if(!(isPrimary&&this.networkEnabled))return[3/*break*/,2];return[4/*yield*/,this.enableNetwork()];case 1:_a.sent();return[3/*break*/,4];case 2:if(!!isPrimary)return[3/*break*/,4];return[4/*yield*/,this.disableNetworkInternal()];case 3:_a.sent();this.onlineStateTracker.set(OnlineState.Unknown);_a.label=4;case 4:return[2/*return*/];}});});};return RemoteStore;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Immutable class representing a geo point as latitude-longitude pair.
 * This class is directly exposed in the public API, including its constructor.
 */var GeoPoint=/** @class */function(){function GeoPoint(latitude,longitude){validateExactNumberOfArgs('GeoPoint',arguments,2);validateArgType('GeoPoint','number',1,latitude);validateArgType('GeoPoint','number',2,longitude);if(!isFinite(latitude)||latitude<-90||latitude>90){throw new FirestoreError(Code.INVALID_ARGUMENT,'Latitude must be a number between -90 and 90, but was: '+latitude);}if(!isFinite(longitude)||longitude<-180||longitude>180){throw new FirestoreError(Code.INVALID_ARGUMENT,'Longitude must be a number between -180 and 180, but was: '+longitude);}this._lat=latitude;this._long=longitude;}Object.defineProperty(GeoPoint.prototype,"latitude",{/**
         * Returns the latitude of this geo point, a number between -90 and 90.
         */get:function get(){return this._lat;},enumerable:true,configurable:true});Object.defineProperty(GeoPoint.prototype,"longitude",{/**
         * Returns the longitude of this geo point, a number between -180 and 180.
         */get:function get(){return this._long;},enumerable:true,configurable:true});GeoPoint.prototype.isEqual=function(other){return this._lat===other._lat&&this._long===other._long;};/**
     * Actually private to JS consumers of our API, so this function is prefixed
     * with an underscore.
     */GeoPoint.prototype._compareTo=function(other){return primitiveComparator(this._lat,other._lat)||primitiveComparator(this._long,other._long);};return GeoPoint;}();/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** Transforms a value into a server-generated timestamp. */var ServerTimestampTransform=/** @class */function(){function ServerTimestampTransform(){}ServerTimestampTransform.prototype.applyToLocalView=function(previousValue,localWriteTime){return new ServerTimestampValue(localWriteTime,previousValue);};ServerTimestampTransform.prototype.applyToRemoteDocument=function(previousValue,transformResult){return transformResult;};ServerTimestampTransform.prototype.computeBaseValue=function(previousValue){return null;// Server timestamps are idempotent and don't require a base value.
};ServerTimestampTransform.prototype.isEqual=function(other){return other instanceof ServerTimestampTransform;};ServerTimestampTransform.instance=new ServerTimestampTransform();return ServerTimestampTransform;}();/** Transforms an array value via a union operation. */var ArrayUnionTransformOperation=/** @class */function(){function ArrayUnionTransformOperation(elements){this.elements=elements;}ArrayUnionTransformOperation.prototype.applyToLocalView=function(previousValue,localWriteTime){return this.apply(previousValue);};ArrayUnionTransformOperation.prototype.applyToRemoteDocument=function(previousValue,transformResult){// The server just sends null as the transform result for array operations,
// so we have to calculate a result the same as we do for local
// applications.
return this.apply(previousValue);};ArrayUnionTransformOperation.prototype.apply=function(previousValue){var result=coercedFieldValuesArray(previousValue);var _loop_1=function _loop_1(toUnion){if(!result.find(function(element){return element.isEqual(toUnion);})){result.push(toUnion);}};for(var _i=0,_a=this.elements;_i<_a.length;_i++){var toUnion=_a[_i];_loop_1(toUnion);}return new ArrayValue(result);};ArrayUnionTransformOperation.prototype.computeBaseValue=function(previousValue){return null;// Array transforms are idempotent and don't require a base value.
};ArrayUnionTransformOperation.prototype.isEqual=function(other){return other instanceof ArrayUnionTransformOperation&&arrayEquals(other.elements,this.elements);};return ArrayUnionTransformOperation;}();/** Transforms an array value via a remove operation. */var ArrayRemoveTransformOperation=/** @class */function(){function ArrayRemoveTransformOperation(elements){this.elements=elements;}ArrayRemoveTransformOperation.prototype.applyToLocalView=function(previousValue,localWriteTime){return this.apply(previousValue);};ArrayRemoveTransformOperation.prototype.applyToRemoteDocument=function(previousValue,transformResult){// The server just sends null as the transform result for array operations,
// so we have to calculate a result the same as we do for local
// applications.
return this.apply(previousValue);};ArrayRemoveTransformOperation.prototype.apply=function(previousValue){var result=coercedFieldValuesArray(previousValue);var _loop_2=function _loop_2(toRemove){result=result.filter(function(element){return!element.isEqual(toRemove);});};for(var _i=0,_a=this.elements;_i<_a.length;_i++){var toRemove=_a[_i];_loop_2(toRemove);}return new ArrayValue(result);};ArrayRemoveTransformOperation.prototype.computeBaseValue=function(previousValue){return null;// Array transforms are idempotent and don't require a base value.
};ArrayRemoveTransformOperation.prototype.isEqual=function(other){return other instanceof ArrayRemoveTransformOperation&&arrayEquals(other.elements,this.elements);};return ArrayRemoveTransformOperation;}();/**
 * Implements the backend semantics for locally computed NUMERIC_ADD (increment)
 * transforms. Converts all field values to integers or doubles, but unlike the
 * backend does not cap integer values at 2^63. Instead, JavaScript number
 * arithmetic is used and precision loss can occur for values greater than 2^53.
 */var NumericIncrementTransformOperation=/** @class */function(){function NumericIncrementTransformOperation(operand){this.operand=operand;}NumericIncrementTransformOperation.prototype.applyToLocalView=function(previousValue,localWriteTime){var baseValue=this.computeBaseValue(previousValue);// PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
// precision and resolves overflows by reducing precision, we do not
// manually cap overflows at 2^63.
// Return an integer value iff the previous value and the operand is an
// integer.
if(baseValue instanceof IntegerValue&&this.operand instanceof IntegerValue){var sum=baseValue.internalValue+this.operand.internalValue;return new IntegerValue(sum);}else{var sum=baseValue.internalValue+this.operand.internalValue;return new DoubleValue(sum);}};NumericIncrementTransformOperation.prototype.applyToRemoteDocument=function(previousValue,transformResult){assert(transformResult!==null,"Didn't receive transformResult for NUMERIC_ADD transform");return transformResult;};/**
     * Inspects the provided value, returning the provided value if it is already
     * a NumberValue, otherwise returning a coerced IntegerValue of 0.
     */NumericIncrementTransformOperation.prototype.computeBaseValue=function(previousValue){return previousValue instanceof NumberValue?previousValue:new IntegerValue(0);};NumericIncrementTransformOperation.prototype.isEqual=function(other){return other instanceof NumericIncrementTransformOperation&&this.operand.isEqual(other.operand);};return NumericIncrementTransformOperation;}();function coercedFieldValuesArray(value){if(value instanceof ArrayValue){return value.internalValue.slice();}else{// coerce to empty array.
return[];}}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ExistenceFilter=/** @class */function(){// TODO(b/33078163): just use simplest form of existence filter for now
function ExistenceFilter(count){this.count=count;}ExistenceFilter.prototype.isEqual=function(other){return other&&other.count===this.count;};return ExistenceFilter;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var DIRECTIONS=function(){var dirs={};dirs[Direction.ASCENDING.name]='ASCENDING';dirs[Direction.DESCENDING.name]='DESCENDING';return dirs;}();var OPERATORS=function(){var ops={};ops[Operator.LESS_THAN.name]='LESS_THAN';ops[Operator.LESS_THAN_OR_EQUAL.name]='LESS_THAN_OR_EQUAL';ops[Operator.GREATER_THAN.name]='GREATER_THAN';ops[Operator.GREATER_THAN_OR_EQUAL.name]='GREATER_THAN_OR_EQUAL';ops[Operator.EQUAL.name]='EQUAL';ops[Operator.ARRAY_CONTAINS.name]='ARRAY_CONTAINS';ops[Operator.IN.name]='IN';ops[Operator.ARRAY_CONTAINS_ANY.name]='ARRAY_CONTAINS_ANY';return ops;}();// A RegExp matching ISO 8601 UTC timestamps with optional fraction.
var ISO_REG_EXP=new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);function assertPresent(value,description){assert(!isNullOrUndefined(value),description+' is missing');}function parseInt64(value){// TODO(bjornick): Handle int64 greater than 53 bits.
if(typeof value==='number'){return value;}else if(typeof value==='string'){return Number(value);}else{return fail("can't parse "+value);}}/**
 * Generates JsonObject values for the Datastore API suitable for sending to
 * either GRPC stub methods or via the JSON/HTTP REST API.
 * TODO(klimt): We can remove the databaseId argument if we keep the full
 * resource name in documents.
 */var JsonProtoSerializer=/** @class */function(){function JsonProtoSerializer(databaseId,options){this.databaseId=databaseId;this.options=options;}JsonProtoSerializer.prototype.emptyByteString=function(){if(this.options.useProto3Json){return'';}else{return new Uint8Array(0);}};JsonProtoSerializer.prototype.unsafeCastProtoByteString=function(byteString){// byteStrings can be either string or UInt8Array, but the typings say
// it's always a string. Cast as string to avoid type check failing
return byteString;};JsonProtoSerializer.prototype.fromRpcStatus=function(status){var code=status.code===undefined?Code.UNKNOWN:mapCodeFromRpcCode(status.code);return new FirestoreError(code,status.message||'');};/**
     * Returns a value for a number (or null) that's appropriate to put into
     * a google.protobuf.Int32Value proto.
     * DO NOT USE THIS FOR ANYTHING ELSE.
     * This method cheats. It's typed as returning "number" because that's what
     * our generated proto interfaces say Int32Value must be. But GRPC actually
     * expects a { value: <number> } struct.
     */JsonProtoSerializer.prototype.toInt32Value=function(val){if(this.options.useProto3Json||isNullOrUndefined(val)){return val;}else{// ProtobufJS requires that we wrap Int32Values.
// Use any because we need to match generated Proto types.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return{value:val};}};/**
     * Returns a number (or null) from a google.protobuf.Int32Value proto.
     * DO NOT USE THIS FOR ANYTHING ELSE.
     * This method cheats. It's typed as accepting "number" because that's what
     * our generated proto interfaces say Int32Value must be, but it actually
     * accepts { value: number } to match our serialization in toInt32Value().
     */JsonProtoSerializer.prototype.fromInt32Value=function(val){var result;if(typeof val==='object'){// Use any because we need to match generated Proto types.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
result=val.value;}else{// We accept raw numbers (without the {value: ... } wrapper) for
// compatibility with legacy persisted data.
result=val;}return isNullOrUndefined(result)?null:result;};/**
     * Returns a value for a Date that's appropriate to put into a proto.
     * DO NOT USE THIS FOR ANYTHING ELSE.
     * This method cheats. It's typed as returning "string" because that's what
     * our generated proto interfaces say dates must be. But it's easier and safer
     * to actually return a Timestamp proto.
     */JsonProtoSerializer.prototype.toTimestamp=function(timestamp){if(this.options.useProto3Json){// Serialize to ISO-8601 date format, but with full nano resolution.
// Since JS Date has only millis, let's only use it for the seconds and
// then manually add the fractions to the end.
var jsDateStr=new Date(timestamp.seconds*1000).toISOString();// Remove .xxx frac part and Z in the end.
var strUntilSeconds=jsDateStr.replace(/\.\d*/,'').replace('Z','');// Pad the fraction out to 9 digits (nanos).
var nanoStr=('000000000'+timestamp.nanoseconds).slice(-9);return strUntilSeconds+"."+nanoStr+"Z";}else{return{seconds:''+timestamp.seconds,nanos:timestamp.nanoseconds// eslint-disable-next-line @typescript-eslint/no-explicit-any
};}};JsonProtoSerializer.prototype.fromTimestamp=function(date){// The json interface (for the browser) will return an iso timestamp string,
// while the proto js library (for node) will return a
// google.protobuf.Timestamp instance.
if(typeof date==='string'){// TODO(b/37282237): Use strings for Proto3 timestamps
// assert(this.options.useProto3Json,
//   'The timestamp string format requires Proto3.');
return this.fromIso8601String(date);}else{assert(!!date,'Cannot deserialize null or undefined timestamp.');// TODO(b/37282237): Use strings for Proto3 timestamps
// assert(!this.options.useProto3Json,
//   'The timestamp instance format requires Proto JS.');
var seconds=parseInt64(date.seconds||'0');var nanos=date.nanos||0;return new Timestamp(seconds,nanos);}};JsonProtoSerializer.prototype.fromIso8601String=function(utc){// The date string can have higher precision (nanos) than the Date class
// (millis), so we do some custom parsing here.
// Parse the nanos right out of the string.
var nanos=0;var fraction=ISO_REG_EXP.exec(utc);assert(!!fraction,'invalid timestamp: '+utc);if(fraction[1]){// Pad the fraction out to 9 digits (nanos).
var nanoStr=fraction[1];nanoStr=(nanoStr+'000000000').substr(0,9);nanos=Number(nanoStr);}// Parse the date to get the seconds.
var date=new Date(utc);var seconds=Math.floor(date.getTime()/1000);return new Timestamp(seconds,nanos);};/**
     * Returns a value for bytes that's appropriate to put in a proto.
     * DO NOT USE THIS FOR ANYTHING ELSE.
     * This method cheats. It's typed as returning "string" because that's what
     * our generated proto interfaces say bytes must be. But it should return
     * an Uint8Array in Node.
     */JsonProtoSerializer.prototype.toBytes=function(bytes){if(this.options.useProto3Json){return bytes.toBase64();}else{// The typings say it's a string, but it needs to be a Uint8Array in Node.
return this.unsafeCastProtoByteString(bytes.toUint8Array());}};/**
     * Parse the blob from the protos into the internal Blob class. Note that the
     * typings assume all blobs are strings, but they are actually Uint8Arrays
     * on Node.
     */JsonProtoSerializer.prototype.fromBlob=function(blob){if(typeof blob==='string'){assert(this.options.useProto3Json,'Expected bytes to be passed in as Uint8Array, but got a string instead.');return Blob.fromBase64String(blob);}else{assert(!this.options.useProto3Json,'Expected bytes to be passed in as Uint8Array, but got a string instead.');return Blob.fromUint8Array(blob);}};JsonProtoSerializer.prototype.toVersion=function(version){return this.toTimestamp(version.toTimestamp());};JsonProtoSerializer.prototype.fromVersion=function(version){assert(!!version,"Trying to deserialize version that isn't set");return SnapshotVersion.fromTimestamp(this.fromTimestamp(version));};JsonProtoSerializer.prototype.toResourceName=function(databaseId,path){return this.fullyQualifiedPrefixPath(databaseId).child('documents').child(path).canonicalString();};JsonProtoSerializer.prototype.fromResourceName=function(name){var resource=ResourcePath.fromString(name);assert(this.isValidResourceName(resource),'Tried to deserialize invalid key '+resource.toString());return resource;};JsonProtoSerializer.prototype.toName=function(key){return this.toResourceName(this.databaseId,key.path);};JsonProtoSerializer.prototype.fromName=function(name){var resource=this.fromResourceName(name);assert(resource.get(1)===this.databaseId.projectId,'Tried to deserialize key from different project: '+resource.get(1)+' vs '+this.databaseId.projectId);assert(!resource.get(3)&&!this.databaseId.database||resource.get(3)===this.databaseId.database,'Tried to deserialize key from different database: '+resource.get(3)+' vs '+this.databaseId.database);return new DocumentKey(this.extractLocalPathFromResourceName(resource));};JsonProtoSerializer.prototype.toQueryPath=function(path){return this.toResourceName(this.databaseId,path);};JsonProtoSerializer.prototype.fromQueryPath=function(name){var resourceName=this.fromResourceName(name);// In v1beta1 queries for collections at the root did not have a trailing
// "/documents". In v1 all resource paths contain "/documents". Preserve the
// ability to read the v1beta1 form for compatibility with queries persisted
// in the local target cache.
if(resourceName.length===4){return ResourcePath.EMPTY_PATH;}return this.extractLocalPathFromResourceName(resourceName);};Object.defineProperty(JsonProtoSerializer.prototype,"encodedDatabaseId",{get:function get(){var path=new ResourcePath(['projects',this.databaseId.projectId,'databases',this.databaseId.database]);return path.canonicalString();},enumerable:true,configurable:true});JsonProtoSerializer.prototype.fullyQualifiedPrefixPath=function(databaseId){return new ResourcePath(['projects',databaseId.projectId,'databases',databaseId.database]);};JsonProtoSerializer.prototype.extractLocalPathFromResourceName=function(resourceName){assert(resourceName.length>4&&resourceName.get(4)==='documents','tried to deserialize invalid key '+resourceName.toString());return resourceName.popFirst(5);};JsonProtoSerializer.prototype.isValidResourceName=function(path){// Resource names have at least 4 components (project ID, database ID)
return path.length>=4&&path.get(0)==='projects'&&path.get(2)==='databases';};JsonProtoSerializer.prototype.toValue=function(val){if(val instanceof NullValue){return{nullValue:'NULL_VALUE'};}else if(val instanceof BooleanValue){return{booleanValue:val.value()};}else if(val instanceof IntegerValue){return{integerValue:''+val.value()};}else if(val instanceof DoubleValue){var doubleValue=val.value();if(this.options.useProto3Json){// Proto 3 let's us encode NaN and Infinity as string values as
// expected by the backend. This is currently not checked by our unit
// tests because they rely on protobuf.js.
if(isNaN(doubleValue)){return{doubleValue:'NaN'};}else if(doubleValue===Infinity){return{doubleValue:'Infinity'};}else if(doubleValue===-Infinity){return{doubleValue:'-Infinity'};}}return{doubleValue:val.value()};}else if(val instanceof StringValue){return{stringValue:val.value()};}else if(val instanceof ObjectValue){return{mapValue:this.toMapValue(val)};}else if(val instanceof ArrayValue){return{arrayValue:this.toArrayValue(val)};}else if(val instanceof TimestampValue){return{timestampValue:this.toTimestamp(val.internalValue)};}else if(val instanceof GeoPointValue){return{geoPointValue:{latitude:val.value().latitude,longitude:val.value().longitude}};}else if(val instanceof BlobValue){return{bytesValue:this.toBytes(val.value())};}else if(val instanceof RefValue){return{referenceValue:this.toResourceName(val.databaseId,val.key.path)};}else{return fail('Unknown FieldValue '+JSON.stringify(val));}};JsonProtoSerializer.prototype.fromValue=function(obj){var _this=this;if('nullValue'in obj){return NullValue.INSTANCE;}else if('booleanValue'in obj){return BooleanValue.of(obj.booleanValue);}else if('integerValue'in obj){return new IntegerValue(parseInt64(obj.integerValue));}else if('doubleValue'in obj){if(this.options.useProto3Json){// Proto 3 uses the string values 'NaN' and 'Infinity'.
if(obj.doubleValue==='NaN'){return DoubleValue.NAN;}else if(obj.doubleValue==='Infinity'){return DoubleValue.POSITIVE_INFINITY;}else if(obj.doubleValue==='-Infinity'){return DoubleValue.NEGATIVE_INFINITY;}}return new DoubleValue(obj.doubleValue);}else if('stringValue'in obj){return new StringValue(obj.stringValue);}else if('mapValue'in obj){return this.fromFields(obj.mapValue.fields||{});}else if('arrayValue'in obj){// "values" is not present if the array is empty
assertPresent(obj.arrayValue,'arrayValue');var values=obj.arrayValue.values||[];return new ArrayValue(values.map(function(v){return _this.fromValue(v);}));}else if('timestampValue'in obj){assertPresent(obj.timestampValue,'timestampValue');return new TimestampValue(this.fromTimestamp(obj.timestampValue));}else if('geoPointValue'in obj){assertPresent(obj.geoPointValue,'geoPointValue');var latitude=obj.geoPointValue.latitude||0;var longitude=obj.geoPointValue.longitude||0;return new GeoPointValue(new GeoPoint(latitude,longitude));}else if('bytesValue'in obj){assertPresent(obj.bytesValue,'bytesValue');var blob=this.fromBlob(obj.bytesValue);return new BlobValue(blob);}else if('referenceValue'in obj){assertPresent(obj.referenceValue,'referenceValue');var resourceName=this.fromResourceName(obj.referenceValue);var dbId=new DatabaseId(resourceName.get(1),resourceName.get(3));var key=new DocumentKey(this.extractLocalPathFromResourceName(resourceName));return new RefValue(dbId,key);}else{return fail('Unknown Value proto '+JSON.stringify(obj));}};/** Creates an api.Document from key and fields (but no create/update time) */JsonProtoSerializer.prototype.toMutationDocument=function(key,fields){return{name:this.toName(key),fields:this.toFields(fields)};};JsonProtoSerializer.prototype.toDocument=function(document){assert(!document.hasLocalMutations,"Can't serialize documents with mutations.");return{name:this.toName(document.key),fields:this.toFields(document.data()),updateTime:this.toTimestamp(document.version.toTimestamp())};};JsonProtoSerializer.prototype.fromDocument=function(document,hasCommittedMutations){var _this=this;var key=this.fromName(document.name);var version=this.fromVersion(document.updateTime);return new Document(key,version,{hasCommittedMutations:!!hasCommittedMutations},undefined,document,function(v){return _this.fromValue(v);});};JsonProtoSerializer.prototype.toFields=function(fields){var _this=this;var result={};fields.forEach(function(key,value){result[key]=_this.toValue(value);});return result;};JsonProtoSerializer.prototype.fromFields=function(object){var _this=this;// Proto map<string, Value> gets mapped to Object, so cast it.
var map=object;var result=ObjectValue.EMPTY;forEach(map,function(key,value){result=result.set(new FieldPath([key]),_this.fromValue(value));});return result;};JsonProtoSerializer.prototype.toMapValue=function(map){return{fields:this.toFields(map)};};JsonProtoSerializer.prototype.toArrayValue=function(array){var _this=this;var result=[];array.forEach(function(value){result.push(_this.toValue(value));});return{values:result};};JsonProtoSerializer.prototype.fromFound=function(doc){var _this=this;assert(!!doc.found,'Tried to deserialize a found document from a missing document.');assertPresent(doc.found.name,'doc.found.name');assertPresent(doc.found.updateTime,'doc.found.updateTime');var key=this.fromName(doc.found.name);var version=this.fromVersion(doc.found.updateTime);return new Document(key,version,{},undefined,doc.found,function(v){return _this.fromValue(v);});};JsonProtoSerializer.prototype.fromMissing=function(result){assert(!!result.missing,'Tried to deserialize a missing document from a found document.');assert(!!result.readTime,'Tried to deserialize a missing document without a read time.');var key=this.fromName(result.missing);var version=this.fromVersion(result.readTime);return new NoDocument(key,version);};JsonProtoSerializer.prototype.fromMaybeDocument=function(result){if('found'in result){return this.fromFound(result);}else if('missing'in result){return this.fromMissing(result);}return fail('invalid batch get response: '+JSON.stringify(result));};JsonProtoSerializer.prototype.toWatchTargetChangeState=function(state){switch(state){case WatchTargetChangeState.Added:return'ADD';case WatchTargetChangeState.Current:return'CURRENT';case WatchTargetChangeState.NoChange:return'NO_CHANGE';case WatchTargetChangeState.Removed:return'REMOVE';case WatchTargetChangeState.Reset:return'RESET';default:return fail('Unknown WatchTargetChangeState: '+state);}};JsonProtoSerializer.prototype.toTestWatchChange=function(watchChange){if(watchChange instanceof ExistenceFilterChange){return{filter:{count:watchChange.existenceFilter.count,targetId:watchChange.targetId}};}if(watchChange instanceof DocumentWatchChange){if(watchChange.newDoc instanceof Document){var doc=watchChange.newDoc;return{documentChange:{document:{name:this.toName(doc.key),fields:this.toFields(doc.data()),updateTime:this.toVersion(doc.version)},targetIds:watchChange.updatedTargetIds,removedTargetIds:watchChange.removedTargetIds}};}else if(watchChange.newDoc instanceof NoDocument){var doc=watchChange.newDoc;return{documentDelete:{document:this.toName(doc.key),readTime:this.toVersion(doc.version),removedTargetIds:watchChange.removedTargetIds}};}else if(watchChange.newDoc===null){return{documentRemove:{document:this.toName(watchChange.key),removedTargetIds:watchChange.removedTargetIds}};}}if(watchChange instanceof WatchTargetChange){var cause=undefined;if(watchChange.cause){cause={code:mapRpcCodeFromCode(watchChange.cause.code),message:watchChange.cause.message};}return{targetChange:{targetChangeType:this.toWatchTargetChangeState(watchChange.state),targetIds:watchChange.targetIds,resumeToken:this.unsafeCastProtoByteString(watchChange.resumeToken),cause:cause}};}return fail('Unrecognized watch change: '+JSON.stringify(watchChange));};JsonProtoSerializer.prototype.fromWatchChange=function(change){var _this=this;var watchChange;if('targetChange'in change){assertPresent(change.targetChange,'targetChange');// proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
// if unset
var state=this.fromWatchTargetChangeState(change.targetChange.targetChangeType||'NO_CHANGE');var targetIds=change.targetChange.targetIds||[];var resumeToken=change.targetChange.resumeToken||this.emptyByteString();var causeProto=change.targetChange.cause;var cause=causeProto&&this.fromRpcStatus(causeProto);watchChange=new WatchTargetChange(state,targetIds,resumeToken,cause||null);}else if('documentChange'in change){assertPresent(change.documentChange,'documentChange');var entityChange=change.documentChange;assertPresent(entityChange.document,'documentChange.name');assertPresent(entityChange.document.name,'documentChange.document.name');assertPresent(entityChange.document.updateTime,'documentChange.document.updateTime');var key=this.fromName(entityChange.document.name);var version=this.fromVersion(entityChange.document.updateTime);var doc=new Document(key,version,{},undefined,entityChange.document,function(v){return _this.fromValue(v);});var updatedTargetIds=entityChange.targetIds||[];var removedTargetIds=entityChange.removedTargetIds||[];watchChange=new DocumentWatchChange(updatedTargetIds,removedTargetIds,doc.key,doc);}else if('documentDelete'in change){assertPresent(change.documentDelete,'documentDelete');var docDelete=change.documentDelete;assertPresent(docDelete.document,'documentDelete.document');var key=this.fromName(docDelete.document);var version=docDelete.readTime?this.fromVersion(docDelete.readTime):SnapshotVersion.forDeletedDoc();var doc=new NoDocument(key,version);var removedTargetIds=docDelete.removedTargetIds||[];watchChange=new DocumentWatchChange([],removedTargetIds,doc.key,doc);}else if('documentRemove'in change){assertPresent(change.documentRemove,'documentRemove');var docRemove=change.documentRemove;assertPresent(docRemove.document,'documentRemove');var key=this.fromName(docRemove.document);var removedTargetIds=docRemove.removedTargetIds||[];watchChange=new DocumentWatchChange([],removedTargetIds,key,null);}else if('filter'in change){// TODO(dimond): implement existence filter parsing with strategy.
assertPresent(change.filter,'filter');var filter=change.filter;assertPresent(filter.targetId,'filter.targetId');var count=filter.count||0;var existenceFilter=new ExistenceFilter(count);var targetId=filter.targetId;watchChange=new ExistenceFilterChange(targetId,existenceFilter);}else{return fail('Unknown change type '+JSON.stringify(change));}return watchChange;};JsonProtoSerializer.prototype.fromWatchTargetChangeState=function(state){if(state==='NO_CHANGE'){return WatchTargetChangeState.NoChange;}else if(state==='ADD'){return WatchTargetChangeState.Added;}else if(state==='REMOVE'){return WatchTargetChangeState.Removed;}else if(state==='CURRENT'){return WatchTargetChangeState.Current;}else if(state==='RESET'){return WatchTargetChangeState.Reset;}else{return fail('Got unexpected TargetChange.state: '+state);}};JsonProtoSerializer.prototype.versionFromListenResponse=function(change){// We have only reached a consistent snapshot for the entire stream if there
// is a read_time set and it applies to all targets (i.e. the list of
// targets is empty). The backend is guaranteed to send such responses.
if(!('targetChange'in change)){return SnapshotVersion.MIN;}var targetChange=change.targetChange;if(targetChange.targetIds&&targetChange.targetIds.length){return SnapshotVersion.MIN;}if(!targetChange.readTime){return SnapshotVersion.MIN;}return this.fromVersion(targetChange.readTime);};JsonProtoSerializer.prototype.toMutation=function(mutation){var _this=this;var result;if(mutation instanceof SetMutation){result={update:this.toMutationDocument(mutation.key,mutation.value)};}else if(mutation instanceof DeleteMutation){result={delete:this.toName(mutation.key)};}else if(mutation instanceof PatchMutation){result={update:this.toMutationDocument(mutation.key,mutation.data),updateMask:this.toDocumentMask(mutation.fieldMask)};}else if(mutation instanceof TransformMutation){result={transform:{document:this.toName(mutation.key),fieldTransforms:mutation.fieldTransforms.map(function(transform){return _this.toFieldTransform(transform);})}};}else{return fail('Unknown mutation type '+mutation.type);}if(!mutation.precondition.isNone){result.currentDocument=this.toPrecondition(mutation.precondition);}return result;};JsonProtoSerializer.prototype.fromMutation=function(proto){var _this=this;var precondition=proto.currentDocument?this.fromPrecondition(proto.currentDocument):Precondition.NONE;if(proto.update){assertPresent(proto.update.name,'name');var key=this.fromName(proto.update.name);var value=this.fromFields(proto.update.fields||{});if(proto.updateMask){var fieldMask=this.fromDocumentMask(proto.updateMask);return new PatchMutation(key,value,fieldMask,precondition);}else{return new SetMutation(key,value,precondition);}}else if(proto.delete){var key=this.fromName(proto.delete);return new DeleteMutation(key,precondition);}else if(proto.transform){var key=this.fromName(proto.transform.document);var fieldTransforms=proto.transform.fieldTransforms.map(function(transform){return _this.fromFieldTransform(transform);});assert(precondition.exists===true,'Transforms only support precondition "exists == true"');return new TransformMutation(key,fieldTransforms);}else{return fail('unknown mutation proto: '+JSON.stringify(proto));}};JsonProtoSerializer.prototype.toPrecondition=function(precondition){assert(!precondition.isNone,"Can't serialize an empty precondition");if(precondition.updateTime!==undefined){return{updateTime:this.toVersion(precondition.updateTime)};}else if(precondition.exists!==undefined){return{exists:precondition.exists};}else{return fail('Unknown precondition');}};JsonProtoSerializer.prototype.fromPrecondition=function(precondition){if(precondition.updateTime!==undefined){return Precondition.updateTime(this.fromVersion(precondition.updateTime));}else if(precondition.exists!==undefined){return Precondition.exists(precondition.exists);}else{return Precondition.NONE;}};JsonProtoSerializer.prototype.fromWriteResult=function(proto,commitTime){var _this=this;// NOTE: Deletes don't have an updateTime.
var version=proto.updateTime?this.fromVersion(proto.updateTime):this.fromVersion(commitTime);if(version.isEqual(SnapshotVersion.MIN)){// The Firestore Emulator currently returns an update time of 0 for
// deletes of non-existing documents (rather than null). This breaks the
// test "get deleted doc while offline with source=cache" as NoDocuments
// with version 0 are filtered by IndexedDb's RemoteDocumentCache.
// TODO(#2149): Remove this when Emulator is fixed
version=this.fromVersion(commitTime);}var transformResults=null;if(proto.transformResults&&proto.transformResults.length>0){transformResults=proto.transformResults.map(function(result){return _this.fromValue(result);});}return new MutationResult(version,transformResults);};JsonProtoSerializer.prototype.fromWriteResults=function(protos,commitTime){var _this=this;if(protos&&protos.length>0){assert(commitTime!==undefined,'Received a write result without a commit time');return protos.map(function(proto){return _this.fromWriteResult(proto,commitTime);});}else{return[];}};JsonProtoSerializer.prototype.toFieldTransform=function(fieldTransform){var _this=this;var transform=fieldTransform.transform;if(transform instanceof ServerTimestampTransform){return{fieldPath:fieldTransform.field.canonicalString(),setToServerValue:'REQUEST_TIME'};}else if(transform instanceof ArrayUnionTransformOperation){return{fieldPath:fieldTransform.field.canonicalString(),appendMissingElements:{values:transform.elements.map(function(v){return _this.toValue(v);})}};}else if(transform instanceof ArrayRemoveTransformOperation){return{fieldPath:fieldTransform.field.canonicalString(),removeAllFromArray:{values:transform.elements.map(function(v){return _this.toValue(v);})}};}else if(transform instanceof NumericIncrementTransformOperation){return{fieldPath:fieldTransform.field.canonicalString(),increment:this.toValue(transform.operand)};}else{throw fail('Unknown transform: '+fieldTransform.transform);}};JsonProtoSerializer.prototype.fromFieldTransform=function(proto){var _this=this;var transform=null;if('setToServerValue'in proto){assert(proto.setToServerValue==='REQUEST_TIME','Unknown server value transform proto: '+JSON.stringify(proto));transform=ServerTimestampTransform.instance;}else if('appendMissingElements'in proto){var values=proto.appendMissingElements.values||[];transform=new ArrayUnionTransformOperation(values.map(function(v){return _this.fromValue(v);}));}else if('removeAllFromArray'in proto){var values=proto.removeAllFromArray.values||[];transform=new ArrayRemoveTransformOperation(values.map(function(v){return _this.fromValue(v);}));}else if('increment'in proto){var operand=this.fromValue(proto.increment);assert(operand instanceof NumberValue,'NUMERIC_ADD transform requires a NumberValue');transform=new NumericIncrementTransformOperation(operand);}else{fail('Unknown transform proto: '+JSON.stringify(proto));}var fieldPath=FieldPath.fromServerFormat(proto.fieldPath);return new FieldTransform(fieldPath,transform);};JsonProtoSerializer.prototype.toDocumentsTarget=function(target){return{documents:[this.toQueryPath(target.path)]};};JsonProtoSerializer.prototype.fromDocumentsTarget=function(documentsTarget){var count=documentsTarget.documents.length;assert(count===1,'DocumentsTarget contained other than 1 document: '+count);var name=documentsTarget.documents[0];return Query.atPath(this.fromQueryPath(name)).toTarget();};JsonProtoSerializer.prototype.toQueryTarget=function(target){// Dissect the path into parent, collectionId, and optional key filter.
var result={structuredQuery:{}};var path=target.path;if(target.collectionGroup!==null){assert(path.length%2===0,'Collection Group queries should be within a document path or root.');result.parent=this.toQueryPath(path);result.structuredQuery.from=[{collectionId:target.collectionGroup,allDescendants:true}];}else{assert(path.length%2!==0,'Document queries with filters are not supported.');result.parent=this.toQueryPath(path.popLast());result.structuredQuery.from=[{collectionId:path.lastSegment()}];}var where=this.toFilter(target.filters);if(where){result.structuredQuery.where=where;}var orderBy=this.toOrder(target.orderBy);if(orderBy){result.structuredQuery.orderBy=orderBy;}var limit=this.toInt32Value(target.limit);if(limit!==null){result.structuredQuery.limit=limit;}if(target.startAt){result.structuredQuery.startAt=this.toCursor(target.startAt);}if(target.endAt){result.structuredQuery.endAt=this.toCursor(target.endAt);}return result;};JsonProtoSerializer.prototype.fromQueryTarget=function(target){var path=this.fromQueryPath(target.parent);var query=target.structuredQuery;var fromCount=query.from?query.from.length:0;var collectionGroup=null;if(fromCount>0){assert(fromCount===1,'StructuredQuery.from with more than one collection is not supported.');var from=query.from[0];if(from.allDescendants){collectionGroup=from.collectionId;}else{path=path.child(from.collectionId);}}var filterBy=[];if(query.where){filterBy=this.fromFilter(query.where);}var orderBy=[];if(query.orderBy){orderBy=this.fromOrder(query.orderBy);}var limit=null;if(query.limit){limit=this.fromInt32Value(query.limit);}var startAt=null;if(query.startAt){startAt=this.fromCursor(query.startAt);}var endAt=null;if(query.endAt){endAt=this.fromCursor(query.endAt);}return new Query(path,collectionGroup,orderBy,filterBy,limit,LimitType.First,startAt,endAt).toTarget();};JsonProtoSerializer.prototype.toListenRequestLabels=function(targetData){var value=this.toLabel(targetData.purpose);if(value==null){return null;}else{return{'goog-listen-tags':value};}};JsonProtoSerializer.prototype.toLabel=function(purpose){switch(purpose){case TargetPurpose.Listen:return null;case TargetPurpose.ExistenceFilterMismatch:return'existence-filter-mismatch';case TargetPurpose.LimboResolution:return'limbo-document';default:return fail('Unrecognized query purpose: '+purpose);}};JsonProtoSerializer.prototype.toTarget=function(targetData){var result;var target=targetData.target;if(target.isDocumentQuery()){result={documents:this.toDocumentsTarget(target)};}else{result={query:this.toQueryTarget(target)};}result.targetId=targetData.targetId;if(targetData.resumeToken.length>0){result.resumeToken=this.unsafeCastProtoByteString(targetData.resumeToken);}return result;};JsonProtoSerializer.prototype.toFilter=function(filters){var _this=this;if(filters.length===0){return;}var protos=filters.map(function(filter){if(filter instanceof FieldFilter){return _this.toUnaryOrFieldFilter(filter);}else{return fail('Unrecognized filter: '+JSON.stringify(filter));}});if(protos.length===1){return protos[0];}return{compositeFilter:{op:'AND',filters:protos}};};JsonProtoSerializer.prototype.fromFilter=function(filter){var _this=this;if(!filter){return[];}else if(filter.unaryFilter!==undefined){return[this.fromUnaryFilter(filter)];}else if(filter.fieldFilter!==undefined){return[this.fromFieldFilter(filter)];}else if(filter.compositeFilter!==undefined){return filter.compositeFilter.filters.map(function(f){return _this.fromFilter(f);}).reduce(function(accum,current){return accum.concat(current);});}else{return fail('Unknown filter: '+JSON.stringify(filter));}};JsonProtoSerializer.prototype.toOrder=function(orderBys){var _this=this;if(orderBys.length===0){return;}return orderBys.map(function(order){return _this.toPropertyOrder(order);});};JsonProtoSerializer.prototype.fromOrder=function(orderBys){var _this=this;return orderBys.map(function(order){return _this.fromPropertyOrder(order);});};JsonProtoSerializer.prototype.toCursor=function(cursor){var _this=this;return{before:cursor.before,values:cursor.position.map(function(component){return _this.toValue(component);})};};JsonProtoSerializer.prototype.fromCursor=function(cursor){var _this=this;var before=!!cursor.before;var position=cursor.values.map(function(component){return _this.fromValue(component);});return new Bound(position,before);};// visible for testing
JsonProtoSerializer.prototype.toDirection=function(dir){return DIRECTIONS[dir.name];};// visible for testing
JsonProtoSerializer.prototype.fromDirection=function(dir){switch(dir){case'ASCENDING':return Direction.ASCENDING;case'DESCENDING':return Direction.DESCENDING;default:return undefined;}};// visible for testing
JsonProtoSerializer.prototype.toOperatorName=function(op){return OPERATORS[op.name];};JsonProtoSerializer.prototype.fromOperatorName=function(op){switch(op){case'EQUAL':return Operator.EQUAL;case'GREATER_THAN':return Operator.GREATER_THAN;case'GREATER_THAN_OR_EQUAL':return Operator.GREATER_THAN_OR_EQUAL;case'LESS_THAN':return Operator.LESS_THAN;case'LESS_THAN_OR_EQUAL':return Operator.LESS_THAN_OR_EQUAL;case'ARRAY_CONTAINS':return Operator.ARRAY_CONTAINS;case'IN':return Operator.IN;case'ARRAY_CONTAINS_ANY':return Operator.ARRAY_CONTAINS_ANY;case'OPERATOR_UNSPECIFIED':return fail('Unspecified operator');default:return fail('Unknown operator');}};JsonProtoSerializer.prototype.toFieldPathReference=function(path){return{fieldPath:path.canonicalString()};};JsonProtoSerializer.prototype.fromFieldPathReference=function(fieldReference){return FieldPath.fromServerFormat(fieldReference.fieldPath);};// visible for testing
JsonProtoSerializer.prototype.toPropertyOrder=function(orderBy){return{field:this.toFieldPathReference(orderBy.field),direction:this.toDirection(orderBy.dir)};};JsonProtoSerializer.prototype.fromPropertyOrder=function(orderBy){return new OrderBy(this.fromFieldPathReference(orderBy.field),this.fromDirection(orderBy.direction));};JsonProtoSerializer.prototype.fromFieldFilter=function(filter){return FieldFilter.create(this.fromFieldPathReference(filter.fieldFilter.field),this.fromOperatorName(filter.fieldFilter.op),this.fromValue(filter.fieldFilter.value));};// visible for testing
JsonProtoSerializer.prototype.toUnaryOrFieldFilter=function(filter){if(filter.op===Operator.EQUAL){if(filter.value.isEqual(DoubleValue.NAN)){return{unaryFilter:{field:this.toFieldPathReference(filter.field),op:'IS_NAN'}};}else if(filter.value.isEqual(NullValue.INSTANCE)){return{unaryFilter:{field:this.toFieldPathReference(filter.field),op:'IS_NULL'}};}}return{fieldFilter:{field:this.toFieldPathReference(filter.field),op:this.toOperatorName(filter.op),value:this.toValue(filter.value)}};};JsonProtoSerializer.prototype.fromUnaryFilter=function(filter){switch(filter.unaryFilter.op){case'IS_NAN':var nanField=this.fromFieldPathReference(filter.unaryFilter.field);return FieldFilter.create(nanField,Operator.EQUAL,DoubleValue.NAN);case'IS_NULL':var nullField=this.fromFieldPathReference(filter.unaryFilter.field);return FieldFilter.create(nullField,Operator.EQUAL,NullValue.INSTANCE);case'OPERATOR_UNSPECIFIED':return fail('Unspecified filter');default:return fail('Unknown filter');}};JsonProtoSerializer.prototype.toDocumentMask=function(fieldMask){var canonicalFields=[];fieldMask.fields.forEach(function(field){return canonicalFields.push(field.canonicalString());});return{fieldPaths:canonicalFields};};JsonProtoSerializer.prototype.fromDocumentMask=function(proto){var paths=proto.fieldPaths||[];var fields=paths.map(function(path){return FieldPath.fromServerFormat(path);});return FieldMask.fromArray(fields);};return JsonProtoSerializer;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Holds the listeners and the last received ViewSnapshot for a query being
 * tracked by EventManager.
 */var QueryListenersInfo=/** @class */function(){function QueryListenersInfo(){this.viewSnap=null;this.targetId=0;this.listeners=[];}return QueryListenersInfo;}();/**
 * EventManager is responsible for mapping queries to query event emitters.
 * It handles "fan-out". -- Identical queries will re-use the same watch on the
 * backend.
 */var EventManager=/** @class */function(){function EventManager(syncEngine){this.syncEngine=syncEngine;this.queries=new ObjectMap(function(q){return q.canonicalId();});this.onlineState=OnlineState.Unknown;this.snapshotsInSyncListeners=new Set();this.syncEngine.subscribe(this);}EventManager.prototype.listen=function(listener){var query=listener.query;var firstListen=false;var queryInfo=this.queries.get(query);if(!queryInfo){firstListen=true;queryInfo=new QueryListenersInfo();this.queries.set(query,queryInfo);}queryInfo.listeners.push(listener);// Run global snapshot listeners if a consistent snapshot has been emitted.
var raisedEvent=listener.applyOnlineStateChange(this.onlineState);assert(!raisedEvent,"applyOnlineStateChange() shouldn't raise an event for brand-new listeners.");if(queryInfo.viewSnap){var raisedEvent_1=listener.onViewSnapshot(queryInfo.viewSnap);if(raisedEvent_1){this.raiseSnapshotsInSyncEvent();}}if(firstListen){return this.syncEngine.listen(query).then(function(targetId){queryInfo.targetId=targetId;return targetId;});}else{return Promise.resolve(queryInfo.targetId);}};EventManager.prototype.unlisten=function(listener){return tslib.__awaiter(this,void 0,void 0,function(){var query,lastListen,queryInfo,i;return tslib.__generator(this,function(_a){query=listener.query;lastListen=false;queryInfo=this.queries.get(query);if(queryInfo){i=queryInfo.listeners.indexOf(listener);if(i>=0){queryInfo.listeners.splice(i,1);lastListen=queryInfo.listeners.length===0;}}if(lastListen){this.queries.delete(query);return[2/*return*/,this.syncEngine.unlisten(query)];}return[2/*return*/];});});};EventManager.prototype.onWatchChange=function(viewSnaps){var raisedEvent=false;for(var _i=0,viewSnaps_1=viewSnaps;_i<viewSnaps_1.length;_i++){var viewSnap=viewSnaps_1[_i];var query=viewSnap.query;var queryInfo=this.queries.get(query);if(queryInfo){for(var _a=0,_b=queryInfo.listeners;_a<_b.length;_a++){var listener=_b[_a];if(listener.onViewSnapshot(viewSnap)){raisedEvent=true;}}queryInfo.viewSnap=viewSnap;}}if(raisedEvent){this.raiseSnapshotsInSyncEvent();}};EventManager.prototype.onWatchError=function(query,error){var queryInfo=this.queries.get(query);if(queryInfo){for(var _i=0,_a=queryInfo.listeners;_i<_a.length;_i++){var listener=_a[_i];listener.onError(error);}}// Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
// after an error.
this.queries.delete(query);};EventManager.prototype.onOnlineStateChange=function(onlineState){this.onlineState=onlineState;var raisedEvent=false;this.queries.forEach(function(_,queryInfo){for(var _i=0,_a=queryInfo.listeners;_i<_a.length;_i++){var listener=_a[_i];// Run global snapshot listeners if a consistent snapshot has been emitted.
if(listener.applyOnlineStateChange(onlineState)){raisedEvent=true;}}});if(raisedEvent){this.raiseSnapshotsInSyncEvent();}};EventManager.prototype.addSnapshotsInSyncListener=function(observer){this.snapshotsInSyncListeners.add(observer);// Immediately fire an initial event, indicating all existing listeners
// are in-sync.
observer.next();};EventManager.prototype.removeSnapshotsInSyncListener=function(observer){this.snapshotsInSyncListeners.delete(observer);};// Call all global snapshot listeners that have been set.
EventManager.prototype.raiseSnapshotsInSyncEvent=function(){this.snapshotsInSyncListeners.forEach(function(observer){observer.next();});};return EventManager;}();/**
 * QueryListener takes a series of internal view snapshots and determines
 * when to raise the event.
 *
 * It uses an Observer to dispatch events.
 */var QueryListener=/** @class */function(){function QueryListener(query,queryObserver,options){this.query=query;this.queryObserver=queryObserver;/**
         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
         * observer. This flag is set to true once we've actually raised an event.
         */this.raisedInitialEvent=false;this.snap=null;this.onlineState=OnlineState.Unknown;this.options=options||{};}/**
     * Applies the new ViewSnapshot to this listener, raising a user-facing event
     * if applicable (depending on what changed, whether the user has opted into
     * metadata-only changes, etc.). Returns true if a user-facing event was
     * indeed raised.
     */QueryListener.prototype.onViewSnapshot=function(snap){assert(snap.docChanges.length>0||snap.syncStateChanged,'We got a new snapshot with no changes?');if(!this.options.includeMetadataChanges){// Remove the metadata only changes.
var docChanges=[];for(var _i=0,_a=snap.docChanges;_i<_a.length;_i++){var docChange=_a[_i];if(docChange.type!==ChangeType.Metadata){docChanges.push(docChange);}}snap=new ViewSnapshot(snap.query,snap.docs,snap.oldDocs,docChanges,snap.mutatedKeys,snap.fromCache,snap.syncStateChanged,/* excludesMetadataChanges= */true);}var raisedEvent=false;if(!this.raisedInitialEvent){if(this.shouldRaiseInitialEvent(snap,this.onlineState)){this.raiseInitialEvent(snap);raisedEvent=true;}}else if(this.shouldRaiseEvent(snap)){this.queryObserver.next(snap);raisedEvent=true;}this.snap=snap;return raisedEvent;};QueryListener.prototype.onError=function(error){this.queryObserver.error(error);};/** Returns whether a snapshot was raised. */QueryListener.prototype.applyOnlineStateChange=function(onlineState){this.onlineState=onlineState;var raisedEvent=false;if(this.snap&&!this.raisedInitialEvent&&this.shouldRaiseInitialEvent(this.snap,onlineState)){this.raiseInitialEvent(this.snap);raisedEvent=true;}return raisedEvent;};QueryListener.prototype.shouldRaiseInitialEvent=function(snap,onlineState){assert(!this.raisedInitialEvent,'Determining whether to raise first event but already had first event');// Always raise the first event when we're synced
if(!snap.fromCache){return true;}// NOTE: We consider OnlineState.Unknown as online (it should become Offline
// or Online if we wait long enough).
var maybeOnline=onlineState!==OnlineState.Offline;// Don't raise the event if we're online, aren't synced yet (checked
// above) and are waiting for a sync.
if(this.options.waitForSyncWhenOnline&&maybeOnline){assert(snap.fromCache,'Waiting for sync, but snapshot is not from cache');return false;}// Raise data from cache if we have any documents or we are offline
return!snap.docs.isEmpty()||onlineState===OnlineState.Offline;};QueryListener.prototype.shouldRaiseEvent=function(snap){// We don't need to handle includeDocumentMetadataChanges here because
// the Metadata only changes have already been stripped out if needed.
// At this point the only changes we will see are the ones we should
// propagate.
if(snap.docChanges.length>0){return true;}var hasPendingWritesChanged=this.snap&&this.snap.hasPendingWrites!==snap.hasPendingWrites;if(snap.syncStateChanged||hasPendingWritesChanged){return this.options.includeMetadataChanges===true;}// Generally we should have hit one of the cases above, but it's possible
// to get here if there were only metadata docChanges and they got
// stripped out.
return false;};QueryListener.prototype.raiseInitialEvent=function(snap){assert(!this.raisedInitialEvent,'Trying to raise initial events for second time');snap=ViewSnapshot.fromInitialDocuments(snap.query,snap.docs,snap.mutatedKeys,snap.fromCache);this.raisedInitialEvent=true;this.queryObserver.next(snap);};return QueryListener;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A set of changes to what documents are currently in view and out of view for
 * a given query. These changes are sent to the LocalStore by the View (via
 * the SyncEngine) and are used to pin / unpin documents as appropriate.
 */var LocalViewChanges=/** @class */function(){function LocalViewChanges(targetId,fromCache,addedKeys,removedKeys){this.targetId=targetId;this.fromCache=fromCache;this.addedKeys=addedKeys;this.removedKeys=removedKeys;}LocalViewChanges.fromSnapshot=function(targetId,viewSnapshot){var addedKeys=documentKeySet();var removedKeys=documentKeySet();for(var _i=0,_a=viewSnapshot.docChanges;_i<_a.length;_i++){var docChange=_a[_i];switch(docChange.type){case ChangeType.Added:addedKeys=addedKeys.add(docChange.doc.key);break;case ChangeType.Removed:removedKeys=removedKeys.add(docChange.doc.key);break;// do nothing
}}return new LocalViewChanges(targetId,viewSnapshot.fromCache,addedKeys,removedKeys);};return LocalViewChanges;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var AddedLimboDocument=/** @class */function(){function AddedLimboDocument(key){this.key=key;}return AddedLimboDocument;}();var RemovedLimboDocument=/** @class */function(){function RemovedLimboDocument(key){this.key=key;}return RemovedLimboDocument;}();/**
 * View is responsible for computing the final merged truth of what docs are in
 * a query. It gets notified of local and remote changes to docs, and applies
 * the query filters and limits to determine the most correct possible results.
 */var View=/** @class */function(){function View(query,/** Documents included in the remote target */_syncedDocuments){this.query=query;this._syncedDocuments=_syncedDocuments;this.syncState=null;/**
         * A flag whether the view is current with the backend. A view is considered
         * current after it has seen the current flag from the backend and did not
         * lose consistency within the watch stream (e.g. because of an existence
         * filter mismatch).
         */this.current=false;/** Documents in the view but not in the remote target */this.limboDocuments=documentKeySet();/** Document Keys that have local changes */this.mutatedKeys=documentKeySet();this.documentSet=new DocumentSet(query.docComparator.bind(query));}Object.defineProperty(View.prototype,"syncedDocuments",{/**
         * The set of remote documents that the server has told us belongs to the target associated with
         * this view.
         */get:function get(){return this._syncedDocuments;},enumerable:true,configurable:true});/**
     * Iterates over a set of doc changes, applies the query limit, and computes
     * what the new results should be, what the changes were, and whether we may
     * need to go back to the local cache for more results. Does not make any
     * changes to the view.
     * @param docChanges The doc changes to apply to this view.
     * @param previousChanges If this is being called with a refill, then start
     *        with this set of docs and changes instead of the current view.
     * @return a new set of docs, changes, and refill flag.
     */View.prototype.computeDocChanges=function(docChanges,previousChanges){var _this=this;var changeSet=previousChanges?previousChanges.changeSet:new DocumentChangeSet();var oldDocumentSet=previousChanges?previousChanges.documentSet:this.documentSet;var newMutatedKeys=previousChanges?previousChanges.mutatedKeys:this.mutatedKeys;var newDocumentSet=oldDocumentSet;var needsRefill=false;// Track the last doc in a (full) limit. This is necessary, because some
// update (a delete, or an update moving a doc past the old limit) might
// mean there is some other document in the local cache that either should
// come (1) between the old last limit doc and the new last document, in the
// case of updates, or (2) after the new last document, in the case of
// deletes. So we keep this doc at the old limit to compare the updates to.
//
// Note that this should never get used in a refill (when previousChanges is
// set), because there will only be adds -- no deletes or updates.
var lastDocInLimit=this.query.hasLimitToFirst()&&oldDocumentSet.size===this.query.limit?oldDocumentSet.last():null;var firstDocInLimit=this.query.hasLimitToLast()&&oldDocumentSet.size===this.query.limit?oldDocumentSet.first():null;docChanges.inorderTraversal(function(key,newMaybeDoc){var oldDoc=oldDocumentSet.get(key);var newDoc=newMaybeDoc instanceof Document?newMaybeDoc:null;if(newDoc){assert(key.isEqual(newDoc.key),'Mismatching keys found in document changes: '+key+' != '+newDoc.key);newDoc=_this.query.matches(newDoc)?newDoc:null;}var oldDocHadPendingMutations=oldDoc?_this.mutatedKeys.has(oldDoc.key):false;var newDocHasPendingMutations=newDoc?newDoc.hasLocalMutations||// We only consider committed mutations for documents that were
// mutated during the lifetime of the view.
_this.mutatedKeys.has(newDoc.key)&&newDoc.hasCommittedMutations:false;var changeApplied=false;// Calculate change
if(oldDoc&&newDoc){var docsEqual=oldDoc.data().isEqual(newDoc.data());if(!docsEqual){if(!_this.shouldWaitForSyncedDocument(oldDoc,newDoc)){changeSet.track({type:ChangeType.Modified,doc:newDoc});changeApplied=true;if(lastDocInLimit&&_this.query.docComparator(newDoc,lastDocInLimit)>0||firstDocInLimit&&_this.query.docComparator(newDoc,firstDocInLimit)<0){// This doc moved from inside the limit to outside the limit.
// That means there may be some other doc in the local cache
// that should be included instead.
needsRefill=true;}}}else if(oldDocHadPendingMutations!==newDocHasPendingMutations){changeSet.track({type:ChangeType.Metadata,doc:newDoc});changeApplied=true;}}else if(!oldDoc&&newDoc){changeSet.track({type:ChangeType.Added,doc:newDoc});changeApplied=true;}else if(oldDoc&&!newDoc){changeSet.track({type:ChangeType.Removed,doc:oldDoc});changeApplied=true;if(lastDocInLimit||firstDocInLimit){// A doc was removed from a full limit query. We'll need to
// requery from the local cache to see if we know about some other
// doc that should be in the results.
needsRefill=true;}}if(changeApplied){if(newDoc){newDocumentSet=newDocumentSet.add(newDoc);if(newDocHasPendingMutations){newMutatedKeys=newMutatedKeys.add(key);}else{newMutatedKeys=newMutatedKeys.delete(key);}}else{newDocumentSet=newDocumentSet.delete(key);newMutatedKeys=newMutatedKeys.delete(key);}}});// Drop documents out to meet limit/limitToLast requirement.
if(this.query.hasLimitToFirst()||this.query.hasLimitToLast()){while(newDocumentSet.size>this.query.limit){var oldDoc=this.query.hasLimitToFirst()?newDocumentSet.last():newDocumentSet.first();newDocumentSet=newDocumentSet.delete(oldDoc.key);newMutatedKeys=newMutatedKeys.delete(oldDoc.key);changeSet.track({type:ChangeType.Removed,doc:oldDoc});}}assert(!needsRefill||!previousChanges,'View was refilled using docs that themselves needed refilling.');return{documentSet:newDocumentSet,changeSet:changeSet,needsRefill:needsRefill,mutatedKeys:newMutatedKeys};};View.prototype.shouldWaitForSyncedDocument=function(oldDoc,newDoc){// We suppress the initial change event for documents that were modified as
// part of a write acknowledgment (e.g. when the value of a server transform
// is applied) as Watch will send us the same document again.
// By suppressing the event, we only raise two user visible events (one with
// `hasPendingWrites` and the final state of the document) instead of three
// (one with `hasPendingWrites`, the modified document with
// `hasPendingWrites` and the final state of the document).
return oldDoc.hasLocalMutations&&newDoc.hasCommittedMutations&&!newDoc.hasLocalMutations;};/**
     * Updates the view with the given ViewDocumentChanges and optionally updates
     * limbo docs and sync state from the provided target change.
     * @param docChanges The set of changes to make to the view's docs.
     * @param updateLimboDocuments Whether to update limbo documents based on this
     *        change.
     * @param targetChange A target change to apply for computing limbo docs and
     *        sync state.
     * @return A new ViewChange with the given docs, changes, and sync state.
     */ // PORTING NOTE: The iOS/Android clients always compute limbo document changes.
View.prototype.applyChanges=function(docChanges,updateLimboDocuments,targetChange){var _this=this;assert(!docChanges.needsRefill,'Cannot apply changes that need a refill');var oldDocs=this.documentSet;this.documentSet=docChanges.documentSet;this.mutatedKeys=docChanges.mutatedKeys;// Sort changes based on type and query comparator
var changes=docChanges.changeSet.getChanges();changes.sort(function(c1,c2){return compareChangeType(c1.type,c2.type)||_this.query.docComparator(c1.doc,c2.doc);});this.applyTargetChange(targetChange);var limboChanges=updateLimboDocuments?this.updateLimboDocuments():[];var synced=this.limboDocuments.size===0&&this.current;var newSyncState=synced?SyncState.Synced:SyncState.Local;var syncStateChanged=newSyncState!==this.syncState;this.syncState=newSyncState;if(changes.length===0&&!syncStateChanged){// no changes
return{limboChanges:limboChanges};}else{var snap=new ViewSnapshot(this.query,docChanges.documentSet,oldDocs,changes,docChanges.mutatedKeys,newSyncState===SyncState.Local,syncStateChanged,/* excludesMetadataChanges= */false);return{snapshot:snap,limboChanges:limboChanges};}};/**
     * Applies an OnlineState change to the view, potentially generating a
     * ViewChange if the view's syncState changes as a result.
     */View.prototype.applyOnlineStateChange=function(onlineState){if(this.current&&onlineState===OnlineState.Offline){// If we're offline, set `current` to false and then call applyChanges()
// to refresh our syncState and generate a ViewChange as appropriate. We
// are guaranteed to get a new TargetChange that sets `current` back to
// true once the client is back online.
this.current=false;return this.applyChanges({documentSet:this.documentSet,changeSet:new DocumentChangeSet(),mutatedKeys:this.mutatedKeys,needsRefill:false},/* updateLimboDocuments= */false);}else{// No effect, just return a no-op ViewChange.
return{limboChanges:[]};}};/**
     * Returns whether the doc for the given key should be in limbo.
     */View.prototype.shouldBeInLimbo=function(key){// If the remote end says it's part of this query, it's not in limbo.
if(this._syncedDocuments.has(key)){return false;}// The local store doesn't think it's a result, so it shouldn't be in limbo.
if(!this.documentSet.has(key)){return false;}// If there are local changes to the doc, they might explain why the server
// doesn't know that it's part of the query. So don't put it in limbo.
// TODO(klimt): Ideally, we would only consider changes that might actually
// affect this specific query.
if(this.documentSet.get(key).hasLocalMutations){return false;}// Everything else is in limbo.
return true;};/**
     * Updates syncedDocuments, current, and limbo docs based on the given change.
     * Returns the list of changes to which docs are in limbo.
     */View.prototype.applyTargetChange=function(targetChange){var _this=this;if(targetChange){targetChange.addedDocuments.forEach(function(key){return _this._syncedDocuments=_this._syncedDocuments.add(key);});targetChange.modifiedDocuments.forEach(function(key){return assert(_this._syncedDocuments.has(key),"Modified document "+key+" not found in view.");});targetChange.removedDocuments.forEach(function(key){return _this._syncedDocuments=_this._syncedDocuments.delete(key);});this.current=targetChange.current;}};View.prototype.updateLimboDocuments=function(){var _this=this;// We can only determine limbo documents when we're in-sync with the server.
if(!this.current){return[];}// TODO(klimt): Do this incrementally so that it's not quadratic when
// updating many documents.
var oldLimboDocuments=this.limboDocuments;this.limboDocuments=documentKeySet();this.documentSet.forEach(function(doc){if(_this.shouldBeInLimbo(doc.key)){_this.limboDocuments=_this.limboDocuments.add(doc.key);}});// Diff the new limbo docs with the old limbo docs.
var changes=[];oldLimboDocuments.forEach(function(key){if(!_this.limboDocuments.has(key)){changes.push(new RemovedLimboDocument(key));}});this.limboDocuments.forEach(function(key){if(!oldLimboDocuments.has(key)){changes.push(new AddedLimboDocument(key));}});return changes;};/**
     * Update the in-memory state of the current view with the state read from
     * persistence.
     *
     * We update the query view whenever a client's primary status changes:
     * - When a client transitions from primary to secondary, it can miss
     *   LocalStorage updates and its query views may temporarily not be
     *   synchronized with the state on disk.
     * - For secondary to primary transitions, the client needs to update the list
     *   of `syncedDocuments` since secondary clients update their query views
     *   based purely on synthesized RemoteEvents.
     *
     * @param queryResult.documents - The documents that match the query according
     * to the LocalStore.
     * @param queryResult.remoteKeys - The keys of the documents that match the
     * query according to the backend.
     *
     * @return The ViewChange that resulted from this synchronization.
     */ // PORTING NOTE: Multi-tab only.
View.prototype.synchronizeWithPersistedState=function(queryResult){this._syncedDocuments=queryResult.remoteKeys;this.limboDocuments=documentKeySet();var docChanges=this.computeDocChanges(queryResult.documents);return this.applyChanges(docChanges,/*updateLimboDocuments=*/true);};/**
     * Returns a view snapshot as if this query was just listened to. Contains
     * a document add for every existing document and the `fromCache` and
     * `hasPendingWrites` status of the already established view.
     */ // PORTING NOTE: Multi-tab only.
View.prototype.computeInitialSnapshot=function(){return ViewSnapshot.fromInitialDocuments(this.query,this.documentSet,this.mutatedKeys,this.syncState===SyncState.Local);};return View;}();function compareChangeType(c1,c2){var order=function order(change){switch(change){case ChangeType.Added:return 1;case ChangeType.Modified:return 2;case ChangeType.Metadata:// A metadata change is converted to a modified change at the public
// api layer.  Since we sort by document key and then change type,
// metadata and modified changes must be sorted equivalently.
return 2;case ChangeType.Removed:return 0;default:return fail('Unknown ChangeType: '+change);}};return order(c1)-order(c2);}/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var RETRY_COUNT=5;/**
 * TransactionRunner encapsulates the logic needed to run and retry transactions
 * with backoff.
 */var TransactionRunner=/** @class */function(){function TransactionRunner(asyncQueue,remoteStore,updateFunction,deferred){this.asyncQueue=asyncQueue;this.remoteStore=remoteStore;this.updateFunction=updateFunction;this.deferred=deferred;this.retries=RETRY_COUNT;this.backoff=new ExponentialBackoff(this.asyncQueue,TimerId.RetryTransaction);}/** Runs the transaction and sets the result on deferred. */TransactionRunner.prototype.run=function(){this.runWithBackOff();};TransactionRunner.prototype.runWithBackOff=function(){var _this=this;this.backoff.backoffAndRun(function(){return tslib.__awaiter(_this,void 0,void 0,function(){var transaction,userPromise;var _this=this;return tslib.__generator(this,function(_a){transaction=this.remoteStore.createTransaction();userPromise=this.tryRunUpdateFunction(transaction);if(userPromise){userPromise.then(function(result){_this.asyncQueue.enqueueAndForget(function(){return transaction.commit().then(function(){_this.deferred.resolve(result);}).catch(function(commitError){_this.handleTransactionError(commitError);});});}).catch(function(userPromiseError){_this.handleTransactionError(userPromiseError);});}return[2/*return*/];});});});};TransactionRunner.prototype.tryRunUpdateFunction=function(transaction){try{var userPromise=this.updateFunction(transaction);if(isNullOrUndefined(userPromise)||!userPromise.catch||!userPromise.then){this.deferred.reject(Error('Transaction callback must return a Promise'));return null;}return userPromise;}catch(error){// Do not retry errors thrown by user provided updateFunction.
this.deferred.reject(error);return null;}};TransactionRunner.prototype.handleTransactionError=function(error){var _this=this;if(this.retries>0&&this.isRetryableTransactionError(error)){this.retries-=1;this.asyncQueue.enqueueAndForget(function(){_this.runWithBackOff();return Promise.resolve();});}else{this.deferred.reject(error);}};TransactionRunner.prototype.isRetryableTransactionError=function(error){if(error.name==='FirebaseError'){// In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
// non-matching document versions with ABORTED. These errors should be retried.
var code=error.code;return code==='aborted'||code==='failed-precondition'||!isPermanentError(code);}return false;};return TransactionRunner;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$9='SyncEngine';/**
 * QueryView contains all of the data that SyncEngine needs to keep track of for
 * a particular query.
 */var QueryView=/** @class */function(){function QueryView(/**
     * The query itself.
     */query,/**
     * The target number created by the client that is used in the watch
     * stream to identify this query.
     */targetId,/**
     * The view is responsible for computing the final merged truth of what
     * docs are in the query. It gets notified of local and remote changes,
     * and applies the query filters and limits to determine the most correct
     * possible results.
     */view){this.query=query;this.targetId=targetId;this.view=view;}return QueryView;}();/** Tracks a limbo resolution. */var LimboResolution=/** @class */function(){function LimboResolution(key){this.key=key;/**
         * Set to true once we've received a document. This is used in
         * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
         * decide whether it needs to manufacture a delete event for the target once
         * the target is CURRENT.
         */this.receivedDocument=false;}return LimboResolution;}();/**
 * SyncEngine is the central controller in the client SDK architecture. It is
 * the glue code between the EventManager, LocalStore, and RemoteStore. Some of
 * SyncEngine's responsibilities include:
 * 1. Coordinating client requests and remote events between the EventManager
 *    and the local and remote data stores.
 * 2. Managing a View object for each query, providing the unified view between
 *    the local and remote data stores.
 * 3. Notifying the RemoteStore when the LocalStore has new mutations in its
 *    queue that need sending to the backend.
 *
 * The SyncEngine’s methods should only ever be called by methods running in the
 * global async queue.
 */var SyncEngine=/** @class */function(){function SyncEngine(localStore,remoteStore,// PORTING NOTE: Manages state synchronization in multi-tab environments.
sharedClientState,currentUser){this.localStore=localStore;this.remoteStore=remoteStore;this.sharedClientState=sharedClientState;this.currentUser=currentUser;this.syncEngineListener=null;this.queryViewsByQuery=new ObjectMap(function(q){return q.canonicalId();});this.queriesByTarget={};this.limboTargetsByKey=new SortedMap(DocumentKey.comparator);this.limboResolutionsByTarget={};this.limboDocumentRefs=new ReferenceSet();/** Stores user completion handlers, indexed by User and BatchId. */this.mutationUserCallbacks={};/** Stores user callbacks waiting for all pending writes to be acknowledged. */this.pendingWritesCallbacks=new Map();this.limboTargetIdGenerator=TargetIdGenerator.forSyncEngine();// The primary state is set to `true` or `false` immediately after Firestore
// startup. In the interim, a client should only be considered primary if
// `isPrimary` is true.
this.isPrimary=undefined;this.onlineState=OnlineState.Unknown;}Object.defineProperty(SyncEngine.prototype,"isPrimaryClient",{// Only used for testing.
get:function get(){return this.isPrimary===true;},enumerable:true,configurable:true});/** Subscribes to SyncEngine notifications. Has to be called exactly once. */SyncEngine.prototype.subscribe=function(syncEngineListener){assert(syncEngineListener!==null,'SyncEngine listener cannot be null');assert(this.syncEngineListener===null,'SyncEngine already has a subscriber.');this.syncEngineListener=syncEngineListener;};/**
     * Initiates the new listen, resolves promise when listen enqueued to the
     * server. All the subsequent view snapshots or errors are sent to the
     * subscribed handlers. Returns the targetId of the query.
     */SyncEngine.prototype.listen=function(query){return tslib.__awaiter(this,void 0,void 0,function(){var targetId,viewSnapshot,queryView,targetData,status_1;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('listen()');queryView=this.queryViewsByQuery.get(query);if(!queryView)return[3/*break*/,1];// PORTING NOTE: With Multi-Tab Web, it is possible that a query view
// already exists when EventManager calls us for the first time. This
// happens when the primary tab is already listening to this query on
// behalf of another tab and the user of the primary also starts listening
// to the query. EventManager will not have an assigned target ID in this
// case and calls `listen` to obtain this ID.
targetId=queryView.targetId;this.sharedClientState.addLocalQueryTarget(targetId);viewSnapshot=queryView.view.computeInitialSnapshot();return[3/*break*/,4];case 1:return[4/*yield*/,this.localStore.allocateTarget(query.toTarget())];case 2:targetData=_a.sent();status_1=this.sharedClientState.addLocalQueryTarget(targetData.targetId);targetId=targetData.targetId;return[4/*yield*/,this.initializeViewAndComputeSnapshot(query,targetId,status_1==='current')];case 3:viewSnapshot=_a.sent();if(this.isPrimary){this.remoteStore.listen(targetData);}_a.label=4;case 4:this.syncEngineListener.onWatchChange([viewSnapshot]);return[2/*return*/,targetId];}});});};/**
     * Registers a view for a previously unknown query and computes its initial
     * snapshot.
     */SyncEngine.prototype.initializeViewAndComputeSnapshot=function(query,targetId,current){return tslib.__awaiter(this,void 0,void 0,function(){var queryResult,view,viewDocChanges,synthesizedTargetChange,viewChange,data;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.localStore.executeQuery(query,/* usePreviousResults= */true)];case 1:queryResult=_a.sent();view=new View(query,queryResult.remoteKeys);viewDocChanges=view.computeDocChanges(queryResult.documents);synthesizedTargetChange=TargetChange.createSynthesizedTargetChangeForCurrentChange(targetId,current&&this.onlineState!==OnlineState.Offline);viewChange=view.applyChanges(viewDocChanges,/* updateLimboDocuments= */this.isPrimary===true,synthesizedTargetChange);assert(viewChange.limboChanges.length===0,'View returned limbo docs before target ack from the server.');assert(!!viewChange.snapshot,'applyChanges for new view should always return a snapshot');data=new QueryView(query,targetId,view);this.queryViewsByQuery.set(query,data);if(!this.queriesByTarget[targetId]){this.queriesByTarget[targetId]=[];}this.queriesByTarget[targetId].push(query);return[2/*return*/,viewChange.snapshot];}});});};/**
     * Reconcile the list of synced documents in an existing view with those
     * from persistence.
     */ // PORTING NOTE: Multi-tab only.
SyncEngine.prototype.synchronizeViewAndComputeSnapshot=function(queryView){return tslib.__awaiter(this,void 0,void 0,function(){var queryResult,viewSnapshot;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.localStore.executeQuery(queryView.query,/* usePreviousResults= */true)];case 1:queryResult=_a.sent();viewSnapshot=queryView.view.synchronizeWithPersistedState(queryResult);if(this.isPrimary){this.updateTrackedLimbos(queryView.targetId,viewSnapshot.limboChanges);}return[2/*return*/,viewSnapshot];}});});};/** Stops listening to the query. */SyncEngine.prototype.unlisten=function(query){return tslib.__awaiter(this,void 0,void 0,function(){var queryView,queries,targetRemainsActive;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('unlisten()');queryView=this.queryViewsByQuery.get(query);assert(!!queryView,'Trying to unlisten on query not found:'+query);queries=this.queriesByTarget[queryView.targetId];if(queries.length>1){this.queriesByTarget[queryView.targetId]=queries.filter(function(q){return!q.isEqual(query);});this.queryViewsByQuery.delete(query);return[2/*return*/];}if(!this.isPrimary)return[3/*break*/,3];// We need to remove the local query target first to allow us to verify
// whether any other client is still interested in this target.
this.sharedClientState.removeLocalQueryTarget(queryView.targetId);targetRemainsActive=this.sharedClientState.isActiveQueryTarget(queryView.targetId);if(!!targetRemainsActive)return[3/*break*/,2];return[4/*yield*/,this.localStore.releaseTarget(queryView.targetId,/*keepPersistedTargetData=*/false).then(function(){_this.sharedClientState.clearQueryState(queryView.targetId);_this.remoteStore.unlisten(queryView.targetId);_this.removeAndCleanupTarget(queryView.targetId);}).catch(ignoreIfPrimaryLeaseLoss)];case 1:_a.sent();_a.label=2;case 2:return[3/*break*/,5];case 3:this.removeAndCleanupTarget(queryView.targetId);return[4/*yield*/,this.localStore.releaseTarget(queryView.targetId,/*keepPersistedTargetData=*/true)];case 4:_a.sent();_a.label=5;case 5:return[2/*return*/];}});});};/**
     * Initiates the write of local mutation batch which involves adding the
     * writes to the mutation queue, notifying the remote store about new
     * mutations and raising events for any changes this write caused.
     *
     * The promise returned by this call is resolved when the above steps
     * have completed, *not* when the write was acked by the backend. The
     * userCallback is resolved once the write was acked/rejected by the
     * backend (or failed locally for any other reason).
     */SyncEngine.prototype.write=function(batch,userCallback){return tslib.__awaiter(this,void 0,void 0,function(){var result;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('write()');return[4/*yield*/,this.localStore.localWrite(batch)];case 1:result=_a.sent();this.sharedClientState.addPendingMutation(result.batchId);this.addMutationCallback(result.batchId,userCallback);return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(result.changes)];case 2:_a.sent();return[4/*yield*/,this.remoteStore.fillWritePipeline()];case 3:_a.sent();return[2/*return*/];}});});};/**
     * Takes an updateFunction in which a set of reads and writes can be performed
     * atomically. In the updateFunction, the client can read and write values
     * using the supplied transaction object. After the updateFunction, all
     * changes will be committed. If a retryable error occurs (ex: some other
     * client has changed any of the data referenced), then the updateFunction
     * will be called again after a backoff. If the updateFunction still fails
     * after all retries, then the transaction will be rejected.
     *
     * The transaction object passed to the updateFunction contains methods for
     * accessing documents and collections. Unlike other datastore access, data
     * accessed with the transaction will not reflect local changes that have not
     * been committed. For this reason, it is required that all reads are
     * performed before any writes. Transactions must be performed while online.
     *
     * The Deferred input is resolved when the transaction is fully committed.
     */SyncEngine.prototype.runTransaction=function(asyncQueue,updateFunction,deferred){new TransactionRunner(asyncQueue,this.remoteStore,updateFunction,deferred).run();};SyncEngine.prototype.applyRemoteEvent=function(remoteEvent){return tslib.__awaiter(this,void 0,void 0,function(){var changes,error_1;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('applyRemoteEvent()');_a.label=1;case 1:_a.trys.push([1,4,,6]);return[4/*yield*/,this.localStore.applyRemoteEvent(remoteEvent)];case 2:changes=_a.sent();// Update `receivedDocument` as appropriate for any limbo targets.
forEach(remoteEvent.targetChanges,function(targetId,targetChange){var limboResolution=_this.limboResolutionsByTarget[Number(targetId)];if(limboResolution){// Since this is a limbo resolution lookup, it's for a single document
// and it could be added, modified, or removed, but not a combination.
assert(targetChange.addedDocuments.size+targetChange.modifiedDocuments.size+targetChange.removedDocuments.size<=1,'Limbo resolution for single document contains multiple changes.');if(targetChange.addedDocuments.size>0){limboResolution.receivedDocument=true;}else if(targetChange.modifiedDocuments.size>0){assert(limboResolution.receivedDocument,'Received change for limbo target document without add.');}else if(targetChange.removedDocuments.size>0){assert(limboResolution.receivedDocument,'Received remove for limbo target document without add.');limboResolution.receivedDocument=false;}}});return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(changes,remoteEvent)];case 3:_a.sent();return[3/*break*/,6];case 4:error_1=_a.sent();return[4/*yield*/,ignoreIfPrimaryLeaseLoss(error_1)];case 5:_a.sent();return[3/*break*/,6];case 6:return[2/*return*/];}});});};/**
     * Applies an OnlineState change to the sync engine and notifies any views of
     * the change.
     */SyncEngine.prototype.applyOnlineStateChange=function(onlineState,source){// If we are the secondary client, we explicitly ignore the remote store's
// online state (the local client may go offline, even though the primary
// tab remains online) and only apply the primary tab's online state from
// SharedClientState.
if(this.isPrimary&&source===OnlineStateSource.RemoteStore||!this.isPrimary&&source===OnlineStateSource.SharedClientState){this.assertSubscribed('applyOnlineStateChange()');var newViewSnapshots_1=[];this.queryViewsByQuery.forEach(function(query,queryView){var viewChange=queryView.view.applyOnlineStateChange(onlineState);assert(viewChange.limboChanges.length===0,'OnlineState should not affect limbo documents.');if(viewChange.snapshot){newViewSnapshots_1.push(viewChange.snapshot);}});this.syncEngineListener.onOnlineStateChange(onlineState);this.syncEngineListener.onWatchChange(newViewSnapshots_1);this.onlineState=onlineState;if(this.isPrimary){this.sharedClientState.setOnlineState(onlineState);}}};SyncEngine.prototype.rejectListen=function(targetId,err){return tslib.__awaiter(this,void 0,void 0,function(){var limboResolution,limboKey,documentUpdates,resolvedLimboDocuments,event_1;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('rejectListens()');// PORTING NOTE: Multi-tab only.
this.sharedClientState.updateQueryState(targetId,'rejected',err);limboResolution=this.limboResolutionsByTarget[targetId];limboKey=limboResolution&&limboResolution.key;if(!limboKey)return[3/*break*/,1];// Since this query failed, we won't want to manually unlisten to it.
// So go ahead and remove it from bookkeeping.
this.limboTargetsByKey=this.limboTargetsByKey.remove(limboKey);delete this.limboResolutionsByTarget[targetId];documentUpdates=new SortedMap(DocumentKey.comparator);documentUpdates=documentUpdates.insert(limboKey,new NoDocument(limboKey,SnapshotVersion.forDeletedDoc()));resolvedLimboDocuments=documentKeySet().add(limboKey);event_1=new RemoteEvent(SnapshotVersion.MIN,/* targetChanges= */{},/* targetMismatches= */new SortedSet(primitiveComparator),documentUpdates,resolvedLimboDocuments);return[2/*return*/,this.applyRemoteEvent(event_1)];case 1:return[4/*yield*/,this.localStore.releaseTarget(targetId,/* keepPersistedTargetData */false).then(function(){return _this.removeAndCleanupTarget(targetId,err);}).catch(ignoreIfPrimaryLeaseLoss)];case 2:_a.sent();_a.label=3;case 3:return[2/*return*/];}});});};// PORTING NOTE: Multi-tab only
SyncEngine.prototype.applyBatchState=function(batchId,batchState,error){return tslib.__awaiter(this,void 0,void 0,function(){var documents;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('applyBatchState()');return[4/*yield*/,this.localStore.lookupMutationDocuments(batchId)];case 1:documents=_a.sent();if(documents===null){// A throttled tab may not have seen the mutation before it was completed
// and removed from the mutation queue, in which case we won't have cached
// the affected documents. In this case we can safely ignore the update
// since that means we didn't apply the mutation locally at all (if we
// had, we would have cached the affected documents), and so we will just
// see any resulting document changes via normal remote document updates
// as applicable.
debug(LOG_TAG$9,'Cannot apply mutation batch with id: '+batchId);return[2/*return*/];}if(!(batchState==='pending'))return[3/*break*/,3];// If we are the primary client, we need to send this write to the
// backend. Secondary clients will ignore these writes since their remote
// connection is disabled.
return[4/*yield*/,this.remoteStore.fillWritePipeline()];case 2:// If we are the primary client, we need to send this write to the
// backend. Secondary clients will ignore these writes since their remote
// connection is disabled.
_a.sent();return[3/*break*/,4];case 3:if(batchState==='acknowledged'||batchState==='rejected'){// NOTE: Both these methods are no-ops for batches that originated from
// other clients.
this.processUserCallback(batchId,error?error:null);this.localStore.removeCachedMutationBatchMetadata(batchId);}else{fail("Unknown batchState: "+batchState);}_a.label=4;case 4:return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(documents)];case 5:_a.sent();return[2/*return*/];}});});};SyncEngine.prototype.applySuccessfulWrite=function(mutationBatchResult){return tslib.__awaiter(this,void 0,void 0,function(){var batchId,changes,error_2;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('applySuccessfulWrite()');batchId=mutationBatchResult.batch.batchId;// The local store may or may not be able to apply the write result and
// raise events immediately (depending on whether the watcher is caught
// up), so we raise user callbacks first so that they consistently happen
// before listen events.
this.processUserCallback(batchId,/*error=*/null);this.triggerPendingWritesCallbacks(batchId);_a.label=1;case 1:_a.trys.push([1,4,,6]);return[4/*yield*/,this.localStore.acknowledgeBatch(mutationBatchResult)];case 2:changes=_a.sent();this.sharedClientState.updateMutationState(batchId,'acknowledged');return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(changes)];case 3:_a.sent();return[3/*break*/,6];case 4:error_2=_a.sent();return[4/*yield*/,ignoreIfPrimaryLeaseLoss(error_2)];case 5:_a.sent();return[3/*break*/,6];case 6:return[2/*return*/];}});});};SyncEngine.prototype.rejectFailedWrite=function(batchId,error){return tslib.__awaiter(this,void 0,void 0,function(){var changes,error_3;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.assertSubscribed('rejectFailedWrite()');// The local store may or may not be able to apply the write result and
// raise events immediately (depending on whether the watcher is caught up),
// so we raise user callbacks first so that they consistently happen before
// listen events.
this.processUserCallback(batchId,error);this.triggerPendingWritesCallbacks(batchId);_a.label=1;case 1:_a.trys.push([1,4,,6]);return[4/*yield*/,this.localStore.rejectBatch(batchId)];case 2:changes=_a.sent();this.sharedClientState.updateMutationState(batchId,'rejected',error);return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(changes)];case 3:_a.sent();return[3/*break*/,6];case 4:error_3=_a.sent();return[4/*yield*/,ignoreIfPrimaryLeaseLoss(error_3)];case 5:_a.sent();return[3/*break*/,6];case 6:return[2/*return*/];}});});};/**
     * Registers a user callback that resolves when all pending mutations at the moment of calling
     * are acknowledged .
     */SyncEngine.prototype.registerPendingWritesCallback=function(callback){return tslib.__awaiter(this,void 0,void 0,function(){var highestBatchId,callbacks;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.remoteStore.canUseNetwork()){debug(LOG_TAG$9,'The network is disabled. The task returned by '+"'awaitPendingWrites()' will not complete until the network is enabled.");}return[4/*yield*/,this.localStore.getHighestUnacknowledgedBatchId()];case 1:highestBatchId=_a.sent();if(highestBatchId===BATCHID_UNKNOWN){// Trigger the callback right away if there is no pending writes at the moment.
callback.resolve();return[2/*return*/];}callbacks=this.pendingWritesCallbacks.get(highestBatchId)||[];callbacks.push(callback);this.pendingWritesCallbacks.set(highestBatchId,callbacks);return[2/*return*/];}});});};/**
     * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
     * if there are any.
     */SyncEngine.prototype.triggerPendingWritesCallbacks=function(batchId){(this.pendingWritesCallbacks.get(batchId)||[]).forEach(function(callback){callback.resolve();});this.pendingWritesCallbacks.delete(batchId);};/** Reject all outstanding callbacks waiting for pending writes to complete. */SyncEngine.prototype.rejectOutstandingPendingWritesCallbacks=function(errorMessage){this.pendingWritesCallbacks.forEach(function(callbacks){callbacks.forEach(function(callback){callback.reject(new FirestoreError(Code.CANCELLED,errorMessage));});});this.pendingWritesCallbacks.clear();};SyncEngine.prototype.addMutationCallback=function(batchId,callback){var newCallbacks=this.mutationUserCallbacks[this.currentUser.toKey()];if(!newCallbacks){newCallbacks=new SortedMap(primitiveComparator);}newCallbacks=newCallbacks.insert(batchId,callback);this.mutationUserCallbacks[this.currentUser.toKey()]=newCallbacks;};/**
     * Resolves or rejects the user callback for the given batch and then discards
     * it.
     */SyncEngine.prototype.processUserCallback=function(batchId,error){var newCallbacks=this.mutationUserCallbacks[this.currentUser.toKey()];// NOTE: Mutations restored from persistence won't have callbacks, so it's
// okay for there to be no callback for this ID.
if(newCallbacks){var callback=newCallbacks.get(batchId);if(callback){assert(batchId===newCallbacks.minKey(),'Mutation callbacks processed out-of-order?');if(error){callback.reject(error);}else{callback.resolve();}newCallbacks=newCallbacks.remove(batchId);}this.mutationUserCallbacks[this.currentUser.toKey()]=newCallbacks;}};SyncEngine.prototype.removeAndCleanupTarget=function(targetId,error){var _this=this;if(error===void 0){error=null;}this.sharedClientState.removeLocalQueryTarget(targetId);assert(this.queriesByTarget[targetId]&&this.queriesByTarget[targetId].length!==0,"There are no queries mapped to target id "+targetId);for(var _i=0,_a=this.queriesByTarget[targetId];_i<_a.length;_i++){var query=_a[_i];this.queryViewsByQuery.delete(query);if(error){this.syncEngineListener.onWatchError(query,error);}}delete this.queriesByTarget[targetId];if(this.isPrimary){var limboKeys=this.limboDocumentRefs.referencesForId(targetId);this.limboDocumentRefs.removeReferencesForId(targetId);limboKeys.forEach(function(limboKey){var isReferenced=_this.limboDocumentRefs.containsKey(limboKey);if(!isReferenced){// We removed the last reference for this key
_this.removeLimboTarget(limboKey);}});}};SyncEngine.prototype.removeLimboTarget=function(key){// It's possible that the target already got removed because the query failed. In that case,
// the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
var limboTargetId=this.limboTargetsByKey.get(key);if(limboTargetId===null){// This target already got removed, because the query failed.
return;}this.remoteStore.unlisten(limboTargetId);this.limboTargetsByKey=this.limboTargetsByKey.remove(key);delete this.limboResolutionsByTarget[limboTargetId];};SyncEngine.prototype.updateTrackedLimbos=function(targetId,limboChanges){for(var _i=0,limboChanges_1=limboChanges;_i<limboChanges_1.length;_i++){var limboChange=limboChanges_1[_i];if(limboChange instanceof AddedLimboDocument){this.limboDocumentRefs.addReference(limboChange.key,targetId);this.trackLimboChange(limboChange);}else if(limboChange instanceof RemovedLimboDocument){debug(LOG_TAG$9,'Document no longer in limbo: '+limboChange.key);this.limboDocumentRefs.removeReference(limboChange.key,targetId);var isReferenced=this.limboDocumentRefs.containsKey(limboChange.key);if(!isReferenced){// We removed the last reference for this key
this.removeLimboTarget(limboChange.key);}}else{fail('Unknown limbo change: '+JSON.stringify(limboChange));}}};SyncEngine.prototype.trackLimboChange=function(limboChange){var key=limboChange.key;if(!this.limboTargetsByKey.get(key)){debug(LOG_TAG$9,'New document in limbo: '+key);var limboTargetId=this.limboTargetIdGenerator.next();var query=Query.atPath(key.path);this.limboResolutionsByTarget[limboTargetId]=new LimboResolution(key);this.remoteStore.listen(new TargetData(query.toTarget(),limboTargetId,TargetPurpose.LimboResolution,ListenSequence.INVALID));this.limboTargetsByKey=this.limboTargetsByKey.insert(key,limboTargetId);}};// Visible for testing
SyncEngine.prototype.currentLimboDocs=function(){return this.limboTargetsByKey;};SyncEngine.prototype.emitNewSnapsAndNotifyLocalStore=function(changes,remoteEvent){return tslib.__awaiter(this,void 0,void 0,function(){var newSnaps,docChangesInAllViews,queriesProcessed;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:newSnaps=[];docChangesInAllViews=[];queriesProcessed=[];this.queryViewsByQuery.forEach(function(_,queryView){queriesProcessed.push(Promise.resolve().then(function(){var viewDocChanges=queryView.view.computeDocChanges(changes);if(!viewDocChanges.needsRefill){return viewDocChanges;}// The query has a limit and some docs were removed, so we need
// to re-run the query against the local store to make sure we
// didn't lose any good docs that had been past the limit.
return _this.localStore.executeQuery(queryView.query,/* usePreviousResults= */false).then(function(_a){var documents=_a.documents;return queryView.view.computeDocChanges(documents,viewDocChanges);});}).then(function(viewDocChanges){var targetChange=remoteEvent&&remoteEvent.targetChanges[queryView.targetId];var viewChange=queryView.view.applyChanges(viewDocChanges,/* updateLimboDocuments= */_this.isPrimary===true,targetChange);_this.updateTrackedLimbos(queryView.targetId,viewChange.limboChanges);if(viewChange.snapshot){if(_this.isPrimary){_this.sharedClientState.updateQueryState(queryView.targetId,viewChange.snapshot.fromCache?'not-current':'current');}newSnaps.push(viewChange.snapshot);var docChanges=LocalViewChanges.fromSnapshot(queryView.targetId,viewChange.snapshot);docChangesInAllViews.push(docChanges);}}));});return[4/*yield*/,Promise.all(queriesProcessed)];case 1:_a.sent();this.syncEngineListener.onWatchChange(newSnaps);return[4/*yield*/,this.localStore.notifyLocalViewChanges(docChangesInAllViews)];case 2:_a.sent();return[2/*return*/];}});});};SyncEngine.prototype.assertSubscribed=function(fnName){assert(this.syncEngineListener!==null,'Trying to call '+fnName+' before calling subscribe().');};SyncEngine.prototype.handleCredentialChange=function(user){return tslib.__awaiter(this,void 0,void 0,function(){var userChanged,result;return tslib.__generator(this,function(_a){switch(_a.label){case 0:userChanged=!this.currentUser.isEqual(user);this.currentUser=user;if(!userChanged)return[3/*break*/,3];// Fails tasks waiting for pending writes requested by previous user.
this.rejectOutstandingPendingWritesCallbacks("'waitForPendingWrites' promise is rejected due to a user change.");return[4/*yield*/,this.localStore.handleUserChange(user)];case 1:result=_a.sent();// TODO(b/114226417): Consider calling this only in the primary tab.
this.sharedClientState.handleUserChange(user,result.removedBatchIds,result.addedBatchIds);return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(result.affectedDocuments)];case 2:_a.sent();_a.label=3;case 3:return[4/*yield*/,this.remoteStore.handleCredentialChange()];case 4:_a.sent();return[2/*return*/];}});});};// PORTING NOTE: Multi-tab only
SyncEngine.prototype.applyPrimaryState=function(isPrimary){return tslib.__awaiter(this,void 0,void 0,function(){var activeTargets,activeQueries,_i,activeQueries_1,targetData,activeTargets_1,p_1;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!(isPrimary===true&&this.isPrimary!==true))return[3/*break*/,3];this.isPrimary=true;return[4/*yield*/,this.remoteStore.applyPrimaryState(true)];case 1:_a.sent();activeTargets=this.sharedClientState.getAllActiveQueryTargets();return[4/*yield*/,this.synchronizeQueryViewsAndRaiseSnapshots(activeTargets.toArray())];case 2:activeQueries=_a.sent();for(_i=0,activeQueries_1=activeQueries;_i<activeQueries_1.length;_i++){targetData=activeQueries_1[_i];this.remoteStore.listen(targetData);}return[3/*break*/,7];case 3:if(!(isPrimary===false&&this.isPrimary!==false))return[3/*break*/,7];this.isPrimary=false;activeTargets_1=[];p_1=Promise.resolve();forEachNumber(this.queriesByTarget,function(targetId,_){if(_this.sharedClientState.isLocalQueryTarget(targetId)){activeTargets_1.push(targetId);}else{p_1=p_1.then(function(){_this.removeAndCleanupTarget(targetId);return _this.localStore.releaseTarget(targetId,/*keepPersistedTargetData=*/true);});}_this.remoteStore.unlisten(targetId);});return[4/*yield*/,p_1];case 4:_a.sent();return[4/*yield*/,this.synchronizeQueryViewsAndRaiseSnapshots(activeTargets_1)];case 5:_a.sent();this.resetLimboDocuments();return[4/*yield*/,this.remoteStore.applyPrimaryState(false)];case 6:_a.sent();_a.label=7;case 7:return[2/*return*/];}});});};// PORTING NOTE: Multi-tab only.
SyncEngine.prototype.resetLimboDocuments=function(){var _this=this;forEachNumber(this.limboResolutionsByTarget,function(targetId){_this.remoteStore.unlisten(targetId);});this.limboDocumentRefs.removeAllReferences();this.limboResolutionsByTarget=[];this.limboTargetsByKey=new SortedMap(DocumentKey.comparator);};/**
     * Reconcile the query views of the provided query targets with the state from
     * persistence. Raises snapshots for any changes that affect the local
     * client and returns the updated state of all target's query data.
     */ // PORTING NOTE: Multi-tab only.
SyncEngine.prototype.synchronizeQueryViewsAndRaiseSnapshots=function(targets){return tslib.__awaiter(this,void 0,void 0,function(){var activeQueries,newViewSnapshots,_i,targets_1,targetId,targetData,queries,_a,queries_1,query,queryView,viewChange,target;return tslib.__generator(this,function(_b){switch(_b.label){case 0:activeQueries=[];newViewSnapshots=[];_i=0,targets_1=targets;_b.label=1;case 1:if(!(_i<targets_1.length))return[3/*break*/,14];targetId=targets_1[_i];targetData=void 0;queries=this.queriesByTarget[targetId];if(!(queries&&queries.length!==0))return[3/*break*/,8];// For queries that have a local View, we need to update their state
// in LocalStore (as the resume token and the snapshot version
// might have changed) and reconcile their views with the persisted
// state (the list of syncedDocuments may have gotten out of sync).
return[4/*yield*/,this.localStore.releaseTarget(targetId,/*keepPersistedTargetData=*/true)];case 2:// For queries that have a local View, we need to update their state
// in LocalStore (as the resume token and the snapshot version
// might have changed) and reconcile their views with the persisted
// state (the list of syncedDocuments may have gotten out of sync).
_b.sent();return[4/*yield*/,this.localStore.allocateTarget(queries[0].toTarget())];case 3:targetData=_b.sent();_a=0,queries_1=queries;_b.label=4;case 4:if(!(_a<queries_1.length))return[3/*break*/,7];query=queries_1[_a];queryView=this.queryViewsByQuery.get(query);assert(!!queryView,"No query view found for "+query);return[4/*yield*/,this.synchronizeViewAndComputeSnapshot(queryView)];case 5:viewChange=_b.sent();if(viewChange.snapshot){newViewSnapshots.push(viewChange.snapshot);}_b.label=6;case 6:_a++;return[3/*break*/,4];case 7:return[3/*break*/,12];case 8:assert(this.isPrimary===true,'A secondary tab should never have an active target without an active query.');return[4/*yield*/,this.localStore.getTarget(targetId)];case 9:target=_b.sent();assert(!!target,"Target for id "+targetId+" not found");return[4/*yield*/,this.localStore.allocateTarget(target)];case 10:targetData=_b.sent();return[4/*yield*/,this.initializeViewAndComputeSnapshot(this.synthesizeTargetToQuery(target),targetId,/*current=*/false)];case 11:_b.sent();_b.label=12;case 12:activeQueries.push(targetData);_b.label=13;case 13:_i++;return[3/*break*/,1];case 14:this.syncEngineListener.onWatchChange(newViewSnapshots);return[2/*return*/,activeQueries];}});});};/**
     * Creates a `Query` object from the specified `Target`. There is no way to
     * obtain the original `Query`, so we synthesize a `Query` from the `Target`
     * object.
     *
     * The synthesized result might be different from the original `Query`, but
     * since the synthesized `Query` should return the same results as the
     * original one (only the presentation of results might differ), the potential
     * difference will not cause issues.
     */ // PORTING NOTE: Multi-tab only
SyncEngine.prototype.synthesizeTargetToQuery=function(target){return new Query(target.path,target.collectionGroup,target.orderBy,target.filters,target.limit,LimitType.First,target.startAt,target.endAt);};// PORTING NOTE: Multi-tab only
SyncEngine.prototype.getActiveClients=function(){return this.localStore.getActiveClients();};// PORTING NOTE: Multi-tab only
SyncEngine.prototype.applyTargetState=function(targetId,state,error){return tslib.__awaiter(this,void 0,void 0,function(){var _a,changes,synthesizedRemoteEvent;return tslib.__generator(this,function(_b){switch(_b.label){case 0:if(this.isPrimary){// If we receive a target state notification via WebStorage, we are
// either already secondary or another tab has taken the primary lease.
debug(LOG_TAG$9,'Ignoring unexpected query state notification.');return[2/*return*/];}if(!this.queriesByTarget[targetId])return[3/*break*/,7];_a=state;switch(_a){case'current':return[3/*break*/,1];case'not-current':return[3/*break*/,1];case'rejected':return[3/*break*/,4];}return[3/*break*/,6];case 1:return[4/*yield*/,this.localStore.getNewDocumentChanges()];case 2:changes=_b.sent();synthesizedRemoteEvent=RemoteEvent.createSynthesizedRemoteEventForCurrentChange(targetId,state==='current');return[4/*yield*/,this.emitNewSnapsAndNotifyLocalStore(changes,synthesizedRemoteEvent)];case 3:_b.sent();return[3/*break*/,7];case 4:return[4/*yield*/,this.localStore.releaseTarget(targetId,/* keepPersistedTargetData */true)];case 5:_b.sent();this.removeAndCleanupTarget(targetId,error);return[3/*break*/,7];case 6:fail('Unexpected target state: '+state);_b.label=7;case 7:return[2/*return*/];}});});};// PORTING NOTE: Multi-tab only
SyncEngine.prototype.applyActiveTargetsChange=function(added,removed){return tslib.__awaiter(this,void 0,void 0,function(){var _i,added_1,targetId,target,targetData,_loop_1,this_1,_a,removed_1,targetId;var _this=this;return tslib.__generator(this,function(_b){switch(_b.label){case 0:if(!this.isPrimary){return[2/*return*/];}_i=0,added_1=added;_b.label=1;case 1:if(!(_i<added_1.length))return[3/*break*/,6];targetId=added_1[_i];assert(!this.queriesByTarget[targetId],'Trying to add an already active target');return[4/*yield*/,this.localStore.getTarget(targetId)];case 2:target=_b.sent();assert(!!target,"Query data for active target "+targetId+" not found");return[4/*yield*/,this.localStore.allocateTarget(target)];case 3:targetData=_b.sent();return[4/*yield*/,this.initializeViewAndComputeSnapshot(this.synthesizeTargetToQuery(target),targetData.targetId,/*current=*/false)];case 4:_b.sent();this.remoteStore.listen(targetData);_b.label=5;case 5:_i++;return[3/*break*/,1];case 6:_loop_1=function _loop_1(targetId){return tslib.__generator(this,function(_a){switch(_a.label){case 0:// Check that the target is still active since the target might have been
// removed if it has been rejected by the backend.
if(!this_1.queriesByTarget[targetId]){return[2/*return*/,"continue"];}// Release queries that are still active.
return[4/*yield*/,this_1.localStore.releaseTarget(targetId,/* keepPersistedTargetData */false).then(function(){_this.remoteStore.unlisten(targetId);_this.removeAndCleanupTarget(targetId);}).catch(ignoreIfPrimaryLeaseLoss)];case 1:// Release queries that are still active.
_a.sent();return[2/*return*/];}});};this_1=this;_a=0,removed_1=removed;_b.label=7;case 7:if(!(_a<removed_1.length))return[3/*break*/,10];targetId=removed_1[_a];return[5/*yield**/,_loop_1(targetId)];case 8:_b.sent();_b.label=9;case 9:_a++;return[3/*break*/,7];case 10:return[2/*return*/];}});});};// PORTING NOTE: Multi-tab only. In other clients, LocalStore is unaware of
// the online state.
SyncEngine.prototype.enableNetwork=function(){this.localStore.setNetworkEnabled(true);return this.remoteStore.enableNetwork();};// PORTING NOTE: Multi-tab only. In other clients, LocalStore is unaware of
// the online state.
SyncEngine.prototype.disableNetwork=function(){this.localStore.setNetworkEnabled(false);return this.remoteStore.disableNetwork();};SyncEngine.prototype.getRemoteKeysForTarget=function(targetId){var limboResolution=this.limboResolutionsByTarget[targetId];if(limboResolution&&limboResolution.receivedDocument){return documentKeySet().add(limboResolution.key);}else{var keySet=documentKeySet();var queries=this.queriesByTarget[targetId];if(!queries){return keySet;}for(var _i=0,queries_2=queries;_i<queries_2.length;_i++){var query=queries_2[_i];var queryView=this.queryViewsByQuery.get(query);assert(!!queryView,"No query view found for "+query);keySet=keySet.unionWith(queryView.view.syncedDocuments);}return keySet;}};return SyncEngine;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Simple wrapper around a nullable UID. Mostly exists to make code more
 * readable.
 */var User=/** @class */function(){function User(uid){this.uid=uid;}User.prototype.isAuthenticated=function(){return this.uid!=null;};/**
     * Returns a key representing this user, suitable for inclusion in a
     * dictionary.
     */User.prototype.toKey=function(){if(this.isAuthenticated()){return'uid:'+this.uid;}else{return'anonymous-user';}};User.prototype.isEqual=function(otherUser){return otherUser.uid===this.uid;};/** A user with a null UID. */User.UNAUTHENTICATED=new User(null);// TODO(mikelehen): Look into getting a proper uid-equivalent for
// non-FirebaseAuth providers.
User.GOOGLE_CREDENTIALS=new User('google-credentials-uid');User.FIRST_PARTY=new User('first-party-uid');return User;}();/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // The format of the LocalStorage key that stores the client state is:
//     firestore_clients_<persistence_prefix>_<instance_key>
var CLIENT_STATE_KEY_PREFIX='firestore_clients';/** Assembles the key for a client state in WebStorage */function createWebStorageClientStateKey(persistenceKey,clientId){assert(clientId.indexOf('_')===-1,"Client key cannot contain '_', but was '"+clientId+"'");return CLIENT_STATE_KEY_PREFIX+"_"+persistenceKey+"_"+clientId;}// The format of the WebStorage key that stores the mutation state is:
//     firestore_mutations_<persistence_prefix>_<batch_id>
//     (for unauthenticated users)
// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
//
// 'user_uid' is last to avoid needing to escape '_' characters that it might
// contain.
var MUTATION_BATCH_KEY_PREFIX='firestore_mutations';/** Assembles the key for a mutation batch in WebStorage */function createWebStorageMutationBatchKey(persistenceKey,user,batchId){var mutationKey=MUTATION_BATCH_KEY_PREFIX+"_"+persistenceKey+"_"+batchId;if(user.isAuthenticated()){mutationKey+="_"+user.uid;}return mutationKey;}// The format of the WebStorage key that stores a query target's metadata is:
//     firestore_targets_<persistence_prefix>_<target_id>
var QUERY_TARGET_KEY_PREFIX='firestore_targets';/** Assembles the key for a query state in WebStorage */function createWebStorageQueryTargetMetadataKey(persistenceKey,targetId){return QUERY_TARGET_KEY_PREFIX+"_"+persistenceKey+"_"+targetId;}// The WebStorage prefix that stores the primary tab's online state. The
// format of the key is:
//     firestore_online_state_<persistence_prefix>
var ONLINE_STATE_KEY_PREFIX='firestore_online_state';/** Assembles the key for the online state of the primary tab. */function createWebStorageOnlineStateKey(persistenceKey){return ONLINE_STATE_KEY_PREFIX+"_"+persistenceKey;}// The WebStorage key prefix for the key that stores the last sequence number allocated. The key
// looks like 'firestore_sequence_number_<persistence_prefix>'.
var SEQUENCE_NUMBER_KEY_PREFIX='firestore_sequence_number';/** Assembles the key for the current sequence number. */function createWebStorageSequenceNumberKey(persistenceKey){return SEQUENCE_NUMBER_KEY_PREFIX+"_"+persistenceKey;}/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$a='SharedClientState';/**
 * Holds the state of a mutation batch, including its user ID, batch ID and
 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
 */ // Visible for testing
var MutationMetadata=/** @class */function(){function MutationMetadata(user,batchId,state,error){this.user=user;this.batchId=batchId;this.state=state;this.error=error;assert(error!==undefined===(state==='rejected'),"MutationMetadata must contain an error iff state is 'rejected'");}/**
     * Parses a MutationMetadata from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */MutationMetadata.fromWebStorageEntry=function(user,batchId,value){var mutationBatch=JSON.parse(value);var validData=typeof mutationBatch==='object'&&['pending','acknowledged','rejected'].indexOf(mutationBatch.state)!==-1&&(mutationBatch.error===undefined||typeof mutationBatch.error==='object');var firestoreError=undefined;if(validData&&mutationBatch.error){validData=typeof mutationBatch.error.message==='string'&&typeof mutationBatch.error.code==='string';if(validData){firestoreError=new FirestoreError(mutationBatch.error.code,mutationBatch.error.message);}}if(validData){return new MutationMetadata(user,batchId,mutationBatch.state,firestoreError);}else{error(LOG_TAG$a,"Failed to parse mutation state for ID '"+batchId+"': "+value);return null;}};MutationMetadata.prototype.toWebStorageJSON=function(){var batchMetadata={state:this.state,updateTimeMs:Date.now()// Modify the existing value to trigger update.
};if(this.error){batchMetadata.error={code:this.error.code,message:this.error.message};}return JSON.stringify(batchMetadata);};return MutationMetadata;}();/**
 * Holds the state of a query target, including its target ID and whether the
 * target is 'not-current', 'current' or 'rejected'.
 */ // Visible for testing
var QueryTargetMetadata=/** @class */function(){function QueryTargetMetadata(targetId,state,error){this.targetId=targetId;this.state=state;this.error=error;assert(error!==undefined===(state==='rejected'),"QueryTargetMetadata must contain an error iff state is 'rejected'");}/**
     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */QueryTargetMetadata.fromWebStorageEntry=function(targetId,value){var targetState=JSON.parse(value);var validData=typeof targetState==='object'&&['not-current','current','rejected'].indexOf(targetState.state)!==-1&&(targetState.error===undefined||typeof targetState.error==='object');var firestoreError=undefined;if(validData&&targetState.error){validData=typeof targetState.error.message==='string'&&typeof targetState.error.code==='string';if(validData){firestoreError=new FirestoreError(targetState.error.code,targetState.error.message);}}if(validData){return new QueryTargetMetadata(targetId,targetState.state,firestoreError);}else{error(LOG_TAG$a,"Failed to parse target state for ID '"+targetId+"': "+value);return null;}};QueryTargetMetadata.prototype.toWebStorageJSON=function(){var targetState={state:this.state,updateTimeMs:Date.now()// Modify the existing value to trigger update.
};if(this.error){targetState.error={code:this.error.code,message:this.error.message};}return JSON.stringify(targetState);};return QueryTargetMetadata;}();/**
 * This class represents the immutable ClientState for a client read from
 * WebStorage, containing the list of active query targets.
 */var RemoteClientState=/** @class */function(){function RemoteClientState(clientId,activeTargetIds){this.clientId=clientId;this.activeTargetIds=activeTargetIds;}/**
     * Parses a RemoteClientState from the JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */RemoteClientState.fromWebStorageEntry=function(clientId,value){var clientState=JSON.parse(value);var validData=typeof clientState==='object'&&clientState.activeTargetIds instanceof Array;var activeTargetIdsSet=targetIdSet();for(var i=0;validData&&i<clientState.activeTargetIds.length;++i){validData=isSafeInteger(clientState.activeTargetIds[i]);activeTargetIdsSet=activeTargetIdsSet.add(clientState.activeTargetIds[i]);}if(validData){return new RemoteClientState(clientId,activeTargetIdsSet);}else{error(LOG_TAG$a,"Failed to parse client data for instance '"+clientId+"': "+value);return null;}};return RemoteClientState;}();/**
 * This class represents the online state for all clients participating in
 * multi-tab. The online state is only written to by the primary client, and
 * used in secondary clients to update their query views.
 */var SharedOnlineState=/** @class */function(){function SharedOnlineState(clientId,onlineState){this.clientId=clientId;this.onlineState=onlineState;}/**
     * Parses a SharedOnlineState from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */SharedOnlineState.fromWebStorageEntry=function(value){var onlineState=JSON.parse(value);var validData=typeof onlineState==='object'&&onlineState.onlineState in OnlineState&&typeof onlineState.clientId==='string';if(validData){return new SharedOnlineState(onlineState.clientId,OnlineState[onlineState.onlineState]);}else{error(LOG_TAG$a,"Failed to parse online state: "+value);return null;}};return SharedOnlineState;}();/**
 * Metadata state of the local client. Unlike `RemoteClientState`, this class is
 * mutable and keeps track of all pending mutations, which allows us to
 * update the range of pending mutation batch IDs as new mutations are added or
 * removed.
 *
 * The data in `LocalClientState` is not read from WebStorage and instead
 * updated via its instance methods. The updated state can be serialized via
 * `toWebStorageJSON()`.
 */ // Visible for testing.
var LocalClientState=/** @class */function(){function LocalClientState(){this.activeTargetIds=targetIdSet();}LocalClientState.prototype.addQueryTarget=function(targetId){this.activeTargetIds=this.activeTargetIds.add(targetId);};LocalClientState.prototype.removeQueryTarget=function(targetId){this.activeTargetIds=this.activeTargetIds.delete(targetId);};/**
     * Converts this entry into a JSON-encoded format we can use for WebStorage.
     * Does not encode `clientId` as it is part of the key in WebStorage.
     */LocalClientState.prototype.toWebStorageJSON=function(){var data={activeTargetIds:this.activeTargetIds.toArray(),updateTimeMs:Date.now()// Modify the existing value to trigger update.
};return JSON.stringify(data);};return LocalClientState;}();/**
 * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the
 * backing store for the SharedClientState. It keeps track of all active
 * clients and supports modifications of the local client's data.
 */var WebStorageSharedClientState=/** @class */function(){function WebStorageSharedClientState(queue,platform,persistenceKey,localClientId,initialUser){this.queue=queue;this.platform=platform;this.persistenceKey=persistenceKey;this.localClientId=localClientId;this.syncEngine=null;this.onlineStateHandler=null;this.sequenceNumberHandler=null;this.activeClients={};this.storageListener=this.handleWebStorageEvent.bind(this);this.started=false;/**
         * Captures WebStorage events that occur before `start()` is called. These
         * events are replayed once `WebStorageSharedClientState` is started.
         */this.earlyEvents=[];if(!WebStorageSharedClientState.isAvailable(this.platform)){throw new FirestoreError(Code.UNIMPLEMENTED,'LocalStorage is not available on this platform.');}// Escape the special characters mentioned here:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
var escapedPersistenceKey=persistenceKey.replace(/[.*+?^${}()|[\]\\]/g,'\\$&');this.storage=this.platform.window.localStorage;this.currentUser=initialUser;this.localClientStorageKey=createWebStorageClientStateKey(this.persistenceKey,this.localClientId);this.sequenceNumberKey=createWebStorageSequenceNumberKey(this.persistenceKey);this.activeClients[this.localClientId]=new LocalClientState();this.clientStateKeyRe=new RegExp("^"+CLIENT_STATE_KEY_PREFIX+"_"+escapedPersistenceKey+"_([^_]*)$");this.mutationBatchKeyRe=new RegExp("^"+MUTATION_BATCH_KEY_PREFIX+"_"+escapedPersistenceKey+"_(\\d+)(?:_(.*))?$");this.queryTargetKeyRe=new RegExp("^"+QUERY_TARGET_KEY_PREFIX+"_"+escapedPersistenceKey+"_(\\d+)$");this.onlineStateKey=createWebStorageOnlineStateKey(this.persistenceKey);// Rather than adding the storage observer during start(), we add the
// storage observer during initialization. This ensures that we collect
// events before other components populate their initial state (during their
// respective start() calls). Otherwise, we might for example miss a
// mutation that is added after LocalStore's start() processed the existing
// mutations but before we observe WebStorage events.
this.platform.window.addEventListener('storage',this.storageListener);}/** Returns 'true' if WebStorage is available in the current environment. */WebStorageSharedClientState.isAvailable=function(platform){return!!(platform.window&&platform.window.localStorage!=null);};WebStorageSharedClientState.prototype.start=function(){return tslib.__awaiter(this,void 0,void 0,function(){var existingClients,_i,existingClients_1,clientId,storageItem,clientState,onlineStateJSON,onlineState,_a,_b,event_1;var _this=this;return tslib.__generator(this,function(_c){switch(_c.label){case 0:assert(!this.started,'WebStorageSharedClientState already started');assert(this.syncEngine!==null,'syncEngine property must be set before calling start()');assert(this.onlineStateHandler!==null,'onlineStateHandler property must be set before calling start()');return[4/*yield*/,this.syncEngine.getActiveClients()];case 1:existingClients=_c.sent();for(_i=0,existingClients_1=existingClients;_i<existingClients_1.length;_i++){clientId=existingClients_1[_i];if(clientId===this.localClientId){continue;}storageItem=this.getItem(createWebStorageClientStateKey(this.persistenceKey,clientId));if(storageItem){clientState=RemoteClientState.fromWebStorageEntry(clientId,storageItem);if(clientState){this.activeClients[clientState.clientId]=clientState;}}}this.persistClientState();onlineStateJSON=this.storage.getItem(this.onlineStateKey);if(onlineStateJSON){onlineState=this.fromWebStorageOnlineState(onlineStateJSON);if(onlineState){this.handleOnlineStateEvent(onlineState);}}for(_a=0,_b=this.earlyEvents;_a<_b.length;_a++){event_1=_b[_a];this.handleWebStorageEvent(event_1);}this.earlyEvents=[];// Register a window unload hook to remove the client metadata entry from
// WebStorage even if `shutdown()` was not called.
this.platform.window.addEventListener('unload',function(){return _this.shutdown();});this.started=true;return[2/*return*/];}});});};WebStorageSharedClientState.prototype.writeSequenceNumber=function(sequenceNumber){this.setItem(this.sequenceNumberKey,JSON.stringify(sequenceNumber));};WebStorageSharedClientState.prototype.getAllActiveQueryTargets=function(){var activeTargets=targetIdSet();forEach(this.activeClients,function(key,value){activeTargets=activeTargets.unionWith(value.activeTargetIds);});return activeTargets;};WebStorageSharedClientState.prototype.isActiveQueryTarget=function(targetId){// This is not using `obj.forEach` since `forEach` doesn't support early
// return.
for(var clientId in this.activeClients){if(this.activeClients.hasOwnProperty(clientId)){if(this.activeClients[clientId].activeTargetIds.has(targetId)){return true;}}}return false;};WebStorageSharedClientState.prototype.addPendingMutation=function(batchId){this.persistMutationState(batchId,'pending');};WebStorageSharedClientState.prototype.updateMutationState=function(batchId,state,error){this.persistMutationState(batchId,state,error);// Once a final mutation result is observed by other clients, they no longer
// access the mutation's metadata entry. Since WebStorage replays events
// in order, it is safe to delete the entry right after updating it.
this.removeMutationState(batchId);};WebStorageSharedClientState.prototype.addLocalQueryTarget=function(targetId){var queryState='not-current';// Lookup an existing query state if the target ID was already registered
// by another tab
if(this.isActiveQueryTarget(targetId)){var storageItem=this.storage.getItem(createWebStorageQueryTargetMetadataKey(this.persistenceKey,targetId));if(storageItem){var metadata=QueryTargetMetadata.fromWebStorageEntry(targetId,storageItem);if(metadata){queryState=metadata.state;}}}this.localClientState.addQueryTarget(targetId);this.persistClientState();return queryState;};WebStorageSharedClientState.prototype.removeLocalQueryTarget=function(targetId){this.localClientState.removeQueryTarget(targetId);this.persistClientState();};WebStorageSharedClientState.prototype.isLocalQueryTarget=function(targetId){return this.localClientState.activeTargetIds.has(targetId);};WebStorageSharedClientState.prototype.clearQueryState=function(targetId){this.removeItem(createWebStorageQueryTargetMetadataKey(this.persistenceKey,targetId));};WebStorageSharedClientState.prototype.updateQueryState=function(targetId,state,error){this.persistQueryTargetState(targetId,state,error);};WebStorageSharedClientState.prototype.handleUserChange=function(user,removedBatchIds,addedBatchIds){var _this=this;removedBatchIds.forEach(function(batchId){_this.removeMutationState(batchId);});this.currentUser=user;addedBatchIds.forEach(function(batchId){_this.addPendingMutation(batchId);});};WebStorageSharedClientState.prototype.setOnlineState=function(onlineState){this.persistOnlineState(onlineState);};WebStorageSharedClientState.prototype.shutdown=function(){if(this.started){this.platform.window.removeEventListener('storage',this.storageListener);this.removeItem(this.localClientStorageKey);this.started=false;}};WebStorageSharedClientState.prototype.getItem=function(key){var value=this.storage.getItem(key);debug(LOG_TAG$a,'READ',key,value);return value;};WebStorageSharedClientState.prototype.setItem=function(key,value){debug(LOG_TAG$a,'SET',key,value);this.storage.setItem(key,value);};WebStorageSharedClientState.prototype.removeItem=function(key){debug(LOG_TAG$a,'REMOVE',key);this.storage.removeItem(key);};WebStorageSharedClientState.prototype.handleWebStorageEvent=function(event){var _this=this;if(event.storageArea===this.storage){debug(LOG_TAG$a,'EVENT',event.key,event.newValue);if(event.key===this.localClientStorageKey){error('Received WebStorage notification for local change. Another client might have '+'garbage-collected our state');return;}this.queue.enqueueAndForget(function(){return tslib.__awaiter(_this,void 0,void 0,function(){var clientState,clientId,mutationMetadata,queryTargetMetadata,onlineState,sequenceNumber;return tslib.__generator(this,function(_a){if(!this.started){this.earlyEvents.push(event);return[2/*return*/];}if(event.key===null){return[2/*return*/];}if(this.clientStateKeyRe.test(event.key)){if(event.newValue!=null){clientState=this.fromWebStorageClientState(event.key,event.newValue);if(clientState){return[2/*return*/,this.handleClientStateEvent(clientState.clientId,clientState)];}}else{clientId=this.fromWebStorageClientStateKey(event.key);return[2/*return*/,this.handleClientStateEvent(clientId,null)];}}else if(this.mutationBatchKeyRe.test(event.key)){if(event.newValue!==null){mutationMetadata=this.fromWebStorageMutationMetadata(event.key,event.newValue);if(mutationMetadata){return[2/*return*/,this.handleMutationBatchEvent(mutationMetadata)];}}}else if(this.queryTargetKeyRe.test(event.key)){if(event.newValue!==null){queryTargetMetadata=this.fromWebStorageQueryTargetMetadata(event.key,event.newValue);if(queryTargetMetadata){return[2/*return*/,this.handleQueryTargetEvent(queryTargetMetadata)];}}}else if(event.key===this.onlineStateKey){if(event.newValue!==null){onlineState=this.fromWebStorageOnlineState(event.newValue);if(onlineState){return[2/*return*/,this.handleOnlineStateEvent(onlineState)];}}}else if(event.key===this.sequenceNumberKey){assert(!!this.sequenceNumberHandler,'Missing sequenceNumberHandler');sequenceNumber=fromWebStorageSequenceNumber(event.newValue);if(sequenceNumber!==ListenSequence.INVALID){this.sequenceNumberHandler(sequenceNumber);}}return[2/*return*/];});});});}};Object.defineProperty(WebStorageSharedClientState.prototype,"localClientState",{get:function get(){return this.activeClients[this.localClientId];},enumerable:true,configurable:true});WebStorageSharedClientState.prototype.persistClientState=function(){this.setItem(this.localClientStorageKey,this.localClientState.toWebStorageJSON());};WebStorageSharedClientState.prototype.persistMutationState=function(batchId,state,error){var mutationState=new MutationMetadata(this.currentUser,batchId,state,error);var mutationKey=createWebStorageMutationBatchKey(this.persistenceKey,this.currentUser,batchId);this.setItem(mutationKey,mutationState.toWebStorageJSON());};WebStorageSharedClientState.prototype.removeMutationState=function(batchId){var mutationKey=createWebStorageMutationBatchKey(this.persistenceKey,this.currentUser,batchId);this.removeItem(mutationKey);};WebStorageSharedClientState.prototype.persistOnlineState=function(onlineState){var entry={clientId:this.localClientId,onlineState:OnlineState[onlineState]};this.storage.setItem(this.onlineStateKey,JSON.stringify(entry));};WebStorageSharedClientState.prototype.persistQueryTargetState=function(targetId,state,error){var targetKey=createWebStorageQueryTargetMetadataKey(this.persistenceKey,targetId);var targetMetadata=new QueryTargetMetadata(targetId,state,error);this.setItem(targetKey,targetMetadata.toWebStorageJSON());};/**
     * Parses a client state key in WebStorage. Returns null if the key does not
     * match the expected key format.
     */WebStorageSharedClientState.prototype.fromWebStorageClientStateKey=function(key){var match=this.clientStateKeyRe.exec(key);return match?match[1]:null;};/**
     * Parses a client state in WebStorage. Returns 'null' if the value could not
     * be parsed.
     */WebStorageSharedClientState.prototype.fromWebStorageClientState=function(key,value){var clientId=this.fromWebStorageClientStateKey(key);assert(clientId!==null,"Cannot parse client state key '"+key+"'");return RemoteClientState.fromWebStorageEntry(clientId,value);};/**
     * Parses a mutation batch state in WebStorage. Returns 'null' if the value
     * could not be parsed.
     */WebStorageSharedClientState.prototype.fromWebStorageMutationMetadata=function(key,value){var match=this.mutationBatchKeyRe.exec(key);assert(match!==null,"Cannot parse mutation batch key '"+key+"'");var batchId=Number(match[1]);var userId=match[2]!==undefined?match[2]:null;return MutationMetadata.fromWebStorageEntry(new User(userId),batchId,value);};/**
     * Parses a query target state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */WebStorageSharedClientState.prototype.fromWebStorageQueryTargetMetadata=function(key,value){var match=this.queryTargetKeyRe.exec(key);assert(match!==null,"Cannot parse query target key '"+key+"'");var targetId=Number(match[1]);return QueryTargetMetadata.fromWebStorageEntry(targetId,value);};/**
     * Parses an online state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */WebStorageSharedClientState.prototype.fromWebStorageOnlineState=function(value){return SharedOnlineState.fromWebStorageEntry(value);};WebStorageSharedClientState.prototype.handleMutationBatchEvent=function(mutationBatch){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(mutationBatch.user.uid!==this.currentUser.uid){debug(LOG_TAG$a,"Ignoring mutation for non-active user "+mutationBatch.user.uid);return[2/*return*/];}return[2/*return*/,this.syncEngine.applyBatchState(mutationBatch.batchId,mutationBatch.state,mutationBatch.error)];});});};WebStorageSharedClientState.prototype.handleQueryTargetEvent=function(targetMetadata){return this.syncEngine.applyTargetState(targetMetadata.targetId,targetMetadata.state,targetMetadata.error);};WebStorageSharedClientState.prototype.handleClientStateEvent=function(clientId,clientState){var _this=this;var existingTargets=this.getAllActiveQueryTargets();if(clientState){this.activeClients[clientId]=clientState;}else{delete this.activeClients[clientId];}var newTargets=this.getAllActiveQueryTargets();var addedTargets=[];var removedTargets=[];newTargets.forEach(function(targetId){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(!existingTargets.has(targetId)){addedTargets.push(targetId);}return[2/*return*/];});});});existingTargets.forEach(function(targetId){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){if(!newTargets.has(targetId)){removedTargets.push(targetId);}return[2/*return*/];});});});return this.syncEngine.applyActiveTargetsChange(addedTargets,removedTargets);};WebStorageSharedClientState.prototype.handleOnlineStateEvent=function(onlineState){// We check whether the client that wrote this online state is still active
// by comparing its client ID to the list of clients kept active in
// IndexedDb. If a client does not update their IndexedDb client state
// within 5 seconds, it is considered inactive and we don't emit an online
// state event.
if(this.activeClients[onlineState.clientId]){this.onlineStateHandler(onlineState.onlineState);}};return WebStorageSharedClientState;}();function fromWebStorageSequenceNumber(seqString){var sequenceNumber=ListenSequence.INVALID;if(seqString!=null){try{var parsed=JSON.parse(seqString);assert(typeof parsed==='number','Found non-numeric sequence number');sequenceNumber=parsed;}catch(e){error(LOG_TAG$a,'Failed to read sequence number from WebStorage',e);}}return sequenceNumber;}/**
 * `MemorySharedClientState` is a simple implementation of SharedClientState for
 * clients using memory persistence. The state in this class remains fully
 * isolated and no synchronization is performed.
 */var MemorySharedClientState=/** @class */function(){function MemorySharedClientState(){this.localState=new LocalClientState();this.queryState={};this.syncEngine=null;this.onlineStateHandler=null;this.sequenceNumberHandler=null;}MemorySharedClientState.prototype.addPendingMutation=function(batchId){// No op.
};MemorySharedClientState.prototype.updateMutationState=function(batchId,state,error){// No op.
};MemorySharedClientState.prototype.addLocalQueryTarget=function(targetId){this.localState.addQueryTarget(targetId);return this.queryState[targetId]||'not-current';};MemorySharedClientState.prototype.updateQueryState=function(targetId,state,error){this.queryState[targetId]=state;};MemorySharedClientState.prototype.removeLocalQueryTarget=function(targetId){this.localState.removeQueryTarget(targetId);};MemorySharedClientState.prototype.isLocalQueryTarget=function(targetId){return this.localState.activeTargetIds.has(targetId);};MemorySharedClientState.prototype.clearQueryState=function(targetId){delete this.queryState[targetId];};MemorySharedClientState.prototype.getAllActiveQueryTargets=function(){return this.localState.activeTargetIds;};MemorySharedClientState.prototype.isActiveQueryTarget=function(targetId){return this.localState.activeTargetIds.has(targetId);};MemorySharedClientState.prototype.start=function(){this.localState=new LocalClientState();return Promise.resolve();};MemorySharedClientState.prototype.handleUserChange=function(user,removedBatchIds,addedBatchIds){// No op.
};MemorySharedClientState.prototype.setOnlineState=function(onlineState){// No op.
};MemorySharedClientState.prototype.shutdown=function(){};MemorySharedClientState.prototype.writeSequenceNumber=function(sequenceNumber){};return MemorySharedClientState;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$b='FirestoreClient';/** DOMException error code constants. */var DOM_EXCEPTION_INVALID_STATE=11;var DOM_EXCEPTION_ABORTED=20;var DOM_EXCEPTION_QUOTA_EXCEEDED=22;var IndexedDbPersistenceSettings=/** @class */function(){function IndexedDbPersistenceSettings(cacheSizeBytes,synchronizeTabs){this.cacheSizeBytes=cacheSizeBytes;this.synchronizeTabs=synchronizeTabs;}IndexedDbPersistenceSettings.prototype.lruParams=function(){return LruParams.withCacheSize(this.cacheSizeBytes);};return IndexedDbPersistenceSettings;}();var MemoryPersistenceSettings=/** @class */function(){function MemoryPersistenceSettings(){}return MemoryPersistenceSettings;}();/**
 * FirestoreClient is a top-level class that constructs and owns all of the
 * pieces of the client SDK architecture. It is responsible for creating the
 * async queue that is shared by all of the other components in the system.
 */var FirestoreClient=/** @class */function(){function FirestoreClient(platform,databaseInfo,credentials,/**
     * Asynchronous queue responsible for all of our internal processing. When
     * we get incoming work from the user (via public API) or the network
     * (incoming GRPC messages), we should always schedule onto this queue.
     * This ensures all of our work is properly serialized (e.g. we don't
     * start processing a new operation while the previous one is waiting for
     * an async I/O to complete).
     */asyncQueue){this.platform=platform;this.databaseInfo=databaseInfo;this.credentials=credentials;this.asyncQueue=asyncQueue;this.clientId=AutoId.newId();}/**
     * Starts up the FirestoreClient, returning only whether or not enabling
     * persistence succeeded.
     *
     * The intent here is to "do the right thing" as far as users are concerned.
     * Namely, in cases where offline persistence is requested and possible,
     * enable it, but otherwise fall back to persistence disabled. For the most
     * part we expect this to succeed one way or the other so we don't expect our
     * users to actually wait on the firestore.enablePersistence Promise since
     * they generally won't care.
     *
     * Of course some users actually do care about whether or not persistence
     * was successfully enabled, so the Promise returned from this method
     * indicates this outcome.
     *
     * This presents a problem though: even before enablePersistence resolves or
     * rejects, users may have made calls to e.g. firestore.collection() which
     * means that the FirestoreClient in there will be available and will be
     * enqueuing actions on the async queue.
     *
     * Meanwhile any failure of an operation on the async queue causes it to
     * panic and reject any further work, on the premise that unhandled errors
     * are fatal.
     *
     * Consequently the fallback is handled internally here in start, and if the
     * fallback succeeds we signal success to the async queue even though the
     * start() itself signals failure.
     *
     * @param persistenceSettings Settings object to configure offline
     *     persistence.
     * @returns A deferred result indicating the user-visible result of enabling
     *     offline persistence. This method will reject this if IndexedDB fails to
     *     start for any reason. If usePersistence is false this is
     *     unconditionally resolved.
     */FirestoreClient.prototype.start=function(persistenceSettings){var _this=this;this.verifyNotTerminated();// We defer our initialization until we get the current user from
// setChangeListener(). We block the async queue until we got the initial
// user and the initialization is completed. This will prevent any scheduled
// work from happening before initialization is completed.
//
// If initializationDone resolved then the FirestoreClient is in a usable
// state.
var initializationDone=new Deferred();// If usePersistence is true, certain classes of errors while starting are
// recoverable but only by falling back to persistence disabled.
//
// If there's an error in the first case but not in recovery we cannot
// reject the promise blocking the async queue because this will cause the
// async queue to panic.
var persistenceResult=new Deferred();var initialized=false;this.credentials.setChangeListener(function(user){if(!initialized){initialized=true;_this.initializePersistence(persistenceSettings,persistenceResult,user).then(function(maybeLruGc){return _this.initializeRest(user,maybeLruGc);}).then(initializationDone.resolve,initializationDone.reject);}else{_this.asyncQueue.enqueueAndForget(function(){return _this.handleCredentialChange(user);});}});// Block the async queue until initialization is done
this.asyncQueue.enqueueAndForget(function(){return initializationDone.promise;});// Return only the result of enabling persistence. Note that this does not
// need to await the completion of initializationDone because the result of
// this method should not reflect any other kind of failure to start.
return persistenceResult.promise;};/** Enables the network connection and requeues all pending operations. */FirestoreClient.prototype.enableNetwork=function(){var _this=this;this.verifyNotTerminated();return this.asyncQueue.enqueue(function(){return _this.syncEngine.enableNetwork();});};/**
     * Initializes persistent storage, attempting to use IndexedDB if
     * usePersistence is true or memory-only if false.
     *
     * If IndexedDB fails because it's already open in another tab or because the
     * platform can't possibly support our implementation then this method rejects
     * the persistenceResult and falls back on memory-only persistence.
     *
     * @param persistenceSettings Settings object to configure offline persistence
     * @param persistenceResult A deferred result indicating the user-visible
     *     result of enabling offline persistence. This method will reject this if
     *     IndexedDB fails to start for any reason. If usePersistence is false
     *     this is unconditionally resolved.
     * @returns a Promise indicating whether or not initialization should
     *     continue, i.e. that one of the persistence implementations actually
     *     succeeded.
     */FirestoreClient.prototype.initializePersistence=function(persistenceSettings,persistenceResult,user){var _this=this;if(persistenceSettings instanceof IndexedDbPersistenceSettings){return this.startIndexedDbPersistence(user,persistenceSettings).then(function(maybeLruGc){persistenceResult.resolve();return maybeLruGc;}).catch(function(error){// Regardless of whether or not the retry succeeds, from an user
// perspective, offline persistence has failed.
persistenceResult.reject(error);// An unknown failure on the first stage shuts everything down.
if(!_this.canFallback(error)){throw error;}console.warn('Error enabling offline persistence. Falling back to'+' persistence disabled: '+error);return _this.startMemoryPersistence();});}else{// When usePersistence == false, enabling offline persistence is defined
// to unconditionally succeed. This allows start() to have the same
// signature for both cases, despite the fact that the returned promise
// is only used in the enablePersistence call.
persistenceResult.resolve();return this.startMemoryPersistence();}};/**
     * Decides whether the provided error allows us to gracefully disable
     * persistence (as opposed to crashing the client).
     */FirestoreClient.prototype.canFallback=function(error){if(error instanceof FirestoreError){return error.code===Code.FAILED_PRECONDITION||error.code===Code.UNIMPLEMENTED;}else if(typeof DOMException!=='undefined'&&error instanceof DOMException){// There are a few known circumstances where we can open IndexedDb but
// trying to read/write will fail (e.g. quota exceeded). For
// well-understood cases, we attempt to detect these and then gracefully
// fall back to memory persistence.
// NOTE: Rather than continue to add to this list, we could decide to
// always fall back, with the risk that we might accidentally hide errors
// representing actual SDK bugs.
return(// When the browser is out of quota we could get either quota exceeded
// or an aborted error depending on whether the error happened during
// schema migration.
error.code===DOM_EXCEPTION_QUOTA_EXCEEDED||error.code===DOM_EXCEPTION_ABORTED||// Firefox Private Browsing mode disables IndexedDb and returns
// INVALID_STATE for any usage.
error.code===DOM_EXCEPTION_INVALID_STATE);}return true;};/**
     * Checks that the client has not been terminated. Ensures that other methods on
     * this class cannot be called after the client is terminated.
     */FirestoreClient.prototype.verifyNotTerminated=function(){if(this.asyncQueue.isShuttingDown){throw new FirestoreError(Code.FAILED_PRECONDITION,'The client has already been terminated.');}};/**
     * Starts IndexedDB-based persistence.
     *
     * @returns A promise indicating success or failure.
     */FirestoreClient.prototype.startIndexedDbPersistence=function(user,settings){var _this=this;// TODO(http://b/33384523): For now we just disable garbage collection
// when persistence is enabled.
var persistenceKey=IndexedDbPersistence.buildStoragePrefix(this.databaseInfo);// Opt to use proto3 JSON in case the platform doesn't support Uint8Array.
var serializer=new JsonProtoSerializer(this.databaseInfo.databaseId,{useProto3Json:true});return Promise.resolve().then(function(){return tslib.__awaiter(_this,void 0,void 0,function(){var lruParams,persistence;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(settings.synchronizeTabs&&!WebStorageSharedClientState.isAvailable(this.platform)){throw new FirestoreError(Code.UNIMPLEMENTED,'IndexedDB persistence is only available on platforms that support LocalStorage.');}lruParams=settings.lruParams();this.sharedClientState=settings.synchronizeTabs?new WebStorageSharedClientState(this.asyncQueue,this.platform,persistenceKey,this.clientId,user):new MemorySharedClientState();return[4/*yield*/,IndexedDbPersistence.createIndexedDbPersistence({allowTabSynchronization:settings.synchronizeTabs,persistenceKey:persistenceKey,clientId:this.clientId,platform:this.platform,queue:this.asyncQueue,serializer:serializer,lruParams:lruParams,sequenceNumberSyncer:this.sharedClientState})];case 1:persistence=_a.sent();this.persistence=persistence;return[2/*return*/,persistence.referenceDelegate.garbageCollector];}});});});};/**
     * Starts Memory-backed persistence. In practice this cannot fail.
     *
     * @returns A promise that will successfully resolve.
     */FirestoreClient.prototype.startMemoryPersistence=function(){this.persistence=MemoryPersistence.createEagerPersistence(this.clientId);this.sharedClientState=new MemorySharedClientState();return Promise.resolve(null);};/**
     * Initializes the rest of the FirestoreClient, assuming the initial user
     * has been obtained from the credential provider and some persistence
     * implementation is available in this.persistence.
     */FirestoreClient.prototype.initializeRest=function(user,maybeLruGc){var _this=this;debug(LOG_TAG$b,'Initializing. user=',user.uid);return this.platform.loadConnection(this.databaseInfo).then(function(connection){return tslib.__awaiter(_this,void 0,void 0,function(){var queryEngine,connectivityMonitor,serializer,datastore,remoteStoreOnlineStateChangedHandler,sharedClientStateOnlineStateChangedHandler;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:queryEngine=new IndexFreeQueryEngine();this.localStore=new LocalStore(this.persistence,queryEngine,user);return[4/*yield*/,this.localStore.start()];case 1:_a.sent();if(maybeLruGc){// We're running LRU Garbage collection. Set up the scheduler.
this.lruScheduler=new LruScheduler(maybeLruGc,this.asyncQueue,this.localStore);}connectivityMonitor=this.platform.newConnectivityMonitor();serializer=this.platform.newSerializer(this.databaseInfo.databaseId);datastore=new Datastore(this.asyncQueue,connection,this.credentials,serializer);remoteStoreOnlineStateChangedHandler=function remoteStoreOnlineStateChangedHandler(onlineState){return _this.syncEngine.applyOnlineStateChange(onlineState,OnlineStateSource.RemoteStore);};sharedClientStateOnlineStateChangedHandler=function sharedClientStateOnlineStateChangedHandler(onlineState){return _this.syncEngine.applyOnlineStateChange(onlineState,OnlineStateSource.SharedClientState);};this.remoteStore=new RemoteStore(this.localStore,datastore,this.asyncQueue,remoteStoreOnlineStateChangedHandler,connectivityMonitor);this.syncEngine=new SyncEngine(this.localStore,this.remoteStore,this.sharedClientState,user);this.sharedClientState.onlineStateHandler=sharedClientStateOnlineStateChangedHandler;// Set up wiring between sync engine and other components
this.remoteStore.syncEngine=this.syncEngine;this.sharedClientState.syncEngine=this.syncEngine;this.eventMgr=new EventManager(this.syncEngine);// PORTING NOTE: LocalStore doesn't need an explicit start() on the Web.
return[4/*yield*/,this.sharedClientState.start()];case 2:// PORTING NOTE: LocalStore doesn't need an explicit start() on the Web.
_a.sent();return[4/*yield*/,this.remoteStore.start()];case 3:_a.sent();// NOTE: This will immediately call the listener, so we make sure to
// set it after localStore / remoteStore are started.
return[4/*yield*/,this.persistence.setPrimaryStateListener(function(isPrimary){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.syncEngine.applyPrimaryState(isPrimary)];case 1:_a.sent();if(this.lruScheduler){if(isPrimary&&!this.lruScheduler.started){this.lruScheduler.start();}else if(!isPrimary){this.lruScheduler.stop();}}return[2/*return*/];}});});})];case 4:// NOTE: This will immediately call the listener, so we make sure to
// set it after localStore / remoteStore are started.
_a.sent();// When a user calls clearPersistence() in one client, all other clients
// need to be terminated to allow the delete to succeed.
return[4/*yield*/,this.persistence.setDatabaseDeletedListener(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.terminate()];case 1:_a.sent();return[2/*return*/];}});});})];case 5:// When a user calls clearPersistence() in one client, all other clients
// need to be terminated to allow the delete to succeed.
_a.sent();return[2/*return*/];}});});});};FirestoreClient.prototype.handleCredentialChange=function(user){this.asyncQueue.verifyOperationInProgress();debug(LOG_TAG$b,'Credential Changed. Current user: '+user.uid);return this.syncEngine.handleCredentialChange(user);};/** Disables the network connection. Pending operations will not complete. */FirestoreClient.prototype.disableNetwork=function(){var _this=this;this.verifyNotTerminated();return this.asyncQueue.enqueue(function(){return _this.syncEngine.disableNetwork();});};FirestoreClient.prototype.terminate=function(){var _this=this;return this.asyncQueue.enqueueAndInitiateShutdown(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:// PORTING NOTE: LocalStore does not need an explicit shutdown on web.
if(this.lruScheduler){this.lruScheduler.stop();}return[4/*yield*/,this.remoteStore.shutdown()];case 1:_a.sent();return[4/*yield*/,this.sharedClientState.shutdown()];case 2:_a.sent();return[4/*yield*/,this.persistence.shutdown()];case 3:_a.sent();// `removeChangeListener` must be called after shutting down the
// RemoteStore as it will prevent the RemoteStore from retrieving
// auth tokens.
this.credentials.removeChangeListener();return[2/*return*/];}});});});};/**
     * Returns a Promise that resolves when all writes that were pending at the time this
     * method was called received server acknowledgement. An acknowledgement can be either acceptance
     * or rejection.
     */FirestoreClient.prototype.waitForPendingWrites=function(){var _this=this;this.verifyNotTerminated();var deferred=new Deferred();this.asyncQueue.enqueueAndForget(function(){return _this.syncEngine.registerPendingWritesCallback(deferred);});return deferred.promise;};FirestoreClient.prototype.listen=function(query,observer,options){var _this=this;this.verifyNotTerminated();var listener=new QueryListener(query,observer,options);this.asyncQueue.enqueueAndForget(function(){return _this.eventMgr.listen(listener);});return listener;};FirestoreClient.prototype.unlisten=function(listener){var _this=this;// Checks for termination but does not raise error, allowing unlisten after
// termination to be a no-op.
if(this.clientTerminated){return;}this.asyncQueue.enqueueAndForget(function(){return _this.eventMgr.unlisten(listener);});};FirestoreClient.prototype.getDocumentFromLocalCache=function(docKey){var _this=this;this.verifyNotTerminated();return this.asyncQueue.enqueue(function(){return _this.localStore.readDocument(docKey);}).then(function(maybeDoc){if(maybeDoc instanceof Document){return maybeDoc;}else if(maybeDoc instanceof NoDocument){return null;}else{throw new FirestoreError(Code.UNAVAILABLE,'Failed to get document from cache. (However, this document may '+"exist on the server. Run again without setting 'source' in "+'the GetOptions to attempt to retrieve the document from the '+'server.)');}});};FirestoreClient.prototype.getDocumentsFromLocalCache=function(query){var _this=this;this.verifyNotTerminated();return this.asyncQueue.enqueue(function(){return tslib.__awaiter(_this,void 0,void 0,function(){var queryResult,view,viewDocChanges;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.localStore.executeQuery(query,/* usePreviousResults= */true)];case 1:queryResult=_a.sent();view=new View(query,queryResult.remoteKeys);viewDocChanges=view.computeDocChanges(queryResult.documents);return[2/*return*/,view.applyChanges(viewDocChanges,/* updateLimboDocuments= */false).snapshot];}});});});};FirestoreClient.prototype.write=function(mutations){var _this=this;this.verifyNotTerminated();var deferred=new Deferred();this.asyncQueue.enqueueAndForget(function(){return _this.syncEngine.write(mutations,deferred);});return deferred.promise;};FirestoreClient.prototype.databaseId=function(){return this.databaseInfo.databaseId;};FirestoreClient.prototype.addSnapshotsInSyncListener=function(observer){var _this=this;this.verifyNotTerminated();this.asyncQueue.enqueueAndForget(function(){_this.eventMgr.addSnapshotsInSyncListener(observer);return Promise.resolve();});};FirestoreClient.prototype.removeSnapshotsInSyncListener=function(observer){// Checks for shutdown but does not raise error, allowing remove after
// shutdown to be a no-op.
if(this.clientTerminated){return;}this.eventMgr.removeSnapshotsInSyncListener(observer);};Object.defineProperty(FirestoreClient.prototype,"clientTerminated",{get:function get(){// Technically, the asyncQueue is still running, but only accepting operations
// related to termination or supposed to be run after termination. It is effectively
// terminated to the eyes of users.
return this.asyncQueue.isShuttingDown;},enumerable:true,configurable:true});FirestoreClient.prototype.transaction=function(updateFunction){var _this=this;this.verifyNotTerminated();var deferred=new Deferred();this.asyncQueue.enqueueAndForget(function(){_this.syncEngine.runTransaction(_this.asyncQueue,updateFunction,deferred);return Promise.resolve();});return deferred.promise;};return FirestoreClient;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /*
 * A wrapper implementation of Observer<T> that will dispatch events
 * asynchronously. To allow immediate silencing, a mute call is added which
 * causes events scheduled to no longer be raised.
 */var AsyncObserver=/** @class */function(){function AsyncObserver(observer){this.observer=observer;/**
         * When set to true, will not raise future events. Necessary to deal with
         * async detachment of listener.
         */this.muted=false;}AsyncObserver.prototype.next=function(value){this.scheduleEvent(this.observer.next,value);};AsyncObserver.prototype.error=function(error){this.scheduleEvent(this.observer.error,error);};AsyncObserver.prototype.mute=function(){this.muted=true;};AsyncObserver.prototype.scheduleEvent=function(eventHandler,event){var _this=this;if(!this.muted){setTimeout(function(){if(!_this.muted){eventHandler(event);}},0);}};return AsyncObserver;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // The objects that are a part of this API are exposed to third-parties as
// compiled javascript so we want to flag our private members with a leading
// underscore to discourage their use.
/**
 * A FieldPath refers to a field in a document. The path may consist of a single
 * field name (referring to a top-level field in the document), or a list of
 * field names (referring to a nested field in the document).
 */var FieldPath$1=/** @class */function(){/**
     * Creates a FieldPath from the provided field names. If more than one field
     * name is provided, the path will point to a nested field in a document.
     *
     * @param fieldNames A list of field names.
     */function FieldPath$1(){var fieldNames=[];for(var _i=0;_i<arguments.length;_i++){fieldNames[_i]=arguments[_i];}validateNamedArrayAtLeastNumberOfElements('FieldPath',fieldNames,'fieldNames',1);for(var i=0;i<fieldNames.length;++i){validateArgType('FieldPath','string',i,fieldNames[i]);if(fieldNames[i].length===0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid field name at argument $(i + 1). "+'Field names must not be empty.');}}this._internalPath=new FieldPath(fieldNames);}FieldPath$1.documentId=function(){return FieldPath$1._DOCUMENT_ID;};FieldPath$1.prototype.isEqual=function(other){if(!(other instanceof FieldPath$1)){throw invalidClassError('isEqual','FieldPath',1,other);}return this._internalPath.isEqual(other._internalPath);};/**
     * Internal Note: The backend doesn't technically support querying by
     * document ID. Instead it queries by the entire document name (full path
     * included), but in the cases we currently support documentId(), the net
     * effect is the same.
     */FieldPath$1._DOCUMENT_ID=new FieldPath$1(FieldPath.keyField().canonicalString());return FieldPath$1;}();/**
 * Matches any characters in a field path string that are reserved.
 */var RESERVED=new RegExp('[~\\*/\\[\\]]');/**
 * Parses a field path string into a FieldPath, treating dots as separators.
 */function fromDotSeparatedString(path){var found=path.search(RESERVED);if(found>=0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid field path ("+path+"). Paths must not contain "+"'~', '*', '/', '[', or ']'");}try{return new(FieldPath$1.bind.apply(FieldPath$1,tslib.__spreadArrays([void 0],path.split('.'))))();}catch(e){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid field path ("+path+"). Paths must not be empty, "+"begin with '.', end with '.', or contain '..'");}}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var OAuthToken=/** @class */function(){function OAuthToken(value,user){this.user=user;this.type='OAuth';this.authHeaders={};// Set the headers using Object Literal notation to avoid minification
this.authHeaders['Authorization']="Bearer "+value;}return OAuthToken;}();/** A CredentialsProvider that always yields an empty token. */var EmptyCredentialsProvider=/** @class */function(){function EmptyCredentialsProvider(){/**
         * Stores the listener registered with setChangeListener()
         * This isn't actually necessary since the UID never changes, but we use this
         * to verify the listen contract is adhered to in tests.
         */this.changeListener=null;}EmptyCredentialsProvider.prototype.getToken=function(){return Promise.resolve(null);};EmptyCredentialsProvider.prototype.invalidateToken=function(){};EmptyCredentialsProvider.prototype.setChangeListener=function(changeListener){assert(!this.changeListener,'Can only call setChangeListener() once.');this.changeListener=changeListener;// Fire with initial user.
changeListener(User.UNAUTHENTICATED);};EmptyCredentialsProvider.prototype.removeChangeListener=function(){assert(this.changeListener!==null,'removeChangeListener() when no listener registered');this.changeListener=null;};return EmptyCredentialsProvider;}();var FirebaseCredentialsProvider=/** @class */function(){function FirebaseCredentialsProvider(authProvider){var _this=this;/**
         * The auth token listener registered with FirebaseApp, retained here so we
         * can unregister it.
         */this.tokenListener=null;/** Tracks the current User. */this.currentUser=User.UNAUTHENTICATED;this.receivedInitialUser=false;/**
         * Counter used to detect if the token changed while a getToken request was
         * outstanding.
         */this.tokenCounter=0;/** The listener registered with setChangeListener(). */this.changeListener=null;this.forceRefresh=false;this.tokenListener=function(){_this.tokenCounter++;_this.currentUser=_this.getUser();_this.receivedInitialUser=true;if(_this.changeListener){_this.changeListener(_this.currentUser);}};this.tokenCounter=0;this.auth=authProvider.getImmediate({optional:true});if(this.auth){this.auth.addAuthTokenListener(this.tokenListener);}else{// if auth is not available, invoke tokenListener once with null token
this.tokenListener(null);authProvider.get().then(function(auth){_this.auth=auth;if(_this.tokenListener){// tokenListener can be removed by removeChangeListener()
_this.auth.addAuthTokenListener(_this.tokenListener);}},function(){/* this.authProvider.get() never rejects */});}}FirebaseCredentialsProvider.prototype.getToken=function(){var _this=this;assert(this.tokenListener!=null,'getToken cannot be called after listener removed.');// Take note of the current value of the tokenCounter so that this method
// can fail (with an ABORTED error) if there is a token change while the
// request is outstanding.
var initialTokenCounter=this.tokenCounter;var forceRefresh=this.forceRefresh;this.forceRefresh=false;if(!this.auth){return Promise.resolve(null);}return this.auth.getToken(forceRefresh).then(function(tokenData){// Cancel the request since the token changed while the request was
// outstanding so the response is potentially for a previous user (which
// user, we can't be sure).
if(_this.tokenCounter!==initialTokenCounter){throw new FirestoreError(Code.ABORTED,'getToken aborted due to token change.');}else{if(tokenData){assert(typeof tokenData.accessToken==='string','Invalid tokenData returned from getToken():'+tokenData);return new OAuthToken(tokenData.accessToken,_this.currentUser);}else{return null;}}});};FirebaseCredentialsProvider.prototype.invalidateToken=function(){this.forceRefresh=true;};FirebaseCredentialsProvider.prototype.setChangeListener=function(changeListener){assert(!this.changeListener,'Can only call setChangeListener() once.');this.changeListener=changeListener;// Fire the initial event
if(this.receivedInitialUser){changeListener(this.currentUser);}};FirebaseCredentialsProvider.prototype.removeChangeListener=function(){assert(this.tokenListener!=null,'removeChangeListener() called twice');assert(this.changeListener!==null,'removeChangeListener() called when no listener registered');if(this.auth){this.auth.removeAuthTokenListener(this.tokenListener);}this.tokenListener=null;this.changeListener=null;};// Auth.getUid() can return null even with a user logged in. It is because
// getUid() is synchronous, but the auth code populating Uid is asynchronous.
// This method should only be called in the AuthTokenListener callback
// to guarantee to get the actual user.
FirebaseCredentialsProvider.prototype.getUser=function(){var currentUid=this.auth&&this.auth.getUid();assert(currentUid===null||typeof currentUid==='string','Received invalid UID: '+currentUid);return new User(currentUid);};return FirebaseCredentialsProvider;}();/*
 * FirstPartyToken provides a fresh token each time its value
 * is requested, because if the token is too old, requests will be rejected.
 * Technically this may no longer be necessary since the SDK should gracefully
 * recover from unauthenticated errors (see b/33147818 for context), but it's
 * safer to keep the implementation as-is.
 */var FirstPartyToken=/** @class */function(){function FirstPartyToken(gapi,sessionIndex){this.gapi=gapi;this.sessionIndex=sessionIndex;this.type='FirstParty';this.user=User.FIRST_PARTY;}Object.defineProperty(FirstPartyToken.prototype,"authHeaders",{get:function get(){var headers={'X-Goog-AuthUser':this.sessionIndex};var authHeader=this.gapi.auth.getAuthHeaderValueForFirstParty([]);if(authHeader){headers['Authorization']=authHeader;}return headers;},enumerable:true,configurable:true});return FirstPartyToken;}();/*
 * Provides user credentials required for the Firestore JavaScript SDK
 * to authenticate the user, using technique that is only available
 * to applications hosted by Google.
 */var FirstPartyCredentialsProvider=/** @class */function(){function FirstPartyCredentialsProvider(gapi,sessionIndex){this.gapi=gapi;this.sessionIndex=sessionIndex;}FirstPartyCredentialsProvider.prototype.getToken=function(){return Promise.resolve(new FirstPartyToken(this.gapi,this.sessionIndex));};FirstPartyCredentialsProvider.prototype.setChangeListener=function(changeListener){// Fire with initial uid.
changeListener(User.FIRST_PARTY);};FirstPartyCredentialsProvider.prototype.removeChangeListener=function(){};FirstPartyCredentialsProvider.prototype.invalidateToken=function(){};return FirstPartyCredentialsProvider;}();/**
 * Builds a CredentialsProvider depending on the type of
 * the credentials passed in.
 */function makeCredentialsProvider(credentials){if(!credentials){return new EmptyCredentialsProvider();}switch(credentials.type){case'gapi':var client=credentials.client;// Make sure this really is a Gapi client.
assert(!!(typeof client==='object'&&client!==null&&client['auth']&&client['auth']['getAuthHeaderValueForFirstParty']),'unexpected gapi interface');return new FirstPartyCredentialsProvider(client,credentials.sessionIndex||'0');case'provider':return credentials.client;default:throw new FirestoreError(Code.INVALID_ARGUMENT,'makeCredentialsProvider failed due to invalid credential type');}}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function isPartialObserver(obj){return implementsAnyMethods(obj,['next','error','complete']);}/**
 * Returns true if obj is an object and contains at least one of the specified
 * methods.
 */function implementsAnyMethods(obj,methods){if(typeof obj!=='object'||obj===null){return false;}var object=obj;for(var _i=0,methods_1=methods;_i<methods_1.length;_i++){var method=methods_1[_i];if(method in object&&typeof object[method]==='function'){return true;}}return false;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * An opaque base class for FieldValue sentinel objects in our public API,
 * with public static methods for creating said sentinel objects.
 */var FieldValueImpl=/** @class */function(){function FieldValueImpl(_methodName){this._methodName=_methodName;}FieldValueImpl.delete=function(){validateNoArgs('FieldValue.delete',arguments);return DeleteFieldValueImpl.instance;};FieldValueImpl.serverTimestamp=function(){validateNoArgs('FieldValue.serverTimestamp',arguments);return ServerTimestampFieldValueImpl.instance;};FieldValueImpl.arrayUnion=function(){var elements=[];for(var _i=0;_i<arguments.length;_i++){elements[_i]=arguments[_i];}validateAtLeastNumberOfArgs('FieldValue.arrayUnion',arguments,1);// NOTE: We don't actually parse the data until it's used in set() or
// update() since we need access to the Firestore instance.
return new ArrayUnionFieldValueImpl(elements);};FieldValueImpl.arrayRemove=function(){var elements=[];for(var _i=0;_i<arguments.length;_i++){elements[_i]=arguments[_i];}validateAtLeastNumberOfArgs('FieldValue.arrayRemove',arguments,1);// NOTE: We don't actually parse the data until it's used in set() or
// update() since we need access to the Firestore instance.
return new ArrayRemoveFieldValueImpl(elements);};FieldValueImpl.increment=function(n){validateArgType('FieldValue.increment','number',1,n);validateExactNumberOfArgs('FieldValue.increment',arguments,1);return new NumericIncrementFieldValueImpl(n);};FieldValueImpl.prototype.isEqual=function(other){return this===other;};return FieldValueImpl;}();var DeleteFieldValueImpl=/** @class */function(_super){tslib.__extends(DeleteFieldValueImpl,_super);function DeleteFieldValueImpl(){return _super.call(this,'FieldValue.delete')||this;}/** Singleton instance. */DeleteFieldValueImpl.instance=new DeleteFieldValueImpl();return DeleteFieldValueImpl;}(FieldValueImpl);var ServerTimestampFieldValueImpl=/** @class */function(_super){tslib.__extends(ServerTimestampFieldValueImpl,_super);function ServerTimestampFieldValueImpl(){return _super.call(this,'FieldValue.serverTimestamp')||this;}/** Singleton instance. */ServerTimestampFieldValueImpl.instance=new ServerTimestampFieldValueImpl();return ServerTimestampFieldValueImpl;}(FieldValueImpl);var ArrayUnionFieldValueImpl=/** @class */function(_super){tslib.__extends(ArrayUnionFieldValueImpl,_super);function ArrayUnionFieldValueImpl(_elements){var _this=_super.call(this,'FieldValue.arrayUnion')||this;_this._elements=_elements;return _this;}return ArrayUnionFieldValueImpl;}(FieldValueImpl);var ArrayRemoveFieldValueImpl=/** @class */function(_super){tslib.__extends(ArrayRemoveFieldValueImpl,_super);function ArrayRemoveFieldValueImpl(_elements){var _this=_super.call(this,'FieldValue.arrayRemove')||this;_this._elements=_elements;return _this;}return ArrayRemoveFieldValueImpl;}(FieldValueImpl);var NumericIncrementFieldValueImpl=/** @class */function(_super){tslib.__extends(NumericIncrementFieldValueImpl,_super);function NumericIncrementFieldValueImpl(_operand){var _this=_super.call(this,'FieldValue.increment')||this;_this._operand=_operand;return _this;}return NumericIncrementFieldValueImpl;}(FieldValueImpl);// Public instance that disallows construction at runtime. This constructor is
// used when exporting FieldValueImpl on firebase.firestore.FieldValue and will
// be called FieldValue publicly. Internally we still use FieldValueImpl which
// has a type-checked private constructor. Note that FieldValueImpl and
// PublicFieldValue can be used interchangeably in instanceof checks.
// For our internal TypeScript code PublicFieldValue doesn't exist as a type,
// and so we need to use FieldValueImpl as type and export it too.
var PublicFieldValue=makeConstructorPrivate(FieldValueImpl,'Use FieldValue.<field>() instead.');/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var RESERVED_FIELD_REGEX=/^__.*__$/;/** The result of parsing document data (e.g. for a setData call). */var ParsedSetData=/** @class */function(){function ParsedSetData(data,fieldMask,fieldTransforms){this.data=data;this.fieldMask=fieldMask;this.fieldTransforms=fieldTransforms;}ParsedSetData.prototype.toMutations=function(key,precondition){var mutations=[];if(this.fieldMask!==null){mutations.push(new PatchMutation(key,this.data,this.fieldMask,precondition));}else{mutations.push(new SetMutation(key,this.data,precondition));}if(this.fieldTransforms.length>0){mutations.push(new TransformMutation(key,this.fieldTransforms));}return mutations;};return ParsedSetData;}();/** The result of parsing "update" data (i.e. for an updateData call). */var ParsedUpdateData=/** @class */function(){function ParsedUpdateData(data,fieldMask,fieldTransforms){this.data=data;this.fieldMask=fieldMask;this.fieldTransforms=fieldTransforms;}ParsedUpdateData.prototype.toMutations=function(key,precondition){var mutations=[new PatchMutation(key,this.data,this.fieldMask,precondition)];if(this.fieldTransforms.length>0){mutations.push(new TransformMutation(key,this.fieldTransforms));}return mutations;};return ParsedUpdateData;}();/*
 * Represents what type of API method provided the data being parsed; useful
 * for determining which error conditions apply during parsing and providing
 * better error messages.
 */var UserDataSource;(function(UserDataSource){UserDataSource[UserDataSource["Set"]=0]="Set";UserDataSource[UserDataSource["Update"]=1]="Update";UserDataSource[UserDataSource["MergeSet"]=2]="MergeSet";/**
     * Indicates the source is a where clause, cursor bound, arrayUnion()
     * element, etc. Of note, isWrite(source) will return false.
     */UserDataSource[UserDataSource["Argument"]=3]="Argument";/**
     * Indicates that the source is an Argument that may directly contain nested
     * arrays (e.g. the operand of an `in` query).
     */UserDataSource[UserDataSource["ArrayArgument"]=4]="ArrayArgument";})(UserDataSource||(UserDataSource={}));function isWrite(dataSource){switch(dataSource){case UserDataSource.Set:// fall through
case UserDataSource.MergeSet:// fall through
case UserDataSource.Update:return true;case UserDataSource.Argument:case UserDataSource.ArrayArgument:return false;default:throw fail("Unexpected case for UserDataSource: "+dataSource);}}/** A "context" object passed around while parsing user data. */var ParseContext=/** @class */function(){/**
     * Initializes a ParseContext with the given source and path.
     *
     * @param dataSource Indicates what kind of API method this data came from.
     * @param methodName The name of the method the user called to create this
     *     ParseContext.
     * @param path A path within the object being parsed. This could be an empty
     *     path (in which case the context represents the root of the data being
     *     parsed), or a nonempty path (indicating the context represents a nested
     *     location within the data).
     * @param arrayElement Whether or not this context corresponds to an element
     *     of an array.
     * @param fieldTransforms A mutable list of field transforms encountered while
     *     parsing the data.
     * @param fieldMask A mutable list of field paths encountered while parsing
     *     the data.
     *
     * TODO(b/34871131): We don't support array paths right now, so path can be
     * null to indicate the context represents any location within an array (in
     * which case certain features will not work and errors will be somewhat
     * compromised).
     */function ParseContext(dataSource,methodName,path,arrayElement,fieldTransforms,fieldMask){this.dataSource=dataSource;this.methodName=methodName;this.path=path;this.arrayElement=arrayElement;// Minor hack: If fieldTransforms is undefined, we assume this is an
// external call and we need to validate the entire path.
if(fieldTransforms===undefined){this.validatePath();}this.arrayElement=arrayElement!==undefined?arrayElement:false;this.fieldTransforms=fieldTransforms||[];this.fieldMask=fieldMask||[];}ParseContext.prototype.childContextForField=function(field){var childPath=this.path==null?null:this.path.child(field);var context=new ParseContext(this.dataSource,this.methodName,childPath,/*arrayElement=*/false,this.fieldTransforms,this.fieldMask);context.validatePathSegment(field);return context;};ParseContext.prototype.childContextForFieldPath=function(field){var childPath=this.path==null?null:this.path.child(field);var context=new ParseContext(this.dataSource,this.methodName,childPath,/*arrayElement=*/false,this.fieldTransforms,this.fieldMask);context.validatePath();return context;};ParseContext.prototype.childContextForArray=function(index){// TODO(b/34871131): We don't support array paths right now; so make path
// null.
return new ParseContext(this.dataSource,this.methodName,/*path=*/null,/*arrayElement=*/true,this.fieldTransforms,this.fieldMask);};ParseContext.prototype.createError=function(reason){var fieldDescription=this.path===null||this.path.isEmpty()?'':" (found in field "+this.path.toString()+")";return new FirestoreError(Code.INVALID_ARGUMENT,"Function "+this.methodName+"() called with invalid data. "+reason+fieldDescription);};/** Returns 'true' if 'fieldPath' was traversed when creating this context. */ParseContext.prototype.contains=function(fieldPath){return this.fieldMask.find(function(field){return fieldPath.isPrefixOf(field);})!==undefined||this.fieldTransforms.find(function(transform){return fieldPath.isPrefixOf(transform.field);})!==undefined;};ParseContext.prototype.validatePath=function(){// TODO(b/34871131): Remove null check once we have proper paths for fields
// within arrays.
if(this.path===null){return;}for(var i=0;i<this.path.length;i++){this.validatePathSegment(this.path.get(i));}};ParseContext.prototype.validatePathSegment=function(segment){if(segment.length===0){throw this.createError('Document fields must not be empty');}if(isWrite(this.dataSource)&&RESERVED_FIELD_REGEX.test(segment)){throw this.createError('Document fields cannot begin and end with "__"');}};return ParseContext;}();/**
 * A placeholder object for DocumentReferences in this file, in order to
 * avoid a circular dependency. See the comments for `DataPreConverter` for
 * the full context.
 */var DocumentKeyReference=/** @class */function(){function DocumentKeyReference(databaseId,key){this.databaseId=databaseId;this.key=key;}return DocumentKeyReference;}();/**
 * Helper for parsing raw user input (provided via the API) into internal model
 * classes.
 */var UserDataConverter=/** @class */function(){function UserDataConverter(preConverter){this.preConverter=preConverter;}/** Parse document data from a non-merge set() call. */UserDataConverter.prototype.parseSetData=function(methodName,input){var context=new ParseContext(UserDataSource.Set,methodName,FieldPath.EMPTY_PATH);validatePlainObject('Data must be an object, but it was:',context,input);var updateData=this.parseData(input,context);return new ParsedSetData(updateData,/* fieldMask= */null,context.fieldTransforms);};/** Parse document data from a set() call with '{merge:true}'. */UserDataConverter.prototype.parseMergeData=function(methodName,input,fieldPaths){var context=new ParseContext(UserDataSource.MergeSet,methodName,FieldPath.EMPTY_PATH);validatePlainObject('Data must be an object, but it was:',context,input);var updateData=this.parseData(input,context);var fieldMask;var fieldTransforms;if(!fieldPaths){fieldMask=FieldMask.fromArray(context.fieldMask);fieldTransforms=context.fieldTransforms;}else{var validatedFieldPaths=new SortedSet(FieldPath.comparator);for(var _i=0,fieldPaths_1=fieldPaths;_i<fieldPaths_1.length;_i++){var stringOrFieldPath=fieldPaths_1[_i];var fieldPath=void 0;if(stringOrFieldPath instanceof FieldPath$1){fieldPath=stringOrFieldPath._internalPath;}else if(typeof stringOrFieldPath==='string'){fieldPath=fieldPathFromDotSeparatedString(methodName,stringOrFieldPath);}else{throw fail('Expected stringOrFieldPath to be a string or a FieldPath');}if(!context.contains(fieldPath)){throw new FirestoreError(Code.INVALID_ARGUMENT,"Field '"+fieldPath+"' is specified in your field mask but missing from your input data.");}validatedFieldPaths=validatedFieldPaths.add(fieldPath);}fieldMask=FieldMask.fromSet(validatedFieldPaths);fieldTransforms=context.fieldTransforms.filter(function(transform){return fieldMask.covers(transform.field);});}return new ParsedSetData(updateData,fieldMask,fieldTransforms);};/** Parse update data from an update() call. */UserDataConverter.prototype.parseUpdateData=function(methodName,input){var _this=this;var context=new ParseContext(UserDataSource.Update,methodName,FieldPath.EMPTY_PATH);validatePlainObject('Data must be an object, but it was:',context,input);var fieldMaskPaths=new SortedSet(FieldPath.comparator);var updateData=ObjectValue.EMPTY;forEach(input,function(key,value){var path=fieldPathFromDotSeparatedString(methodName,key);var childContext=context.childContextForFieldPath(path);value=_this.runPreConverter(value,childContext);if(value instanceof DeleteFieldValueImpl){// Add it to the field mask, but don't add anything to updateData.
fieldMaskPaths=fieldMaskPaths.add(path);}else{var parsedValue=_this.parseData(value,childContext);if(parsedValue!=null){fieldMaskPaths=fieldMaskPaths.add(path);updateData=updateData.set(path,parsedValue);}}});var mask=FieldMask.fromSet(fieldMaskPaths);return new ParsedUpdateData(updateData,mask,context.fieldTransforms);};/** Parse update data from a list of field/value arguments. */UserDataConverter.prototype.parseUpdateVarargs=function(methodName,field,value,moreFieldsAndValues){var context=new ParseContext(UserDataSource.Update,methodName,FieldPath.EMPTY_PATH);var keys=[fieldPathFromArgument(methodName,field)];var values=[value];if(moreFieldsAndValues.length%2!==0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+methodName+"() needs to be called with an even number "+'of arguments that alternate between field names and values.');}for(var i=0;i<moreFieldsAndValues.length;i+=2){keys.push(fieldPathFromArgument(methodName,moreFieldsAndValues[i]));values.push(moreFieldsAndValues[i+1]);}var fieldMaskPaths=new SortedSet(FieldPath.comparator);var updateData=ObjectValue.EMPTY;for(var i=0;i<keys.length;++i){var path=keys[i];var childContext=context.childContextForFieldPath(path);var value_1=this.runPreConverter(values[i],childContext);if(value_1 instanceof DeleteFieldValueImpl){// Add it to the field mask, but don't add anything to updateData.
fieldMaskPaths=fieldMaskPaths.add(path);}else{var parsedValue=this.parseData(value_1,childContext);if(parsedValue!=null){fieldMaskPaths=fieldMaskPaths.add(path);updateData=updateData.set(path,parsedValue);}}}var mask=FieldMask.fromSet(fieldMaskPaths);return new ParsedUpdateData(updateData,mask,context.fieldTransforms);};/**
     * Parse a "query value" (e.g. value in a where filter or a value in a cursor
     * bound).
     *
     * @param allowArrays Whether the query value is an array that may directly
     * contain additional arrays (e.g. the operand of an `in` query).
     */UserDataConverter.prototype.parseQueryValue=function(methodName,input,allowArrays){if(allowArrays===void 0){allowArrays=false;}var context=new ParseContext(allowArrays?UserDataSource.ArrayArgument:UserDataSource.Argument,methodName,FieldPath.EMPTY_PATH);var parsed=this.parseData(input,context);assert(parsed!=null,'Parsed data should not be null.');assert(context.fieldTransforms.length===0,'Field transforms should have been disallowed.');return parsed;};/** Sends data through this.preConverter, handling any thrown errors. */UserDataConverter.prototype.runPreConverter=function(input,context){try{return this.preConverter(input);}catch(e){var message=errorMessage(e);throw context.createError(message);}};/**
     * Internal helper for parsing user data.
     *
     * @param input Data to be parsed.
     * @param context A context object representing the current path being parsed,
     * the source of the data being parsed, etc.
     * @return The parsed value, or null if the value was a FieldValue sentinel
     * that should not be included in the resulting parsed data.
     */UserDataConverter.prototype.parseData=function(input,context){input=this.runPreConverter(input,context);if(looksLikeJsonObject(input)){validatePlainObject('Unsupported field value:',context,input);return this.parseObject(input,context);}else if(input instanceof FieldValueImpl){// FieldValues usually parse into transforms (except FieldValue.delete())
// in which case we do not want to include this field in our parsed data
// (as doing so will overwrite the field directly prior to the transform
// trying to transform it). So we don't add this location to
// context.fieldMask and we return null as our parsing result.
this.parseSentinelFieldValue(input,context);return null;}else{// If context.path is null we are inside an array and we don't support
// field mask paths more granular than the top-level array.
if(context.path){context.fieldMask.push(context.path);}if(input instanceof Array){// TODO(b/34871131): Include the path containing the array in the error
// message.
// In the case of IN queries, the parsed data is an array (representing
// the set of values to be included for the IN query) that may directly
// contain additional arrays (each representing an individual field
// value), so we disable this validation.
if(context.arrayElement&&context.dataSource!==UserDataSource.ArrayArgument){throw context.createError('Nested arrays are not supported');}return this.parseArray(input,context);}else{return this.parseScalarValue(input,context);}}};UserDataConverter.prototype.parseObject=function(obj,context){var _this=this;var result=new SortedMap(primitiveComparator);if(isEmpty(obj)){// If we encounter an empty object, we explicitly add it to the update
// mask to ensure that the server creates a map entry.
if(context.path&&context.path.length>0){context.fieldMask.push(context.path);}}else{forEach(obj,function(key,val){var parsedValue=_this.parseData(val,context.childContextForField(key));if(parsedValue!=null){result=result.insert(key,parsedValue);}});}return new ObjectValue(result);};UserDataConverter.prototype.parseArray=function(array,context){var result=[];var entryIndex=0;for(var _i=0,array_1=array;_i<array_1.length;_i++){var entry=array_1[_i];var parsedEntry=this.parseData(entry,context.childContextForArray(entryIndex));if(parsedEntry==null){// Just include nulls in the array for fields being replaced with a
// sentinel.
parsedEntry=NullValue.INSTANCE;}result.push(parsedEntry);entryIndex++;}return new ArrayValue(result);};/**
     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
     * context.fieldTransforms.
     */UserDataConverter.prototype.parseSentinelFieldValue=function(value,context){// Sentinels are only supported with writes, and not within arrays.
if(!isWrite(context.dataSource)){throw context.createError(value._methodName+"() can only be used with update() and set()");}if(context.path===null){throw context.createError(value._methodName+"() is not currently supported inside arrays");}if(value instanceof DeleteFieldValueImpl){if(context.dataSource===UserDataSource.MergeSet){// No transform to add for a delete, but we need to add it to our
// fieldMask so it gets deleted.
context.fieldMask.push(context.path);}else if(context.dataSource===UserDataSource.Update){assert(context.path.length>0,'FieldValue.delete() at the top level should have already'+' been handled.');throw context.createError('FieldValue.delete() can only appear at the top level '+'of your update data');}else{// We shouldn't encounter delete sentinels for queries or non-merge set() calls.
throw context.createError('FieldValue.delete() cannot be used with set() unless you pass '+'{merge:true}');}}else if(value instanceof ServerTimestampFieldValueImpl){context.fieldTransforms.push(new FieldTransform(context.path,ServerTimestampTransform.instance));}else if(value instanceof ArrayUnionFieldValueImpl){var parsedElements=this.parseArrayTransformElements(value._methodName,value._elements);var arrayUnion=new ArrayUnionTransformOperation(parsedElements);context.fieldTransforms.push(new FieldTransform(context.path,arrayUnion));}else if(value instanceof ArrayRemoveFieldValueImpl){var parsedElements=this.parseArrayTransformElements(value._methodName,value._elements);var arrayRemove=new ArrayRemoveTransformOperation(parsedElements);context.fieldTransforms.push(new FieldTransform(context.path,arrayRemove));}else if(value instanceof NumericIncrementFieldValueImpl){var operand=this.parseQueryValue('FieldValue.increment',value._operand);var numericIncrement=new NumericIncrementTransformOperation(operand);context.fieldTransforms.push(new FieldTransform(context.path,numericIncrement));}else{fail('Unknown FieldValue type: '+value);}};/**
     * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)
     *
     * @return The parsed value
     */UserDataConverter.prototype.parseScalarValue=function(value,context){if(value===null){return NullValue.INSTANCE;}else if(typeof value==='number'){if(isSafeInteger(value)){return new IntegerValue(value);}else{return new DoubleValue(value);}}else if(typeof value==='boolean'){return BooleanValue.of(value);}else if(typeof value==='string'){return new StringValue(value);}else if(value instanceof Date){return new TimestampValue(Timestamp.fromDate(value));}else if(value instanceof Timestamp){// Firestore backend truncates precision down to microseconds. To ensure
// offline mode works the same with regards to truncation, perform the
// truncation immediately without waiting for the backend to do that.
return new TimestampValue(new Timestamp(value.seconds,Math.floor(value.nanoseconds/1000)*1000));}else if(value instanceof GeoPoint){return new GeoPointValue(value);}else if(value instanceof Blob){return new BlobValue(value);}else if(value instanceof DocumentKeyReference){return new RefValue(value.databaseId,value.key);}else{throw context.createError("Unsupported field value: "+valueDescription(value));}};UserDataConverter.prototype.parseArrayTransformElements=function(methodName,elements){var _this=this;return elements.map(function(element,i){// Although array transforms are used with writes, the actual elements
// being unioned or removed are not considered writes since they cannot
// contain any FieldValue sentinels, etc.
var context=new ParseContext(UserDataSource.Argument,methodName,FieldPath.EMPTY_PATH);return _this.parseData(element,context.childContextForArray(i));});};return UserDataConverter;}();/**
 * Checks whether an object looks like a JSON object that should be converted
 * into a struct. Normal class/prototype instances are considered to look like
 * JSON objects since they should be converted to a struct value. Arrays, Dates,
 * GeoPoints, etc. are not considered to look like JSON objects since they map
 * to specific FieldValue types other than ObjectValue.
 */function looksLikeJsonObject(input){return typeof input==='object'&&input!==null&&!(input instanceof Array)&&!(input instanceof Date)&&!(input instanceof Timestamp)&&!(input instanceof GeoPoint)&&!(input instanceof Blob)&&!(input instanceof DocumentKeyReference)&&!(input instanceof FieldValueImpl);}function validatePlainObject(message,context,input){if(!looksLikeJsonObject(input)||!isPlainObject(input)){var description=valueDescription(input);if(description==='an object'){// Massage the error if it was an object.
throw context.createError(message+' a custom object');}else{throw context.createError(message+' '+description);}}}/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */function fieldPathFromArgument(methodName,path){if(path instanceof FieldPath$1){return path._internalPath;}else if(typeof path==='string'){return fieldPathFromDotSeparatedString(methodName,path);}else{var message='Field path arguments must be of type string or FieldPath.';throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+methodName+"() called with invalid data. "+message);}}/**
 * Wraps fromDotSeparatedString with an error message about the method that
 * was thrown.
 * @param methodName The publicly visible method name
 * @param path The dot-separated string form of a field path which will be split
 * on dots.
 */function fieldPathFromDotSeparatedString(methodName,path){try{return fromDotSeparatedString(path)._internalPath;}catch(e){var message=errorMessage(e);throw new FirestoreError(Code.INVALID_ARGUMENT,"Function "+methodName+"() called with invalid data. "+message);}}/**
 * Extracts the message from a caught exception, which should be an Error object
 * though JS doesn't guarantee that.
 */function errorMessage(error){return error instanceof Error?error.message:error.toString();}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // settings() defaults:
var DEFAULT_HOST='firestore.googleapis.com';var DEFAULT_SSL=true;var DEFAULT_TIMESTAMPS_IN_SNAPSHOTS=true;var DEFAULT_FORCE_LONG_POLLING=false;/**
 * Constant used to indicate the LRU garbage collection should be disabled.
 * Set this value as the `cacheSizeBytes` on the settings passed to the
 * `Firestore` instance.
 */var CACHE_SIZE_UNLIMITED=LruParams.COLLECTION_DISABLED;// enablePersistence() defaults:
var DEFAULT_SYNCHRONIZE_TABS=false;/**
 * A concrete type describing all the values that can be applied via a
 * user-supplied firestore.Settings object. This is a separate type so that
 * defaults can be supplied and the value can be checked for equality.
 */var FirestoreSettings=/** @class */function(){function FirestoreSettings(settings){if(settings.host===undefined){if(settings.ssl!==undefined){throw new FirestoreError(Code.INVALID_ARGUMENT,"Can't provide ssl option if host option is not set");}this.host=DEFAULT_HOST;this.ssl=DEFAULT_SSL;}else{validateNamedType('settings','non-empty string','host',settings.host);this.host=settings.host;validateNamedOptionalType('settings','boolean','ssl',settings.ssl);this.ssl=defaulted(settings.ssl,DEFAULT_SSL);}validateOptionNames('settings',settings,['host','ssl','credentials','timestampsInSnapshots','cacheSizeBytes','experimentalForceLongPolling']);validateNamedOptionalType('settings','object','credentials',settings.credentials);this.credentials=settings.credentials;validateNamedOptionalType('settings','boolean','timestampsInSnapshots',settings.timestampsInSnapshots);// Nobody should set timestampsInSnapshots anymore, but the error depends on
// whether they set it to true or false...
if(settings.timestampsInSnapshots===true){error("\n  The timestampsInSnapshots setting now defaults to true and you no\n  longer need to explicitly set it. In a future release, the setting\n  will be removed entirely and so it is recommended that you remove it\n  from your firestore.settings() call now.");}else if(settings.timestampsInSnapshots===false){error("\n  The timestampsInSnapshots setting will soon be removed. YOU MUST UPDATE\n  YOUR CODE.\n\n  To hide this warning, stop using the timestampsInSnapshots setting in your\n  firestore.settings({ ... }) call.\n\n  Once you remove the setting, Timestamps stored in Cloud Firestore will be\n  read back as Firebase Timestamp objects instead of as system Date objects.\n  So you will also need to update code expecting a Date to instead expect a\n  Timestamp. For example:\n\n  // Old:\n  const date = snapshot.get('created_at');\n  // New:\n  const timestamp = snapshot.get('created_at'); const date =\n  timestamp.toDate();\n\n  Please audit all existing usages of Date when you enable the new\n  behavior.");}this.timestampsInSnapshots=defaulted(settings.timestampsInSnapshots,DEFAULT_TIMESTAMPS_IN_SNAPSHOTS);validateNamedOptionalType('settings','number','cacheSizeBytes',settings.cacheSizeBytes);if(settings.cacheSizeBytes===undefined){this.cacheSizeBytes=LruParams.DEFAULT_CACHE_SIZE_BYTES;}else{if(settings.cacheSizeBytes!==CACHE_SIZE_UNLIMITED&&settings.cacheSizeBytes<LruParams.MINIMUM_CACHE_SIZE_BYTES){throw new FirestoreError(Code.INVALID_ARGUMENT,"cacheSizeBytes must be at least "+LruParams.MINIMUM_CACHE_SIZE_BYTES);}else{this.cacheSizeBytes=settings.cacheSizeBytes;}}validateNamedOptionalType('settings','boolean','experimentalForceLongPolling',settings.experimentalForceLongPolling);this.forceLongPolling=settings.experimentalForceLongPolling===undefined?DEFAULT_FORCE_LONG_POLLING:settings.experimentalForceLongPolling;}FirestoreSettings.prototype.isEqual=function(other){return this.host===other.host&&this.ssl===other.ssl&&this.timestampsInSnapshots===other.timestampsInSnapshots&&this.credentials===other.credentials&&this.cacheSizeBytes===other.cacheSizeBytes&&this.forceLongPolling===other.forceLongPolling;};return FirestoreSettings;}();/**
 * The root reference to the database.
 */var Firestore=/** @class */function(){function Firestore(databaseIdOrApp,authProvider){var _this=this;this._firebaseApp=null;// Public for use in tests.
// TODO(mikelehen): Use modularized initialization instead.
this._queue=new AsyncQueue();this.INTERNAL={delete:function _delete(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:// The client must be initalized to ensure that all subsequent API usage
// throws an exception.
this.ensureClientConfigured();return[4/*yield*/,this._firestoreClient.terminate()];case 1:_a.sent();return[2/*return*/];}});});}};if(typeof databaseIdOrApp.options==='object'){// This is very likely a Firebase app object
// TODO(b/34177605): Can we somehow use instanceof?
var app=databaseIdOrApp;this._firebaseApp=app;this._databaseId=Firestore.databaseIdFromApp(app);this._persistenceKey=app.name;this._credentials=new FirebaseCredentialsProvider(authProvider);}else{var external_1=databaseIdOrApp;if(!external_1.projectId){throw new FirestoreError(Code.INVALID_ARGUMENT,'Must provide projectId');}this._databaseId=new DatabaseId(external_1.projectId,external_1.database);// Use a default persistenceKey that lines up with FirebaseApp.
this._persistenceKey='[DEFAULT]';this._credentials=new EmptyCredentialsProvider();}this._settings=new FirestoreSettings({});this._dataConverter=this.createDataConverter(this._databaseId);}Firestore.prototype.settings=function(settingsLiteral){validateExactNumberOfArgs('Firestore.settings',arguments,1);validateArgType('Firestore.settings','object',1,settingsLiteral);if(contains(settingsLiteral,'persistence')){throw new FirestoreError(Code.INVALID_ARGUMENT,'"persistence" is now specified with a separate call to '+'firestore.enablePersistence().');}var newSettings=new FirestoreSettings(settingsLiteral);if(this._firestoreClient&&!this._settings.isEqual(newSettings)){throw new FirestoreError(Code.FAILED_PRECONDITION,'Firestore has already been started and its settings can no longer '+'be changed. You can only call settings() before calling any other '+'methods on a Firestore object.');}this._settings=newSettings;if(newSettings.credentials!==undefined){this._credentials=makeCredentialsProvider(newSettings.credentials);}};Firestore.prototype.enableNetwork=function(){this.ensureClientConfigured();return this._firestoreClient.enableNetwork();};Firestore.prototype.disableNetwork=function(){this.ensureClientConfigured();return this._firestoreClient.disableNetwork();};Firestore.prototype.enablePersistence=function(settings){if(this._firestoreClient){throw new FirestoreError(Code.FAILED_PRECONDITION,'Firestore has already been started and persistence can no longer '+'be enabled. You can only call enablePersistence() before calling '+'any other methods on a Firestore object.');}var synchronizeTabs=false;if(settings){if(settings.experimentalTabSynchronization!==undefined){error("The 'experimentalTabSynchronization' setting has been renamed to "+"'synchronizeTabs'. In a future release, the setting will be removed "+'and it is recommended that you update your '+"firestore.enablePersistence() call to use 'synchronizeTabs'.");}synchronizeTabs=defaulted(settings.synchronizeTabs!==undefined?settings.synchronizeTabs:settings.experimentalTabSynchronization,DEFAULT_SYNCHRONIZE_TABS);}return this.configureClient(new IndexedDbPersistenceSettings(this._settings.cacheSizeBytes,synchronizeTabs));};Firestore.prototype.clearPersistence=function(){var _this=this;var persistenceKey=IndexedDbPersistence.buildStoragePrefix(this.makeDatabaseInfo());var deferred=new Deferred();this._queue.enqueueAndForgetEvenAfterShutdown(function(){return tslib.__awaiter(_this,void 0,void 0,function(){var e_1;return tslib.__generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);if(this._firestoreClient!==undefined&&!this._firestoreClient.clientTerminated){throw new FirestoreError(Code.FAILED_PRECONDITION,'Persistence cannot be cleared after this Firestore instance is initialized.');}return[4/*yield*/,IndexedDbPersistence.clearPersistence(persistenceKey)];case 1:_a.sent();deferred.resolve();return[3/*break*/,3];case 2:e_1=_a.sent();deferred.reject(e_1);return[3/*break*/,3];case 3:return[2/*return*/];}});});});return deferred.promise;};Firestore.prototype.terminate=function(){this.app._removeServiceInstance('firestore');return this.INTERNAL.delete();};Object.defineProperty(Firestore.prototype,"_isTerminated",{get:function get(){this.ensureClientConfigured();return this._firestoreClient.clientTerminated;},enumerable:true,configurable:true});Firestore.prototype.waitForPendingWrites=function(){this.ensureClientConfigured();return this._firestoreClient.waitForPendingWrites();};Firestore.prototype.onSnapshotsInSync=function(arg){this.ensureClientConfigured();if(isPartialObserver(arg)){return this.onSnapshotsInSyncInternal(arg);}else{validateArgType('Firestore.onSnapshotsInSync','function',1,arg);var observer={next:arg};return this.onSnapshotsInSyncInternal(observer);}};Firestore.prototype.onSnapshotsInSyncInternal=function(observer){var _this=this;var errHandler=function errHandler(err){throw fail('Uncaught Error in onSnapshotsInSync');};var asyncObserver=new AsyncObserver({next:function next(){if(observer.next){observer.next();}},error:errHandler});this._firestoreClient.addSnapshotsInSyncListener(asyncObserver);return function(){asyncObserver.mute();_this._firestoreClient.removeSnapshotsInSyncListener(asyncObserver);};};Firestore.prototype.ensureClientConfigured=function(){if(!this._firestoreClient){// Kick off starting the client but don't actually wait for it.
// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.configureClient(new MemoryPersistenceSettings());}return this._firestoreClient;};Firestore.prototype.makeDatabaseInfo=function(){return new DatabaseInfo(this._databaseId,this._persistenceKey,this._settings.host,this._settings.ssl,this._settings.forceLongPolling);};Firestore.prototype.configureClient=function(persistenceSettings){assert(!!this._settings.host,'FirestoreSettings.host is not set');assert(!this._firestoreClient,'configureClient() called multiple times');var databaseInfo=this.makeDatabaseInfo();this._firestoreClient=new FirestoreClient(PlatformSupport.getPlatform(),databaseInfo,this._credentials,this._queue);return this._firestoreClient.start(persistenceSettings);};Firestore.prototype.createDataConverter=function(databaseId){var preConverter=function preConverter(value){if(value instanceof DocumentReference){var thisDb=databaseId;var otherDb=value.firestore._databaseId;if(!otherDb.isEqual(thisDb)){throw new FirestoreError(Code.INVALID_ARGUMENT,'Document reference is for database '+(otherDb.projectId+"/"+otherDb.database+" but should be ")+("for database "+thisDb.projectId+"/"+thisDb.database));}return new DocumentKeyReference(databaseId,value._key);}else{return value;}};return new UserDataConverter(preConverter);};Firestore.databaseIdFromApp=function(app){var options=app.options;if(!contains(options,'projectId')){throw new FirestoreError(Code.INVALID_ARGUMENT,'"projectId" not provided in firebase.initializeApp.');}var projectId=options['projectId'];if(!projectId||typeof projectId!=='string'){throw new FirestoreError(Code.INVALID_ARGUMENT,'projectId must be a string in FirebaseApp.options');}return new DatabaseId(projectId);};Object.defineProperty(Firestore.prototype,"app",{get:function get(){if(!this._firebaseApp){throw new FirestoreError(Code.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is "+'not available');}return this._firebaseApp;},enumerable:true,configurable:true});Firestore.prototype.collection=function(pathString){validateExactNumberOfArgs('Firestore.collection',arguments,1);validateArgType('Firestore.collection','non-empty string',1,pathString);this.ensureClientConfigured();return new CollectionReference(ResourcePath.fromString(pathString),this);};Firestore.prototype.doc=function(pathString){validateExactNumberOfArgs('Firestore.doc',arguments,1);validateArgType('Firestore.doc','non-empty string',1,pathString);this.ensureClientConfigured();return DocumentReference.forPath(ResourcePath.fromString(pathString),this);};Firestore.prototype.collectionGroup=function(collectionId){validateExactNumberOfArgs('Firestore.collectionGroup',arguments,1);validateArgType('Firestore.collectionGroup','non-empty string',1,collectionId);if(collectionId.indexOf('/')>=0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid collection ID '"+collectionId+"' passed to function "+"Firestore.collectionGroup(). Collection IDs must not contain '/'.");}this.ensureClientConfigured();return new Query$1(new Query(ResourcePath.EMPTY_PATH,collectionId),this);};Firestore.prototype.runTransaction=function(updateFunction){var _this=this;validateExactNumberOfArgs('Firestore.runTransaction',arguments,1);validateArgType('Firestore.runTransaction','function',1,updateFunction);return this.ensureClientConfigured().transaction(function(transaction){return updateFunction(new Transaction$1(_this,transaction));});};Firestore.prototype.batch=function(){this.ensureClientConfigured();return new WriteBatch(this);};Object.defineProperty(Firestore,"logLevel",{get:function get(){switch(getLogLevel()){case LogLevel.DEBUG:return'debug';case LogLevel.ERROR:return'error';case LogLevel.SILENT:return'silent';default:return fail('Unknown log level: '+getLogLevel());}},enumerable:true,configurable:true});Firestore.setLogLevel=function(level){validateExactNumberOfArgs('Firestore.setLogLevel',arguments,1);validateArgType('Firestore.setLogLevel','non-empty string',1,level);switch(level){case'debug':setLogLevel(LogLevel.DEBUG);break;case'error':setLogLevel(LogLevel.ERROR);break;case'silent':setLogLevel(LogLevel.SILENT);break;default:throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid log level: '+level);}};// Note: this is not a property because the minifier can't work correctly with
// the way TypeScript compiler outputs properties.
Firestore.prototype._areTimestampsInSnapshotsEnabled=function(){return this._settings.timestampsInSnapshots;};return Firestore;}();/**
 * A reference to a transaction.
 */var Transaction$1=/** @class */function(){function Transaction(_firestore,_transaction){this._firestore=_firestore;this._transaction=_transaction;}Transaction.prototype.get=function(documentRef){var _this=this;validateExactNumberOfArgs('Transaction.get',arguments,1);var ref=validateReference('Transaction.get',documentRef,this._firestore);return this._transaction.lookup([ref._key]).then(function(docs){if(!docs||docs.length!==1){return fail('Mismatch in docs returned from document lookup.');}var doc=docs[0];if(doc instanceof NoDocument){return new DocumentSnapshot(_this._firestore,ref._key,null,/* fromCache= */false,/* hasPendingWrites= */false,ref._converter);}else if(doc instanceof Document){return new DocumentSnapshot(_this._firestore,ref._key,doc,/* fromCache= */false,/* hasPendingWrites= */false,ref._converter);}else{throw fail("BatchGetDocumentsRequest returned unexpected document type: "+doc.constructor.name);}});};Transaction.prototype.set=function(documentRef,value,options){validateBetweenNumberOfArgs('Transaction.set',arguments,2,3);var ref=validateReference('Transaction.set',documentRef,this._firestore);options=validateSetOptions('Transaction.set',options);var _a=applyFirestoreDataConverter(ref._converter,value,'Transaction.set'),convertedValue=_a[0],functionName=_a[1];var parsed=options.merge||options.mergeFields?this._firestore._dataConverter.parseMergeData(functionName,convertedValue,options.mergeFields):this._firestore._dataConverter.parseSetData(functionName,convertedValue);this._transaction.set(ref._key,parsed);return this;};Transaction.prototype.update=function(documentRef,fieldOrUpdateData,value){var moreFieldsAndValues=[];for(var _i=3;_i<arguments.length;_i++){moreFieldsAndValues[_i-3]=arguments[_i];}var ref;var parsed;if(typeof fieldOrUpdateData==='string'||fieldOrUpdateData instanceof FieldPath$1){validateAtLeastNumberOfArgs('Transaction.update',arguments,3);ref=validateReference('Transaction.update',documentRef,this._firestore);parsed=this._firestore._dataConverter.parseUpdateVarargs('Transaction.update',fieldOrUpdateData,value,moreFieldsAndValues);}else{validateExactNumberOfArgs('Transaction.update',arguments,2);ref=validateReference('Transaction.update',documentRef,this._firestore);parsed=this._firestore._dataConverter.parseUpdateData('Transaction.update',fieldOrUpdateData);}this._transaction.update(ref._key,parsed);return this;};Transaction.prototype.delete=function(documentRef){validateExactNumberOfArgs('Transaction.delete',arguments,1);var ref=validateReference('Transaction.delete',documentRef,this._firestore);this._transaction.delete(ref._key);return this;};return Transaction;}();var WriteBatch=/** @class */function(){function WriteBatch(_firestore){this._firestore=_firestore;this._mutations=[];this._committed=false;}WriteBatch.prototype.set=function(documentRef,value,options){validateBetweenNumberOfArgs('WriteBatch.set',arguments,2,3);this.verifyNotCommitted();var ref=validateReference('WriteBatch.set',documentRef,this._firestore);options=validateSetOptions('WriteBatch.set',options);var _a=applyFirestoreDataConverter(ref._converter,value,'WriteBatch.set'),convertedValue=_a[0],functionName=_a[1];var parsed=options.merge||options.mergeFields?this._firestore._dataConverter.parseMergeData(functionName,convertedValue,options.mergeFields):this._firestore._dataConverter.parseSetData(functionName,convertedValue);this._mutations=this._mutations.concat(parsed.toMutations(ref._key,Precondition.NONE));return this;};WriteBatch.prototype.update=function(documentRef,fieldOrUpdateData,value){var moreFieldsAndValues=[];for(var _i=3;_i<arguments.length;_i++){moreFieldsAndValues[_i-3]=arguments[_i];}this.verifyNotCommitted();var ref;var parsed;if(typeof fieldOrUpdateData==='string'||fieldOrUpdateData instanceof FieldPath$1){validateAtLeastNumberOfArgs('WriteBatch.update',arguments,3);ref=validateReference('WriteBatch.update',documentRef,this._firestore);parsed=this._firestore._dataConverter.parseUpdateVarargs('WriteBatch.update',fieldOrUpdateData,value,moreFieldsAndValues);}else{validateExactNumberOfArgs('WriteBatch.update',arguments,2);ref=validateReference('WriteBatch.update',documentRef,this._firestore);parsed=this._firestore._dataConverter.parseUpdateData('WriteBatch.update',fieldOrUpdateData);}this._mutations=this._mutations.concat(parsed.toMutations(ref._key,Precondition.exists(true)));return this;};WriteBatch.prototype.delete=function(documentRef){validateExactNumberOfArgs('WriteBatch.delete',arguments,1);this.verifyNotCommitted();var ref=validateReference('WriteBatch.delete',documentRef,this._firestore);this._mutations=this._mutations.concat(new DeleteMutation(ref._key,Precondition.NONE));return this;};WriteBatch.prototype.commit=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){this.verifyNotCommitted();this._committed=true;if(this._mutations.length>0){return[2/*return*/,this._firestore.ensureClientConfigured().write(this._mutations)];}return[2/*return*/];});});};WriteBatch.prototype.verifyNotCommitted=function(){if(this._committed){throw new FirestoreError(Code.FAILED_PRECONDITION,'A write batch can no longer be used after commit() '+'has been called.');}};return WriteBatch;}();/**
 * A reference to a particular document in a collection in the database.
 */var DocumentReference=/** @class */function(){function DocumentReference(_key,firestore,_converter){this._key=_key;this.firestore=firestore;this._converter=_converter;this._firestoreClient=this.firestore.ensureClientConfigured();}DocumentReference.forPath=function(path,firestore,converter){if(path.length%2!==0){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid document reference. Document '+'references must have an even number of segments, but '+(path.canonicalString()+" has "+path.length));}return new DocumentReference(new DocumentKey(path),firestore,converter);};Object.defineProperty(DocumentReference.prototype,"id",{get:function get(){return this._key.path.lastSegment();},enumerable:true,configurable:true});Object.defineProperty(DocumentReference.prototype,"parent",{get:function get(){return new CollectionReference(this._key.path.popLast(),this.firestore,this._converter);},enumerable:true,configurable:true});Object.defineProperty(DocumentReference.prototype,"path",{get:function get(){return this._key.path.canonicalString();},enumerable:true,configurable:true});DocumentReference.prototype.collection=function(pathString){validateExactNumberOfArgs('DocumentReference.collection',arguments,1);validateArgType('DocumentReference.collection','non-empty string',1,pathString);if(!pathString){throw new FirestoreError(Code.INVALID_ARGUMENT,'Must provide a non-empty collection name to collection()');}var path=ResourcePath.fromString(pathString);return new CollectionReference(this._key.path.child(path),this.firestore);};DocumentReference.prototype.isEqual=function(other){if(!(other instanceof DocumentReference)){throw invalidClassError('isEqual','DocumentReference',1,other);}return this.firestore===other.firestore&&this._key.isEqual(other._key)&&this._converter===other._converter;};DocumentReference.prototype.set=function(value,options){validateBetweenNumberOfArgs('DocumentReference.set',arguments,1,2);options=validateSetOptions('DocumentReference.set',options);var _a=applyFirestoreDataConverter(this._converter,value,'DocumentReference.set'),convertedValue=_a[0],functionName=_a[1];var parsed=options.merge||options.mergeFields?this.firestore._dataConverter.parseMergeData(functionName,convertedValue,options.mergeFields):this.firestore._dataConverter.parseSetData(functionName,convertedValue);return this._firestoreClient.write(parsed.toMutations(this._key,Precondition.NONE));};DocumentReference.prototype.update=function(fieldOrUpdateData,value){var moreFieldsAndValues=[];for(var _i=2;_i<arguments.length;_i++){moreFieldsAndValues[_i-2]=arguments[_i];}var parsed;if(typeof fieldOrUpdateData==='string'||fieldOrUpdateData instanceof FieldPath$1){validateAtLeastNumberOfArgs('DocumentReference.update',arguments,2);parsed=this.firestore._dataConverter.parseUpdateVarargs('DocumentReference.update',fieldOrUpdateData,value,moreFieldsAndValues);}else{validateExactNumberOfArgs('DocumentReference.update',arguments,1);parsed=this.firestore._dataConverter.parseUpdateData('DocumentReference.update',fieldOrUpdateData);}return this._firestoreClient.write(parsed.toMutations(this._key,Precondition.exists(true)));};DocumentReference.prototype.delete=function(){validateExactNumberOfArgs('DocumentReference.delete',arguments,0);return this._firestoreClient.write([new DeleteMutation(this._key,Precondition.NONE)]);};DocumentReference.prototype.onSnapshot=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}validateBetweenNumberOfArgs('DocumentReference.onSnapshot',arguments,1,4);var options={includeMetadataChanges:false};var observer;var currArg=0;if(typeof args[currArg]==='object'&&!isPartialObserver(args[currArg])){options=args[currArg];validateOptionNames('DocumentReference.onSnapshot',options,['includeMetadataChanges']);validateNamedOptionalType('DocumentReference.onSnapshot','boolean','includeMetadataChanges',options.includeMetadataChanges);currArg++;}var internalOptions={includeMetadataChanges:options.includeMetadataChanges};if(isPartialObserver(args[currArg])){observer=args[currArg];}else{validateArgType('DocumentReference.onSnapshot','function',currArg,args[currArg]);validateOptionalArgType('DocumentReference.onSnapshot','function',currArg+1,args[currArg+1]);validateOptionalArgType('DocumentReference.onSnapshot','function',currArg+2,args[currArg+2]);observer={next:args[currArg],error:args[currArg+1],complete:args[currArg+2]};}return this.onSnapshotInternal(internalOptions,observer);};DocumentReference.prototype.onSnapshotInternal=function(options,observer){var _this=this;var errHandler=function errHandler(err){console.error('Uncaught Error in onSnapshot:',err);};if(observer.error){errHandler=observer.error.bind(observer);}var asyncObserver=new AsyncObserver({next:function next(snapshot){if(observer.next){assert(snapshot.docs.size<=1,'Too many documents returned on a document query');var doc=snapshot.docs.get(_this._key);observer.next(new DocumentSnapshot(_this.firestore,_this._key,doc,snapshot.fromCache,snapshot.hasPendingWrites,_this._converter));}},error:errHandler});var internalListener=this._firestoreClient.listen(Query.atPath(this._key.path),asyncObserver,options);return function(){asyncObserver.mute();_this._firestoreClient.unlisten(internalListener);};};DocumentReference.prototype.get=function(options){var _this=this;validateBetweenNumberOfArgs('DocumentReference.get',arguments,0,1);validateGetOptions('DocumentReference.get',options);return new Promise(function(resolve,reject){if(options&&options.source==='cache'){_this.firestore.ensureClientConfigured().getDocumentFromLocalCache(_this._key).then(function(doc){resolve(new DocumentSnapshot(_this.firestore,_this._key,doc,/*fromCache=*/true,doc instanceof Document?doc.hasLocalMutations:false,_this._converter));},reject);}else{_this.getViaSnapshotListener(resolve,reject,options);}});};DocumentReference.prototype.getViaSnapshotListener=function(resolve,reject,options){var unlisten=this.onSnapshotInternal({includeMetadataChanges:true,waitForSyncWhenOnline:true},{next:function next(snap){// Remove query first before passing event to user to avoid
// user actions affecting the now stale query.
unlisten();if(!snap.exists&&snap.metadata.fromCache){// TODO(dimond): If we're online and the document doesn't
// exist then we resolve with a doc.exists set to false. If
// we're offline however, we reject the Promise in this
// case. Two options: 1) Cache the negative response from
// the server so we can deliver that even when you're
// offline 2) Actually reject the Promise in the online case
// if the document doesn't exist.
reject(new FirestoreError(Code.UNAVAILABLE,'Failed to get document because the client is '+'offline.'));}else if(snap.exists&&snap.metadata.fromCache&&options&&options.source==='server'){reject(new FirestoreError(Code.UNAVAILABLE,'Failed to get document from server. (However, this '+'document does exist in the local cache. Run again '+'without setting source to "server" to '+'retrieve the cached document.)'));}else{resolve(snap);}},error:reject});};DocumentReference.prototype.withConverter=function(converter){return new DocumentReference(this._key,this.firestore,converter);};return DocumentReference;}();var SnapshotMetadata=/** @class */function(){function SnapshotMetadata(hasPendingWrites,fromCache){this.hasPendingWrites=hasPendingWrites;this.fromCache=fromCache;}SnapshotMetadata.prototype.isEqual=function(other){return this.hasPendingWrites===other.hasPendingWrites&&this.fromCache===other.fromCache;};return SnapshotMetadata;}();var DocumentSnapshot=/** @class */function(){function DocumentSnapshot(_firestore,_key,_document,_fromCache,_hasPendingWrites,_converter){this._firestore=_firestore;this._key=_key;this._document=_document;this._fromCache=_fromCache;this._hasPendingWrites=_hasPendingWrites;this._converter=_converter;}DocumentSnapshot.prototype.data=function(options){validateBetweenNumberOfArgs('DocumentSnapshot.data',arguments,0,1);options=validateSnapshotOptions('DocumentSnapshot.data',options);if(!this._document){return undefined;}else{// We only want to use the converter and create a new DocumentSnapshot
// if a converter has been provided.
if(this._converter){var snapshot=new QueryDocumentSnapshot(this._firestore,this._key,this._document,this._fromCache,this._hasPendingWrites);return this._converter.fromFirestore(snapshot,options);}else{return this.toJSObject(this._document.data(),FieldValueOptions.fromSnapshotOptions(options,this._firestore._areTimestampsInSnapshotsEnabled()));}}};DocumentSnapshot.prototype.get=function(fieldPath,options){validateBetweenNumberOfArgs('DocumentSnapshot.get',arguments,1,2);options=validateSnapshotOptions('DocumentSnapshot.get',options);if(this._document){var value=this._document.data().field(fieldPathFromArgument('DocumentSnapshot.get',fieldPath));if(value!==null){return this.toJSValue(value,FieldValueOptions.fromSnapshotOptions(options,this._firestore._areTimestampsInSnapshotsEnabled()));}}return undefined;};Object.defineProperty(DocumentSnapshot.prototype,"id",{get:function get(){return this._key.path.lastSegment();},enumerable:true,configurable:true});Object.defineProperty(DocumentSnapshot.prototype,"ref",{get:function get(){return new DocumentReference(this._key,this._firestore,this._converter);},enumerable:true,configurable:true});Object.defineProperty(DocumentSnapshot.prototype,"exists",{get:function get(){return this._document!==null;},enumerable:true,configurable:true});Object.defineProperty(DocumentSnapshot.prototype,"metadata",{get:function get(){return new SnapshotMetadata(this._hasPendingWrites,this._fromCache);},enumerable:true,configurable:true});DocumentSnapshot.prototype.isEqual=function(other){if(!(other instanceof DocumentSnapshot)){throw invalidClassError('isEqual','DocumentSnapshot',1,other);}return this._firestore===other._firestore&&this._fromCache===other._fromCache&&this._key.isEqual(other._key)&&(this._document===null?other._document===null:this._document.isEqual(other._document))&&this._converter===other._converter;};DocumentSnapshot.prototype.toJSObject=function(data,options){var _this=this;var result={};data.forEach(function(key,value){result[key]=_this.toJSValue(value,options);});return result;};DocumentSnapshot.prototype.toJSValue=function(value,options){if(value instanceof ObjectValue){return this.toJSObject(value,options);}else if(value instanceof ArrayValue){return this.toJSArray(value,options);}else if(value instanceof RefValue){var key=value.value(options);var database=this._firestore.ensureClientConfigured().databaseId();if(!value.databaseId.isEqual(database)){// TODO(b/64130202): Somehow support foreign references.
error("Document "+this._key.path+" contains a document "+"reference within a different database ("+(value.databaseId.projectId+"/"+value.databaseId.database+") which is not ")+"supported. It will be treated as a reference in the current "+("database ("+database.projectId+"/"+database.database+") ")+"instead.");}return new DocumentReference(key,this._firestore,this._converter);}else{return value.value(options);}};DocumentSnapshot.prototype.toJSArray=function(data,options){var _this=this;return data.internalValue.map(function(value){return _this.toJSValue(value,options);});};return DocumentSnapshot;}();var QueryDocumentSnapshot=/** @class */function(_super){tslib.__extends(QueryDocumentSnapshot,_super);function QueryDocumentSnapshot(){return _super!==null&&_super.apply(this,arguments)||this;}QueryDocumentSnapshot.prototype.data=function(options){var data=_super.prototype.data.call(this,options);assert(data!==undefined,'Document in a QueryDocumentSnapshot should exist');return data;};return QueryDocumentSnapshot;}(DocumentSnapshot);var Query$1=/** @class */function(){function Query(_query,firestore,_converter){this._query=_query;this.firestore=firestore;this._converter=_converter;}Query.prototype.where=function(field,opStr,value){validateExactNumberOfArgs('Query.where',arguments,3);validateDefined('Query.where',3,value);// Enumerated from the WhereFilterOp type in index.d.ts.
var whereFilterOpEnums=['<','<=','==','>=','>','array-contains','in','array-contains-any'];validateStringEnum('Query.where',whereFilterOpEnums,2,opStr);var fieldValue;var fieldPath=fieldPathFromArgument('Query.where',field);var operator=Operator.fromString(opStr);if(fieldPath.isKeyField()){if(operator===Operator.ARRAY_CONTAINS||operator===Operator.ARRAY_CONTAINS_ANY){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid Query. You can't perform '"+operator.toString()+"' "+'queries on FieldPath.documentId().');}else if(operator===Operator.IN){this.validateDisjunctiveFilterElements(value,operator);var referenceList=[];for(var _i=0,_a=value;_i<_a.length;_i++){var arrayValue=_a[_i];referenceList.push(this.parseDocumentIdValue(arrayValue));}fieldValue=new ArrayValue(referenceList);}else{fieldValue=this.parseDocumentIdValue(value);}}else{if(operator===Operator.IN||operator===Operator.ARRAY_CONTAINS_ANY){this.validateDisjunctiveFilterElements(value,operator);}fieldValue=this.firestore._dataConverter.parseQueryValue('Query.where',value,// We only allow nested arrays for IN queries.
/** allowArrays = */operator===Operator.IN?true:false);}var filter=FieldFilter.create(fieldPath,operator,fieldValue);this.validateNewFilter(filter);return new Query(this._query.addFilter(filter),this.firestore,this._converter);};Query.prototype.orderBy=function(field,directionStr){validateBetweenNumberOfArgs('Query.orderBy',arguments,1,2);validateOptionalArgType('Query.orderBy','non-empty string',2,directionStr);var direction;if(directionStr===undefined||directionStr==='asc'){direction=Direction.ASCENDING;}else if(directionStr==='desc'){direction=Direction.DESCENDING;}else{throw new FirestoreError(Code.INVALID_ARGUMENT,"Function Query.orderBy() has unknown direction '"+directionStr+"', "+"expected 'asc' or 'desc'.");}if(this._query.startAt!==null){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. You must not call Query.startAt() or '+'Query.startAfter() before calling Query.orderBy().');}if(this._query.endAt!==null){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. You must not call Query.endAt() or '+'Query.endBefore() before calling Query.orderBy().');}var fieldPath=fieldPathFromArgument('Query.orderBy',field);var orderBy=new OrderBy(fieldPath,direction);this.validateNewOrderBy(orderBy);return new Query(this._query.addOrderBy(orderBy),this.firestore,this._converter);};Query.prototype.limit=function(n){validateExactNumberOfArgs('Query.limit',arguments,1);validateArgType('Query.limit','number',1,n);validatePositiveNumber('Query.limit',1,n);return new Query(this._query.withLimitToFirst(n),this.firestore,this._converter);};Query.prototype.limitToLast=function(n){validateExactNumberOfArgs('Query.limitToLast',arguments,1);validateArgType('Query.limitToLast','number',1,n);validatePositiveNumber('Query.limitToLast',1,n);return new Query(this._query.withLimitToLast(n),this.firestore,this._converter);};Query.prototype.startAt=function(docOrField){var fields=[];for(var _i=1;_i<arguments.length;_i++){fields[_i-1]=arguments[_i];}validateAtLeastNumberOfArgs('Query.startAt',arguments,1);var bound=this.boundFromDocOrFields('Query.startAt',docOrField,fields,/*before=*/true);return new Query(this._query.withStartAt(bound),this.firestore,this._converter);};Query.prototype.startAfter=function(docOrField){var fields=[];for(var _i=1;_i<arguments.length;_i++){fields[_i-1]=arguments[_i];}validateAtLeastNumberOfArgs('Query.startAfter',arguments,1);var bound=this.boundFromDocOrFields('Query.startAfter',docOrField,fields,/*before=*/false);return new Query(this._query.withStartAt(bound),this.firestore,this._converter);};Query.prototype.endBefore=function(docOrField){var fields=[];for(var _i=1;_i<arguments.length;_i++){fields[_i-1]=arguments[_i];}validateAtLeastNumberOfArgs('Query.endBefore',arguments,1);var bound=this.boundFromDocOrFields('Query.endBefore',docOrField,fields,/*before=*/true);return new Query(this._query.withEndAt(bound),this.firestore,this._converter);};Query.prototype.endAt=function(docOrField){var fields=[];for(var _i=1;_i<arguments.length;_i++){fields[_i-1]=arguments[_i];}validateAtLeastNumberOfArgs('Query.endAt',arguments,1);var bound=this.boundFromDocOrFields('Query.endAt',docOrField,fields,/*before=*/false);return new Query(this._query.withEndAt(bound),this.firestore,this._converter);};Query.prototype.isEqual=function(other){if(!(other instanceof Query)){throw invalidClassError('isEqual','Query',1,other);}return this.firestore===other.firestore&&this._query.isEqual(other._query);};Query.prototype.withConverter=function(converter){return new Query(this._query,this.firestore,converter);};/** Helper function to create a bound from a document or fields */Query.prototype.boundFromDocOrFields=function(methodName,docOrField,fields,before){validateDefined(methodName,1,docOrField);if(docOrField instanceof DocumentSnapshot){if(fields.length>0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Too many arguments provided to "+methodName+"().");}var snap=docOrField;if(!snap.exists){throw new FirestoreError(Code.NOT_FOUND,"Can't use a DocumentSnapshot that doesn't exist for "+(methodName+"()."));}return this.boundFromDocument(methodName,snap._document,before);}else{var allFields=[docOrField].concat(fields);return this.boundFromFields(methodName,allFields,before);}};/**
     * Create a Bound from a query and a document.
     *
     * Note that the Bound will always include the key of the document
     * and so only the provided document will compare equal to the returned
     * position.
     *
     * Will throw if the document does not contain all fields of the order by
     * of the query or if any of the fields in the order by are an uncommitted
     * server timestamp.
     */Query.prototype.boundFromDocument=function(methodName,doc,before){var components=[];// Because people expect to continue/end a query at the exact document
// provided, we need to use the implicit sort order rather than the explicit
// sort order, because it's guaranteed to contain the document key. That way
// the position becomes unambiguous and the query continues/ends exactly at
// the provided document. Without the key (by using the explicit sort
// orders), multiple documents could match the position, yielding duplicate
// results.
for(var _i=0,_a=this._query.orderBy;_i<_a.length;_i++){var orderBy=_a[_i];if(orderBy.field.isKeyField()){components.push(new RefValue(this.firestore._databaseId,doc.key));}else{var value=doc.field(orderBy.field);if(value instanceof ServerTimestampValue){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. You are trying to start or end a query using a '+'document for which the field "'+orderBy.field+'" is an uncommitted server timestamp. (Since the value of '+'this field is unknown, you cannot start/end a query with it.)');}else if(value!==null){components.push(value);}else{var field=orderBy.field.canonicalString();throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. You are trying to start or end a query using a "+("document for which the field '"+field+"' (used as the ")+"orderBy) does not exist.");}}}return new Bound(components,before);};/**
     * Converts a list of field values to a Bound for the given query.
     */Query.prototype.boundFromFields=function(methodName,values,before){// Use explicit order by's because it has to match the query the user made
var orderBy=this._query.explicitOrderBy;if(values.length>orderBy.length){throw new FirestoreError(Code.INVALID_ARGUMENT,"Too many arguments provided to "+methodName+"(). "+"The number of arguments must be less than or equal to the "+"number of Query.orderBy() clauses");}var components=[];for(var i=0;i<values.length;i++){var rawValue=values[i];var orderByComponent=orderBy[i];if(orderByComponent.field.isKeyField()){if(typeof rawValue!=='string'){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. Expected a string for document ID in "+(methodName+"(), but got a "+typeof rawValue));}if(!this._query.isCollectionGroupQuery()&&rawValue.indexOf('/')!==-1){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. When querying a collection and ordering by FieldPath.documentId(), "+("the value passed to "+methodName+"() must be a plain document ID, but ")+("'"+rawValue+"' contains a slash."));}var path=this._query.path.child(ResourcePath.fromString(rawValue));if(!DocumentKey.isDocumentKey(path)){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. When querying a collection group and ordering by "+("FieldPath.documentId(), the value passed to "+methodName+"() must result in a ")+("valid document path, but '"+path+"' is not because it contains an odd number ")+"of segments.");}var key=new DocumentKey(path);components.push(new RefValue(this.firestore._databaseId,key));}else{var wrapped=this.firestore._dataConverter.parseQueryValue(methodName,rawValue);components.push(wrapped);}}return new Bound(components,before);};Query.prototype.onSnapshot=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}validateBetweenNumberOfArgs('Query.onSnapshot',arguments,1,4);var options={};var observer;var currArg=0;if(typeof args[currArg]==='object'&&!isPartialObserver(args[currArg])){options=args[currArg];validateOptionNames('Query.onSnapshot',options,['includeMetadataChanges']);validateNamedOptionalType('Query.onSnapshot','boolean','includeMetadataChanges',options.includeMetadataChanges);currArg++;}if(isPartialObserver(args[currArg])){observer=args[currArg];}else{validateArgType('Query.onSnapshot','function',currArg,args[currArg]);validateOptionalArgType('Query.onSnapshot','function',currArg+1,args[currArg+1]);validateOptionalArgType('Query.onSnapshot','function',currArg+2,args[currArg+2]);observer={next:args[currArg],error:args[currArg+1],complete:args[currArg+2]};}this.validateHasExplicitOrderByForLimitToLast(this._query);return this.onSnapshotInternal(options,observer);};Query.prototype.onSnapshotInternal=function(options,observer){var _this=this;var errHandler=function errHandler(err){console.error('Uncaught Error in onSnapshot:',err);};if(observer.error){errHandler=observer.error.bind(observer);}var asyncObserver=new AsyncObserver({next:function next(result){if(observer.next){observer.next(new QuerySnapshot(_this.firestore,_this._query,result,_this._converter));}},error:errHandler});var firestoreClient=this.firestore.ensureClientConfigured();var internalListener=firestoreClient.listen(this._query,asyncObserver,options);return function(){asyncObserver.mute();firestoreClient.unlisten(internalListener);};};Query.prototype.validateHasExplicitOrderByForLimitToLast=function(query){if(query.hasLimitToLast()&&query.explicitOrderBy.length===0){throw new FirestoreError(Code.UNIMPLEMENTED,'limitToLast() queries require specifying at least one orderBy() clause');}};Query.prototype.get=function(options){var _this=this;validateBetweenNumberOfArgs('Query.get',arguments,0,1);validateGetOptions('Query.get',options);this.validateHasExplicitOrderByForLimitToLast(this._query);return new Promise(function(resolve,reject){if(options&&options.source==='cache'){_this.firestore.ensureClientConfigured().getDocumentsFromLocalCache(_this._query).then(function(viewSnap){resolve(new QuerySnapshot(_this.firestore,_this._query,viewSnap,_this._converter));},reject);}else{_this.getViaSnapshotListener(resolve,reject,options);}});};Query.prototype.getViaSnapshotListener=function(resolve,reject,options){var unlisten=this.onSnapshotInternal({includeMetadataChanges:true,waitForSyncWhenOnline:true},{next:function next(result){// Remove query first before passing event to user to avoid
// user actions affecting the now stale query.
unlisten();if(result.metadata.fromCache&&options&&options.source==='server'){reject(new FirestoreError(Code.UNAVAILABLE,'Failed to get documents from server. (However, these '+'documents may exist in the local cache. Run again '+'without setting source to "server" to '+'retrieve the cached documents.)'));}else{resolve(result);}},error:reject});};/**
     * Parses the given documentIdValue into a ReferenceValue, throwing
     * appropriate errors if the value is anything other than a DocumentReference
     * or String, or if the string is malformed.
     */Query.prototype.parseDocumentIdValue=function(documentIdValue){if(typeof documentIdValue==='string'){if(documentIdValue===''){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. When querying with FieldPath.documentId(), you '+'must provide a valid document ID, but it was an empty string.');}if(!this._query.isCollectionGroupQuery()&&documentIdValue.indexOf('/')!==-1){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. When querying a collection by "+"FieldPath.documentId(), you must provide a plain document ID, but "+("'"+documentIdValue+"' contains a '/' character."));}var path=this._query.path.child(ResourcePath.fromString(documentIdValue));if(!DocumentKey.isDocumentKey(path)){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. When querying a collection group by "+"FieldPath.documentId(), the value provided must result in a valid document path, "+("but '"+path+"' is not because it has an odd number of segments ("+path.length+")."));}return new RefValue(this.firestore._databaseId,new DocumentKey(path));}else if(documentIdValue instanceof DocumentReference){var ref=documentIdValue;return new RefValue(this.firestore._databaseId,ref._key);}else{throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid "+"string or a DocumentReference, but it was: "+(valueDescription(documentIdValue)+"."));}};/**
     * Validates that the value passed into a disjunctrive filter satisfies all
     * array requirements.
     */Query.prototype.validateDisjunctiveFilterElements=function(value,operator){if(!Array.isArray(value)||value.length===0){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid Query. A non-empty array is required for '+("'"+operator.toString()+"' filters."));}if(value.length>10){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid Query. '"+operator.toString()+"' filters support a "+'maximum of 10 elements in the value array.');}if(value.indexOf(null)>=0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid Query. '"+operator.toString()+"' filters cannot contain 'null' "+'in the value array.');}if(value.filter(function(element){return Number.isNaN(element);}).length>0){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid Query. '"+operator.toString()+"' filters cannot contain 'NaN' "+'in the value array.');}};Query.prototype.validateNewFilter=function(filter){if(filter instanceof FieldFilter){var arrayOps=[Operator.ARRAY_CONTAINS,Operator.ARRAY_CONTAINS_ANY];var disjunctiveOps=[Operator.IN,Operator.ARRAY_CONTAINS_ANY];var isArrayOp=arrayOps.indexOf(filter.op)>=0;var isDisjunctiveOp=disjunctiveOps.indexOf(filter.op)>=0;if(filter.isInequality()){var existingField=this._query.getInequalityFilterField();if(existingField!==null&&!existingField.isEqual(filter.field)){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. All where filters with an inequality'+' (<, <=, >, or >=) must be on the same field. But you have'+(" inequality filters on '"+existingField.toString()+"'")+(" and '"+filter.field.toString()+"'"));}var firstOrderByField=this._query.getFirstOrderByField();if(firstOrderByField!==null){this.validateOrderByAndInequalityMatch(filter.field,firstOrderByField);}}else if(isDisjunctiveOp||isArrayOp){// You can have at most 1 disjunctive filter and 1 array filter. Check if
// the new filter conflicts with an existing one.
var conflictingOp=null;if(isDisjunctiveOp){conflictingOp=this._query.findFilterOperator(disjunctiveOps);}if(conflictingOp===null&&isArrayOp){conflictingOp=this._query.findFilterOperator(arrayOps);}if(conflictingOp!=null){// We special case when it's a duplicate op to give a slightly clearer error message.
if(conflictingOp===filter.op){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid query. You cannot use more than one '+("'"+filter.op.toString()+"' filter."));}else{throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. You cannot use '"+filter.op.toString()+"' filters "+("with '"+conflictingOp.toString()+"' filters."));}}}}};Query.prototype.validateNewOrderBy=function(orderBy){if(this._query.getFirstOrderByField()===null){// This is the first order by. It must match any inequality.
var inequalityField=this._query.getInequalityFilterField();if(inequalityField!==null){this.validateOrderByAndInequalityMatch(inequalityField,orderBy.field);}}};Query.prototype.validateOrderByAndInequalityMatch=function(inequality,orderBy){if(!orderBy.isEqual(inequality)){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid query. You have a where filter with an inequality "+("(<, <=, >, or >=) on field '"+inequality.toString()+"' ")+("and so you must also use '"+inequality.toString()+"' ")+"as your first Query.orderBy(), but your first Query.orderBy() "+("is on field '"+orderBy.toString()+"' instead."));}};return Query;}();var QuerySnapshot=/** @class */function(){function QuerySnapshot(_firestore,_originalQuery,_snapshot,_converter){this._firestore=_firestore;this._originalQuery=_originalQuery;this._snapshot=_snapshot;this._converter=_converter;this._cachedChanges=null;this._cachedChangesIncludeMetadataChanges=null;this.metadata=new SnapshotMetadata(_snapshot.hasPendingWrites,_snapshot.fromCache);}Object.defineProperty(QuerySnapshot.prototype,"docs",{get:function get(){var result=[];this.forEach(function(doc){return result.push(doc);});return result;},enumerable:true,configurable:true});Object.defineProperty(QuerySnapshot.prototype,"empty",{get:function get(){return this._snapshot.docs.isEmpty();},enumerable:true,configurable:true});Object.defineProperty(QuerySnapshot.prototype,"size",{get:function get(){return this._snapshot.docs.size;},enumerable:true,configurable:true});QuerySnapshot.prototype.forEach=function(callback,thisArg){var _this=this;validateBetweenNumberOfArgs('QuerySnapshot.forEach',arguments,1,2);validateArgType('QuerySnapshot.forEach','function',1,callback);this._snapshot.docs.forEach(function(doc){callback.call(thisArg,_this.convertToDocumentImpl(doc));});};Object.defineProperty(QuerySnapshot.prototype,"query",{get:function get(){return new Query$1(this._originalQuery,this._firestore,this._converter);},enumerable:true,configurable:true});QuerySnapshot.prototype.docChanges=function(options){if(options){validateOptionNames('QuerySnapshot.docChanges',options,['includeMetadataChanges']);validateNamedOptionalType('QuerySnapshot.docChanges','boolean','includeMetadataChanges',options.includeMetadataChanges);}var includeMetadataChanges=!!(options&&options.includeMetadataChanges);if(includeMetadataChanges&&this._snapshot.excludesMetadataChanges){throw new FirestoreError(Code.INVALID_ARGUMENT,'To include metadata changes with your document changes, you must '+'also pass { includeMetadataChanges:true } to onSnapshot().');}if(!this._cachedChanges||this._cachedChangesIncludeMetadataChanges!==includeMetadataChanges){this._cachedChanges=changesFromSnapshot(this._firestore,includeMetadataChanges,this._snapshot,this._converter);this._cachedChangesIncludeMetadataChanges=includeMetadataChanges;}return this._cachedChanges;};/** Check the equality. The call can be very expensive. */QuerySnapshot.prototype.isEqual=function(other){if(!(other instanceof QuerySnapshot)){throw invalidClassError('isEqual','QuerySnapshot',1,other);}return this._firestore===other._firestore&&this._originalQuery.isEqual(other._originalQuery)&&this._snapshot.isEqual(other._snapshot)&&this._converter===other._converter;};QuerySnapshot.prototype.convertToDocumentImpl=function(doc){return new QueryDocumentSnapshot(this._firestore,doc.key,doc,this.metadata.fromCache,this._snapshot.mutatedKeys.has(doc.key),this._converter);};return QuerySnapshot;}();// TODO(2018/11/01): As of 2018/04/17 we're changing docChanges from an array
// into a method. Because this is a runtime breaking change and somewhat subtle
// (both Array and Function have a .length, etc.), we'll replace commonly-used
// properties (including Symbol.iterator) to throw a custom error message. In
// ~6 months we can delete the custom error as most folks will have hopefully
// migrated.
function throwDocChangesMethodError(){throw new FirestoreError(Code.INVALID_ARGUMENT,'QuerySnapshot.docChanges has been changed from a property into a '+'method, so usages like "querySnapshot.docChanges" should become '+'"querySnapshot.docChanges()"');}var docChangesPropertiesToOverride=tslib.__spreadArrays(['length','forEach','map'],typeof Symbol!=='undefined'?[Symbol.iterator]:[]);docChangesPropertiesToOverride.forEach(function(property){/**
     * We are (re-)defining properties on QuerySnapshot.prototype.docChanges which
     * is a Function. This could fail, in particular in the case of 'length' which
     * already exists on Function.prototype and on IE11 is improperly defined with
     * `{ configurable: false }`. So we wrap this in a try/catch to ensure that we
     * still have a functional SDK.
     */try{Object.defineProperty(QuerySnapshot.prototype.docChanges,property,{get:function get(){return throwDocChangesMethodError();}});}catch(err){}// Ignore this failure intentionally
});var CollectionReference=/** @class */function(_super){tslib.__extends(CollectionReference,_super);function CollectionReference(_path,firestore,_converter){var _this=_super.call(this,Query.atPath(_path),firestore,_converter)||this;_this._path=_path;if(_path.length%2!==1){throw new FirestoreError(Code.INVALID_ARGUMENT,'Invalid collection reference. Collection '+'references must have an odd number of segments, but '+(_path.canonicalString()+" has "+_path.length));}return _this;}Object.defineProperty(CollectionReference.prototype,"id",{get:function get(){return this._query.path.lastSegment();},enumerable:true,configurable:true});Object.defineProperty(CollectionReference.prototype,"parent",{get:function get(){var parentPath=this._query.path.popLast();if(parentPath.isEmpty()){return null;}else{return new DocumentReference(new DocumentKey(parentPath),this.firestore);}},enumerable:true,configurable:true});Object.defineProperty(CollectionReference.prototype,"path",{get:function get(){return this._query.path.canonicalString();},enumerable:true,configurable:true});CollectionReference.prototype.doc=function(pathString){validateBetweenNumberOfArgs('CollectionReference.doc',arguments,0,1);// We allow omission of 'pathString' but explicitly prohibit passing in both
// 'undefined' and 'null'.
if(arguments.length===0){pathString=AutoId.newId();}validateArgType('CollectionReference.doc','non-empty string',1,pathString);if(pathString===''){throw new FirestoreError(Code.INVALID_ARGUMENT,'Document path must be a non-empty string');}var path=ResourcePath.fromString(pathString);return DocumentReference.forPath(this._query.path.child(path),this.firestore,this._converter);};CollectionReference.prototype.add=function(value){validateExactNumberOfArgs('CollectionReference.add',arguments,1);validateArgType('CollectionReference.add','object',1,value);var docRef=this.doc();return docRef.set(value).then(function(){return docRef;});};CollectionReference.prototype.withConverter=function(converter){return new CollectionReference(this._path,this.firestore,converter);};return CollectionReference;}(Query$1);function validateSetOptions(methodName,options){if(options===undefined){return{merge:false};}validateOptionNames(methodName,options,['merge','mergeFields']);validateNamedOptionalType(methodName,'boolean','merge',options.merge);validateOptionalArrayElements(methodName,'mergeFields','a string or a FieldPath',options.mergeFields,function(element){return typeof element==='string'||element instanceof FieldPath$1;});if(options.mergeFields!==undefined&&options.merge!==undefined){throw new FirestoreError(Code.INVALID_ARGUMENT,"Invalid options passed to function "+methodName+"(): You cannot specify both \"merge\" "+"and \"mergeFields\".");}return options;}function validateSnapshotOptions(methodName,options){if(options===undefined){return{};}validateOptionNames(methodName,options,['serverTimestamps']);validateNamedOptionalPropertyEquals(methodName,'options','serverTimestamps',options.serverTimestamps,['estimate','previous','none']);return options;}function validateGetOptions(methodName,options){validateOptionalArgType(methodName,'object',1,options);if(options){validateOptionNames(methodName,options,['source']);validateNamedOptionalPropertyEquals(methodName,'options','source',options.source,['default','server','cache']);}}function validateReference(methodName,documentRef,firestore){if(!(documentRef instanceof DocumentReference)){throw invalidClassError(methodName,'DocumentReference',1,documentRef);}else if(documentRef.firestore!==firestore){throw new FirestoreError(Code.INVALID_ARGUMENT,'Provided document reference is from a different Firestore instance.');}else{return documentRef;}}/**
 * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.
 *
 * Exported for testing.
 */function changesFromSnapshot(firestore,includeMetadataChanges,snapshot,converter){if(snapshot.oldDocs.isEmpty()){// Special case the first snapshot because index calculation is easy and
// fast
var lastDoc_1;var index_1=0;return snapshot.docChanges.map(function(change){var doc=new QueryDocumentSnapshot(firestore,change.doc.key,change.doc,snapshot.fromCache,snapshot.mutatedKeys.has(change.doc.key),converter);assert(change.type===ChangeType.Added,'Invalid event type for first snapshot');assert(!lastDoc_1||snapshot.query.docComparator(lastDoc_1,change.doc)<0,'Got added events in wrong order');lastDoc_1=change.doc;return{type:'added',doc:doc,oldIndex:-1,newIndex:index_1++};});}else{// A DocumentSet that is updated incrementally as changes are applied to use
// to lookup the index of a document.
var indexTracker_1=snapshot.oldDocs;return snapshot.docChanges.filter(function(change){return includeMetadataChanges||change.type!==ChangeType.Metadata;}).map(function(change){var doc=new QueryDocumentSnapshot(firestore,change.doc.key,change.doc,snapshot.fromCache,snapshot.mutatedKeys.has(change.doc.key),converter);var oldIndex=-1;var newIndex=-1;if(change.type!==ChangeType.Added){oldIndex=indexTracker_1.indexOf(change.doc.key);assert(oldIndex>=0,'Index for document not found');indexTracker_1=indexTracker_1.delete(change.doc.key);}if(change.type!==ChangeType.Removed){indexTracker_1=indexTracker_1.add(change.doc);newIndex=indexTracker_1.indexOf(change.doc.key);}return{type:resultChangeType(change.type),doc:doc,oldIndex:oldIndex,newIndex:newIndex};});}}function resultChangeType(type){switch(type){case ChangeType.Added:return'added';case ChangeType.Modified:case ChangeType.Metadata:return'modified';case ChangeType.Removed:return'removed';default:return fail('Unknown change type: '+type);}}/**
 * Converts custom model object of type T into DocumentData by applying the
 * converter if it exists.
 *
 * This function is used when converting user objects to DocumentData
 * because we want to provide the user with a more specific error message if
 * their set() or fails due to invalid data originating from a toFirestore()
 * call.
 */function applyFirestoreDataConverter(converter,value,functionName){var convertedValue;if(converter){convertedValue=converter.toFirestore(value);functionName='toFirestore() in '+functionName;}else{convertedValue=value;}return[convertedValue,functionName];}// Export the classes with a private constructor (it will fail if invoked
// at runtime). Note that this still allows instanceof checks.
// We're treating the variables as class names, so disable checking for lower
// case variable names.
var PublicFirestore=makeConstructorPrivate(Firestore,'Use firebase.firestore() instead.');var PublicTransaction=makeConstructorPrivate(Transaction$1,'Use firebase.firestore().runTransaction() instead.');var PublicWriteBatch=makeConstructorPrivate(WriteBatch,'Use firebase.firestore().batch() instead.');var PublicDocumentReference=makeConstructorPrivate(DocumentReference,'Use firebase.firestore().doc() instead.');var PublicDocumentSnapshot=makeConstructorPrivate(DocumentSnapshot);var PublicQueryDocumentSnapshot=makeConstructorPrivate(QueryDocumentSnapshot);var PublicQuery=makeConstructorPrivate(Query$1);var PublicQuerySnapshot=makeConstructorPrivate(QuerySnapshot);var PublicCollectionReference=makeConstructorPrivate(CollectionReference,'Use firebase.firestore().collection() instead.');/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var firestoreNamespace={Firestore:PublicFirestore,GeoPoint:GeoPoint,Timestamp:Timestamp,Blob:PublicBlob,Transaction:PublicTransaction,WriteBatch:PublicWriteBatch,DocumentReference:PublicDocumentReference,DocumentSnapshot:PublicDocumentSnapshot,Query:PublicQuery,QueryDocumentSnapshot:PublicQueryDocumentSnapshot,QuerySnapshot:PublicQuerySnapshot,CollectionReference:PublicCollectionReference,FieldPath:FieldPath$1,FieldValue:PublicFieldValue,setLogLevel:Firestore.setLogLevel,CACHE_SIZE_UNLIMITED:CACHE_SIZE_UNLIMITED};/**
 * Configures Firestore as part of the Firebase SDK by calling registerService.
 */function configureForFirebase(firebase){firebase.INTERNAL.registerComponent(new component.Component('firestore',function(container){var app=container.getProvider('app').getImmediate();return new Firestore(app,container.getProvider('auth-internal'));},"PUBLIC"/* PUBLIC */).setServiceProps(shallowCopy(firestoreNamespace)));}/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var NoopConnectivityMonitor=/** @class */function(){function NoopConnectivityMonitor(){}NoopConnectivityMonitor.prototype.addCallback=function(callback){// No-op.
};NoopConnectivityMonitor.prototype.shutdown=function(){// No-op.
};return NoopConnectivityMonitor;}();/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$c='ConnectivityMonitor';/**
 * Browser implementation of ConnectivityMonitor.
 */var BrowserConnectivityMonitor=/** @class */function(){function BrowserConnectivityMonitor(){var _this=this;this.networkAvailableListener=function(){return _this.onNetworkAvailable();};this.networkUnavailableListener=function(){return _this.onNetworkUnavailable();};this.callbacks=[];this.configureNetworkMonitoring();}BrowserConnectivityMonitor.prototype.addCallback=function(callback){this.callbacks.push(callback);};BrowserConnectivityMonitor.prototype.shutdown=function(){window.removeEventListener('online',this.networkAvailableListener);window.removeEventListener('offline',this.networkUnavailableListener);};BrowserConnectivityMonitor.prototype.configureNetworkMonitoring=function(){window.addEventListener('online',this.networkAvailableListener);window.addEventListener('offline',this.networkUnavailableListener);};BrowserConnectivityMonitor.prototype.onNetworkAvailable=function(){debug(LOG_TAG$c,'Network connectivity changed: AVAILABLE');for(var _i=0,_a=this.callbacks;_i<_a.length;_i++){var callback=_a[_i];callback(0/* AVAILABLE */);}};BrowserConnectivityMonitor.prototype.onNetworkUnavailable=function(){debug(LOG_TAG$c,'Network connectivity changed: UNAVAILABLE');for(var _i=0,_a=this.callbacks;_i<_a.length;_i++){var callback=_a[_i];callback(1/* UNAVAILABLE */);}};// TODO(chenbrian): Consider passing in window either into this component or
// here for testing via FakeWindow.
/** Checks that all used attributes of window are available. */BrowserConnectivityMonitor.isAvailable=function(){return typeof window!=='undefined'&&window.addEventListener!==undefined&&window.removeEventListener!==undefined;};return BrowserConnectivityMonitor;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Provides a simple helper class that implements the Stream interface to
 * bridge to other implementations that are streams but do not implement the
 * interface. The stream callbacks are invoked with the callOn... methods.
 */var StreamBridge=/** @class */function(){function StreamBridge(args){this.sendFn=args.sendFn;this.closeFn=args.closeFn;}StreamBridge.prototype.onOpen=function(callback){assert(!this.wrappedOnOpen,'Called onOpen on stream twice!');this.wrappedOnOpen=callback;};StreamBridge.prototype.onClose=function(callback){assert(!this.wrappedOnClose,'Called onClose on stream twice!');this.wrappedOnClose=callback;};StreamBridge.prototype.onMessage=function(callback){assert(!this.wrappedOnMessage,'Called onMessage on stream twice!');this.wrappedOnMessage=callback;};StreamBridge.prototype.close=function(){this.closeFn();};StreamBridge.prototype.send=function(msg){this.sendFn(msg);};StreamBridge.prototype.callOnOpen=function(){assert(this.wrappedOnOpen!==undefined,'Cannot call onOpen because no callback was set');this.wrappedOnOpen();};StreamBridge.prototype.callOnClose=function(err){assert(this.wrappedOnClose!==undefined,'Cannot call onClose because no callback was set');this.wrappedOnClose(err);};StreamBridge.prototype.callOnMessage=function(msg){assert(this.wrappedOnMessage!==undefined,'Cannot call onMessage because no callback was set');this.wrappedOnMessage(msg);};return StreamBridge;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_TAG$d='Connection';var RPC_STREAM_SERVICE='google.firestore.v1.Firestore';var RPC_URL_VERSION='v1';/**
 * Maps RPC names to the corresponding REST endpoint name.
 * Uses Object Literal notation to avoid renaming.
 */var RPC_NAME_REST_MAPPING={};RPC_NAME_REST_MAPPING['BatchGetDocuments']='batchGet';RPC_NAME_REST_MAPPING['Commit']='commit';// TODO(b/38203344): The SDK_VERSION is set independently from Firebase because
// we are doing out-of-band releases. Once we release as part of Firebase, we
// should use the Firebase version instead.
var X_GOOG_API_CLIENT_VALUE='gl-js/ fire/'+SDK_VERSION;var XHR_TIMEOUT_SECS=15;var WebChannelConnection=/** @class */function(){function WebChannelConnection(info){this.databaseId=info.databaseId;var proto=info.ssl?'https':'http';this.baseUrl=proto+'://'+info.host;this.forceLongPolling=info.forceLongPolling;}/**
     * Modifies the headers for a request, adding any authorization token if
     * present and any additional headers for the request.
     */WebChannelConnection.prototype.modifyHeadersForRequest=function(headers,token){if(token){for(var header in token.authHeaders){if(token.authHeaders.hasOwnProperty(header)){headers[header]=token.authHeaders[header];}}}headers['X-Goog-Api-Client']=X_GOOG_API_CLIENT_VALUE;};WebChannelConnection.prototype.invokeRPC=function(rpcName,request,token){var _this=this;var url=this.makeUrl(rpcName);return new Promise(function(resolve,reject){var xhr=new webchannelWrapper.XhrIo();xhr.listenOnce(webchannelWrapper.EventType.COMPLETE,function(){try{switch(xhr.getLastErrorCode()){case webchannelWrapper.ErrorCode.NO_ERROR:var json=xhr.getResponseJson();debug(LOG_TAG$d,'XHR received:',JSON.stringify(json));resolve(json);break;case webchannelWrapper.ErrorCode.TIMEOUT:debug(LOG_TAG$d,'RPC "'+rpcName+'" timed out');reject(new FirestoreError(Code.DEADLINE_EXCEEDED,'Request time out'));break;case webchannelWrapper.ErrorCode.HTTP_ERROR:var status_1=xhr.getStatus();debug(LOG_TAG$d,'RPC "'+rpcName+'" failed with status:',status_1,'response text:',xhr.getResponseText());if(status_1>0){var responseError=xhr.getResponseJson().error;if(!!responseError&&!!responseError.status&&!!responseError.message){var firestoreErrorCode=mapCodeFromHttpResponseErrorStatus(responseError.status);reject(new FirestoreError(firestoreErrorCode,responseError.message));}else{reject(new FirestoreError(Code.UNKNOWN,'Server responded with status '+xhr.getStatus()));}}else{// If we received an HTTP_ERROR but there's no status code,
// it's most probably a connection issue
debug(LOG_TAG$d,'RPC "'+rpcName+'" failed');reject(new FirestoreError(Code.UNAVAILABLE,'Connection failed.'));}break;default:fail('RPC "'+rpcName+'" failed with unanticipated '+'webchannel error '+xhr.getLastErrorCode()+': '+xhr.getLastError()+', giving up.');}}finally{debug(LOG_TAG$d,'RPC "'+rpcName+'" completed.');}});// The database field is already encoded in URL. Specifying it again in
// the body is not necessary in production, and will cause duplicate field
// errors in the Firestore Emulator. Let's remove it.
var jsonObj=tslib.__assign({},request);delete jsonObj.database;var requestString=JSON.stringify(jsonObj);debug(LOG_TAG$d,'XHR sending: ',url+' '+requestString);// Content-Type: text/plain will avoid preflight requests which might
// mess with CORS and redirects by proxies. If we add custom headers
// we will need to change this code to potentially use the
// $httpOverwrite parameter supported by ESF to avoid
// triggering preflight requests.
var headers={'Content-Type':'text/plain'};_this.modifyHeadersForRequest(headers,token);xhr.send(url,'POST',requestString,headers,XHR_TIMEOUT_SECS);});};WebChannelConnection.prototype.invokeStreamingRPC=function(rpcName,request,token){// The REST API automatically aggregates all of the streamed results, so we
// can just use the normal invoke() method.
return this.invokeRPC(rpcName,request,token);};WebChannelConnection.prototype.openStream=function(rpcName,token){var urlParts=[this.baseUrl,'/',RPC_STREAM_SERVICE,'/',rpcName,'/channel'];var webchannelTransport=webchannelWrapper.createWebChannelTransport();var request={// Background channel test avoids the initial two test calls and decreases
// initial cold start time.
// TODO(dimond): wenboz@ mentioned this might affect use with proxies and
// we should monitor closely for any reports.
backgroundChannelTest:true,// Required for backend stickiness, routing behavior is based on this
// parameter.
httpSessionIdParam:'gsessionid',initMessageHeaders:{},messageUrlParams:{// This param is used to improve routing and project isolation by the
// backend and must be included in every request.
database:"projects/"+this.databaseId.projectId+"/databases/"+this.databaseId.database},sendRawJson:true,supportsCrossDomainXhr:true,internalChannelParams:{// Override the default timeout (randomized between 10-20 seconds) since
// a large write batch on a slow internet connection may take a long
// time to send to the backend. Rather than have WebChannel impose a
// tight timeout which could lead to infinite timeouts and retries, we
// set it very large (5-10 minutes) and rely on the browser's builtin
// timeouts to kick in if the request isn't working.
forwardChannelRequestTimeoutMs:10*60*1000},forceLongPolling:this.forceLongPolling};this.modifyHeadersForRequest(request.initMessageHeaders,token);// Sending the custom headers we just added to request.initMessageHeaders
// (Authorization, etc.) will trigger the browser to make a CORS preflight
// request because the XHR will no longer meet the criteria for a "simple"
// CORS request:
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
//
// Therefore to avoid the CORS preflight request (an extra network
// roundtrip), we use the httpHeadersOverwriteParam option to specify that
// the headers should instead be encoded into a special "$httpHeaders" query
// parameter, which is recognized by the webchannel backend. This is
// formally defined here:
// https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32
//
// But for some unclear reason (see
// https://github.com/firebase/firebase-js-sdk/issues/703), this breaks
// ReactNative and so we exclude it, which just means ReactNative may be
// subject to the extra network roundtrip for CORS preflight.
if(!util.isReactNative()){request.httpHeadersOverwriteParam='$httpHeaders';}var url=urlParts.join('');debug(LOG_TAG$d,'Creating WebChannel: '+url+' '+request);var channel=webchannelTransport.createWebChannel(url,request);// WebChannel supports sending the first message with the handshake - saving
// a network round trip. However, it will have to call send in the same
// JS event loop as open. In order to enforce this, we delay actually
// opening the WebChannel until send is called. Whether we have called
// open is tracked with this variable.
var opened=false;// A flag to determine whether the stream was closed (by us or through an
// error/close event) to avoid delivering multiple close events or sending
// on a closed stream
var closed=false;var streamBridge=new StreamBridge({sendFn:function sendFn(msg){if(!closed){if(!opened){debug(LOG_TAG$d,'Opening WebChannel transport.');channel.open();opened=true;}debug(LOG_TAG$d,'WebChannel sending:',msg);channel.send(msg);}else{debug(LOG_TAG$d,'Not sending because WebChannel is closed:',msg);}},closeFn:function closeFn(){return channel.close();}});// Closure events are guarded and exceptions are swallowed, so catch any
// exception and rethrow using a setTimeout so they become visible again.
// Note that eventually this function could go away if we are confident
// enough the code is exception free.
var unguardedEventListen=function unguardedEventListen(type,fn){// TODO(dimond): closure typing seems broken because WebChannel does
// not implement goog.events.Listenable
channel.listen(type,function(param){try{fn(param);}catch(e){setTimeout(function(){throw e;},0);}});};unguardedEventListen(webchannelWrapper.WebChannel.EventType.OPEN,function(){if(!closed){debug(LOG_TAG$d,'WebChannel transport opened.');}});unguardedEventListen(webchannelWrapper.WebChannel.EventType.CLOSE,function(){if(!closed){closed=true;debug(LOG_TAG$d,'WebChannel transport closed');streamBridge.callOnClose();}});unguardedEventListen(webchannelWrapper.WebChannel.EventType.ERROR,function(err){if(!closed){closed=true;debug(LOG_TAG$d,'WebChannel transport errored:',err);streamBridge.callOnClose(new FirestoreError(Code.UNAVAILABLE,'The operation could not be completed'));}});unguardedEventListen(webchannelWrapper.WebChannel.EventType.MESSAGE,function(msg){var _a;if(!closed){var msgData=msg.data[0];assert(!!msgData,'Got a webchannel message without data.');// TODO(b/35143891): There is a bug in One Platform that caused errors
// (and only errors) to be wrapped in an extra array. To be forward
// compatible with the bug we need to check either condition. The latter
// can be removed once the fix has been rolled out.
// Use any because msgData.error is not typed.
var msgDataOrError=msgData;var error=msgDataOrError.error||((_a=msgDataOrError[0])===null||_a===void 0?void 0:_a.error);if(error){debug(LOG_TAG$d,'WebChannel received error:',error);// error.status will be a string like 'OK' or 'NOT_FOUND'.
var status_2=error.status;var code=mapCodeFromRpcStatus(status_2);var message=error.message;if(code===undefined){code=Code.INTERNAL;message='Unknown error status: '+status_2+' with message '+error.message;}// Mark closed so no further events are propagated
closed=true;streamBridge.callOnClose(new FirestoreError(code,message));channel.close();}else{debug(LOG_TAG$d,'WebChannel received:',msgData);streamBridge.callOnMessage(msgData);}}});setTimeout(function(){// Technically we could/should wait for the WebChannel opened event,
// but because we want to send the first message with the WebChannel
// handshake we pretend the channel opened here (asynchronously), and
// then delay the actual open until the first message is sent.
streamBridge.callOnOpen();},0);return streamBridge;};// visible for testing
WebChannelConnection.prototype.makeUrl=function(rpcName){var urlRpcName=RPC_NAME_REST_MAPPING[rpcName];assert(urlRpcName!==undefined,'Unknown REST mapping for: '+rpcName);return this.baseUrl+'/'+RPC_URL_VERSION+'/projects/'+this.databaseId.projectId+'/databases/'+this.databaseId.database+'/documents:'+urlRpcName;};return WebChannelConnection;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var BrowserPlatform=/** @class */function(){function BrowserPlatform(){this.emptyByteString='';this.base64Available=typeof atob!=='undefined';}Object.defineProperty(BrowserPlatform.prototype,"document",{get:function get(){return typeof document!=='undefined'?document:null;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatform.prototype,"window",{get:function get(){return typeof window!=='undefined'?window:null;},enumerable:true,configurable:true});BrowserPlatform.prototype.loadConnection=function(databaseInfo){return Promise.resolve(new WebChannelConnection(databaseInfo));};BrowserPlatform.prototype.newConnectivityMonitor=function(){if(BrowserConnectivityMonitor.isAvailable()){return new BrowserConnectivityMonitor();}else{return new NoopConnectivityMonitor();}};BrowserPlatform.prototype.newSerializer=function(databaseId){return new JsonProtoSerializer(databaseId,{useProto3Json:true});};BrowserPlatform.prototype.formatJSON=function(value){return JSON.stringify(value);};BrowserPlatform.prototype.atob=function(encoded){return atob(encoded);};BrowserPlatform.prototype.btoa=function(raw){return btoa(raw);};return BrowserPlatform;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * This code needs to run before Firestore is used. This can be achieved in
 * several ways:
 *   1) Through the JSCompiler compiling this code and then (automatically)
 *      executing it before exporting the Firestore symbols.
 *   2) Through importing this module first in a Firestore main module
 */PlatformSupport.setPlatform(new BrowserPlatform());var name="@firebase/firestore";var version="1.9.1";/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function registerFirestore(instance){configureForFirebase(instance);instance.registerVersion(name,version);}registerFirestore(firebase);exports.registerFirestore=registerFirestore;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(140)))

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export registerStorage */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_app__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_component__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__firebase_component__);



/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Constants used in the Firebase Storage library.
 */

/**
 * Domain name for firebase storage.
 */

var DEFAULT_HOST = 'firebasestorage.googleapis.com';
/**
 * The key in Firebase config json for the storage bucket.
 */

var CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';
/**
 * 2 minutes
 *
 * The timeout for all operations except upload.
 */

var DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;
/**
 * 10 minutes
 *
 * The timeout for upload.
 */

var DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;
/**
 * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported
 * enough for us to use it directly.
 */

var MIN_SAFE_INTEGER = -9007199254740991;
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var FirebaseStorageError =
/** @class */
function () {
  function FirebaseStorageError(code, message) {
    this.code_ = prependCode(code);
    this.message_ = 'Firebase Storage: ' + message;
    this.serverResponse_ = null;
    this.name_ = 'FirebaseError';
  }

  FirebaseStorageError.prototype.codeProp = function () {
    return this.code;
  };

  FirebaseStorageError.prototype.codeEquals = function (code) {
    return prependCode(code) === this.codeProp();
  };

  FirebaseStorageError.prototype.serverResponseProp = function () {
    return this.serverResponse_;
  };

  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {
    this.serverResponse_ = serverResponse;
  };

  Object.defineProperty(FirebaseStorageError.prototype, "name", {
    get: function get() {
      return this.name_;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FirebaseStorageError.prototype, "code", {
    get: function get() {
      return this.code_;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FirebaseStorageError.prototype, "message", {
    get: function get() {
      return this.message_;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FirebaseStorageError.prototype, "serverResponse", {
    get: function get() {
      return this.serverResponse_;
    },
    enumerable: true,
    configurable: true
  });
  return FirebaseStorageError;
}();

var Code = {
  // Shared between all platforms
  UNKNOWN: 'unknown',
  OBJECT_NOT_FOUND: 'object-not-found',
  BUCKET_NOT_FOUND: 'bucket-not-found',
  PROJECT_NOT_FOUND: 'project-not-found',
  QUOTA_EXCEEDED: 'quota-exceeded',
  UNAUTHENTICATED: 'unauthenticated',
  UNAUTHORIZED: 'unauthorized',
  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',
  INVALID_CHECKSUM: 'invalid-checksum',
  CANCELED: 'canceled',
  // JS specific
  INVALID_EVENT_NAME: 'invalid-event-name',
  INVALID_URL: 'invalid-url',
  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',
  NO_DEFAULT_BUCKET: 'no-default-bucket',
  CANNOT_SLICE_BLOB: 'cannot-slice-blob',
  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',
  NO_DOWNLOAD_URL: 'no-download-url',
  INVALID_ARGUMENT: 'invalid-argument',
  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',
  APP_DELETED: 'app-deleted',
  INVALID_ROOT_OPERATION: 'invalid-root-operation',
  INVALID_FORMAT: 'invalid-format',
  INTERNAL_ERROR: 'internal-error'
};

function prependCode(code) {
  return 'storage/' + code;
}

function unknown() {
  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';
  return new FirebaseStorageError(Code.UNKNOWN, message);
}

function objectNotFound(path) {
  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, "Object '" + path + "' does not exist.");
}

function quotaExceeded(bucket) {
  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, "Quota for bucket '" + bucket + "' exceeded, please view quota on " + 'https://firebase.google.com/pricing/.');
}

function unauthenticated() {
  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';
  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);
}

function unauthorized(path) {
  return new FirebaseStorageError(Code.UNAUTHORIZED, "User does not have permission to access '" + path + "'.");
}

function retryLimitExceeded() {
  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');
}

function canceled() {
  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');
}

function invalidUrl(url) {
  return new FirebaseStorageError(Code.INVALID_URL, "Invalid URL '" + url + "'.");
}

function invalidDefaultBucket(bucket) {
  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, "Invalid default bucket '" + bucket + "'.");
}

function noDefaultBucket() {
  return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + "found. Did you set the '" + CONFIG_STORAGE_BUCKET_KEY + "' property when initializing the app?");
}

function cannotSliceBlob() {
  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');
}

function serverFileWrongSize() {
  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');
}

function noDownloadURL() {
  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');
}

function invalidArgument(index, fnName, message) {
  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);
}

function invalidArgumentCount(argMin, argMax, fnName, real) {
  var countPart;
  var plural;

  if (argMin === argMax) {
    countPart = argMin;
    plural = argMin === 1 ? 'argument' : 'arguments';
  } else {
    countPart = 'between ' + argMin + ' and ' + argMax;
    plural = 'arguments';
  }

  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');
}

function appDeleted() {
  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');
}
/**
 * @param name The name of the operation that was invalid.
 */


function invalidRootOperation(name) {
  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, "The operation '" + name + "' cannot be performed on a root reference, create a non-root " + "reference using child, such as .child('file.png').");
}
/**
 * @param format The format that was not valid.
 * @param message A message describing the format violation.
 */


function invalidFormat(format, message) {
  return new FirebaseStorageError(Code.INVALID_FORMAT, "String does not match format '" + format + "': " + message);
}
/**
 * @param message A message describing the internal error.
 */


function internalError(message) {
  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var StringFormat = {
  RAW: 'raw',
  BASE64: 'base64',
  BASE64URL: 'base64url',
  DATA_URL: 'data_url'
};

function formatValidator(stringFormat) {
  switch (stringFormat) {
    case StringFormat.RAW:
    case StringFormat.BASE64:
    case StringFormat.BASE64URL:
    case StringFormat.DATA_URL:
      return;

    default:
      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';
  }
}
/**
 * @struct
 */


var StringData =
/** @class */
function () {
  function StringData(data, contentType) {
    this.data = data;
    this.contentType = contentType || null;
  }

  return StringData;
}();

function dataFromString(format, stringData) {
  switch (format) {
    case StringFormat.RAW:
      return new StringData(utf8Bytes_(stringData));

    case StringFormat.BASE64:
    case StringFormat.BASE64URL:
      return new StringData(base64Bytes_(format, stringData));

    case StringFormat.DATA_URL:
      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));
    // do nothing
  } // assert(false);


  throw unknown();
}

function utf8Bytes_(value) {
  var b = [];

  for (var i = 0; i < value.length; i++) {
    var c = value.charCodeAt(i);

    if (c <= 127) {
      b.push(c);
    } else {
      if (c <= 2047) {
        b.push(192 | c >> 6, 128 | c & 63);
      } else {
        if ((c & 64512) === 55296) {
          // The start of a surrogate pair.
          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;

          if (!valid) {
            // The second surrogate wasn't there.
            b.push(239, 191, 189);
          } else {
            var hi = c;
            var lo = value.charCodeAt(++i);
            c = 65536 | (hi & 1023) << 10 | lo & 1023;
            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);
          }
        } else {
          if ((c & 64512) === 56320) {
            // Invalid low surrogate.
            b.push(239, 191, 189);
          } else {
            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);
          }
        }
      }
    }
  }

  return new Uint8Array(b);
}

function percentEncodedBytes_(value) {
  var decoded;

  try {
    decoded = decodeURIComponent(value);
  } catch (e) {
    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');
  }

  return utf8Bytes_(decoded);
}

function base64Bytes_(format, value) {
  switch (format) {
    case StringFormat.BASE64:
      {
        var hasMinus = value.indexOf('-') !== -1;
        var hasUnder = value.indexOf('_') !== -1;

        if (hasMinus || hasUnder) {
          var invalidChar = hasMinus ? '-' : '_';
          throw invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64url encoded?");
        }

        break;
      }

    case StringFormat.BASE64URL:
      {
        var hasPlus = value.indexOf('+') !== -1;
        var hasSlash = value.indexOf('/') !== -1;

        if (hasPlus || hasSlash) {
          var invalidChar = hasPlus ? '+' : '/';
          throw invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64 encoded?");
        }

        value = value.replace(/-/g, '+').replace(/_/g, '/');
        break;
      }
    // do nothing
  }

  var bytes;

  try {
    bytes = atob(value);
  } catch (e) {
    throw invalidFormat(format, 'Invalid character found');
  }

  var array = new Uint8Array(bytes.length);

  for (var i = 0; i < bytes.length; i++) {
    array[i] = bytes.charCodeAt(i);
  }

  return array;
}
/**
 * @struct
 */


var DataURLParts =
/** @class */
function () {
  function DataURLParts(dataURL) {
    this.base64 = false;
    this.contentType = null;
    var matches = dataURL.match(/^data:([^,]+)?,/);

    if (matches === null) {
      throw invalidFormat(StringFormat.DATA_URL, "Must be formatted 'data:[<mediatype>][;base64],<data>");
    }

    var middle = matches[1] || null;

    if (middle != null) {
      this.base64 = endsWith(middle, ';base64');
      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;
    }

    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);
  }

  return DataURLParts;
}();

function dataURLBytes_(dataUrl) {
  var parts = new DataURLParts(dataUrl);

  if (parts.base64) {
    return base64Bytes_(StringFormat.BASE64, parts.rest);
  } else {
    return percentEncodedBytes_(parts.rest);
  }
}

function dataURLContentType_(dataUrl) {
  var parts = new DataURLParts(dataUrl);
  return parts.contentType;
}

function endsWith(s, end) {
  var longEnough = s.length >= end.length;

  if (!longEnough) {
    return false;
  }

  return s.substring(s.length - end.length) === end;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var TaskEvent = {
  /** Triggered whenever the task changes or progress is updated. */
  STATE_CHANGED: 'state_changed'
};
var InternalTaskState = {
  RUNNING: 'running',
  PAUSING: 'pausing',
  PAUSED: 'paused',
  SUCCESS: 'success',
  CANCELING: 'canceling',
  CANCELED: 'canceled',
  ERROR: 'error'
};
var TaskState = {
  /** The task is currently transferring data. */
  RUNNING: 'running',

  /** The task was paused by the user. */
  PAUSED: 'paused',

  /** The task completed successfully. */
  SUCCESS: 'success',

  /** The task was canceled. */
  CANCELED: 'canceled',

  /** The task failed with an error. */
  ERROR: 'error'
};

function taskStateFromInternalTaskState(state) {
  switch (state) {
    case InternalTaskState.RUNNING:
    case InternalTaskState.PAUSING:
    case InternalTaskState.CANCELING:
      return TaskState.RUNNING;

    case InternalTaskState.PAUSED:
      return TaskState.PAUSED;

    case InternalTaskState.SUCCESS:
      return TaskState.SUCCESS;

    case InternalTaskState.CANCELED:
      return TaskState.CANCELED;

    case InternalTaskState.ERROR:
      return TaskState.ERROR;

    default:
      // TODO(andysoto): assert(false);
      return TaskState.ERROR;
  }
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @return False if the object is undefined or null, true otherwise.
 */


function isDef(p) {
  return p != null;
}

function isJustDef(p) {
  return p !== void 0;
}

function isFunction(p) {
  return typeof p === 'function';
}

function isObject(p) {
  return typeof p === 'object';
}

function isNonNullObject(p) {
  return isObject(p) && p !== null;
}

function isNonArrayObject(p) {
  return isObject(p) && !Array.isArray(p);
}

function isString(p) {
  return typeof p === 'string' || p instanceof String;
}

function isInteger(p) {
  return isNumber(p) && Number.isInteger(p);
}

function isNumber(p) {
  return typeof p === 'number' || p instanceof Number;
}

function isNativeBlob(p) {
  return isNativeBlobDefined() && p instanceof Blob;
}

function isNativeBlobDefined() {
  return typeof Blob !== 'undefined';
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @enum{number}
 */


var ErrorCode;

(function (ErrorCode) {
  ErrorCode[ErrorCode["NO_ERROR"] = 0] = "NO_ERROR";
  ErrorCode[ErrorCode["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
  ErrorCode[ErrorCode["ABORT"] = 2] = "ABORT";
})(ErrorCode || (ErrorCode = {}));
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and
 * doesn't work in React Native on Android.
 */


var NetworkXhrIo =
/** @class */
function () {
  function NetworkXhrIo() {
    var _this = this;

    this.sent_ = false;
    this.xhr_ = new XMLHttpRequest();
    this.errorCode_ = ErrorCode.NO_ERROR;
    this.sendPromise_ = new Promise(function (resolve) {
      _this.xhr_.addEventListener('abort', function () {
        _this.errorCode_ = ErrorCode.ABORT;
        resolve(_this);
      });

      _this.xhr_.addEventListener('error', function () {
        _this.errorCode_ = ErrorCode.NETWORK_ERROR;
        resolve(_this);
      });

      _this.xhr_.addEventListener('load', function () {
        resolve(_this);
      });
    });
  }
  /**
   * @override
   */


  NetworkXhrIo.prototype.send = function (url, method, body, headers) {
    if (this.sent_) {
      throw internalError('cannot .send() more than once');
    }

    this.sent_ = true;
    this.xhr_.open(method, url, true);

    if (isDef(headers)) {
      for (var key in headers) {
        if (headers.hasOwnProperty(key)) {
          this.xhr_.setRequestHeader(key, headers[key].toString());
        }
      }
    }

    if (isDef(body)) {
      this.xhr_.send(body);
    } else {
      this.xhr_.send();
    }

    return this.sendPromise_;
  };
  /**
   * @override
   */


  NetworkXhrIo.prototype.getErrorCode = function () {
    if (!this.sent_) {
      throw internalError('cannot .getErrorCode() before sending');
    }

    return this.errorCode_;
  };
  /**
   * @override
   */


  NetworkXhrIo.prototype.getStatus = function () {
    if (!this.sent_) {
      throw internalError('cannot .getStatus() before sending');
    }

    try {
      return this.xhr_.status;
    } catch (e) {
      return -1;
    }
  };
  /**
   * @override
   */


  NetworkXhrIo.prototype.getResponseText = function () {
    if (!this.sent_) {
      throw internalError('cannot .getResponseText() before sending');
    }

    return this.xhr_.responseText;
  };
  /**
   * Aborts the request.
   * @override
   */


  NetworkXhrIo.prototype.abort = function () {
    this.xhr_.abort();
  };
  /**
   * @override
   */


  NetworkXhrIo.prototype.getResponseHeader = function (header) {
    return this.xhr_.getResponseHeader(header);
  };
  /**
   * @override
   */


  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {
    if (isDef(this.xhr_.upload)) {
      this.xhr_.upload.addEventListener('progress', listener);
    }
  };
  /**
   * @override
   */


  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {
    if (isDef(this.xhr_.upload)) {
      this.xhr_.upload.removeEventListener('progress', listener);
    }
  };

  return NetworkXhrIo;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Factory-like class for creating XhrIo instances.
 */


var XhrIoPool =
/** @class */
function () {
  function XhrIoPool() {}

  XhrIoPool.prototype.createXhrIo = function () {
    return new NetworkXhrIo();
  };

  return XhrIoPool;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function getBlobBuilder() {
  if (typeof BlobBuilder !== 'undefined') {
    return BlobBuilder;
  } else if (typeof WebKitBlobBuilder !== 'undefined') {
    return WebKitBlobBuilder;
  } else {
    return undefined;
  }
}
/**
 * Concatenates one or more values together and converts them to a Blob.
 *
 * @param args The values that will make up the resulting blob.
 * @return The blob.
 */


function getBlob() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var BlobBuilder = getBlobBuilder();

  if (BlobBuilder !== undefined) {
    var bb = new BlobBuilder();

    for (var i = 0; i < args.length; i++) {
      bb.append(args[i]);
    }

    return bb.getBlob();
  } else {
    if (isNativeBlobDefined()) {
      return new Blob(args);
    } else {
      throw Error("This browser doesn't seem to support creating Blobs");
    }
  }
}
/**
 * Slices the blob. The returned blob contains data from the start byte
 * (inclusive) till the end byte (exclusive). Negative indices cannot be used.
 *
 * @param blob The blob to be sliced.
 * @param start Index of the starting byte.
 * @param end Index of the ending byte.
 * @return The blob slice or null if not supported.
 */


function sliceBlob(blob, start, end) {
  if (blob.webkitSlice) {
    return blob.webkitSlice(start, end);
  } else if (blob.mozSlice) {
    return blob.mozSlice(start, end);
  } else if (blob.slice) {
    return blob.slice(start, end);
  }

  return null;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @param opt_elideCopy If true, doesn't copy mutable input data
 *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be
 *     modified after this blob's construction.
 */


var FbsBlob =
/** @class */
function () {
  function FbsBlob(data, elideCopy) {
    var size = 0;
    var blobType = '';

    if (isNativeBlob(data)) {
      this.data_ = data;
      size = data.size;
      blobType = data.type;
    } else if (data instanceof ArrayBuffer) {
      if (elideCopy) {
        this.data_ = new Uint8Array(data);
      } else {
        this.data_ = new Uint8Array(data.byteLength);
        this.data_.set(new Uint8Array(data));
      }

      size = this.data_.length;
    } else if (data instanceof Uint8Array) {
      if (elideCopy) {
        this.data_ = data;
      } else {
        this.data_ = new Uint8Array(data.length);
        this.data_.set(data);
      }

      size = data.length;
    }

    this.size_ = size;
    this.type_ = blobType;
  }

  FbsBlob.prototype.size = function () {
    return this.size_;
  };

  FbsBlob.prototype.type = function () {
    return this.type_;
  };

  FbsBlob.prototype.slice = function (startByte, endByte) {
    if (isNativeBlob(this.data_)) {
      var realBlob = this.data_;
      var sliced = sliceBlob(realBlob, startByte, endByte);

      if (sliced === null) {
        return null;
      }

      return new FbsBlob(sliced);
    } else {
      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);
      return new FbsBlob(slice, true);
    }
  };

  FbsBlob.getBlob = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    if (isNativeBlobDefined()) {
      var blobby = args.map(function (val) {
        if (val instanceof FbsBlob) {
          return val.data_;
        } else {
          return val;
        }
      });
      return new FbsBlob(getBlob.apply(null, blobby));
    } else {
      var uint8Arrays = args.map(function (val) {
        if (isString(val)) {
          return dataFromString(StringFormat.RAW, val).data;
        } else {
          // Blobs don't exist, so this has to be a Uint8Array.
          return val.data_;
        }
      });
      var finalLength_1 = 0;
      uint8Arrays.forEach(function (array) {
        finalLength_1 += array.byteLength;
      });
      var merged_1 = new Uint8Array(finalLength_1);
      var index_1 = 0;
      uint8Arrays.forEach(function (array) {
        for (var i = 0; i < array.length; i++) {
          merged_1[index_1++] = array[i];
        }
      });
      return new FbsBlob(merged_1, true);
    }
  };

  FbsBlob.prototype.uploadData = function () {
    return this.data_;
  };

  return FbsBlob;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @struct
 */


var Location =
/** @class */
function () {
  function Location(bucket, path) {
    this.bucket = bucket;
    this.path_ = path;
  }

  Object.defineProperty(Location.prototype, "path", {
    get: function get() {
      return this.path_;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Location.prototype, "isRoot", {
    get: function get() {
      return this.path.length === 0;
    },
    enumerable: true,
    configurable: true
  });

  Location.prototype.fullServerUrl = function () {
    var encode = encodeURIComponent;
    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);
  };

  Location.prototype.bucketOnlyServerUrl = function () {
    var encode = encodeURIComponent;
    return '/b/' + encode(this.bucket) + '/o';
  };

  Location.makeFromBucketSpec = function (bucketString) {
    var bucketLocation;

    try {
      bucketLocation = Location.makeFromUrl(bucketString);
    } catch (e) {
      // Not valid URL, use as-is. This lets you put bare bucket names in
      // config.
      return new Location(bucketString, '');
    }

    if (bucketLocation.path === '') {
      return bucketLocation;
    } else {
      throw invalidDefaultBucket(bucketString);
    }
  };

  Location.makeFromUrl = function (url) {
    var location = null;
    var bucketDomain = '([A-Za-z0-9.\\-_]+)';

    function gsModify(loc) {
      if (loc.path.charAt(loc.path.length - 1) === '/') {
        loc.path_ = loc.path_.slice(0, -1);
      }
    }

    var gsPath = '(/(.*))?$';
    var path = '(/([^?#]*).*)?$';
    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');
    var gsIndices = {
      bucket: 1,
      path: 3
    };

    function httpModify(loc) {
      loc.path_ = decodeURIComponent(loc.path);
    }

    var version = 'v[A-Za-z0-9_]+';
    var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\.');
    var httpRegex = new RegExp("^https?://" + hostRegex + "/" + version + "/b/" + bucketDomain + "/o" + path, 'i');
    var httpIndices = {
      bucket: 1,
      path: 3
    };
    var groups = [{
      regex: gsRegex,
      indices: gsIndices,
      postModify: gsModify
    }, {
      regex: httpRegex,
      indices: httpIndices,
      postModify: httpModify
    }];

    for (var i = 0; i < groups.length; i++) {
      var group = groups[i];
      var captures = group.regex.exec(url);

      if (captures) {
        var bucketValue = captures[group.indices.bucket];
        var pathValue = captures[group.indices.path];

        if (!pathValue) {
          pathValue = '';
        }

        location = new Location(bucketValue, pathValue);
        group.postModify(location);
        break;
      }
    }

    if (location == null) {
      throw invalidUrl(url);
    }

    return location;
  };

  return Location;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns the Object resulting from parsing the given JSON, or null if the
 * given string does not represent a JSON object.
 */


function jsonObjectOrNull(s) {
  var obj;

  try {
    obj = JSON.parse(s);
  } catch (e) {
    return null;
  }

  if (isNonArrayObject(obj)) {
    return obj;
  } else {
    return null;
  }
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Contains helper methods for manipulating paths.
 */

/**
 * @return Null if the path is already at the root.
 */


function parent(path) {
  if (path.length === 0) {
    return null;
  }

  var index = path.lastIndexOf('/');

  if (index === -1) {
    return '';
  }

  var newPath = path.slice(0, index);
  return newPath;
}

function child(path, childPath) {
  var canonicalChildPath = childPath.split('/').filter(function (component) {
    return component.length > 0;
  }).join('/');

  if (path.length === 0) {
    return canonicalChildPath;
  } else {
    return path + '/' + canonicalChildPath;
  }
}
/**
 * Returns the last component of a path.
 * '/foo/bar' -> 'bar'
 * '/foo/bar/baz/' -> 'baz/'
 * '/a' -> 'a'
 */


function lastComponent(path) {
  var index = path.lastIndexOf('/', path.length - 2);

  if (index === -1) {
    return path;
  } else {
    return path.slice(index + 1);
  }
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function makeUrl(urlPart) {
  return "https://" + DEFAULT_HOST + "/v0" + urlPart;
}

function makeQueryString(params) {
  var encode = encodeURIComponent;
  var queryPart = '?';

  for (var key in params) {
    if (params.hasOwnProperty(key)) {
      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x
      var nextPart = encode(key) + '=' + encode(params[key]);
      queryPart = queryPart + nextPart + '&';
    }
  } // Chop off the extra '&' or '?' on the end


  queryPart = queryPart.slice(0, -1);
  return queryPart;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function noXform_(metadata, value) {
  return value;
}
/**
 * @struct
 */


var Mapping =
/** @class */
function () {
  function Mapping(server, local, writable, xform) {
    this.server = server;
    this.local = local || server;
    this.writable = !!writable;
    this.xform = xform || noXform_;
  }

  return Mapping;
}();

var mappings_ = null;

function xformPath(fullPath) {
  if (!isString(fullPath) || fullPath.length < 2) {
    return fullPath;
  } else {
    return lastComponent(fullPath);
  }
}

function getMappings() {
  if (mappings_) {
    return mappings_;
  }

  var mappings = [];
  mappings.push(new Mapping('bucket'));
  mappings.push(new Mapping('generation'));
  mappings.push(new Mapping('metageneration'));
  mappings.push(new Mapping('name', 'fullPath', true));

  function mappingsXformPath(_metadata, fullPath) {
    return xformPath(fullPath);
  }

  var nameMapping = new Mapping('name');
  nameMapping.xform = mappingsXformPath;
  mappings.push(nameMapping);
  /**
   * Coerces the second param to a number, if it is defined.
   */

  function xformSize(_metadata, size) {
    if (isDef(size)) {
      return Number(size);
    } else {
      return size;
    }
  }

  var sizeMapping = new Mapping('size');
  sizeMapping.xform = xformSize;
  mappings.push(sizeMapping);
  mappings.push(new Mapping('timeCreated'));
  mappings.push(new Mapping('updated'));
  mappings.push(new Mapping('md5Hash', null, true));
  mappings.push(new Mapping('cacheControl', null, true));
  mappings.push(new Mapping('contentDisposition', null, true));
  mappings.push(new Mapping('contentEncoding', null, true));
  mappings.push(new Mapping('contentLanguage', null, true));
  mappings.push(new Mapping('contentType', null, true));
  mappings.push(new Mapping('metadata', 'customMetadata', true));
  mappings_ = mappings;
  return mappings_;
}

function addRef(metadata, authWrapper) {
  function generateRef() {
    var bucket = metadata['bucket'];
    var path = metadata['fullPath'];
    var loc = new Location(bucket, path);
    return authWrapper.makeStorageReference(loc);
  }

  Object.defineProperty(metadata, 'ref', {
    get: generateRef
  });
}

function fromResource(authWrapper, resource, mappings) {
  var metadata = {};
  metadata['type'] = 'file';
  var len = mappings.length;

  for (var i = 0; i < len; i++) {
    var mapping = mappings[i];
    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);
  }

  addRef(metadata, authWrapper);
  return metadata;
}

function fromResourceString(authWrapper, resourceString, mappings) {
  var obj = jsonObjectOrNull(resourceString);

  if (obj === null) {
    return null;
  }

  var resource = obj;
  return fromResource(authWrapper, resource, mappings);
}

function downloadUrlFromResourceString(metadata, resourceString) {
  var obj = jsonObjectOrNull(resourceString);

  if (obj === null) {
    return null;
  }

  if (!isString(obj['downloadTokens'])) {
    // This can happen if objects are uploaded through GCS and retrieved
    // through list, so we don't want to throw an Error.
    return null;
  }

  var tokens = obj['downloadTokens'];

  if (tokens.length === 0) {
    return null;
  }

  var encode = encodeURIComponent;
  var tokensList = tokens.split(',');
  var urls = tokensList.map(function (token) {
    var bucket = metadata['bucket'];
    var path = metadata['fullPath'];
    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);
    var base = makeUrl(urlPart);
    var queryString = makeQueryString({
      alt: 'media',
      token: token
    });
    return base + queryString;
  });
  return urls[0];
}

function toResourceString(metadata, mappings) {
  var resource = {};
  var len = mappings.length;

  for (var i = 0; i < len; i++) {
    var mapping = mappings[i];

    if (mapping.writable) {
      resource[mapping.server] = metadata[mapping.local];
    }
  }

  return JSON.stringify(resource);
}

function metadataValidator(p) {
  if (!isObject(p) || !p) {
    throw 'Expected Metadata object.';
  }

  for (var key in p) {
    if (p.hasOwnProperty(key)) {
      var val = p[key];

      if (key === 'customMetadata') {
        if (!isObject(val)) {
          throw 'Expected object for \'customMetadata\' mapping.';
        }
      } else {
        if (isNonNullObject(val)) {
          throw "Mapping for '" + key + "' cannot be an object.";
        }
      }
    }
  }
}
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var MAX_RESULTS_KEY = 'maxResults';
var MAX_MAX_RESULTS = 1000;
var PAGE_TOKEN_KEY = 'pageToken';
var PREFIXES_KEY = 'prefixes';
var ITEMS_KEY = 'items';

function fromBackendResponse(authWrapper, resource) {
  var listResult = {
    prefixes: [],
    items: [],
    nextPageToken: resource['nextPageToken']
  };
  var bucket = authWrapper.bucket();

  if (bucket === null) {
    throw noDefaultBucket();
  }

  if (resource[PREFIXES_KEY]) {
    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {
      var path = _a[_i];
      var pathWithoutTrailingSlash = path.replace(/\/$/, '');
      var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));
      listResult.prefixes.push(reference);
    }
  }

  if (resource[ITEMS_KEY]) {
    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {
      var item = _c[_b];
      var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));
      listResult.items.push(reference);
    }
  }

  return listResult;
}

function fromResponseString(authWrapper, resourceString) {
  var obj = jsonObjectOrNull(resourceString);

  if (obj === null) {
    return null;
  }

  var resource = obj;
  return fromBackendResponse(authWrapper, resource);
}

function listOptionsValidator(p) {
  if (!isObject(p) || !p) {
    throw 'Expected ListOptions object.';
  }

  for (var key in p) {
    if (key === MAX_RESULTS_KEY) {
      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {
        throw 'Expected maxResults to be a positive number.';
      }

      if (p[MAX_RESULTS_KEY] > 1000) {
        throw "Expected maxResults to be less than or equal to " + MAX_MAX_RESULTS + ".";
      }
    } else if (key === PAGE_TOKEN_KEY) {
      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {
        throw 'Expected pageToken to be string.';
      }
    } else {
      throw 'Unknown option: ' + key;
    }
  }
}

var RequestInfo =
/** @class */
function () {
  function RequestInfo(url, method,
  /**
   * Returns the value with which to resolve the request's promise. Only called
   * if the request is successful. Throw from this function to reject the
   * returned Request's promise with the thrown error.
   * Note: The XhrIo passed to this function may be reused after this callback
   * returns. Do not keep a reference to it in any way.
   */
  handler, timeout) {
    this.url = url;
    this.method = method;
    this.handler = handler;
    this.timeout = timeout;
    this.urlParams = {};
    this.headers = {};
    this.body = null;
    this.errorHandler = null;
    /**
     * Called with the current number of bytes uploaded and total size (-1 if not
     * computable) of the request body (i.e. used to report upload progress).
     */

    this.progressCallback = null;
    this.successCodes = [200];
    this.additionalRetryCodes = [];
  }

  return RequestInfo;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Throws the UNKNOWN FirebaseStorageError if cndn is false.
 */


function handlerCheck(cndn) {
  if (!cndn) {
    throw unknown();
  }
}

function metadataHandler(authWrapper, mappings) {
  function handler(xhr, text) {
    var metadata = fromResourceString(authWrapper, text, mappings);
    handlerCheck(metadata !== null);
    return metadata;
  }

  return handler;
}

function listHandler(authWrapper) {
  function handler(xhr, text) {
    var listResult = fromResponseString(authWrapper, text);
    handlerCheck(listResult !== null);
    return listResult;
  }

  return handler;
}

function downloadUrlHandler(authWrapper, mappings) {
  function handler(xhr, text) {
    var metadata = fromResourceString(authWrapper, text, mappings);
    handlerCheck(metadata !== null);
    return downloadUrlFromResourceString(metadata, text);
  }

  return handler;
}

function sharedErrorHandler(location) {
  function errorHandler(xhr, err) {
    var newErr;

    if (xhr.getStatus() === 401) {
      newErr = unauthenticated();
    } else {
      if (xhr.getStatus() === 402) {
        newErr = quotaExceeded(location.bucket);
      } else {
        if (xhr.getStatus() === 403) {
          newErr = unauthorized(location.path);
        } else {
          newErr = err;
        }
      }
    }

    newErr.setServerResponseProp(err.serverResponseProp());
    return newErr;
  }

  return errorHandler;
}

function objectErrorHandler(location) {
  var shared = sharedErrorHandler(location);

  function errorHandler(xhr, err) {
    var newErr = shared(xhr, err);

    if (xhr.getStatus() === 404) {
      newErr = objectNotFound(location.path);
    }

    newErr.setServerResponseProp(err.serverResponseProp());
    return newErr;
  }

  return errorHandler;
}

function getMetadata(authWrapper, location, mappings) {
  var urlPart = location.fullServerUrl();
  var url = makeUrl(urlPart);
  var method = 'GET';
  var timeout = authWrapper.maxOperationRetryTime();
  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
  requestInfo.errorHandler = objectErrorHandler(location);
  return requestInfo;
}

function list(authWrapper, location, delimiter, pageToken, maxResults) {
  var urlParams = {};

  if (location.isRoot) {
    urlParams['prefix'] = '';
  } else {
    urlParams['prefix'] = location.path + '/';
  }

  if (delimiter && delimiter.length > 0) {
    urlParams['delimiter'] = delimiter;
  }

  if (pageToken) {
    urlParams['pageToken'] = pageToken;
  }

  if (maxResults) {
    urlParams['maxResults'] = maxResults;
  }

  var urlPart = location.bucketOnlyServerUrl();
  var url = makeUrl(urlPart);
  var method = 'GET';
  var timeout = authWrapper.maxOperationRetryTime();
  var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);
  requestInfo.urlParams = urlParams;
  requestInfo.errorHandler = sharedErrorHandler(location);
  return requestInfo;
}

function getDownloadUrl(authWrapper, location, mappings) {
  var urlPart = location.fullServerUrl();
  var url = makeUrl(urlPart);
  var method = 'GET';
  var timeout = authWrapper.maxOperationRetryTime();
  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);
  requestInfo.errorHandler = objectErrorHandler(location);
  return requestInfo;
}

function updateMetadata(authWrapper, location, metadata, mappings) {
  var urlPart = location.fullServerUrl();
  var url = makeUrl(urlPart);
  var method = 'PATCH';
  var body = toResourceString(metadata, mappings);
  var headers = {
    'Content-Type': 'application/json; charset=utf-8'
  };
  var timeout = authWrapper.maxOperationRetryTime();
  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
  requestInfo.headers = headers;
  requestInfo.body = body;
  requestInfo.errorHandler = objectErrorHandler(location);
  return requestInfo;
}

function deleteObject(authWrapper, location) {
  var urlPart = location.fullServerUrl();
  var url = makeUrl(urlPart);
  var method = 'DELETE';
  var timeout = authWrapper.maxOperationRetryTime();

  function handler(_xhr, _text) {}

  var requestInfo = new RequestInfo(url, method, handler, timeout);
  requestInfo.successCodes = [200, 204];
  requestInfo.errorHandler = objectErrorHandler(location);
  return requestInfo;
}

function determineContentType_(metadata, blob) {
  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';
}

function metadataForUpload_(location, blob, metadata) {
  var metadataClone = Object.assign({}, metadata);
  metadataClone['fullPath'] = location.path;
  metadataClone['size'] = blob.size();

  if (!metadataClone['contentType']) {
    metadataClone['contentType'] = determineContentType_(null, blob);
  }

  return metadataClone;
}

function multipartUpload(authWrapper, location, mappings, blob, metadata) {
  var urlPart = location.bucketOnlyServerUrl();
  var headers = {
    'X-Goog-Upload-Protocol': 'multipart'
  };

  function genBoundary() {
    var str = '';

    for (var i = 0; i < 2; i++) {
      str = str + Math.random().toString().slice(2);
    }

    return str;
  }

  var boundary = genBoundary();
  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;
  var metadata_ = metadataForUpload_(location, blob, metadata);
  var metadataString = toResourceString(metadata_, mappings);
  var preBlobPart = '--' + boundary + '\r\n' + 'Content-Type: application/json; charset=utf-8\r\n\r\n' + metadataString + '\r\n--' + boundary + '\r\n' + 'Content-Type: ' + metadata_['contentType'] + '\r\n\r\n';
  var postBlobPart = '\r\n--' + boundary + '--';
  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);

  if (body === null) {
    throw cannotSliceBlob();
  }

  var urlParams = {
    name: metadata_['fullPath']
  };
  var url = makeUrl(urlPart);
  var method = 'POST';
  var timeout = authWrapper.maxUploadRetryTime();
  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
  requestInfo.urlParams = urlParams;
  requestInfo.headers = headers;
  requestInfo.body = body.uploadData();
  requestInfo.errorHandler = sharedErrorHandler(location);
  return requestInfo;
}
/**
 * @param current The number of bytes that have been uploaded so far.
 * @param total The total number of bytes in the upload.
 * @param opt_finalized True if the server has finished the upload.
 * @param opt_metadata The upload metadata, should
 *     only be passed if opt_finalized is true.
 * @struct
 */


var ResumableUploadStatus =
/** @class */
function () {
  function ResumableUploadStatus(current, total, finalized, metadata) {
    this.current = current;
    this.total = total;
    this.finalized = !!finalized;
    this.metadata = metadata || null;
  }

  return ResumableUploadStatus;
}();

function checkResumeHeader_(xhr, allowed) {
  var status = null;

  try {
    status = xhr.getResponseHeader('X-Goog-Upload-Status');
  } catch (e) {
    handlerCheck(false);
  }

  var allowedStatus = allowed || ['active'];
  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);
  return status;
}

function createResumableUpload(authWrapper, location, mappings, blob, metadata) {
  var urlPart = location.bucketOnlyServerUrl();
  var metadataForUpload = metadataForUpload_(location, blob, metadata);
  var urlParams = {
    name: metadataForUpload['fullPath']
  };
  var url = makeUrl(urlPart);
  var method = 'POST';
  var headers = {
    'X-Goog-Upload-Protocol': 'resumable',
    'X-Goog-Upload-Command': 'start',
    'X-Goog-Upload-Header-Content-Length': blob.size(),
    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],
    'Content-Type': 'application/json; charset=utf-8'
  };
  var body = toResourceString(metadataForUpload, mappings);
  var timeout = authWrapper.maxUploadRetryTime();

  function handler(xhr) {
    checkResumeHeader_(xhr);
    var url;

    try {
      url = xhr.getResponseHeader('X-Goog-Upload-URL');
    } catch (e) {
      handlerCheck(false);
    }

    handlerCheck(isString(url));
    return url;
  }

  var requestInfo = new RequestInfo(url, method, handler, timeout);
  requestInfo.urlParams = urlParams;
  requestInfo.headers = headers;
  requestInfo.body = body;
  requestInfo.errorHandler = sharedErrorHandler(location);
  return requestInfo;
}
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 */


function getResumableUploadStatus(authWrapper, location, url, blob) {
  var headers = {
    'X-Goog-Upload-Command': 'query'
  };

  function handler(xhr) {
    var status = checkResumeHeader_(xhr, ['active', 'final']);
    var sizeString = null;

    try {
      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');
    } catch (e) {
      handlerCheck(false);
    }

    if (!sizeString) {
      // null or empty string
      handlerCheck(false);
    }

    var size = Number(sizeString);
    handlerCheck(!isNaN(size));
    return new ResumableUploadStatus(size, blob.size(), status === 'final');
  }

  var method = 'POST';
  var timeout = authWrapper.maxUploadRetryTime();
  var requestInfo = new RequestInfo(url, method, handler, timeout);
  requestInfo.headers = headers;
  requestInfo.errorHandler = sharedErrorHandler(location);
  return requestInfo;
}
/**
 * Any uploads via the resumable upload API must transfer a number of bytes
 * that is a multiple of this number.
 */


var resumableUploadChunkSize = 256 * 1024;
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 * @param chunkSize Number of bytes to upload.
 * @param status The previous status.
 *     If not passed or null, we start from the beginning.
 * @throws fbs.Error If the upload is already complete, the passed in status
 *     has a final size inconsistent with the blob, or the blob cannot be sliced
 *     for upload.
 */

function continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {
  // TODO(andysoto): standardize on internal asserts
  // assert(!(opt_status && opt_status.finalized));
  var status_ = new ResumableUploadStatus(0, 0);

  if (status) {
    status_.current = status.current;
    status_.total = status.total;
  } else {
    status_.current = 0;
    status_.total = blob.size();
  }

  if (blob.size() !== status_.total) {
    throw serverFileWrongSize();
  }

  var bytesLeft = status_.total - status_.current;
  var bytesToUpload = bytesLeft;

  if (chunkSize > 0) {
    bytesToUpload = Math.min(bytesToUpload, chunkSize);
  }

  var startByte = status_.current;
  var endByte = startByte + bytesToUpload;
  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';
  var headers = {
    'X-Goog-Upload-Command': uploadCommand,
    'X-Goog-Upload-Offset': status_.current
  };
  var body = blob.slice(startByte, endByte);

  if (body === null) {
    throw cannotSliceBlob();
  }

  function handler(xhr, text) {
    // TODO(andysoto): Verify the MD5 of each uploaded range:
    // the 'x-range-md5' header comes back with status code 308 responses.
    // We'll only be able to bail out though, because you can't re-upload a
    // range that you previously uploaded.
    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);
    var newCurrent = status_.current + bytesToUpload;
    var size = blob.size();
    var metadata;

    if (uploadStatus === 'final') {
      metadata = metadataHandler(authWrapper, mappings)(xhr, text);
    } else {
      metadata = null;
    }

    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);
  }

  var method = 'POST';
  var timeout = authWrapper.maxUploadRetryTime();
  var requestInfo = new RequestInfo(url, method, handler, timeout);
  requestInfo.headers = headers;
  requestInfo.body = body.uploadData();
  requestInfo.progressCallback = progressCallback || null;
  requestInfo.errorHandler = sharedErrorHandler(location);
  return requestInfo;
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @struct
 */


var Observer =
/** @class */
function () {
  function Observer(nextOrObserver, error, complete) {
    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);

    if (asFunctions) {
      this.next = nextOrObserver;
      this.error = error || null;
      this.complete = complete || null;
    } else {
      var observer = nextOrObserver;
      this.next = observer.next || null;
      this.error = observer.error || null;
      this.complete = observer.complete || null;
    }
  }

  return Observer;
}();

var UploadTaskSnapshot =
/** @class */
function () {
  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {
    this.bytesTransferred = bytesTransferred;
    this.totalBytes = totalBytes;
    this.state = state;
    this.metadata = metadata;
    this.task = task;
    this.ref = ref;
  }

  return UploadTaskSnapshot;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @param name Name of the function.
 * @param specs Argument specs.
 * @param passed The actual arguments passed to the function.
 * @throws {fbs.Error} If the arguments are invalid.
 */


function validate(name, specs, passed) {
  var minArgs = specs.length;
  var maxArgs = specs.length;

  for (var i = 0; i < specs.length; i++) {
    if (specs[i].optional) {
      minArgs = i;
      break;
    }
  }

  var validLength = minArgs <= passed.length && passed.length <= maxArgs;

  if (!validLength) {
    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);
  }

  for (var i = 0; i < passed.length; i++) {
    try {
      specs[i].validator(passed[i]);
    } catch (e) {
      if (e instanceof Error) {
        throw invalidArgument(i, name, e.message);
      } else {
        throw invalidArgument(i, name, e);
      }
    }
  }
}
/**
 * @struct
 */


var ArgSpec =
/** @class */
function () {
  function ArgSpec(validator, optional) {
    var self = this;

    this.validator = function (p) {
      if (self.optional && !isJustDef(p)) {
        return;
      }

      validator(p);
    };

    this.optional = !!optional;
  }

  return ArgSpec;
}();

function and_(v1, v2) {
  return function (p) {
    v1(p);
    v2(p);
  };
}

function stringSpec(validator, optional) {
  function stringValidator(p) {
    if (!isString(p)) {
      throw 'Expected string.';
    }
  }

  var chainedValidator;

  if (validator) {
    chainedValidator = and_(stringValidator, validator);
  } else {
    chainedValidator = stringValidator;
  }

  return new ArgSpec(chainedValidator, optional);
}

function uploadDataSpec() {
  function validator(p) {
    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;

    if (!valid) {
      throw 'Expected Blob or File.';
    }
  }

  return new ArgSpec(validator);
}

function metadataSpec(optional) {
  return new ArgSpec(metadataValidator, optional);
}

function listOptionSpec(optional) {
  return new ArgSpec(listOptionsValidator, optional);
}

function nonNegativeNumberSpec() {
  function validator(p) {
    var valid = isNumber(p) && p >= 0;

    if (!valid) {
      throw 'Expected a number 0 or greater.';
    }
  }

  return new ArgSpec(validator);
}

function looseObjectSpec(validator, optional) {
  function isLooseObjectValidator(p) {
    var isLooseObject = p === null || isDef(p) && p instanceof Object;

    if (!isLooseObject) {
      throw 'Expected an Object.';
    }

    if (validator !== undefined && validator !== null) {
      validator(p);
    }
  }

  return new ArgSpec(isLooseObjectValidator, optional);
}

function nullFunctionSpec(optional) {
  function validator(p) {
    var valid = p === null || isFunction(p);

    if (!valid) {
      throw 'Expected a Function.';
    }
  }

  return new ArgSpec(validator, optional);
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns a function that invokes f with its arguments asynchronously as a
 * microtask, i.e. as soon as possible after the current script returns back
 * into browser code.
 */


function async(f) {
  return function () {
    var argsToForward = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      argsToForward[_i] = arguments[_i];
    } // eslint-disable-next-line @typescript-eslint/no-floating-promises


    Promise.resolve().then(function () {
      return f.apply(void 0, argsToForward);
    });
  };
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Represents a blob being uploaded. Can be used to pause/resume/cancel the
 * upload and manage callbacks for various events.
 */


var UploadTask =
/** @class */
function () {
  /**
   * @param ref The firebaseStorage.Reference object this task came
   *     from, untyped to avoid cyclic dependencies.
   * @param blob The blob to upload.
   */
  function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {
    var _this = this;

    if (metadata === void 0) {
      metadata = null;
    }

    this.transferred_ = 0;
    this.needToFetchStatus_ = false;
    this.needToFetchMetadata_ = false;
    this.observers_ = [];
    this.error_ = null;
    this.uploadUrl_ = null;
    this.request_ = null;
    this.chunkMultiplier_ = 1;
    this.resolve_ = null;
    this.reject_ = null;
    this.ref_ = ref;
    this.authWrapper_ = authWrapper;
    this.location_ = location;
    this.blob_ = blob;
    this.metadata_ = metadata;
    this.mappings_ = mappings;
    this.resumable_ = this.shouldDoResumable_(this.blob_);
    this.state_ = InternalTaskState.RUNNING;

    this.errorHandler_ = function (error) {
      _this.request_ = null;
      _this.chunkMultiplier_ = 1;

      if (error.codeEquals(Code.CANCELED)) {
        _this.needToFetchStatus_ = true;

        _this.completeTransitions_();
      } else {
        _this.error_ = error;

        _this.transition_(InternalTaskState.ERROR);
      }
    };

    this.metadataErrorHandler_ = function (error) {
      _this.request_ = null;

      if (error.codeEquals(Code.CANCELED)) {
        _this.completeTransitions_();
      } else {
        _this.error_ = error;

        _this.transition_(InternalTaskState.ERROR);
      }
    };

    this.promise_ = new Promise(function (resolve, reject) {
      _this.resolve_ = resolve;
      _this.reject_ = reject;

      _this.start_();
    }); // Prevent uncaught rejections on the internal promise from bubbling out
    // to the top level with a dummy handler.

    this.promise_.then(null, function () {});
  }

  UploadTask.prototype.makeProgressCallback_ = function () {
    var _this = this;

    var sizeBefore = this.transferred_;
    return function (loaded) {
      return _this.updateProgress_(sizeBefore + loaded);
    };
  };

  UploadTask.prototype.shouldDoResumable_ = function (blob) {
    return blob.size() > 256 * 1024;
  };

  UploadTask.prototype.start_ = function () {
    if (this.state_ !== InternalTaskState.RUNNING) {
      // This can happen if someone pauses us in a resume callback, for example.
      return;
    }

    if (this.request_ !== null) {
      return;
    }

    if (this.resumable_) {
      if (this.uploadUrl_ === null) {
        this.createResumable_();
      } else {
        if (this.needToFetchStatus_) {
          this.fetchStatus_();
        } else {
          if (this.needToFetchMetadata_) {
            // Happens if we miss the metadata on upload completion.
            this.fetchMetadata_();
          } else {
            this.continueUpload_();
          }
        }
      }
    } else {
      this.oneShotUpload_();
    }
  };

  UploadTask.prototype.resolveToken_ = function (callback) {
    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises


    this.authWrapper_.getAuthToken().then(function (authToken) {
      switch (_this.state_) {
        case InternalTaskState.RUNNING:
          callback(authToken);
          break;

        case InternalTaskState.CANCELING:
          _this.transition_(InternalTaskState.CANCELED);

          break;

        case InternalTaskState.PAUSING:
          _this.transition_(InternalTaskState.PAUSED);

          break;
      }
    });
  }; // TODO(andysoto): assert false


  UploadTask.prototype.createResumable_ = function () {
    var _this = this;

    this.resolveToken_(function (authToken) {
      var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);

      var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);

      _this.request_ = createRequest;
      createRequest.getPromise().then(function (url) {
        _this.request_ = null;
        _this.uploadUrl_ = url;
        _this.needToFetchStatus_ = false;

        _this.completeTransitions_();
      }, _this.errorHandler_);
    });
  };

  UploadTask.prototype.fetchStatus_ = function () {
    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);


    var url = this.uploadUrl_;
    this.resolveToken_(function (authToken) {
      var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);

      var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);

      _this.request_ = statusRequest;
      statusRequest.getPromise().then(function (status) {
        status = status;
        _this.request_ = null;

        _this.updateProgress_(status.current);

        _this.needToFetchStatus_ = false;

        if (status.finalized) {
          _this.needToFetchMetadata_ = true;
        }

        _this.completeTransitions_();
      }, _this.errorHandler_);
    });
  };

  UploadTask.prototype.continueUpload_ = function () {
    var _this = this;

    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;
    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);

    var url = this.uploadUrl_;
    this.resolveToken_(function (authToken) {
      var requestInfo;

      try {
        requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());
      } catch (e) {
        _this.error_ = e;

        _this.transition_(InternalTaskState.ERROR);

        return;
      }

      var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);

      _this.request_ = uploadRequest;
      uploadRequest.getPromise().then(function (newStatus) {
        _this.increaseMultiplier_();

        _this.request_ = null;

        _this.updateProgress_(newStatus.current);

        if (newStatus.finalized) {
          _this.metadata_ = newStatus.metadata;

          _this.transition_(InternalTaskState.SUCCESS);
        } else {
          _this.completeTransitions_();
        }
      }, _this.errorHandler_);
    });
  };

  UploadTask.prototype.increaseMultiplier_ = function () {
    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.

    if (currentSize < 32 * 1024 * 1024) {
      this.chunkMultiplier_ *= 2;
    }
  };

  UploadTask.prototype.fetchMetadata_ = function () {
    var _this = this;

    this.resolveToken_(function (authToken) {
      var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);

      var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);

      _this.request_ = metadataRequest;
      metadataRequest.getPromise().then(function (metadata) {
        _this.request_ = null;
        _this.metadata_ = metadata;

        _this.transition_(InternalTaskState.SUCCESS);
      }, _this.metadataErrorHandler_);
    });
  };

  UploadTask.prototype.oneShotUpload_ = function () {
    var _this = this;

    this.resolveToken_(function (authToken) {
      var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);

      var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);

      _this.request_ = multipartRequest;
      multipartRequest.getPromise().then(function (metadata) {
        _this.request_ = null;
        _this.metadata_ = metadata;

        _this.updateProgress_(_this.blob_.size());

        _this.transition_(InternalTaskState.SUCCESS);
      }, _this.errorHandler_);
    });
  };

  UploadTask.prototype.updateProgress_ = function (transferred) {
    var old = this.transferred_;
    this.transferred_ = transferred; // A progress update can make the "transferred" value smaller (e.g. a
    // partial upload not completed by server, after which the "transferred"
    // value may reset to the value at the beginning of the request).

    if (this.transferred_ !== old) {
      this.notifyObservers_();
    }
  };

  UploadTask.prototype.transition_ = function (state) {
    if (this.state_ === state) {
      return;
    }

    switch (state) {
      case InternalTaskState.CANCELING:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.RUNNING ||
        //        this.state_ === InternalTaskState.PAUSING);
        this.state_ = state;

        if (this.request_ !== null) {
          this.request_.cancel();
        }

        break;

      case InternalTaskState.PAUSING:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.RUNNING);
        this.state_ = state;

        if (this.request_ !== null) {
          this.request_.cancel();
        }

        break;

      case InternalTaskState.RUNNING:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.PAUSED ||
        //        this.state_ === InternalTaskState.PAUSING);
        var wasPaused = this.state_ === InternalTaskState.PAUSED;
        this.state_ = state;

        if (wasPaused) {
          this.notifyObservers_();
          this.start_();
        }

        break;

      case InternalTaskState.PAUSED:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.PAUSING);
        this.state_ = state;
        this.notifyObservers_();
        break;

      case InternalTaskState.CANCELED:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.PAUSED ||
        //        this.state_ === InternalTaskState.CANCELING);
        this.error_ = canceled();
        this.state_ = state;
        this.notifyObservers_();
        break;

      case InternalTaskState.ERROR:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.RUNNING ||
        //        this.state_ === InternalTaskState.PAUSING ||
        //        this.state_ === InternalTaskState.CANCELING);
        this.state_ = state;
        this.notifyObservers_();
        break;

      case InternalTaskState.SUCCESS:
        // TODO(andysoto):
        // assert(this.state_ === InternalTaskState.RUNNING ||
        //        this.state_ === InternalTaskState.PAUSING ||
        //        this.state_ === InternalTaskState.CANCELING);
        this.state_ = state;
        this.notifyObservers_();
        break;
    }
  };

  UploadTask.prototype.completeTransitions_ = function () {
    switch (this.state_) {
      case InternalTaskState.PAUSING:
        this.transition_(InternalTaskState.PAUSED);
        break;

      case InternalTaskState.CANCELING:
        this.transition_(InternalTaskState.CANCELED);
        break;

      case InternalTaskState.RUNNING:
        this.start_();
        break;
    }
  };

  Object.defineProperty(UploadTask.prototype, "snapshot", {
    get: function get() {
      var externalState = taskStateFromInternalTaskState(this.state_);
      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Adds a callback for an event.
   * @param type The type of event to listen for.
   */

  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {
    function typeValidator() {
      if (type !== TaskEvent.STATE_CHANGED) {
        throw "Expected one of the event types: [" + TaskEvent.STATE_CHANGED + "].";
      }
    }

    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';
    var nextValidator = nullFunctionSpec(true).validator;
    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any

    function nextOrObserverValidator(p) {
      try {
        nextValidator(p);
        return;
      } catch (e) {}

      try {
        observerValidator(p);
        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);

        if (!anyDefined) {
          throw '';
        }

        return;
      } catch (e) {
        throw nextOrObserverMessage;
      }
    }

    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];
    validate('on', specs, arguments);
    var self = this;

    function makeBinder(specs) {
      function binder(nextOrObserver, error, complete) {
        if (specs !== null) {
          validate('on', specs, arguments);
        }

        var observer = new Observer(nextOrObserver, error, completed);
        self.addObserver_(observer);
        return function () {
          self.removeObserver_(observer);
        };
      }

      return binder;
    }

    function binderNextOrObserverValidator(p) {
      if (p === null) {
        throw nextOrObserverMessage;
      }

      nextOrObserverValidator(p);
    }

    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];
    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));

    if (typeOnly) {
      return makeBinder(binderSpecs);
    } else {
      return makeBinder(null)(nextOrObserver, error, completed);
    }
  };
  /**
   * This object behaves like a Promise, and resolves with its snapshot data
   * when the upload completes.
   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.
   * @param onRejected The rejection callback.
   */


  UploadTask.prototype.then = function (onFulfilled, onRejected) {
    // These casts are needed so that TypeScript can infer the types of the
    // resulting Promise.
    return this.promise_.then(onFulfilled, onRejected);
  };
  /**
   * Equivalent to calling `then(null, onRejected)`.
   */


  UploadTask.prototype.catch = function (onRejected) {
    return this.then(null, onRejected);
  };
  /**
   * Adds the given observer.
   */


  UploadTask.prototype.addObserver_ = function (observer) {
    this.observers_.push(observer);
    this.notifyObserver_(observer);
  };
  /**
   * Removes the given observer.
   */


  UploadTask.prototype.removeObserver_ = function (observer) {
    var i = this.observers_.indexOf(observer);

    if (i !== -1) {
      this.observers_.splice(i, 1);
    }
  };

  UploadTask.prototype.notifyObservers_ = function () {
    var _this = this;

    this.finishPromise_();
    var observers = this.observers_.slice();
    observers.forEach(function (observer) {
      _this.notifyObserver_(observer);
    });
  };

  UploadTask.prototype.finishPromise_ = function () {
    if (this.resolve_ !== null) {
      var triggered = true;

      switch (taskStateFromInternalTaskState(this.state_)) {
        case TaskState.SUCCESS:
          async(this.resolve_.bind(null, this.snapshot))();
          break;

        case TaskState.CANCELED:
        case TaskState.ERROR:
          var toCall = this.reject_;
          async(toCall.bind(null, this.error_))();
          break;

        default:
          triggered = false;
          break;
      }

      if (triggered) {
        this.resolve_ = null;
        this.reject_ = null;
      }
    }
  };

  UploadTask.prototype.notifyObserver_ = function (observer) {
    var externalState = taskStateFromInternalTaskState(this.state_);

    switch (externalState) {
      case TaskState.RUNNING:
      case TaskState.PAUSED:
        if (observer.next) {
          async(observer.next.bind(observer, this.snapshot))();
        }

        break;

      case TaskState.SUCCESS:
        if (observer.complete) {
          async(observer.complete.bind(observer))();
        }

        break;

      case TaskState.CANCELED:
      case TaskState.ERROR:
        if (observer.error) {
          async(observer.error.bind(observer, this.error_))();
        }

        break;

      default:
        // TODO(andysoto): assert(false);
        if (observer.error) {
          async(observer.error.bind(observer, this.error_))();
        }

    }
  };
  /**
   * Resumes a paused task. Has no effect on a currently running or failed task.
   * @return True if the operation took effect, false if ignored.
   */


  UploadTask.prototype.resume = function () {
    validate('resume', [], arguments);
    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;

    if (valid) {
      this.transition_(InternalTaskState.RUNNING);
    }

    return valid;
  };
  /**
   * Pauses a currently running task. Has no effect on a paused or failed task.
   * @return True if the operation took effect, false if ignored.
   */


  UploadTask.prototype.pause = function () {
    validate('pause', [], arguments);
    var valid = this.state_ === InternalTaskState.RUNNING;

    if (valid) {
      this.transition_(InternalTaskState.PAUSING);
    }

    return valid;
  };
  /**
   * Cancels a currently running or paused task. Has no effect on a complete or
   * failed task.
   * @return True if the operation took effect, false if ignored.
   */


  UploadTask.prototype.cancel = function () {
    validate('cancel', [], arguments);
    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;

    if (valid) {
      this.transition_(InternalTaskState.CANCELING);
    }

    return valid;
  };

  return UploadTask;
}();
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Provides methods to interact with a bucket in the Firebase Storage service.
 * @param location An fbs.location, or the URL at
 *     which to base this object, in one of the following forms:
 *         gs://<bucket>/<object-path>
 *         http[s]://firebasestorage.googleapis.com/
 *                     <api-version>/b/<bucket>/o/<object-path>
 *     Any query or fragment strings will be ignored in the http[s]
 *     format. If no value is passed, the storage object will use a URL based on
 *     the project ID of the base firebase.App instance.
 */


var Reference =
/** @class */
function () {
  function Reference(authWrapper, location) {
    this.authWrapper = authWrapper;

    if (location instanceof Location) {
      this.location = location;
    } else {
      this.location = Location.makeFromUrl(location);
    }
  }
  /**
   * @return The URL for the bucket and path this object references,
   *     in the form gs://<bucket>/<object-path>
   * @override
   */


  Reference.prototype.toString = function () {
    validate('toString', [], arguments);
    return 'gs://' + this.location.bucket + '/' + this.location.path;
  };

  Reference.prototype.newRef = function (authWrapper, location) {
    return new Reference(authWrapper, location);
  };

  Reference.prototype.mappings = function () {
    return getMappings();
  };
  /**
   * @return A reference to the object obtained by
   *     appending childPath, removing any duplicate, beginning, or trailing
   *     slashes.
   */


  Reference.prototype.child = function (childPath) {
    validate('child', [stringSpec()], arguments);
    var newPath = child(this.location.path, childPath);
    var location = new Location(this.location.bucket, newPath);
    return this.newRef(this.authWrapper, location);
  };

  Object.defineProperty(Reference.prototype, "parent", {
    /**
     * @return A reference to the parent of the
     *     current object, or null if the current object is the root.
     */
    get: function get() {
      var newPath = parent(this.location.path);

      if (newPath === null) {
        return null;
      }

      var location = new Location(this.location.bucket, newPath);
      return this.newRef(this.authWrapper, location);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Reference.prototype, "root", {
    /**
     * @return An reference to the root of this
     *     object's bucket.
     */
    get: function get() {
      var location = new Location(this.location.bucket, '');
      return this.newRef(this.authWrapper, location);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Reference.prototype, "bucket", {
    get: function get() {
      return this.location.bucket;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Reference.prototype, "fullPath", {
    get: function get() {
      return this.location.path;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Reference.prototype, "name", {
    get: function get() {
      return lastComponent(this.location.path);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Reference.prototype, "storage", {
    get: function get() {
      return this.authWrapper.service();
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Uploads a blob to this object's location.
   * @param data The blob to upload.
   * @return An UploadTask that lets you control and
   *     observe the upload.
   */

  Reference.prototype.put = function (data, metadata) {
    if (metadata === void 0) {
      metadata = null;
    }

    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);
    this.throwIfRoot_('put');
    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);
  };
  /**
   * Uploads a string to this object's location.
   * @param value The string to upload.
   * @param format The format of the string to upload.
   * @return An UploadTask that lets you control and
   *     observe the upload.
   */


  Reference.prototype.putString = function (value, format, metadata) {
    if (format === void 0) {
      format = StringFormat.RAW;
    }

    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);
    this.throwIfRoot_('putString');
    var data = dataFromString(format, value);
    var metadataClone = Object.assign({}, metadata);

    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {
      metadataClone['contentType'] = data.contentType;
    }

    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);
  };
  /**
   * Deletes the object at this location.
   * @return A promise that resolves if the deletion succeeds.
   */


  Reference.prototype.delete = function () {
    var _this = this;

    validate('delete', [], arguments);
    this.throwIfRoot_('delete');
    return this.authWrapper.getAuthToken().then(function (authToken) {
      var requestInfo = deleteObject(_this.authWrapper, _this.location);
      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();
    });
  };
  /**
   * List all items (files) and prefixes (folders) under this storage reference.
   *
   * This is a helper method for calling list() repeatedly until there are
   * no more results. The default pagination size is 1000.
   *
   * Note: The results may not be consistent if objects are changed while this
   * operation is running.
   *
   * Warning: listAll may potentially consume too many resources if there are
   * too many results.
   *
   * @return A Promise that resolves with all the items and prefixes under
   *      the current storage reference. `prefixes` contains references to
   *      sub-directories and `items` contains references to objects in this
   *      folder. `nextPageToken` is never returned.
   */


  Reference.prototype.listAll = function () {
    validate('listAll', [], arguments);
    var accumulator = {
      prefixes: [],
      items: []
    };
    return this.listAllHelper(accumulator).then(function () {
      return accumulator;
    });
  };

  Reference.prototype.listAllHelper = function (accumulator, pageToken) {
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_tslib__["__awaiter"])(this, void 0, void 0, function () {
      var opt, nextPage;

      var _a, _b;

      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_tslib__["__generator"])(this, function (_c) {
        switch (_c.label) {
          case 0:
            opt = {
              // maxResults is 1000 by default.
              pageToken: pageToken
            };
            return [4
            /*yield*/
            , this.list(opt)];

          case 1:
            nextPage = _c.sent();

            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);

            (_b = accumulator.items).push.apply(_b, nextPage.items);

            if (!(nextPage.nextPageToken != null)) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.listAllHelper(accumulator, nextPage.nextPageToken)];

          case 2:
            _c.sent();

            _c.label = 3;

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * List items (files) and prefixes (folders) under this storage reference.
   *
   * List API is only available for Firebase Rules Version 2.
   *
   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'
   * delimited folder structure.
   * Refer to GCS's List API if you want to learn more.
   *
   * To adhere to Firebase Rules's Semantics, Firebase Storage does not
   * support objects whose paths end with "/" or contain two consecutive
   * "/"s. Firebase Storage List API will filter these unsupported objects.
   * list() may fail if there are too many unsupported objects in the bucket.
   *
   * @param options See ListOptions for details.
   * @return A Promise that resolves with the items and prefixes.
   *      `prefixes` contains references to sub-folders and `items`
   *      contains references to objects in this folder. `nextPageToken`
   *      can be used to get the rest of the results.
   */


  Reference.prototype.list = function (options) {
    validate('list', [listOptionSpec(true)], arguments);
    var self = this;
    return this.authWrapper.getAuthToken().then(function (authToken) {
      var op = options || {};
      var requestInfo = list(self.authWrapper, self.location,
      /*delimiter= */
      '/', op.pageToken, op.maxResults);
      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
    });
  };
  /**
   *     A promise that resolves with the metadata for this object. If this
   *     object doesn't exist or metadata cannot be retreived, the promise is
   *     rejected.
   */


  Reference.prototype.getMetadata = function () {
    var _this = this;

    validate('getMetadata', [], arguments);
    this.throwIfRoot_('getMetadata');
    return this.authWrapper.getAuthToken().then(function (authToken) {
      var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());
      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();
    });
  };
  /**
   * Updates the metadata for this object.
   * @param metadata The new metadata for the object.
   *     Only values that have been explicitly set will be changed. Explicitly
   *     setting a value to null will remove the metadata.
   * @return A promise that resolves
   *     with the new metadata for this object.
   *     @see firebaseStorage.Reference.prototype.getMetadata
   */


  Reference.prototype.updateMetadata = function (metadata) {
    var _this = this;

    validate('updateMetadata', [metadataSpec()], arguments);
    this.throwIfRoot_('updateMetadata');
    return this.authWrapper.getAuthToken().then(function (authToken) {
      var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());
      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();
    });
  };
  /**
   * @return A promise that resolves with the download
   *     URL for this object.
   */


  Reference.prototype.getDownloadURL = function () {
    var _this = this;

    validate('getDownloadURL', [], arguments);
    this.throwIfRoot_('getDownloadURL');
    return this.authWrapper.getAuthToken().then(function (authToken) {
      var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());
      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise().then(function (url) {
        if (url === null) {
          throw noDownloadURL();
        }

        return url;
      });
    });
  };

  Reference.prototype.throwIfRoot_ = function (name) {
    if (this.location.path === '') {
      throw invalidRootOperation(name);
    }
  };

  return Reference;
}();
/**
 * A request whose promise always fails.
 * @struct
 * @template T
 */


var FailRequest =
/** @class */
function () {
  function FailRequest(error) {
    this.promise_ = Promise.reject(error);
  }
  /** @inheritDoc */


  FailRequest.prototype.getPromise = function () {
    return this.promise_;
  };
  /** @inheritDoc */


  FailRequest.prototype.cancel = function (_appDelete) {};

  return FailRequest;
}();

var RequestMap =
/** @class */
function () {
  function RequestMap() {
    this.map = new Map();
    this.id = MIN_SAFE_INTEGER;
  }
  /**
   * Registers the given request with this map.
   * The request is unregistered when it completes.
   *
   * @param request The request to register.
   */


  RequestMap.prototype.addRequest = function (request) {
    var _this = this;

    var id = this.id;
    this.id++;
    this.map.set(id, request);
    request.getPromise().then(function () {
      return _this.map.delete(id);
    }, function () {
      return _this.map.delete(id);
    });
  };
  /**
   * Cancels all registered requests.
   */


  RequestMap.prototype.clear = function () {
    this.map.forEach(function (v) {
      v && v.cancel(true);
    });
    this.map.clear();
  };

  return RequestMap;
}();
/**
 * @param app If null, getAuthToken always resolves with null.
 * @param service The storage service associated with this auth wrapper.
 *     Untyped to avoid circular type dependencies.
 * @struct
 */


var AuthWrapper =
/** @class */
function () {
  function AuthWrapper(app, authProvider, maker, requestMaker, service, pool) {
    this.bucket_ = null;
    this.deleted_ = false;
    this.app_ = app;

    if (this.app_ !== null) {
      var options = this.app_.options;

      if (isDef(options)) {
        this.bucket_ = AuthWrapper.extractBucket_(options);
      }
    }

    this.authProvider_ = authProvider;
    this.storageRefMaker_ = maker;
    this.requestMaker_ = requestMaker;
    this.pool_ = pool;
    this.service_ = service;
    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;
    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;
    this.requestMap_ = new RequestMap();
  }

  AuthWrapper.extractBucket_ = function (config) {
    var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;

    if (bucketString == null) {
      return null;
    }

    var loc = Location.makeFromBucketSpec(bucketString);
    return loc.bucket;
  };

  AuthWrapper.prototype.getAuthToken = function () {
    var auth = this.authProvider_.getImmediate({
      optional: true
    });

    if (auth) {
      return auth.getToken().then(function (response) {
        if (response !== null) {
          return response.accessToken;
        } else {
          return null;
        }
      }, function () {
        return null;
      });
    } else {
      return Promise.resolve(null);
    }
  };

  AuthWrapper.prototype.bucket = function () {
    if (this.deleted_) {
      throw appDeleted();
    } else {
      return this.bucket_;
    }
  };
  /**
   * The service associated with this auth wrapper. Untyped to avoid circular
   * type dependencies.
   */


  AuthWrapper.prototype.service = function () {
    return this.service_;
  };
  /**
   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper
   * at the given Location.
   * @param loc The Location.
   * @return Actually a firebaseStorage.Reference, typing not allowed
   *     because of circular dependency problems.
   */


  AuthWrapper.prototype.makeStorageReference = function (loc) {
    return this.storageRefMaker_(this, loc);
  };

  AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {
    if (!this.deleted_) {
      var request = this.requestMaker_(requestInfo, authToken, this.pool_);
      this.requestMap_.addRequest(request);
      return request;
    } else {
      return new FailRequest(appDeleted());
    }
  };
  /**
   * Stop running requests and prevent more from being created.
   */


  AuthWrapper.prototype.deleteApp = function () {
    this.deleted_ = true;
    this.app_ = null;
    this.requestMap_.clear();
  };

  AuthWrapper.prototype.maxUploadRetryTime = function () {
    return this.maxUploadRetryTime_;
  };

  AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {
    this.maxUploadRetryTime_ = time;
  };

  AuthWrapper.prototype.maxOperationRetryTime = function () {
    return this.maxOperationRetryTime_;
  };

  AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {
    this.maxOperationRetryTime_ = time;
  };

  return AuthWrapper;
}();
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @param f May be invoked
 *     before the function returns.
 * @param callback Get all the arguments passed to the function
 *     passed to f, including the initial boolean.
 */


function start(f, callback, timeout) {
  // TODO(andysoto): make this code cleaner (probably refactor into an actual
  // type instead of a bunch of functions with state shared in the closure)
  var waitSeconds = 1; // Would type this as "number" but that doesn't work for Node so ¯\_(ツ)_/¯
  // TODO: find a way to exclude Node type definition for storage because storage only works in browser
  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var timeoutId = null;
  var hitTimeout = false;
  var cancelState = 0;

  function canceled() {
    return cancelState === 2;
  }

  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to
  // the no-explicit-any rule when ESlint releases it.
  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  function triggerCallback() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    if (!triggeredCallback) {
      triggeredCallback = true;
      callback.apply(null, args);
    }
  }

  function callWithDelay(millis) {
    timeoutId = setTimeout(function () {
      timeoutId = null;
      f(handler, canceled());
    }, millis);
  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to
  // the no-explicit-any rule when ESlint releases it.
  // eslint-disable-next-line @typescript-eslint/no-explicit-any


  function handler(success) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    if (triggeredCallback) {
      return;
    }

    if (success) {
      triggerCallback.call.apply(triggerCallback, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_tslib__["__spreadArrays"])([null, success], args));
      return;
    }

    var mustStop = canceled() || hitTimeout;

    if (mustStop) {
      triggerCallback.call.apply(triggerCallback, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_tslib__["__spreadArrays"])([null, success], args));
      return;
    }

    if (waitSeconds < 64) {
      /* TODO(andysoto): don't back off so quickly if we know we're offline. */
      waitSeconds *= 2;
    }

    var waitMillis;

    if (cancelState === 1) {
      cancelState = 2;
      waitMillis = 0;
    } else {
      waitMillis = (waitSeconds + Math.random()) * 1000;
    }

    callWithDelay(waitMillis);
  }

  var stopped = false;

  function stop(wasTimeout) {
    if (stopped) {
      return;
    }

    stopped = true;

    if (triggeredCallback) {
      return;
    }

    if (timeoutId !== null) {
      if (!wasTimeout) {
        cancelState = 2;
      }

      clearTimeout(timeoutId);
      callWithDelay(0);
    } else {
      if (!wasTimeout) {
        cancelState = 1;
      }
    }
  }

  callWithDelay(0);
  setTimeout(function () {
    hitTimeout = true;
    stop(true);
  }, timeout);
  return stop;
}
/**
 * Stops the retry loop from repeating.
 * If the function is currently "in between" retries, it is invoked immediately
 * with the second parameter as "true". Otherwise, it will be invoked once more
 * after the current invocation finishes iff the current invocation would have
 * triggered another retry.
 */


function stop(id) {
  id(false);
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @struct
 * @template T
 */


var NetworkRequest =
/** @class */
function () {
  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {
    var _this = this;

    this.pendingXhr_ = null;
    this.backoffId_ = null;
    this.resolve_ = null;
    this.reject_ = null;
    this.canceled_ = false;
    this.appDelete_ = false;
    this.url_ = url;
    this.method_ = method;
    this.headers_ = headers;
    this.body_ = body;
    this.successCodes_ = successCodes.slice();
    this.additionalRetryCodes_ = additionalRetryCodes.slice();
    this.callback_ = callback;
    this.errorCallback_ = errorCallback;
    this.progressCallback_ = progressCallback;
    this.timeout_ = timeout;
    this.pool_ = pool;
    this.promise_ = new Promise(function (resolve, reject) {
      _this.resolve_ = resolve;
      _this.reject_ = reject;

      _this.start_();
    });
  }
  /**
   * Actually starts the retry loop.
   */


  NetworkRequest.prototype.start_ = function () {
    var self = this;

    function doTheRequest(backoffCallback, canceled) {
      if (canceled) {
        backoffCallback(false, new RequestEndStatus(false, null, true));
        return;
      }

      var xhr = self.pool_.createXhrIo();
      self.pendingXhr_ = xhr;

      function progressListener(progressEvent) {
        var loaded = progressEvent.loaded;
        var total = progressEvent.lengthComputable ? progressEvent.total : -1;

        if (self.progressCallback_ !== null) {
          self.progressCallback_(loaded, total);
        }
      }

      if (self.progressCallback_ !== null) {
        xhr.addUploadProgressListener(progressListener);
      } // eslint-disable-next-line @typescript-eslint/no-floating-promises


      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {
        if (self.progressCallback_ !== null) {
          xhr.removeUploadProgressListener(progressListener);
        }

        self.pendingXhr_ = null;
        xhr = xhr;
        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;
        var status = xhr.getStatus();

        if (!hitServer || self.isRetryStatusCode_(status)) {
          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;
          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));
          return;
        }

        var successCode = self.successCodes_.indexOf(status) !== -1;
        backoffCallback(true, new RequestEndStatus(successCode, xhr));
      });
    }
    /**
     * @param requestWentThrough True if the request eventually went
     *     through, false if it hit the retry limit or was canceled.
     */


    function backoffDone(requestWentThrough, status) {
      var resolve = self.resolve_;
      var reject = self.reject_;
      var xhr = status.xhr;

      if (status.wasSuccessCode) {
        try {
          var result = self.callback_(xhr, xhr.getResponseText());

          if (isJustDef(result)) {
            resolve(result);
          } else {
            resolve();
          }
        } catch (e) {
          reject(e);
        }
      } else {
        if (xhr !== null) {
          var err = unknown();
          err.setServerResponseProp(xhr.getResponseText());

          if (self.errorCallback_) {
            reject(self.errorCallback_(xhr, err));
          } else {
            reject(err);
          }
        } else {
          if (status.canceled) {
            var err = self.appDelete_ ? appDeleted() : canceled();
            reject(err);
          } else {
            var err = retryLimitExceeded();
            reject(err);
          }
        }
      }
    }

    if (this.canceled_) {
      backoffDone(false, new RequestEndStatus(false, null, true));
    } else {
      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);
    }
  };
  /** @inheritDoc */


  NetworkRequest.prototype.getPromise = function () {
    return this.promise_;
  };
  /** @inheritDoc */


  NetworkRequest.prototype.cancel = function (appDelete) {
    this.canceled_ = true;
    this.appDelete_ = appDelete || false;

    if (this.backoffId_ !== null) {
      stop(this.backoffId_);
    }

    if (this.pendingXhr_ !== null) {
      this.pendingXhr_.abort();
    }
  };

  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {
    // The codes for which to retry came from this page:
    // https://cloud.google.com/storage/docs/exponential-backoff
    var isFiveHundredCode = status >= 500 && status < 600;
    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.
    408, // Too Many Requests: you're getting rate-limited, basically.
    429];
    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;
    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;
    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;
  };

  return NetworkRequest;
}();
/**
 * A collection of information about the result of a network request.
 * @param opt_canceled Defaults to false.
 * @struct
 */


var RequestEndStatus =
/** @class */
function () {
  function RequestEndStatus(wasSuccessCode, xhr, canceled) {
    this.wasSuccessCode = wasSuccessCode;
    this.xhr = xhr;
    this.canceled = !!canceled;
  }

  return RequestEndStatus;
}();

function addAuthHeader_(headers, authToken) {
  if (authToken !== null && authToken.length > 0) {
    headers['Authorization'] = 'Firebase ' + authToken;
  }
}

function addVersionHeader_(headers) {
  var version = typeof __WEBPACK_IMPORTED_MODULE_0__firebase_app___default.a !== 'undefined' ? __WEBPACK_IMPORTED_MODULE_0__firebase_app___default.a.SDK_VERSION : 'AppManager';
  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;
}
/**
 * @template T
 */


function makeRequest(requestInfo, authToken, pool) {
  var queryPart = makeQueryString(requestInfo.urlParams);
  var url = requestInfo.url + queryPart;
  var headers = Object.assign({}, requestInfo.headers);
  addAuthHeader_(headers, authToken);
  addVersionHeader_(headers);
  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A service that provides firebaseStorage.Reference instances.
 * @param opt_url gs:// url to a custom Storage Bucket
 *
 * @struct
 */


var Service =
/** @class */
function () {
  function Service(app, authProvider, pool, url) {
    this.bucket_ = null;

    function maker(authWrapper, loc) {
      return new Reference(authWrapper, loc);
    }

    this.authWrapper_ = new AuthWrapper(app, authProvider, maker, makeRequest, this, pool);
    this.app_ = app;

    if (url != null) {
      this.bucket_ = Location.makeFromBucketSpec(url);
    } else {
      var authWrapperBucket = this.authWrapper_.bucket();

      if (authWrapperBucket != null) {
        this.bucket_ = new Location(authWrapperBucket, '');
      }
    }

    this.internals_ = new ServiceInternals(this);
  }
  /**
   * Returns a firebaseStorage.Reference for the given path in the default
   * bucket.
   */


  Service.prototype.ref = function (path) {
    function validator(path) {
      if (typeof path !== 'string') {
        throw 'Path is not a string.';
      }

      if (/^[A-Za-z]+:\/\//.test(path)) {
        throw 'Expected child path but got a URL, use refFromURL instead.';
      }
    }

    validate('ref', [stringSpec(validator, true)], arguments);

    if (this.bucket_ == null) {
      throw new Error('No Storage Bucket defined in Firebase Options.');
    }

    var ref = new Reference(this.authWrapper_, this.bucket_);

    if (path != null) {
      return ref.child(path);
    } else {
      return ref;
    }
  };
  /**
   * Returns a firebaseStorage.Reference object for the given absolute URL,
   * which must be a gs:// or http[s]:// URL.
   */


  Service.prototype.refFromURL = function (url) {
    function validator(p) {
      if (typeof p !== 'string') {
        throw 'Path is not a string.';
      }

      if (!/^[A-Za-z]+:\/\//.test(p)) {
        throw 'Expected full URL but got a child path, use ref instead.';
      }

      try {
        Location.makeFromUrl(p);
      } catch (e) {
        throw 'Expected valid full URL but got an invalid one.';
      }
    }

    validate('refFromURL', [stringSpec(validator, false)], arguments);
    return new Reference(this.authWrapper_, url);
  };

  Object.defineProperty(Service.prototype, "maxUploadRetryTime", {
    get: function get() {
      return this.authWrapper_.maxUploadRetryTime();
    },
    enumerable: true,
    configurable: true
  });

  Service.prototype.setMaxUploadRetryTime = function (time) {
    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);
    this.authWrapper_.setMaxUploadRetryTime(time);
  };

  Service.prototype.setMaxOperationRetryTime = function (time) {
    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);
    this.authWrapper_.setMaxOperationRetryTime(time);
  };

  Object.defineProperty(Service.prototype, "app", {
    get: function get() {
      return this.app_;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Service.prototype, "INTERNAL", {
    get: function get() {
      return this.internals_;
    },
    enumerable: true,
    configurable: true
  });
  return Service;
}();
/**
 * @struct
 */


var ServiceInternals =
/** @class */
function () {
  function ServiceInternals(service) {
    this.service_ = service;
  }
  /**
   * Called when the associated app is deleted.
   * @see {!fbs.AuthWrapper.prototype.deleteApp}
   */


  ServiceInternals.prototype.delete = function () {
    this.service_.authWrapper_.deleteApp();
    return Promise.resolve();
  };

  return ServiceInternals;
}();

var name = "@firebase/storage";
var version = "0.3.22";
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Type constant for Firebase Storage.
 */

var STORAGE_TYPE = 'storage';

function factory(container, url) {
  // Dependencies
  var app = container.getProvider('app').getImmediate();
  var authProvider = container.getProvider('auth-internal');
  return new Service(app, authProvider, new XhrIoPool(), url);
}

function registerStorage(instance) {
  var namespaceExports = {
    // no-inline
    TaskState: TaskState,
    TaskEvent: TaskEvent,
    StringFormat: StringFormat,
    Storage: Service,
    Reference: Reference
  };
  instance.INTERNAL.registerComponent(new __WEBPACK_IMPORTED_MODULE_2__firebase_component__["Component"](STORAGE_TYPE, factory, "PUBLIC"
  /* PUBLIC */
  ).setServiceProps(namespaceExports).setMultipleInstances(true));
  instance.registerVersion(name, version);
}

registerStorage(__WEBPACK_IMPORTED_MODULE_0__firebase_app___default.a);


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorCode", function() { return tmp_2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventType", function() { return tmp_3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WebChannel", function() { return tmp_4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XhrIo", function() { return tmp_5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWebChannelTransport", function() { return tmp_1; });
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
var g,
    goog = goog || {},
    k = commonjsGlobal;

function m(a) {
  return "string" == typeof a;
}

function aa(a) {
  return "number" == typeof a;
}

function n(a, b) {
  a = a.split(".");
  b = b || k;

  for (var c = 0; c < a.length; c++) if (b = b[a[c]], null == b) return null;

  return b;
}

function ba() {}

function p(a) {
  var b = typeof a;
  if ("object" == b) {
    if (a) {
      if (a instanceof Array) return "array";
      if (a instanceof Object) return b;
      var c = Object.prototype.toString.call(a);
      if ("[object Window]" == c) return "object";
      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";
      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
    } else return "null";
  } else if ("function" == b && "undefined" == typeof a.call) return "object";
  return b;
}

function q(a) {
  return "array" == p(a);
}

function ca(a) {
  var b = p(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
}

function r(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
}

var t = "closure_uid_" + (1E9 * Math.random() >>> 0),
    da = 0;

function ea(a, b, c) {
  return a.call.apply(a.bind, arguments);
}

function fa(a, b, c) {
  if (!a) throw Error();

  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function () {
      var e = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(e, d);
      return a.apply(b, e);
    };
  }

  return function () {
    return a.apply(b, arguments);
  };
}

function u(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? u = ea : u = fa;
  return u.apply(null, arguments);
}

function v(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function () {
    var d = c.slice();
    d.push.apply(d, arguments);
    return a.apply(this, d);
  };
}

var w = Date.now || function () {
  return +new Date();
};

function x(a, b) {
  function c() {}

  c.prototype = b.prototype;
  a.N = b.prototype;
  a.prototype = new c();
  a.prototype.constructor = a;

  a.xb = function (d, e, f) {
    for (var h = Array(arguments.length - 2), l = 2; l < arguments.length; l++) h[l - 2] = arguments[l];

    return b.prototype[e].apply(d, h);
  };
}

function y() {
  this.j = this.j;
  this.i = this.i;
}

var ha = 0;
y.prototype.j = !1;

y.prototype.la = function () {
  if (!this.j && (this.j = !0, this.G(), 0 != ha)) {
    var a = this[t] || (this[t] = ++da);
  }
};

y.prototype.G = function () {
  if (this.i) for (; this.i.length;) this.i.shift()();
};

var ja = Array.prototype.indexOf ? function (a, b) {
  return Array.prototype.indexOf.call(a, b, void 0);
} : function (a, b) {
  if (m(a)) return m(b) && 1 == b.length ? a.indexOf(b, 0) : -1;

  for (var c = 0; c < a.length; c++) if (c in a && a[c] === b) return c;

  return -1;
},
    la = Array.prototype.forEach ? function (a, b, c) {
  Array.prototype.forEach.call(a, b, c);
} : function (a, b, c) {
  for (var d = a.length, e = m(a) ? a.split("") : a, f = 0; f < d; f++) f in e && b.call(c, e[f], f, a);
};

function ma(a) {
  a: {
    var b = na;

    for (var c = a.length, d = m(a) ? a.split("") : a, e = 0; e < c; e++) if (e in d && b.call(void 0, d[e], e, a)) {
      b = e;
      break a;
    }

    b = -1;
  }

  return 0 > b ? null : m(a) ? a.charAt(b) : a[b];
}

function oa(a) {
  return Array.prototype.concat.apply([], arguments);
}

function pa(a) {
  var b = a.length;

  if (0 < b) {
    for (var c = Array(b), d = 0; d < b; d++) c[d] = a[d];

    return c;
  }

  return [];
}

function qa(a) {
  return /^[\s\xa0]*$/.test(a);
}

var ra = String.prototype.trim ? function (a) {
  return a.trim();
} : function (a) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
};

function z(a, b) {
  return -1 != a.indexOf(b);
}

function sa(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}

var A;

a: {
  var ta = k.navigator;

  if (ta) {
    var ua = ta.userAgent;

    if (ua) {
      A = ua;
      break a;
    }
  }

  A = "";
}

function va(a, b, c) {
  for (var d in a) b.call(c, a[d], d, a);
}

function wa(a) {
  var b = {},
      c;

  for (c in a) b[c] = a[c];

  return b;
}

var xa = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

function ya(a, b) {
  for (var c, d, e = 1; e < arguments.length; e++) {
    d = arguments[e];

    for (c in d) a[c] = d[c];

    for (var f = 0; f < xa.length; f++) c = xa[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
  }
}

function za(a) {
  za[" "](a);
  return a;
}

za[" "] = ba;

function Aa(a, b) {
  var c = Ba;
  return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
}

var Ca = z(A, "Opera"),
    B = z(A, "Trident") || z(A, "MSIE"),
    Da = z(A, "Edge"),
    Ea = Da || B,
    Fa = z(A, "Gecko") && !(z(A.toLowerCase(), "webkit") && !z(A, "Edge")) && !(z(A, "Trident") || z(A, "MSIE")) && !z(A, "Edge"),
    Ga = z(A.toLowerCase(), "webkit") && !z(A, "Edge");

function Ha() {
  var a = k.document;
  return a ? a.documentMode : void 0;
}

var Ia;

a: {
  var Ja = "",
      Ka = function () {
    var a = A;
    if (Fa) return /rv:([^\);]+)(\)|;)/.exec(a);
    if (Da) return /Edge\/([\d\.]+)/.exec(a);
    if (B) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
    if (Ga) return /WebKit\/(\S+)/.exec(a);
    if (Ca) return /(?:Version)[ \/]?(\S+)/.exec(a);
  }();

  Ka && (Ja = Ka ? Ka[1] : "");

  if (B) {
    var La = Ha();

    if (null != La && La > parseFloat(Ja)) {
      Ia = String(La);
      break a;
    }
  }

  Ia = Ja;
}

var Ba = {};

function Ma(a) {
  return Aa(a, function () {
    for (var b = 0, c = ra(String(Ia)).split("."), d = ra(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {
      var h = c[f] || "",
          l = d[f] || "";

      do {
        h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];
        l = /(\d*)(\D*)(.*)/.exec(l) || ["", "", "", ""];
        if (0 == h[0].length && 0 == l[0].length) break;
        b = sa(0 == h[1].length ? 0 : parseInt(h[1], 10), 0 == l[1].length ? 0 : parseInt(l[1], 10)) || sa(0 == h[2].length, 0 == l[2].length) || sa(h[2], l[2]);
        h = h[3];
        l = l[3];
      } while (0 == b);
    }

    return 0 <= b;
  });
}

var Na;
var Oa = k.document;
Na = Oa && B ? Ha() || ("CSS1Compat" == Oa.compatMode ? parseInt(Ia, 10) : 5) : void 0;

var Pa = !B || 9 <= Number(Na),
    Qa = B && !Ma("9"),
    Ra = function () {
  if (!k.addEventListener || !Object.defineProperty) return !1;
  var a = !1,
      b = Object.defineProperty({}, "passive", {
    get: function get() {
      a = !0;
    }
  });

  try {
    k.addEventListener("test", ba, b), k.removeEventListener("test", ba, b);
  } catch (c) {}

  return a;
}();

function C(a, b) {
  this.type = a;
  this.a = this.target = b;
  this.Ia = !0;
}

C.prototype.b = function () {
  this.Ia = !1;
};

function D(a, b) {
  C.call(this, a ? a.type : "");
  this.relatedTarget = this.a = this.target = null;
  this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
  this.key = "";
  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
  this.pointerId = 0;
  this.pointerType = "";
  this.c = null;

  if (a) {
    var c = this.type = a.type,
        d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
    this.target = a.target || a.srcElement;
    this.a = b;

    if (b = a.relatedTarget) {
      if (Fa) {
        a: {
          try {
            za(b.nodeName);
            var e = !0;
            break a;
          } catch (f) {}

          e = !1;
        }

        e || (b = null);
      }
    } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);

    this.relatedTarget = b;
    d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
    this.button = a.button;
    this.key = a.key || "";
    this.ctrlKey = a.ctrlKey;
    this.altKey = a.altKey;
    this.shiftKey = a.shiftKey;
    this.metaKey = a.metaKey;
    this.pointerId = a.pointerId || 0;
    this.pointerType = m(a.pointerType) ? a.pointerType : Sa[a.pointerType] || "";
    this.c = a;
    a.defaultPrevented && this.b();
  }
}

x(D, C);
var Sa = {
  2: "touch",
  3: "pen",
  4: "mouse"
};

D.prototype.b = function () {
  D.N.b.call(this);
  var a = this.c;
  if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Qa) try {
    if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
  } catch (b) {}
};

var F = "closure_listenable_" + (1E6 * Math.random() | 0),
    Ta = 0;

function Ua(a, b, c, d, e) {
  this.listener = a;
  this.proxy = null;
  this.src = b;
  this.type = c;
  this.capture = !!d;
  this.da = e;
  this.key = ++Ta;
  this.X = this.Z = !1;
}

function Va(a) {
  a.X = !0;
  a.listener = null;
  a.proxy = null;
  a.src = null;
  a.da = null;
}

function Wa(a) {
  this.src = a;
  this.a = {};
  this.b = 0;
}

Wa.prototype.add = function (a, b, c, d, e) {
  var f = a.toString();
  a = this.a[f];
  a || (a = this.a[f] = [], this.b++);
  var h = Xa(a, b, d, e);
  -1 < h ? (b = a[h], c || (b.Z = !1)) : (b = new Ua(b, this.src, f, !!d, e), b.Z = c, a.push(b));
  return b;
};

function Ya(a, b) {
  var c = b.type;

  if (c in a.a) {
    var d = a.a[c],
        e = ja(d, b),
        f;
    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);
    f && (Va(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
  }
}

function Xa(a, b, c, d) {
  for (var e = 0; e < a.length; ++e) {
    var f = a[e];
    if (!f.X && f.listener == b && f.capture == !!c && f.da == d) return e;
  }

  return -1;
}

var Za = "closure_lm_" + (1E6 * Math.random() | 0),
    $a = {};

function bb(a, b, c, d, e) {
  if (d && d.once) return cb(a, b, c, d, e);

  if (q(b)) {
    for (var f = 0; f < b.length; f++) bb(a, b[f], c, d, e);

    return null;
  }

  c = db(c);
  return a && a[F] ? a.za(b, c, r(d) ? !!d.capture : !!d, e) : eb(a, b, c, !1, d, e);
}

function eb(a, b, c, d, e, f) {
  if (!b) throw Error("Invalid event type");
  var h = r(e) ? !!e.capture : !!e;
  if (h && !Pa) return null;
  var l = fb(a);
  l || (a[Za] = l = new Wa(a));
  c = l.add(b, c, d, h, f);
  if (c.proxy) return c;
  d = gb();
  c.proxy = d;
  d.src = a;
  d.listener = c;
  if (a.addEventListener) Ra || (e = h), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(hb(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
  return c;
}

function gb() {
  var a = ib,
      b = Pa ? function (c) {
    return a.call(b.src, b.listener, c);
  } : function (c) {
    c = a.call(b.src, b.listener, c);
    if (!c) return c;
  };
  return b;
}

function cb(a, b, c, d, e) {
  if (q(b)) {
    for (var f = 0; f < b.length; f++) cb(a, b[f], c, d, e);

    return null;
  }

  c = db(c);
  return a && a[F] ? a.Aa(b, c, r(d) ? !!d.capture : !!d, e) : eb(a, b, c, !0, d, e);
}

function jb(a, b, c, d, e) {
  if (q(b)) for (var f = 0; f < b.length; f++) jb(a, b[f], c, d, e);else (d = r(d) ? !!d.capture : !!d, c = db(c), a && a[F]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = Xa(f, c, d, e), -1 < c && (Va(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = fb(a)) && (b = a.a[b.toString()], a = -1, b && (a = Xa(b, c, d, e)), (c = -1 < a ? b[a] : null) && kb(c));
}

function kb(a) {
  if (!aa(a) && a && !a.X) {
    var b = a.src;
    if (b && b[F]) Ya(b.c, a);else {
      var c = a.type,
          d = a.proxy;
      b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(hb(c), d) : b.addListener && b.removeListener && b.removeListener(d);
      (c = fb(b)) ? (Ya(c, a), 0 == c.b && (c.src = null, b[Za] = null)) : Va(a);
    }
  }
}

function hb(a) {
  return a in $a ? $a[a] : $a[a] = "on" + a;
}

function lb(a, b) {
  var c = a.listener,
      d = a.da || a.src;
  a.Z && kb(a);
  return c.call(d, b);
}

function ib(a, b) {
  return a.X ? !0 : Pa ? lb(a, new D(b, this)) : (b = new D(b || n("window.event"), this), lb(a, b));
}

function fb(a) {
  a = a[Za];
  return a instanceof Wa ? a : null;
}

var mb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);

function db(a) {
  if ("function" == p(a)) return a;
  a[mb] || (a[mb] = function (b) {
    return a.handleEvent(b);
  });
  return a[mb];
}

function G() {
  y.call(this);
  this.c = new Wa(this);
  this.J = this;
  this.B = null;
}

x(G, y);
G.prototype[F] = !0;
g = G.prototype;

g.addEventListener = function (a, b, c, d) {
  bb(this, a, b, c, d);
};

g.removeEventListener = function (a, b, c, d) {
  jb(this, a, b, c, d);
};

g.dispatchEvent = function (a) {
  var b,
      c = this.B;
  if (c) for (b = []; c; c = c.B) b.push(c);
  c = this.J;
  var d = a.type || a;
  if (m(a)) a = new C(a, c);else if (a instanceof C) a.target = a.target || c;else {
    var e = a;
    a = new C(d, c);
    ya(a, e);
  }
  e = !0;
  if (b) for (var f = b.length - 1; 0 <= f; f--) {
    var h = a.a = b[f];
    e = nb(h, d, !0, a) && e;
  }
  h = a.a = c;
  e = nb(h, d, !0, a) && e;
  e = nb(h, d, !1, a) && e;
  if (b) for (f = 0; f < b.length; f++) h = a.a = b[f], e = nb(h, d, !1, a) && e;
  return e;
};

g.G = function () {
  G.N.G.call(this);

  if (this.c) {
    var a = this.c,
        c;

    for (c in a.a) {
      for (var d = a.a[c], e = 0; e < d.length; e++) Va(d[e]);

      delete a.a[c];
      a.b--;
    }
  }

  this.B = null;
};

g.za = function (a, b, c, d) {
  return this.c.add(String(a), b, !1, c, d);
};

g.Aa = function (a, b, c, d) {
  return this.c.add(String(a), b, !0, c, d);
};

function nb(a, b, c, d) {
  b = a.c.a[String(b)];
  if (!b) return !0;
  b = b.concat();

  for (var e = !0, f = 0; f < b.length; ++f) {
    var h = b[f];

    if (h && !h.X && h.capture == c) {
      var l = h.listener,
          E = h.da || h.src;
      h.Z && Ya(a.c, h);
      e = !1 !== l.call(E, d) && e;
    }
  }

  return e && 0 != d.Ia;
}

var ob = k.JSON.stringify;

function pb(a, b) {
  this.c = a;
  this.f = b;
  this.b = 0;
  this.a = null;
}

pb.prototype.get = function () {
  if (0 < this.b) {
    this.b--;
    var a = this.a;
    this.a = a.next;
    a.next = null;
  } else a = this.c();

  return a;
};

function qb() {
  this.b = this.a = null;
}

var sb = new pb(function () {
  return new rb();
}, function (a) {
  a.reset();
});

qb.prototype.add = function (a, b) {
  var c = sb.get();
  c.set(a, b);
  this.b ? this.b.next = c : this.a = c;
  this.b = c;
};

function tb() {
  var a = ub,
      b = null;
  a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);
  return b;
}

function rb() {
  this.next = this.b = this.a = null;
}

rb.prototype.set = function (a, b) {
  this.a = a;
  this.b = b;
  this.next = null;
};

rb.prototype.reset = function () {
  this.next = this.b = this.a = null;
};

function vb(a) {
  k.setTimeout(function () {
    throw a;
  }, 0);
}

function wb(a, b) {
  xb || yb();
  zb || (xb(), zb = !0);
  ub.add(a, b);
}

var xb;

function yb() {
  var a = k.Promise.resolve(void 0);

  xb = function xb() {
    a.then(Ab);
  };
}

var zb = !1,
    ub = new qb();

function Ab() {
  for (var a; a = tb();) {
    try {
      a.a.call(a.b);
    } catch (c) {
      vb(c);
    }

    var b = sb;
    b.f(a);
    100 > b.b && (b.b++, a.next = b.a, b.a = a);
  }

  zb = !1;
}

function Cb(a, b) {
  G.call(this);
  this.b = a || 1;
  this.a = b || k;
  this.f = u(this.fb, this);
  this.g = w();
}

x(Cb, G);
g = Cb.prototype;
g.ba = !1;
g.L = null;

g.fb = function () {
  if (this.ba) {
    var a = w() - this.g;
    0 < a && a < .8 * this.b ? this.L = this.a.setTimeout(this.f, this.b - a) : (this.L && (this.a.clearTimeout(this.L), this.L = null), this.dispatchEvent("tick"), this.ba && (Db(this), this.start()));
  }
};

g.start = function () {
  this.ba = !0;
  this.L || (this.L = this.a.setTimeout(this.f, this.b), this.g = w());
};

function Db(a) {
  a.ba = !1;
  a.L && (a.a.clearTimeout(a.L), a.L = null);
}

g.G = function () {
  Cb.N.G.call(this);
  Db(this);
  delete this.a;
};

function Eb(a, b, c) {
  if ("function" == p(a)) c && (a = u(a, c));else if (a && "function" == typeof a.handleEvent) a = u(a.handleEvent, a);else throw Error("Invalid listener argument");
  return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0);
}

function Fb(a, b, c) {
  y.call(this);
  this.f = null != c ? u(a, c) : a;
  this.c = b;
  this.b = u(this.$a, this);
  this.a = [];
}

x(Fb, y);
g = Fb.prototype;
g.ea = !1;
g.U = null;

g.Ta = function (a) {
  this.a = arguments;
  this.U ? this.ea = !0 : Gb(this);
};

g.G = function () {
  Fb.N.G.call(this);
  this.U && (k.clearTimeout(this.U), this.U = null, this.ea = !1, this.a = []);
};

g.$a = function () {
  this.U = null;
  this.ea && (this.ea = !1, Gb(this));
};

function Gb(a) {
  a.U = Eb(a.b, a.c);
  a.f.apply(null, a.a);
}

function H(a) {
  y.call(this);
  this.b = a;
  this.a = {};
}

x(H, y);
var Hb = [];

function Ib(a, b, c, d) {
  q(c) || (c && (Hb[0] = c.toString()), c = Hb);

  for (var e = 0; e < c.length; e++) {
    var f = bb(b, c[e], d || a.handleEvent, !1, a.b || a);
    if (!f) break;
    a.a[f.key] = f;
  }
}

function Jb(a) {
  va(a.a, function (b, c) {
    this.a.hasOwnProperty(c) && kb(b);
  }, a);
  a.a = {};
}

H.prototype.G = function () {
  H.N.G.call(this);
  Jb(this);
};

H.prototype.handleEvent = function () {
  throw Error("EventHandler.handleEvent not implemented");
};

function Kb() {}

var I = new G();

function Lb(a) {
  C.call(this, "serverreachability", a);
}

x(Lb, C);

function J(a) {
  I.dispatchEvent(new Lb(I, a));
}

function Mb(a) {
  C.call(this, "statevent", a);
}

x(Mb, C);

function K(a) {
  I.dispatchEvent(new Mb(I, a));
}

function Nb(a) {
  C.call(this, "timingevent", a);
}

x(Nb, C);

function Ob(a, b) {
  if ("function" != p(a)) throw Error("Fn must not be null and must be a function");
  return k.setTimeout(function () {
    a();
  }, b);
}

var Pb = {
  NO_ERROR: 0,
  gb: 1,
  nb: 2,
  mb: 3,
  jb: 4,
  lb: 5,
  ob: 6,
  La: 7,
  TIMEOUT: 8,
  rb: 9
};
var Qb = {
  ib: "complete",
  vb: "success",
  Ma: "error",
  La: "abort",
  tb: "ready",
  ub: "readystatechange",
  TIMEOUT: "timeout",
  pb: "incrementaldata",
  sb: "progress",
  kb: "downloadprogress",
  wb: "uploadprogress"
};

function Rb() {}

Rb.prototype.a = null;

function Sb(a) {
  var b;
  (b = a.a) || (b = a.a = {});
  return b;
}

function Tb() {}

var L = {
  OPEN: "a",
  hb: "b",
  Ma: "c",
  qb: "d"
};

function Ub() {
  C.call(this, "d");
}

x(Ub, C);

function Vb() {
  C.call(this, "c");
}

x(Vb, C);
var Wb;

function Xb() {}

x(Xb, Rb);
Wb = new Xb();

function M(a, b, c) {
  this.g = a;
  this.W = b;
  this.V = c || 1;
  this.I = new H(this);
  this.O = Yb;
  a = Ea ? 125 : void 0;
  this.P = new Cb(a);
  this.h = null;
  this.b = !1;
  this.l = this.D = this.f = this.F = this.v = this.R = this.i = null;
  this.j = [];
  this.a = null;
  this.A = 0;
  this.c = this.w = null;
  this.o = -1;
  this.m = !1;
  this.J = 0;
  this.B = null;
  this.s = this.S = this.H = !1;
}

var Yb = 45E3,
    Zb = {},
    $b = {};
g = M.prototype;

g.setTimeout = function (a) {
  this.O = a;
};

function ac(a, b, c) {
  a.F = 1;
  a.f = bc(N(b));
  a.l = c;
  a.H = !0;
  cc(a, null);
}

function dc(a, b, c, d) {
  a.F = 1;
  a.f = bc(N(b));
  a.l = null;
  a.H = c;
  cc(a, d);
}

function cc(a, b) {
  a.v = w();
  ec(a);
  a.D = N(a.f);
  fc(a.D, "t", a.V);
  a.A = 0;
  a.a = a.g.$(a.g.Y() ? b : null);
  0 < a.J && (a.B = new Fb(u(a.Ja, a, a.a), a.J));
  Ib(a.I, a.a, "readystatechange", a.cb);
  b = a.h ? wa(a.h) : {};
  a.l ? (a.w || (a.w = "POST"), b["Content-Type"] = "application/x-www-form-urlencoded", a.a.ca(a.D, a.w, a.l, b)) : (a.w = "GET", a.a.ca(a.D, a.w, null, b));
  J(1);
}

g.cb = function (a) {
  a = a.target;
  var b = this.B;
  b && 3 == O(a) ? b.Ta() : this.Ja(a);
};

g.Ja = function (a) {
  try {
    if (a == this.a) a: {
      var b = O(this.a),
          c = this.a.ya(),
          d = this.a.T();

      if (!(3 > b || 3 == b && !Ea && !this.a.aa())) {
        this.m || 4 != b || 7 == c || (8 == c || 0 >= d ? J(3) : J(2));
        gc(this);
        var e = this.a.T();
        this.o = e;
        var f = this.a.aa();

        if (this.b = 200 == e) {
          if (this.S && !this.s) {
            b: {
              if (this.a) {
                var h = hc(this.a, "X-HTTP-Initial-Response");

                if (h && !qa(h)) {
                  var l = h;
                  break b;
                }
              }

              l = null;
            }

            if (l) this.s = !0, ic(this, l);else {
              this.b = !1;
              this.c = 3;
              K(12);
              P(this);
              jc(this);
              break a;
            }
          }

          this.H ? (kc(this, b, f), Ea && this.b && 3 == b && (Ib(this.I, this.P, "tick", this.bb), this.P.start())) : ic(this, f);
          4 == b && P(this);
          this.b && !this.m && (4 == b ? this.g.na(this) : (this.b = !1, ec(this)));
        } else 400 == e && 0 < f.indexOf("Unknown SID") ? (this.c = 3, K(12)) : (this.c = 0, K(13)), P(this), jc(this);
      }
    }
  } catch (E) {} finally {}
};

function kc(a, b, c) {
  for (var d = !0; !a.m && a.A < c.length;) {
    var e = lc(a, c);

    if (e == $b) {
      4 == b && (a.c = 4, K(14), d = !1);
      break;
    } else if (e == Zb) {
      a.c = 4;
      K(15);
      d = !1;
      break;
    } else ic(a, e);
  }

  4 == b && 0 == c.length && (a.c = 1, K(16), d = !1);
  a.b = a.b && d;
  d || (P(a), jc(a));
}

g.bb = function () {
  if (this.a) {
    var a = O(this.a),
        b = this.a.aa();
    this.A < b.length && (gc(this), kc(this, a, b), this.b && 4 != a && ec(this));
  }
};

function lc(a, b) {
  var c = a.A,
      d = b.indexOf("\n", c);
  if (-1 == d) return $b;
  c = Number(b.substring(c, d));
  if (isNaN(c)) return Zb;
  d += 1;
  if (d + c > b.length) return $b;
  b = b.substr(d, c);
  a.A = d + c;
  return b;
}

g.cancel = function () {
  this.m = !0;
  P(this);
};

function ec(a) {
  a.R = w() + a.O;
  mc(a, a.O);
}

function mc(a, b) {
  if (null != a.i) throw Error("WatchDog timer not null");
  a.i = Ob(u(a.ab, a), b);
}

function gc(a) {
  a.i && (k.clearTimeout(a.i), a.i = null);
}

g.ab = function () {
  this.i = null;
  var a = w();
  0 <= a - this.R ? (2 != this.F && (J(3), K(17)), P(this), this.c = 2, jc(this)) : mc(this, this.R - a);
};

function jc(a) {
  a.g.Ca() || a.m || a.g.na(a);
}

function P(a) {
  gc(a);
  var b = a.B;
  b && "function" == typeof b.la && b.la();
  a.B = null;
  Db(a.P);
  Jb(a.I);
  a.a && (b = a.a, a.a = null, b.abort(), b.la());
}

function ic(a, b) {
  try {
    a.g.Fa(a, b), J(4);
  } catch (c) {}
}

function nc(a) {
  if (a.C && "function" == typeof a.C) return a.C();
  if (m(a)) return a.split("");

  if (ca(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) b.push(a[d]);

    return b;
  }

  b = [];
  c = 0;

  for (d in a) b[c++] = a[d];

  return b;
}

function oc(a, b) {
  if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (ca(a) || m(a)) la(a, b, void 0);else {
    if (a.K && "function" == typeof a.K) var c = a.K();else if (a.C && "function" == typeof a.C) c = void 0;else if (ca(a) || m(a)) {
      c = [];

      for (var d = a.length, e = 0; e < d; e++) c.push(e);
    } else for (e in c = [], d = 0, a) c[d++] = e;
    d = nc(a);
    e = d.length;

    for (var f = 0; f < e; f++) b.call(void 0, d[f], c && c[f], a);
  }
}

function Q(a, b) {
  this.b = {};
  this.a = [];
  this.c = 0;
  var c = arguments.length;

  if (1 < c) {
    if (c % 2) throw Error("Uneven number of arguments");

    for (var d = 0; d < c; d += 2) this.set(arguments[d], arguments[d + 1]);
  } else if (a) if (a instanceof Q) for (c = a.K(), d = 0; d < c.length; d++) this.set(c[d], a.get(c[d]));else for (d in a) this.set(d, a[d]);
}

g = Q.prototype;

g.C = function () {
  pc(this);

  for (var a = [], b = 0; b < this.a.length; b++) a.push(this.b[this.a[b]]);

  return a;
};

g.K = function () {
  pc(this);
  return this.a.concat();
};

function qc(a) {
  a.b = {};
  a.a.length = 0;
  a.c = 0;
}

function rc(a, b) {
  R(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && pc(a));
}

function pc(a) {
  if (a.c != a.a.length) {
    for (var b = 0, c = 0; b < a.a.length;) {
      var d = a.a[b];
      R(a.b, d) && (a.a[c++] = d);
      b++;
    }

    a.a.length = c;
  }

  if (a.c != a.a.length) {
    var e = {};

    for (c = b = 0; b < a.a.length;) d = a.a[b], R(e, d) || (a.a[c++] = d, e[d] = 1), b++;

    a.a.length = c;
  }
}

g.get = function (a, b) {
  return R(this.b, a) ? this.b[a] : b;
};

g.set = function (a, b) {
  R(this.b, a) || (this.c++, this.a.push(a));
  this.b[a] = b;
};

g.forEach = function (a, b) {
  for (var c = this.K(), d = 0; d < c.length; d++) {
    var e = c[d],
        f = this.get(e);
    a.call(b, f, e, this);
  }
};

function R(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
}

var sc = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

function tc(a, b) {
  if (a) {
    a = a.split("&");

    for (var c = 0; c < a.length; c++) {
      var d = a[c].indexOf("="),
          e = null;

      if (0 <= d) {
        var f = a[c].substring(0, d);
        e = a[c].substring(d + 1);
      } else f = a[c];

      b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
    }
  }
}

function S(a, b) {
  this.b = this.j = this.f = "";
  this.i = null;
  this.g = this.a = "";
  this.h = !1;
  var c;
  a instanceof S ? (this.h = void 0 !== b ? b : a.h, uc(this, a.f), this.j = a.j, vc(this, a.b), wc(this, a.i), this.a = a.a, xc(this, yc(a.c)), this.g = a.g) : a && (c = String(a).match(sc)) ? (this.h = !!b, uc(this, c[1] || "", !0), this.j = zc(c[2] || ""), vc(this, c[3] || "", !0), wc(this, c[4]), this.a = zc(c[5] || "", !0), xc(this, c[6] || "", !0), this.g = zc(c[7] || "")) : (this.h = !!b, this.c = new Ac(null, this.h));
}

S.prototype.toString = function () {
  var a = [],
      b = this.f;
  b && a.push(Bc(b, Cc, !0), ":");
  var c = this.b;
  if (c || "file" == b) a.push("//"), (b = this.j) && a.push(Bc(b, Cc, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.i, null != c && a.push(":", String(c));
  if (c = this.a) this.b && "/" != c.charAt(0) && a.push("/"), a.push(Bc(c, "/" == c.charAt(0) ? Dc : Ec, !0));
  (c = this.c.toString()) && a.push("?", c);
  (c = this.g) && a.push("#", Bc(c, Fc));
  return a.join("");
};

S.prototype.resolve = function (a) {
  var b = N(this),
      c = !!a.f;
  c ? uc(b, a.f) : c = !!a.j;
  c ? b.j = a.j : c = !!a.b;
  c ? vc(b, a.b) : c = null != a.i;
  var d = a.a;
  if (c) wc(b, a.i);else if (c = !!a.a) {
    if ("/" != d.charAt(0)) if (this.b && !this.a) d = "/" + d;else {
      var e = b.a.lastIndexOf("/");
      -1 != e && (d = b.a.substr(0, e + 1) + d);
    }
    e = d;
    if (".." == e || "." == e) d = "";else if (z(e, "./") || z(e, "/.")) {
      d = 0 == e.lastIndexOf("/", 0);
      e = e.split("/");

      for (var f = [], h = 0; h < e.length;) {
        var l = e[h++];
        "." == l ? d && h == e.length && f.push("") : ".." == l ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && h == e.length && f.push("")) : (f.push(l), d = !0);
      }

      d = f.join("/");
    } else d = e;
  }
  c ? b.a = d : c = "" !== a.c.toString();
  c ? xc(b, yc(a.c)) : c = !!a.g;
  c && (b.g = a.g);
  return b;
};

function N(a) {
  return new S(a);
}

function uc(a, b, c) {
  a.f = c ? zc(b, !0) : b;
  a.f && (a.f = a.f.replace(/:$/, ""));
}

function vc(a, b, c) {
  a.b = c ? zc(b, !0) : b;
}

function wc(a, b) {
  if (b) {
    b = Number(b);
    if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);
    a.i = b;
  } else a.i = null;
}

function xc(a, b, c) {
  b instanceof Ac ? (a.c = b, Gc(a.c, a.h)) : (c || (b = Bc(b, Hc)), a.c = new Ac(b, a.h));
}

function T(a, b, c) {
  a.c.set(b, c);
}

function fc(a, b, c) {
  q(c) || (c = [String(c)]);
  Ic(a.c, b, c);
}

function bc(a) {
  T(a, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ w()).toString(36));
  return a;
}

function Jc(a) {
  return a instanceof S ? N(a) : new S(a, void 0);
}

function Kc(a, b, c, d) {
  var e = new S(null, void 0);
  a && uc(e, a);
  b && vc(e, b);
  c && wc(e, c);
  d && (e.a = d);
  return e;
}

function zc(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
}

function Bc(a, b, c) {
  return m(a) ? (a = encodeURI(a).replace(b, Lc), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
}

function Lc(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
}

var Cc = /[#\/\?@]/g,
    Ec = /[#\?:]/g,
    Dc = /[#\?]/g,
    Hc = /[#\?@]/g,
    Fc = /#/g;

function Ac(a, b) {
  this.b = this.a = null;
  this.c = a || null;
  this.f = !!b;
}

function U(a) {
  a.a || (a.a = new Q(), a.b = 0, a.c && tc(a.c, function (b, c) {
    a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
  }));
}

g = Ac.prototype;

g.add = function (a, b) {
  U(this);
  this.c = null;
  a = V(this, a);
  var c = this.a.get(a);
  c || this.a.set(a, c = []);
  c.push(b);
  this.b += 1;
  return this;
};

function Mc(a, b) {
  U(a);
  b = V(a, b);
  R(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, rc(a.a, b));
}

function Nc(a, b) {
  U(a);
  b = V(a, b);
  return R(a.a.b, b);
}

g.forEach = function (a, b) {
  U(this);
  this.a.forEach(function (c, d) {
    la(c, function (e) {
      a.call(b, e, d, this);
    }, this);
  }, this);
};

g.K = function () {
  U(this);

  for (var a = this.a.C(), b = this.a.K(), c = [], d = 0; d < b.length; d++) for (var e = a[d], f = 0; f < e.length; f++) c.push(b[d]);

  return c;
};

g.C = function (a) {
  U(this);
  var b = [];
  if (m(a)) Nc(this, a) && (b = oa(b, this.a.get(V(this, a))));else {
    a = this.a.C();

    for (var c = 0; c < a.length; c++) b = oa(b, a[c]);
  }
  return b;
};

g.set = function (a, b) {
  U(this);
  this.c = null;
  a = V(this, a);
  Nc(this, a) && (this.b -= this.a.get(a).length);
  this.a.set(a, [b]);
  this.b += 1;
  return this;
};

g.get = function (a, b) {
  if (!a) return b;
  a = this.C(a);
  return 0 < a.length ? String(a[0]) : b;
};

function Ic(a, b, c) {
  Mc(a, b);
  0 < c.length && (a.c = null, a.a.set(V(a, b), pa(c)), a.b += c.length);
}

g.toString = function () {
  if (this.c) return this.c;
  if (!this.a) return "";

  for (var a = [], b = this.a.K(), c = 0; c < b.length; c++) {
    var d = b[c],
        e = encodeURIComponent(String(d));
    d = this.C(d);

    for (var f = 0; f < d.length; f++) {
      var h = e;
      "" !== d[f] && (h += "=" + encodeURIComponent(String(d[f])));
      a.push(h);
    }
  }

  return this.c = a.join("&");
};

function yc(a) {
  var b = new Ac();
  b.c = a.c;
  a.a && (b.a = new Q(a.a), b.b = a.b);
  return b;
}

function V(a, b) {
  b = String(b);
  a.f && (b = b.toLowerCase());
  return b;
}

function Gc(a, b) {
  b && !a.f && (U(a), a.c = null, a.a.forEach(function (c, d) {
    var e = d.toLowerCase();
    d != e && (Mc(this, d), Ic(this, e, c));
  }, a));
  a.f = b;
}

function Qc() {}

function Rc() {}

x(Rc, Qc);

function Sc(a) {
  this.a = a;
  this.b = this.h = null;
  this.g = !1;
  this.i = null;
  this.c = -1;
  this.l = this.f = null;
}

g = Sc.prototype;
g.M = null;

function Uc(a) {
  var b = a.a.F.a;
  if (null != b) K(4), b ? (K(10), Vc(a.a, a, !1)) : (K(11), Vc(a.a, a, !0));else {
    a.b = new M(a, void 0, void 0);
    a.b.h = a.h;
    b = a.a;
    b = Wc(b, b.Y() ? a.f : null, a.i);
    K(4);
    fc(b, "TYPE", "xmlhttp");
    var c = a.a.j,
        d = a.a.I;
    c && d && T(b, c, d);
    dc(a.b, b, !1, a.f);
  }
}

g.$ = function (a) {
  return this.a.$(a);
};

g.abort = function () {
  this.b && (this.b.cancel(), this.b = null);
  this.c = -1;
};

g.Ca = function () {
  return !1;
};

g.Fa = function (a, b) {
  this.c = a.o;

  if (0 == this.M) {
    if (!this.a.o && (a = a.a)) {
      var c = hc(a, "X-Client-Wire-Protocol");
      this.l = c ? c : null;
      this.a.j && (a = hc(a, "X-HTTP-Session-Id")) && (this.a.I = a);
    }

    if (b) {
      try {
        var d = this.a.ja.a.parse(b);
      } catch (e) {
        b = this.a;
        b.m = this.c;
        W(b, 2);
        return;
      }

      this.f = d[0];
    } else b = this.a, b.m = this.c, W(b, 2);
  } else if (1 == this.M) if (this.g) K(6);else if ("11111" == b) {
    if (K(5), this.g = !0, !B || 10 <= Number(Na)) this.c = 200, this.b.cancel(), K(11), Vc(this.a, this, !0);
  } else K(7), this.g = !1;
};

g.na = function () {
  this.c = this.b.o;
  if (this.b.b) 0 == this.M ? (this.M = 1, Uc(this)) : 1 == this.M && (this.g ? (K(11), Vc(this.a, this, !0)) : (K(10), Vc(this.a, this, !1)));else {
    0 == this.M ? K(8) : 1 == this.M && K(9);
    var a = this.a;
    a.m = this.c;
    W(a, 2);
  }
};

g.Y = function () {
  return this.a.Y();
};

g.ma = function () {
  return this.a.ma();
};

function Xc() {
  this.a = this.b = null;
}

function Yc() {
  this.a = new Q();
}

function Zc(a) {
  var b = typeof a;
  return "object" == b && a || "function" == b ? "o" + (a[t] || (a[t] = ++da)) : b.charAt(0) + a;
}

Yc.prototype.add = function (a) {
  this.a.set(Zc(a), a);
};

Yc.prototype.C = function () {
  return this.a.C();
};

function $c(a, b) {
  this.b = a;
  this.a = b;
}

function ad(a) {
  this.g = a || bd;
  k.PerformanceNavigationTiming ? (a = k.performance.getEntriesByType("navigation"), a = 0 < a.length && ("hq" == a[0].nextHopProtocol || "h2" == a[0].nextHopProtocol)) : a = !!(k.ka && k.ka.Da && k.ka.Da() && k.ka.Da().yb);
  this.f = a ? this.g : 1;
  this.a = null;
  1 < this.f && (this.a = new Yc());
  this.b = null;
  this.c = [];
}

var bd = 10;

function cd(a, b) {
  !a.a && (z(b, "spdy") || z(b, "quic") || z(b, "h2")) && (a.f = a.g, a.a = new Yc(), a.b && (dd(a, a.b), a.b = null));
}

function ed(a) {
  return a.b ? !0 : a.a ? a.a.a.c >= a.f : !1;
}

function fd(a) {
  return a.b ? 1 : a.a ? a.a.a.c : 0;
}

function gd(a, b) {
  a.b ? a = a.b == b : a.a ? (b = Zc(b), a = R(a.a.a.b, b)) : a = !1;
  return a;
}

function dd(a, b) {
  a.a ? a.a.add(b) : a.b = b;
}

function hd(a, b) {
  if (a.b && a.b == b) a.b = null;else {
    var c;
    if (c = a.a) c = Zc(b), c = R(a.a.a.b, c);
    c && rc(a.a.a, Zc(b));
  }
}

ad.prototype.cancel = function () {
  this.c = id(this);
  this.b ? (this.b.cancel(), this.b = null) : this.a && 0 != this.a.a.c && (la(this.a.C(), function (a) {
    a.cancel();
  }), qc(this.a.a));
};

function id(a) {
  if (null != a.b) return a.c.concat(a.b.j);

  if (null != a.a && 0 != a.a.a.c) {
    var b = a.c;
    la(a.a.C(), function (c) {
      b = b.concat(c.j);
    });
    return b;
  }

  return pa(a.c);
}

function jd() {}

jd.prototype.stringify = function (a) {
  return k.JSON.stringify(a, void 0);
};

jd.prototype.parse = function (a) {
  return k.JSON.parse(a, void 0);
};

function kd() {
  this.a = new jd();
}

function ld(a, b, c) {
  var d = c || "";

  try {
    oc(a, function (e, f) {
      var h = e;
      r(e) && (h = ob(e));
      b.push(d + f + "=" + encodeURIComponent(h));
    });
  } catch (e) {
    throw b.push(d + "type=" + encodeURIComponent("_badmap")), e;
  }
}

function md(a, b) {
  var c = new Kb();

  if (k.Image) {
    var d = new Image();
    d.onload = v(nd, c, d, "TestLoadImage: loaded", !0, b);
    d.onerror = v(nd, c, d, "TestLoadImage: error", !1, b);
    d.onabort = v(nd, c, d, "TestLoadImage: abort", !1, b);
    d.ontimeout = v(nd, c, d, "TestLoadImage: timeout", !1, b);
    k.setTimeout(function () {
      if (d.ontimeout) d.ontimeout();
    }, 1E4);
    d.src = a;
  } else b(!1);
}

function nd(a, b, c, d, e) {
  try {
    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);
  } catch (f) {}
}

var od = k.JSON.parse;

function X(a) {
  G.call(this);
  this.headers = new Q();
  this.H = a || null;
  this.b = !1;
  this.s = this.a = null;
  this.A = "";
  this.h = 0;
  this.f = "";
  this.g = this.w = this.l = this.v = !1;
  this.o = 0;
  this.m = null;
  this.I = pd;
  this.D = this.F = !1;
}

x(X, G);
var pd = "",
    qd = /^https?$/i,
    rd = ["POST", "PUT"];
g = X.prototype;

g.ca = function (a, b, c, d) {
  if (this.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.A + "; newUri=" + a);
  b = b ? b.toUpperCase() : "GET";
  this.A = a;
  this.f = "";
  this.h = 0;
  this.v = !1;
  this.b = !0;
  this.a = new XMLHttpRequest();
  this.s = this.H ? Sb(this.H) : Sb(Wb);
  this.a.onreadystatechange = u(this.Ea, this);

  try {
    this.w = !0, this.a.open(b, String(a), !0), this.w = !1;
  } catch (f) {
    sd(this, f);
    return;
  }

  a = c || "";
  var e = new Q(this.headers);
  d && oc(d, function (f, h) {
    e.set(h, f);
  });
  d = ma(e.K());
  c = k.FormData && a instanceof k.FormData;
  !(0 <= ja(rd, b)) || d || c || e.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
  e.forEach(function (f, h) {
    this.a.setRequestHeader(h, f);
  }, this);
  this.I && (this.a.responseType = this.I);
  "withCredentials" in this.a && this.a.withCredentials !== this.F && (this.a.withCredentials = this.F);

  try {
    td(this), 0 < this.o && ((this.D = ud(this.a)) ? (this.a.timeout = this.o, this.a.ontimeout = u(this.Ba, this)) : this.m = Eb(this.Ba, this.o, this)), this.l = !0, this.a.send(a), this.l = !1;
  } catch (f) {
    sd(this, f);
  }
};

function ud(a) {
  return B && Ma(9) && aa(a.timeout) && void 0 !== a.ontimeout;
}

function na(a) {
  return "content-type" == a.toLowerCase();
}

g.Ba = function () {
  "undefined" != typeof goog && this.a && (this.f = "Timed out after " + this.o + "ms, aborting", this.h = 8, this.dispatchEvent("timeout"), this.abort(8));
};

function sd(a, b) {
  a.b = !1;
  a.a && (a.g = !0, a.a.abort(), a.g = !1);
  a.f = b;
  a.h = 5;
  vd(a);
  wd(a);
}

function vd(a) {
  a.v || (a.v = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
}

g.abort = function (a) {
  this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, this.dispatchEvent("complete"), this.dispatchEvent("abort"), wd(this));
};

g.G = function () {
  this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), wd(this, !0));
  X.N.G.call(this);
};

g.Ea = function () {
  this.j || (this.w || this.l || this.g ? xd(this) : this.Za());
};

g.Za = function () {
  xd(this);
};

function xd(a) {
  if (a.b && "undefined" != typeof goog && (!a.s[1] || 4 != O(a) || 2 != a.T())) if (a.l && 4 == O(a)) Eb(a.Ea, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == O(a)) {
    a.b = !1;

    try {
      var b = a.T();

      a: switch (b) {
        case 200:
        case 201:
        case 202:
        case 204:
        case 206:
        case 304:
        case 1223:
          var c = !0;
          break a;

        default:
          c = !1;
      }

      var d;

      if (!(d = c)) {
        var e;

        if (e = 0 === b) {
          var f = String(a.A).match(sc)[1] || null;

          if (!f && k.self && k.self.location) {
            var h = k.self.location.protocol;
            f = h.substr(0, h.length - 1);
          }

          e = !qd.test(f ? f.toLowerCase() : "");
        }

        d = e;
      }

      if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
        a.h = 6;

        try {
          var l = 2 < O(a) ? a.a.statusText : "";
        } catch (E) {
          l = "";
        }

        a.f = l + " [" + a.T() + "]";
        vd(a);
      }
    } finally {
      wd(a);
    }
  }
}

function wd(a, b) {
  if (a.a) {
    td(a);
    var c = a.a,
        d = a.s[0] ? ba : null;
    a.a = null;
    a.s = null;
    b || a.dispatchEvent("ready");

    try {
      c.onreadystatechange = d;
    } catch (e) {}
  }
}

function td(a) {
  a.a && a.D && (a.a.ontimeout = null);
  a.m && (k.clearTimeout(a.m), a.m = null);
}

function O(a) {
  return a.a ? a.a.readyState : 0;
}

g.T = function () {
  try {
    return 2 < O(this) ? this.a.status : -1;
  } catch (a) {
    return -1;
  }
};

g.aa = function () {
  try {
    return this.a ? this.a.responseText : "";
  } catch (a) {
    return "";
  }
};

g.Ua = function (a) {
  if (this.a) {
    var b = this.a.responseText;
    a && 0 == b.indexOf(a) && (b = b.substring(a.length));
    return od(b);
  }
};

function hc(a, b) {
  return a.a ? a.a.getResponseHeader(b) : null;
}

g.ya = function () {
  return this.h;
};

g.Xa = function () {
  return m(this.f) ? this.f : String(this.f);
};

function yd(a) {
  var b = "";
  va(a, function (c, d) {
    b += d;
    b += ":";
    b += c;
    b += "\r\n";
  });
  return b;
}

function zd(a, b, c) {
  a: {
    for (d in c) {
      var d = !1;
      break a;
    }

    d = !0;
  }

  if (d) return a;
  c = yd(c);

  if (m(a)) {
    b = encodeURIComponent(String(b));
    c = null != c ? "=" + encodeURIComponent(String(c)) : "";

    if (b += c) {
      c = a.indexOf("#");
      0 > c && (c = a.length);
      d = a.indexOf("?");

      if (0 > d || d > c) {
        d = c;
        var e = "";
      } else e = a.substring(d + 1, c);

      a = [a.substr(0, d), e, a.substr(c)];
      c = a[1];
      a[1] = b ? c ? c + "&" + b : b : c;
      a = a[0] + (a[1] ? "?" + a[1] : "") + a[2];
    }

    return a;
  }

  T(a, b, c);
  return a;
}

function Ad(a) {
  this.f = [];
  this.F = new Xc();
  this.ga = this.pa = this.B = this.ha = this.a = this.I = this.j = this.V = this.g = this.J = this.i = null;
  this.Qa = this.P = 0;
  this.Oa = !!n("internalChannelParams.failFast", a);
  this.ia = this.w = this.s = this.l = this.h = this.c = null;
  this.oa = !0;
  this.m = this.ra = this.O = -1;
  this.S = this.v = this.A = 0;
  this.Na = n("internalChannelParams.baseRetryDelayMs", a) || 5E3;
  this.Ra = n("internalChannelParams.retryDelaySeedMs", a) || 1E4;
  this.Pa = n("internalChannelParams.forwardChannelMaxRetries", a) || 2;
  this.qa = n("internalChannelParams.forwardChannelRequestTimeoutMs", a) || 2E4;
  this.Ka = a && a.zb || void 0;
  this.D = void 0;
  this.R = a && a.supportsCrossDomainXhr || !1;
  this.H = "";
  this.b = new ad(a && a.concurrentRequestLimit);
  this.ja = new kd();
  this.o = a && void 0 !== a.backgroundChannelTest ? a.backgroundChannelTest : !0;
  (this.W = a && a.fastHandshake || !1) && !this.o && (this.o = !0);
  a && a.forceLongPolling && (this.oa = !1);
  this.fa = void 0;
}

g = Ad.prototype;
g.wa = 8;
g.u = 1;

function Bd(a) {
  Cd(a);

  if (3 == a.u) {
    var b = a.P++,
        c = N(a.B);
    T(c, "SID", a.H);
    T(c, "RID", b);
    T(c, "TYPE", "terminate");
    Dd(a, c);
    b = new M(a, b, void 0);
    b.F = 2;
    b.f = bc(N(c));
    c = !1;
    k.navigator && k.navigator.sendBeacon && (c = k.navigator.sendBeacon(b.f.toString(), ""));
    !c && k.Image && (new Image().src = b.f, c = !0);
    c || (b.a = b.g.$(null), b.a.ca(b.f));
    b.v = w();
    ec(b);
  }

  Ed(a);
}

function Cd(a) {
  a.w && (a.w.abort(), a.w = null);
  a.a && (a.a.cancel(), a.a = null);
  a.l && (k.clearTimeout(a.l), a.l = null);
  Fd(a);
  a.b.cancel();
  a.h && (aa(a.h) && k.clearTimeout(a.h), a.h = null);
}

function Gd(a, b) {
  a.f.push(new $c(a.Qa++, b));
  3 == a.u && Hd(a);
}

g.Ca = function () {
  return 0 == this.u;
};

function Hd(a) {
  ed(a.b) || a.h || (a.h = !0, wb(a.Ha, a), a.A = 0);
}

function Id(a, b) {
  if (fd(a.b) >= a.b.f - (a.h ? 1 : 0)) return !1;
  if (a.h) return a.f = b.j.concat(a.f), !0;
  if (1 == a.u || 2 == a.u || a.A >= (a.Oa ? 0 : a.Pa)) return !1;
  a.h = Ob(u(a.Ha, a, b), Jd(a, a.A));
  a.A++;
  return !0;
}

g.Ha = function (a) {
  if (this.h) if (this.h = null, 1 == this.u) {
    if (!a) {
      this.P = Math.floor(1E5 * Math.random());
      a = this.P++;
      var b = new M(this, a, void 0),
          c = this.i;
      this.J && (c ? (c = wa(c), ya(c, this.J)) : c = this.J);
      null === this.g && (b.h = c);
      var d;
      if (this.W) a: {
        for (var e = d = 0; e < this.f.length; e++) {
          b: {
            var f = this.f[e];

            if ("__data__" in f.a && (f = f.a.__data__, m(f))) {
              f = f.length;
              break b;
            }

            f = void 0;
          }

          if (void 0 === f) break;
          d += f;

          if (4096 < d) {
            d = e;
            break a;
          }

          if (4096 === d || e === this.f.length - 1) {
            d = e + 1;
            break a;
          }
        }

        d = 1E3;
      } else d = 1E3;
      d = Kd(this, b, d);
      e = N(this.B);
      T(e, "RID", a);
      T(e, "CVER", 22);
      this.o && this.j && T(e, "X-HTTP-Session-Id", this.j);
      Dd(this, e);
      this.g && c && zd(e, this.g, c);
      dd(this.b, b);
      this.W ? (T(e, "$req", d), T(e, "SID", "null"), b.S = !0, ac(b, e, null)) : ac(b, e, d);
      this.u = 2;
    }
  } else 3 == this.u && (a ? Ld(this, a) : 0 == this.f.length || ed(this.b) || Ld(this));
};

function Ld(a, b) {
  var c;
  b ? c = b.W : c = a.P++;
  var d = N(a.B);
  T(d, "SID", a.H);
  T(d, "RID", c);
  T(d, "AID", a.O);
  Dd(a, d);
  a.g && a.i && zd(d, a.g, a.i);
  c = new M(a, c, a.A + 1);
  null === a.g && (c.h = a.i);
  b && (a.f = b.j.concat(a.f));
  b = Kd(a, c, 1E3);
  c.setTimeout(Math.round(.5 * a.qa) + Math.round(.5 * a.qa * Math.random()));
  dd(a.b, c);
  ac(c, d, b);
}

function Dd(a, b) {
  a.c && oc({}, function (c, d) {
    T(b, d, c);
  });
}

function Kd(a, b, c) {
  c = Math.min(a.f.length, c);
  var d = a.c ? u(a.c.Sa, a.c, a) : null;

  a: for (var e = a.f, f = -1;;) {
    var h = ["count=" + c];
    -1 == f ? 0 < c ? (f = e[0].b, h.push("ofs=" + f)) : f = 0 : h.push("ofs=" + f);

    for (var l = !0, E = 0; E < c; E++) {
      var Bb = e[E].b,
          Tc = e[E].a;
      Bb -= f;
      if (0 > Bb) f = Math.max(0, e[E].b - 100), l = !1;else try {
        ld(Tc, h, "req" + Bb + "_");
      } catch (Ud) {
        d && d(Tc);
      }
    }

    if (l) {
      d = h.join("&");
      break a;
    }
  }

  a = a.f.splice(0, c);
  b.j = a;
  return d;
}

function Md(a) {
  a.a || a.l || (a.S = 1, wb(a.Ga, a), a.v = 0);
}

function Nd(a) {
  if (a.a || a.l || 3 <= a.v) return !1;
  a.S++;
  a.l = Ob(u(a.Ga, a), Jd(a, a.v));
  a.v++;
  return !0;
}

g.Ga = function () {
  this.l = null;
  this.a = new M(this, "rpc", this.S);
  null === this.g && (this.a.h = this.i);
  this.a.J = 0;
  var a = N(this.pa);
  T(a, "RID", "rpc");
  T(a, "SID", this.H);
  T(a, "CI", this.ia ? "0" : "1");
  T(a, "AID", this.O);
  Dd(this, a);
  T(a, "TYPE", "xmlhttp");
  this.g && this.i && zd(a, this.g, this.i);
  this.D && this.a.setTimeout(this.D);
  dc(this.a, a, !0, this.ga);
};

function Vc(a, b, c) {
  var d = b.l;
  d && cd(a.b, d);
  a.ia = a.oa && c;
  a.m = b.c;
  a.B = Wc(a, null, a.ha);
  Hd(a);
}

g.Fa = function (a, b) {
  if (0 != this.u && (this.a == a || gd(this.b, a))) if (this.m = a.o, !a.s && gd(this.b, a) && 3 == this.u) {
    try {
      var c = this.ja.a.parse(b);
    } catch (f) {
      c = null;
    }

    if (q(c) && 3 == c.length) {
      b = c;
      if (0 == b[0]) a: {
        if (!this.l) {
          if (this.a) if (this.a.v + 3E3 < a.v) Fd(this), this.a.cancel(), this.a = null;else break a;
          Nd(this);
          K(18);
        }
      } else this.ra = b[1], 0 < this.ra - this.O && 37500 > b[2] && this.ia && 0 == this.v && !this.s && (this.s = Ob(u(this.Ya, this), 6E3));

      if (1 >= fd(this.b) && this.fa) {
        try {
          this.fa();
        } catch (f) {}

        this.fa = void 0;
      }
    } else W(this, 11);
  } else if ((a.s || this.a == a) && Fd(this), !qa(b)) for (b = c = this.ja.a.parse(b), c = 0; c < b.length; c++) {
    var d = b[c];
    this.O = d[0];
    d = d[1];
    if (2 == this.u) {
      if ("c" == d[0]) {
        this.H = d[1];
        this.ga = d[2];
        var e = d[3];
        null != e && (this.wa = e);
        d = d[5];
        null != d && aa(d) && 0 < d && (this.D = 1.5 * d);
        this.o && (d = a.a) && ((e = hc(d, "X-Client-Wire-Protocol")) && cd(this.b, e), this.j && (d = hc(d, "X-HTTP-Session-Id"))) && (this.I = d, T(this.B, this.j, d));
        this.u = 3;
        this.c && this.c.va();
        d = a;
        this.pa = Wc(this, this.Y() ? this.ga : null, this.ha);
        d.s ? (hd(this.b, d), (e = this.D) && d.setTimeout(e), d.i && (gc(d), ec(d)), this.a = d) : Md(this);
        0 < this.f.length && Hd(this);
      } else "stop" != d[0] && "close" != d[0] || W(this, 7);
    } else 3 == this.u && ("stop" == d[0] || "close" == d[0] ? "stop" == d[0] ? W(this, 7) : Bd(this) : "noop" != d[0] && this.c && this.c.ua(d), this.v = 0);
  }
};

g.Ya = function () {
  null != this.s && (this.s = null, this.a.cancel(), this.a = null, Nd(this), K(19));
};

function Fd(a) {
  null != a.s && (k.clearTimeout(a.s), a.s = null);
}

g.na = function (a) {
  var b = null;

  if (this.a == a) {
    Fd(this);
    this.a = null;
    var c = 2;
  } else if (gd(this.b, a)) b = a.j, hd(this.b, a), c = 1;else return;

  this.m = a.o;
  if (0 != this.u) if (a.b) 1 == c ? (b = w() - a.v, I.dispatchEvent(new Nb(I, a.l ? a.l.length : 0, b, this.A)), Hd(this)) : Md(this);else {
    var d = a.c;
    if (3 == d || 0 == d && 0 < this.m || !(1 == c && Id(this, a) || 2 == c && Nd(this))) switch (b && 0 < b.length && (a = this.b, a.c = a.c.concat(b)), d) {
      case 1:
        W(this, 5);
        break;

      case 4:
        W(this, 10);
        break;

      case 3:
        W(this, 6);
        break;

      default:
        W(this, 2);
    }
  }
};

function Jd(a, b) {
  var c = a.Na + Math.floor(Math.random() * a.Ra);
  a.ma() || (c *= 2);
  return c * b;
}

function W(a, b) {
  if (2 == b) {
    var c = null;
    a.c && (c = null);
    var d = u(a.eb, a);
    c || (c = new S("//www.google.com/images/cleardot.gif"), k.location && "http" == k.location.protocol || uc(c, "https"), bc(c));
    md(c.toString(), d);
  } else K(2);

  a.u = 0;
  a.c && a.c.ta(b);
  Ed(a);
  Cd(a);
}

g.eb = function (a) {
  a ? K(2) : K(1);
};

function Ed(a) {
  a.u = 0;
  a.m = -1;

  if (a.c) {
    if (0 != id(a.b).length || 0 != a.f.length) a.b.c.length = 0, pa(a.f), a.f.length = 0;
    a.c.sa();
  }
}

function Wc(a, b, c) {
  var d = Jc(c);
  if ("" != d.b) b && vc(d, b + "." + d.b), wc(d, d.i);else {
    var e = k.location,
        f;
    b ? f = b + "." + e.hostname : f = e.hostname;
    d = Kc(e.protocol, f, +e.port, c);
  }
  a.V && va(a.V, function (h, l) {
    T(d, l, h);
  });
  b = a.j;
  c = a.I;
  b && c && T(d, b, c);
  T(d, "VER", a.wa);
  Dd(a, d);
  return d;
}

g.$ = function (a) {
  if (a && !this.R) throw Error("Can't create secondary domain capable XhrIo object.");
  a = new X(this.Ka);
  a.F = this.R;
  return a;
};

g.ma = function () {
  return !!this.c && !0;
};

g.Y = function () {
  return this.R;
};

function Od() {}

g = Od.prototype;

g.va = function () {};

g.ua = function () {};

g.ta = function () {};

g.sa = function () {};

g.Sa = function () {};

function Pd(a) {
  for (var b = arguments[0], c = 1; c < arguments.length; c++) {
    var d = arguments[c];
    if (0 == d.lastIndexOf("/", 0)) b = d;else {
      var e;
      (e = "" == b) || (e = b.length - 1, e = 0 <= e && b.indexOf("/", e) == e);
      e ? b += d : b += "/" + d;
    }
  }

  return b;
}

function Qd() {
  if (B && !(10 <= Number(Na))) throw Error("Environmental error: no available transport.");
}

Qd.prototype.a = function (a, b) {
  return new Y(a, b);
};

function Y(a, b) {
  G.call(this);
  this.a = new Ad(b);
  this.g = a;
  this.m = b && b.testUrl ? b.testUrl : Pd(this.g, "test");
  this.b = b && b.messageUrlParams || null;
  a = b && b.messageHeaders || null;
  b && b.clientProtocolHeaderRequired && (a ? a["X-Client-Protocol"] = "webchannel" : a = {
    "X-Client-Protocol": "webchannel"
  });
  this.a.i = a;
  a = b && b.initMessageHeaders || null;
  b && b.messageContentType && (a ? a["X-WebChannel-Content-Type"] = b.messageContentType : a = {
    "X-WebChannel-Content-Type": b.messageContentType
  });
  b && b.xa && (a ? a["X-WebChannel-Client-Profile"] = b.xa : a = {
    "X-WebChannel-Client-Profile": b.xa
  });
  this.a.J = a;
  (a = b && b.httpHeadersOverwriteParam) && !qa(a) && (this.a.g = a);
  this.l = b && b.supportsCrossDomainXhr || !1;
  this.h = b && b.sendRawJson || !1;
  (b = b && b.httpSessionIdParam) && !qa(b) && (this.a.j = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));
  this.f = new Z(this);
}

x(Y, G);
g = Y.prototype;

g.addEventListener = function (a, b, c, d) {
  Y.N.addEventListener.call(this, a, b, c, d);
};

g.removeEventListener = function (a, b, c, d) {
  Y.N.removeEventListener.call(this, a, b, c, d);
};

g.Va = function () {
  this.a.c = this.f;
  this.l && (this.a.R = !0);
  var a = this.a,
      b = this.m,
      c = this.g,
      d = this.b || void 0;
  K(0);
  a.ha = c;
  a.V = d || {};
  a.o && (a.F.b = [], a.F.a = !1);
  a.w = new Sc(a);
  null === a.g && (a.w.h = a.i);
  c = b;
  a.g && a.i && (c = zd(b, a.g, a.i));
  a = a.w;
  a.i = c;
  b = Wc(a.a, null, a.i);
  K(3);
  c = a.a.F.b;
  null != c ? (a.f = c[0], a.M = 1, Uc(a)) : (fc(b, "MODE", "init"), !a.a.o && a.a.j && fc(b, "X-HTTP-Session-Id", a.a.j), a.b = new M(a, void 0, void 0), a.b.h = a.h, dc(a.b, b, !1, null), a.M = 0);
};

g.close = function () {
  Bd(this.a);
};

g.Wa = function (a) {
  if (m(a)) {
    var b = {};
    b.__data__ = a;
    Gd(this.a, b);
  } else this.h ? (b = {}, b.__data__ = ob(a), Gd(this.a, b)) : Gd(this.a, a);
};

g.G = function () {
  this.a.c = null;
  delete this.f;
  Bd(this.a);
  delete this.a;
  Y.N.G.call(this);
};

function Rd(a) {
  Ub.call(this);
  var b = a.__sm__;

  if (b) {
    a: {
      for (var c in b) {
        a = c;
        break a;
      }

      a = void 0;
    }

    (this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;
  } else this.data = a;
}

x(Rd, Ub);

function Sd() {
  Vb.call(this);
  this.status = 1;
}

x(Sd, Vb);

function Z(a) {
  this.a = a;
}

x(Z, Od);

Z.prototype.va = function () {
  this.a.dispatchEvent("a");
};

Z.prototype.ua = function (a) {
  this.a.dispatchEvent(new Rd(a));
};

Z.prototype.ta = function (a) {
  this.a.dispatchEvent(new Sd(a));
};

Z.prototype.sa = function () {
  this.a.dispatchEvent("b");
};

var Td = v(function (a, b) {
  function c() {}

  c.prototype = a.prototype;
  var d = new c();
  a.apply(d, Array.prototype.slice.call(arguments, 1));
  return d;
}, Qd);
/*
Copyright 2017 Google Inc.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

Qd.prototype.createWebChannel = Qd.prototype.a;
Y.prototype.send = Y.prototype.Wa;
Y.prototype.open = Y.prototype.Va;
Y.prototype.close = Y.prototype.close;
Pb.NO_ERROR = 0;
Pb.TIMEOUT = 8;
Pb.HTTP_ERROR = 6;
Qb.COMPLETE = "complete";
Tb.EventType = L;
L.OPEN = "a";
L.CLOSE = "b";
L.ERROR = "c";
L.MESSAGE = "d";
G.prototype.listen = G.prototype.za;
X.prototype.listenOnce = X.prototype.Aa;
X.prototype.getLastError = X.prototype.Xa;
X.prototype.getLastErrorCode = X.prototype.ya;
X.prototype.getStatus = X.prototype.T;
X.prototype.getResponseJson = X.prototype.Ua;
X.prototype.getResponseText = X.prototype.aa;
X.prototype.send = X.prototype.ca;
var tmp = {
  createWebChannelTransport: Td,
  ErrorCode: Pb,
  EventType: Qb,
  WebChannel: Tb,
  XhrIo: X
};
var tmp_1 = tmp.createWebChannelTransport;
var tmp_2 = tmp.ErrorCode;
var tmp_3 = tmp.EventType;
var tmp_4 = tmp.WebChannel;
var tmp_5 = tmp.XhrIo;
/* harmony default export */ __webpack_exports__["default"] = (tmp);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14)))

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_firestore__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_firestore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_firestore__);


/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_storage__ = __webpack_require__(58);


/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export CSSRulePlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__ = __webpack_require__(6);
/*!
 * VERSION: 0.6.8
 * DATE: 2019-02-22
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */



__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("plugins.CSSRulePlugin", ["plugins.TweenPlugin", "TweenLite", "plugins.CSSPlugin"], function () {
  /** @constructor **/
  var CSSRulePlugin = function CSSRulePlugin() {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["h" /* TweenPlugin */].call(this, "cssRule");
    this._overwriteProps.length = 0;
  },
      _doc = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].document,
      _superSetRatio = __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__["a" /* default */].prototype.setRatio,
      p = CSSRulePlugin.prototype = new __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__["a" /* default */]();

  p._propName = "cssRule";
  p.constructor = CSSRulePlugin;
  CSSRulePlugin.version = "0.6.8";
  CSSRulePlugin.API = 2;
  /**
   * Searches the style sheets in the document for a particular selector like ".myClass" or "a" or "a:hover" or ":after" and
   * returns a reference to that style sheet (or an array of them in the case of a pseudo selector like ":after"). Then you
   * can animate the individual properties of the style sheet.
   *
   * @param {!string} selector a string describing the selector, like ".myClass" or "a" or "a:hover" or ":after"
   * @return a reference to the style sheet (or an array of them in the case of a pseudo selector). If none was found, null is returned (or an empty array for a pseudo selector)
   */

  CSSRulePlugin.getRule = function (selector) {
    var ruleProp = _doc.all ? "rules" : "cssRules",
        ss = _doc.styleSheets,
        i = ss.length,
        pseudo = selector.charAt(0) === ":",
        j,
        curSS,
        cs,
        a;
    selector = (pseudo ? "" : ",") + selector.split("::").join(":").toLowerCase() + ","; //note: old versions of IE report tag name selectors as upper case, so we just change everything to lowercase.

    if (pseudo) {
      a = [];
    }

    while (--i > -1) {
      //Firefox may throw insecure operation errors when css is loaded from other domains, so try/catch.
      try {
        curSS = ss[i][ruleProp];

        if (!curSS) {
          continue;
        }

        j = curSS.length;
      } catch (e) {
        console.log(e);
        continue;
      }

      while (--j > -1) {
        cs = curSS[j];

        if (cs.selectorText && ("," + cs.selectorText.split("::").join(":").toLowerCase() + ",").indexOf(selector) !== -1) {
          //note: IE adds an extra ":" to pseudo selectors, so .myClass:after becomes .myClass::after, so we need to strip the extra one out.
          if (pseudo) {
            a.push(cs.style);
          } else {
            return cs.style;
          }
        }
      }
    }

    return a;
  }; // @private gets called when the tween renders for the first time. This kicks everything off, recording start/end values, etc.


  p._onInitTween = function (target, value, tween) {
    if (target.cssText === undefined) {
      return false;
    }

    var div = target._gsProxy = target._gsProxy || _doc.createElement("div");

    this._ss = target;
    this._proxy = div.style;
    div.style.cssText = target.cssText;

    __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__["a" /* default */].prototype._onInitTween.call(this, div, value, tween); //we just offload all the work to the regular CSSPlugin and then copy the cssText back over to the rule in the setRatio() method. This allows us to have all of the updates to CSSPlugin automatically flow through to CSSRulePlugin instead of having to maintain both


    return true;
  }; // @private gets called every time the tween updates, passing the new ratio (typically a value between 0 and 1, but not always (for example, if an Elastic.easeOut is used, the value can jump above 1 mid-tween). It will always start and 0 and end at 1.


  p.setRatio = function (v) {
    _superSetRatio.call(this, v);

    var proxy = this._proxy,
        ss = this._ss,
        i = proxy.length;

    while (--i > -1) {
      ss[proxy[i]] = proxy[proxy[i]];
    }
  };

  __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["h" /* TweenPlugin */].activate([CSSRulePlugin]);
  return CSSRulePlugin;
}, true);

var CSSRulePlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].CSSRulePlugin;


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ColorPropsPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 1.5.3
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */


var _numExp = /(\d|\.)+/g,
    _relNumExp = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
    _colorLookup = {
  aqua: [0, 255, 255],
  lime: [0, 255, 0],
  silver: [192, 192, 192],
  black: [0, 0, 0],
  maroon: [128, 0, 0],
  teal: [0, 128, 128],
  blue: [0, 0, 255],
  navy: [0, 0, 128],
  white: [255, 255, 255],
  fuchsia: [255, 0, 255],
  olive: [128, 128, 0],
  yellow: [255, 255, 0],
  orange: [255, 165, 0],
  gray: [128, 128, 128],
  purple: [128, 0, 128],
  green: [0, 128, 0],
  red: [255, 0, 0],
  pink: [255, 192, 203],
  cyan: [0, 255, 255],
  transparent: [255, 255, 255, 0]
},
    _hue = function _hue(h, m1, m2) {
  h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
  return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < 0.5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + 0.5 | 0;
},

/**
 * @private Parses a color (like #9F0, #FF9900, rgb(255,51,153) or hsl(108, 50%, 10%)) into an array with 3 elements for red, green, and blue or if toHSL parameter is true, it will populate the array with hue, saturation, and lightness values. If a relative value is found in an hsl() or hsla() string, it will preserve those relative prefixes and all the values in the array will be strings instead of numbers (in all other cases it will be populated with numbers).
 * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.
 * @param {(boolean)} toHSL If true, an hsl() or hsla() value will be returned instead of rgb() or rgba()
 * @return {Array.<number>} An array containing red, green, and blue (and optionally alpha) in that order, or if the toHSL parameter was true, the array will contain hue, saturation and lightness (and optionally alpha) in that order. Always numbers unless there's a relative prefix found in an hsl() or hsla() string and toHSL is true.
 */
_parseColor = function _parseColor(v, toHSL) {
  var a, r, g, b, h, s, l, max, min, d, wasHSL;

  if (!v) {
    a = _colorLookup.black;
  } else if (typeof v === "number") {
    a = [v >> 16, v >> 8 & 255, v & 255];
  } else {
    if (v.charAt(v.length - 1) === ",") {
      //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
      v = v.substr(0, v.length - 1);
    }

    if (_colorLookup[v]) {
      a = _colorLookup[v];
    } else if (v.charAt(0) === "#") {
      if (v.length === 4) {
        //for shorthand like #9F0
        r = v.charAt(1);
        g = v.charAt(2);
        b = v.charAt(3);
        v = "#" + r + r + g + g + b + b;
      }

      v = parseInt(v.substr(1), 16);
      a = [v >> 16, v >> 8 & 255, v & 255];
    } else if (v.substr(0, 3) === "hsl") {
      a = wasHSL = v.match(_numExp);

      if (!toHSL) {
        h = Number(a[0]) % 360 / 360;
        s = Number(a[1]) / 100;
        l = Number(a[2]) / 100;
        g = l <= 0.5 ? l * (s + 1) : l + s - l * s;
        r = l * 2 - g;

        if (a.length > 3) {
          a[3] = Number(a[3]);
        }

        a[0] = _hue(h + 1 / 3, r, g);
        a[1] = _hue(h, r, g);
        a[2] = _hue(h - 1 / 3, r, g);
      } else if (v.indexOf("=") !== -1) {
        //if relative values are found, just return the raw strings with the relative prefixes in place.
        return v.match(_relNumExp);
      }
    } else {
      a = v.match(_numExp) || _colorLookup.transparent;
    }

    a[0] = Number(a[0]);
    a[1] = Number(a[1]);
    a[2] = Number(a[2]);

    if (a.length > 3) {
      a[3] = Number(a[3]);
    }
  }

  if (toHSL && !wasHSL) {
    r = a[0] / 255;
    g = a[1] / 255;
    b = a[2] / 255;
    max = Math.max(r, g, b);
    min = Math.min(r, g, b);
    l = (max + min) / 2;

    if (max === min) {
      h = s = 0;
    } else {
      d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
      h *= 60;
    }

    a[0] = h + 0.5 | 0;
    a[1] = s * 100 + 0.5 | 0;
    a[2] = l * 100 + 0.5 | 0;
  }

  return a;
},
    _formatColors = function _formatColors(s, toHSL) {
  var colors = (s + "").match(_colorExp) || [],
      charIndex = 0,
      parsed = "",
      i,
      color,
      temp;

  if (!colors.length) {
    return s;
  }

  for (i = 0; i < colors.length; i++) {
    color = colors[i];
    temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);
    charIndex += temp.length + color.length;
    color = _parseColor(color, toHSL);

    if (color.length === 3) {
      color.push(1);
    }

    parsed += temp + (toHSL ? "hsla(" + color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : "rgba(" + color.join(",")) + ")";
  }

  return parsed + s.substr(charIndex);
},
    p,
    _colorStringFilter,
    TweenLite = (__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].GreenSockGlobals || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]).TweenLite,
    _colorExp = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b",
    //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.
ColorPropsPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "colorProps",
  version: "1.5.3",
  priority: -1,
  API: 2,
  global: true,
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween, index) {
    var p, proxy, pt, val;
    this._target = target;
    this._proxy = proxy = (value.format + "").toUpperCase() === "NUMBER" ? {} : 0;

    for (p in value) {
      if (p !== "format") {
        if (proxy) {
          this._firstNumPT = pt = {
            _next: this._firstNumPT,
            t: target,
            p: p,
            f: typeof target[p] === "function"
          };
          proxy[p] = "rgb(" + _parseColor(!pt.f ? target[p] : target[p.indexOf("set") || typeof target["get" + p.substr(3)] !== "function" ? p : "get" + p.substr(3)]()).join(",") + ")";
          val = value[p];

          if (typeof val === "function") {
            val = val(index, target);
          }

          this._addTween(proxy, p, "get", typeof val === "number" ? "rgb(" + _parseColor(val, false).join(",") + ")" : val, p, null, null, _colorStringFilter);
        } else {
          this._addTween(target, p, "get", value[p], p, null, null, _colorStringFilter, index);
        }
      }
    }

    return true;
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(v) {
    var pt = this._firstNumPT,
        val;

    this._super.setRatio.call(this, v);

    while (pt) {
      val = _parseColor(this._proxy[pt.p], false);
      val = val[0] << 16 | val[1] << 8 | val[2];

      if (pt.f) {
        this._target[pt.p](val);
      } else {
        this._target[pt.p] = val;
      }

      pt = pt._next;
    }
  }
});

for (p in _colorLookup) {
  _colorExp += "|" + p + "\\b";
}

_colorExp = new RegExp(_colorExp + ")", "gi");

ColorPropsPlugin.colorStringFilter = _colorStringFilter = function _colorStringFilter(a) {
  var combined = a[0] + " " + a[1],
      toHSL;
  _colorExp.lastIndex = 0;

  if (_colorExp.test(combined)) {
    toHSL = combined.indexOf("hsl(") !== -1 || combined.indexOf("hsla(") !== -1;
    a[0] = _formatColors(a[0], toHSL);
    a[1] = _formatColors(a[1], toHSL);
  }
};

if (!TweenLite.defaultStringFilter) {
  TweenLite.defaultStringFilter = ColorPropsPlugin.colorStringFilter;
}

ColorPropsPlugin.parseColor = _parseColor;
p = ColorPropsPlugin.prototype;
p._firstNumPT = null;

p._kill = function (lookup) {
  var pt = this._firstNumPT,
      prev;

  while (pt) {
    if (pt.p in lookup) {
      if (pt === p._firstNumPT) {
        this._firstNumPT = pt._next;
      }

      if (prev) {
        prev._next = pt._next;
      }
    } else {
      prev = pt;
    }

    pt = pt._next;
  }

  return this._super._kill(lookup);
};



/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Draggable */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__ = __webpack_require__(6);
/*!
 * VERSION: 0.17.1
 * DATE: 2019-02-28
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * Requires TweenLite and CSSPlugin version 1.17.0 or later (TweenMax contains both TweenLite and CSSPlugin). ThrowPropsPlugin is required for momentum-based continuation of movement after the mouse/touch is released (ThrowPropsPlugin is a membership benefit of Club GreenSock - http://greensock.com/club/).
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */



__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine("utils.Draggable", ["events.EventDispatcher", "TweenLite", "plugins.CSSPlugin"], function () {
  var _tempVarsXY = {
    css: {},
    data: "_draggable"
  },
      //speed optimization - we reuse the same vars object for x/y TweenLite.set() calls to minimize garbage collection tasks and improve performance.
  _tempVarsX = {
    css: {},
    data: "_draggable"
  },
      _tempVarsY = {
    css: {},
    data: "_draggable"
  },
      _tempVarsRotation = {
    css: {}
  },
      _globals = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.globals,
      _tempEvent = {},
      //for populating with pageX/pageY in old versions of IE
  _emptyFunc = function _emptyFunc() {
    return false;
  },
      _dummyElement = {
    style: {},
    appendChild: _emptyFunc,
    removeChild: _emptyFunc
  },
      _doc = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].document || {
    createElement: function createElement() {
      return _dummyElement;
    }
  },
      _docElement = _doc.documentElement || {},
      _createElement = function _createElement(type) {
    return _doc.createElementNS ? _doc.createElementNS("http://www.w3.org/1999/xhtml", type) : _doc.createElement(type);
  },
      _tempDiv = _createElement("div"),
      _emptyArray = [],
      _RAD2DEG = 180 / Math.PI,
      _max = 999999999999999,
      _getTime = Date.now || function () {
    return new Date().getTime();
  },
      _isOldIE = !!(!_doc.addEventListener && _doc.all),
      _placeholderDiv = _doc.createElement("div"),
      _renderQueue = [],
      _lookup = {},
      //when a Draggable is created, the target gets a unique _gsDragID property that allows gets associated with the Draggable instance for quick lookups in Draggable.get(). This avoids circular references that could cause gc problems.
  _lookupCount = 0,
      _clickableTagExp = /^(?:a|input|textarea|button|select)$/i,
      _dragCount = 0,
      //total number of elements currently being dragged
  _prefix,
      _isMultiTouching,
      _isAndroid = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].navigator && __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].navigator.userAgent.toLowerCase().indexOf("android") !== -1,
      //Android handles touch events in an odd way and it's virtually impossible to "feature test" so we resort to UA sniffing
  _lastDragTime = 0,
      _temp1 = {},
      // a simple object we reuse and populate (usually x/y properties) to conserve memory and improve performance.
  _windowProxy = {},
      //memory/performance optimization - we reuse this object during autoScroll to store window-related bounds/offsets.
  _supportsPassive,
      _slice = function _slice(a) {
    //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
    if (typeof a === "string") {
      a = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].selector(a);
    }

    if (!a || a.nodeType) {
      //if it's not an array, wrap it in one.
      return [a];
    }

    var b = [],
        l = a.length,
        i;

    for (i = 0; i !== l; b.push(a[i++]));

    return b;
  },
      _copy = function _copy(obj, factor) {
    var copy = {},
        p;

    if (factor) {
      for (p in obj) {
        copy[p] = obj[p] * factor;
      }
    } else {
      for (p in obj) {
        copy[p] = obj[p];
      }
    }

    return copy;
  },
      ThrowPropsPlugin,
      _renderQueueTick = function _renderQueueTick() {
    var i = _renderQueue.length;

    while (--i > -1) {
      _renderQueue[i]();
    }
  },
      _addToRenderQueue = function _addToRenderQueue(func) {
    _renderQueue.push(func);

    if (_renderQueue.length === 1) {
      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.addEventListener("tick", _renderQueueTick, this, false, 1);
    }
  },
      _removeFromRenderQueue = function _removeFromRenderQueue(func) {
    var i = _renderQueue.length;

    while (--i > -1) {
      if (_renderQueue[i] === func) {
        _renderQueue.splice(i, 1);
      }
    }

    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].to(_renderQueueTimeout, 0, {
      overwrite: "all",
      delay: 15,
      onComplete: _renderQueueTimeout,
      data: "_draggable"
    }); //remove the "tick" listener only after the render queue is empty for 15 seconds (to improve performance). Adding/removing it constantly for every click/touch wouldn't deliver optimal speed, and we also don't want the ticker to keep calling the render method when things are idle for long periods of time (we want to improve battery life on mobile devices).
  },
      _renderQueueTimeout = function _renderQueueTimeout() {
    if (!_renderQueue.length) {
      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.removeEventListener("tick", _renderQueueTick);
    }
  },
      _extend = function _extend(obj, defaults) {
    var p;

    for (p in defaults) {
      if (obj[p] === undefined) {
        obj[p] = defaults[p];
      }
    }

    return obj;
  },
      _getDocScrollTop = function _getDocScrollTop() {
    return window.pageYOffset != null ? window.pageYOffset : _doc.scrollTop != null ? _doc.scrollTop : _docElement.scrollTop || _doc.body.scrollTop || 0;
  },
      _getDocScrollLeft = function _getDocScrollLeft() {
    return window.pageXOffset != null ? window.pageXOffset : _doc.scrollLeft != null ? _doc.scrollLeft : _docElement.scrollLeft || _doc.body.scrollLeft || 0;
  },
      _addScrollListener = function _addScrollListener(e, callback) {
    _addListener(e, "scroll", callback);

    if (!_isRoot(e.parentNode)) {
      _addScrollListener(e.parentNode, callback);
    }
  },
      _removeScrollListener = function _removeScrollListener(e, callback) {
    _removeListener(e, "scroll", callback);

    if (!_isRoot(e.parentNode)) {
      _removeScrollListener(e.parentNode, callback);
    }
  },
      _isRoot = function _isRoot(e) {
    return !!(!e || e === _docElement || e === _doc || e === _doc.body || e === window || !e.nodeType || !e.parentNode);
  },
      _getMaxScroll = function _getMaxScroll(element, axis) {
    var dim = axis === "x" ? "Width" : "Height",
        scroll = "scroll" + dim,
        client = "client" + dim,
        body = _doc.body;
    return Math.max(0, _isRoot(element) ? Math.max(_docElement[scroll], body[scroll]) - (window["inner" + dim] || _docElement[client] || body[client]) : element[scroll] - element[client]);
  },
      _recordMaxScrolls = function _recordMaxScrolls(e) {
    //records _gsMaxScrollX and _gsMaxScrollY properties for the element and all ancestors up the chain so that we can cap it, otherwise dragging beyond the edges with autoScroll on can endlessly scroll.
    var isRoot = _isRoot(e),
        x = _getMaxScroll(e, "x"),
        y = _getMaxScroll(e, "y");

    if (isRoot) {
      e = _windowProxy;
    } else {
      _recordMaxScrolls(e.parentNode);
    }

    e._gsMaxScrollX = x;
    e._gsMaxScrollY = y;
    e._gsScrollX = e.scrollLeft || 0;
    e._gsScrollY = e.scrollTop || 0;
  },
      //just used for IE8 and earlier to normalize events and populate pageX/pageY
  _populateIEEvent = function _populateIEEvent(e, preventDefault) {
    e = e || window.event;
    _tempEvent.pageX = e.clientX + _doc.body.scrollLeft + _docElement.scrollLeft;
    _tempEvent.pageY = e.clientY + _doc.body.scrollTop + _docElement.scrollTop;

    if (preventDefault) {
      e.returnValue = false;
    }

    return _tempEvent;
  },
      //grabs the first element it finds (and we include the window as an element), so if it's selector text, it'll feed that value to TweenLite.selector, if it's a jQuery object or some other selector engine's result, it'll grab the first one, and same for an array. If the value doesn't contain a DOM element, it'll just return null.
  _unwrapElement = function _unwrapElement(value) {
    if (!value) {
      return value;
    }

    if (typeof value === "string") {
      value = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].selector(value);
    }

    if (value.length && value !== window && value[0] && value[0].style && !value.nodeType) {
      value = value[0];
    }

    return value === window || value.nodeType && value.style ? value : null;
  },
      _checkPrefix = function _checkPrefix(e, p) {
    var s = e.style,
        capped,
        i,
        a;

    if (s[p] === undefined) {
      a = ["O", "Moz", "ms", "Ms", "Webkit"];
      i = 5;
      capped = p.charAt(0).toUpperCase() + p.substr(1);

      while (--i > -1 && s[a[i] + capped] === undefined) {}

      if (i < 0) {
        return "";
      }

      _prefix = i === 3 ? "ms" : a[i];
      p = _prefix + capped;
    }

    return p;
  },
      _setStyle = function _setStyle(e, p, value) {
    var s = e.style;

    if (!s) {
      return;
    }

    if (s[p] === undefined) {
      p = _checkPrefix(e, p);
    }

    if (value == null) {
      if (s.removeProperty) {
        s.removeProperty(p.replace(/([A-Z])/g, "-$1").toLowerCase());
      } else {
        //note: old versions of IE use "removeAttribute()" instead of "removeProperty()"
        s.removeAttribute(p);
      }
    } else if (s[p] !== undefined) {
      s[p] = value;
    }
  },
      _computedStyleScope = typeof window !== "undefined" ? window : _doc.defaultView || {
    getComputedStyle: function getComputedStyle() {}
  },
      _getComputedStyle = function _getComputedStyle(e, s) {
    return _computedStyleScope.getComputedStyle(e instanceof Element ? e : e.host || (e.parentNode || {}).host || e, s); //the "host" stuff helps to accommodate ShadowDom objects.
  },
      _horizExp = /(?:Left|Right|Width)/i,
      _suffixExp = /(?:\d|\-|\+|=|#|\.)*/g,
      _convertToPixels = function _convertToPixels(t, p, v, sfx, recurse) {
    if (sfx === "px" || !sfx) {
      return v;
    }

    if (sfx === "auto" || !v) {
      return 0;
    }

    var horiz = _horizExp.test(p),
        node = t,
        style = _tempDiv.style,
        neg = v < 0,
        pix;

    if (neg) {
      v = -v;
    }

    if (sfx === "%" && p.indexOf("border") !== -1) {
      pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);
    } else {
      style.cssText = "border:0 solid red;position:" + _getStyle(t, "position", true) + ";line-height:0;";

      if (sfx === "%" || !node.appendChild) {
        node = t.parentNode || _doc.body;
        style[horiz ? "width" : "height"] = v + sfx;
      } else {
        style[horiz ? "borderLeftWidth" : "borderTopWidth"] = v + sfx;
      }

      node.appendChild(_tempDiv);
      pix = parseFloat(_tempDiv[horiz ? "offsetWidth" : "offsetHeight"]);
      node.removeChild(_tempDiv);

      if (pix === 0 && !recurse) {
        pix = _convertToPixels(t, p, v, sfx, true);
      }
    }

    return neg ? -pix : pix;
  },
      _calculateOffset = function _calculateOffset(t, p) {
    //for figuring out "top" or "left" in px when it's "auto". We need to factor in margin with the offsetLeft/offsetTop
    if (_getStyle(t, "position", true) !== "absolute") {
      return 0;
    }

    var dim = p === "left" ? "Left" : "Top",
        v = _getStyle(t, "margin" + dim, true);

    return t["offset" + dim] - (_convertToPixels(t, p, parseFloat(v), (v + "").replace(_suffixExp, "")) || 0);
  },
      _getStyle = function _getStyle(element, prop, keepUnits) {
    var rv = (element._gsTransform || {})[prop],
        cs;

    if (rv || rv === 0) {
      return rv;
    } else if (element.style && element.style[prop]) {
      //shadow dom elements don't have "style".
      rv = element.style[prop];
    } else if (cs = _getComputedStyle(element)) {
      rv = cs.getPropertyValue(prop.replace(/([A-Z])/g, "-$1").toLowerCase());
      rv = rv || cs.length ? rv : cs[prop]; //Opera behaves VERY strangely - length is usually 0 and cs[prop] is the only way to get accurate results EXCEPT when checking for -o-transform which only works with cs.getPropertyValue()!
    } else if (element.currentStyle) {
      rv = element.currentStyle[prop];
    }

    if (rv === "auto" && (prop === "top" || prop === "left")) {
      rv = _calculateOffset(element, prop);
    }

    return keepUnits ? rv : parseFloat(rv) || 0;
  },
      _dispatchEvent = function _dispatchEvent(instance, type, callbackName) {
    var vars = instance.vars,
        callback = vars[callbackName],
        listeners = instance._listeners[type];

    if (typeof callback === "function") {
      callback.apply(vars[callbackName + "Scope"] || vars.callbackScope || instance, vars[callbackName + "Params"] || [instance.pointerEvent]);
    }

    if (listeners) {
      instance.dispatchEvent(type);
    }
  },
      _getBounds = function _getBounds(obj, context) {
    //accepts any of the following: a DOM element, jQuery object, selector text, or an object defining bounds as {top, left, width, height} or {minX, maxX, minY, maxY}. Returns an object with left, top, width, and height properties.
    var e = _unwrapElement(obj),
        top,
        left,
        offset;

    if (!e) {
      if (obj.left !== undefined) {
        offset = _getOffsetTransformOrigin(context); //the bounds should be relative to the origin

        return {
          left: obj.left - offset.x,
          top: obj.top - offset.y,
          width: obj.width,
          height: obj.height
        };
      }

      left = obj.min || obj.minX || obj.minRotation || 0;
      top = obj.min || obj.minY || 0;
      return {
        left: left,
        top: top,
        width: (obj.max || obj.maxX || obj.maxRotation || 0) - left,
        height: (obj.max || obj.maxY || 0) - top
      };
    }

    return _getElementBounds(e, context);
  },
      _svgBorderFactor,
      _svgBorderScales,
      _svgScrollOffset,
      _hasBorderBug,
      _hasReparentBug,
      //some browsers, like Chrome 49, alter the offsetTop/offsetLeft/offsetParent of elements when a non-identity transform is applied.
  _setEnvironmentVariables = function _setEnvironmentVariables() {
    //some browsers factor the border into the SVG coordinate space, some don't (like Firefox). Some apply transforms to them, some don't. We feature-detect here so we know how to handle the border(s). We can't do this immediately - we must wait for the document.body to exist.
    if (!_doc.createElementNS) {
      _svgBorderFactor = 0;
      _svgBorderScales = false;
      return;
    }

    var div = _createElement("div"),
        svg = _doc.createElementNS("http://www.w3.org/2000/svg", "svg"),
        wrapper = _createElement("div"),
        style = div.style,
        parent = _doc.body || _docElement,
        isFlex = _getStyle(parent, "display", true) === "flex",
        //Firefox bug causes getScreenCTM() to return null when parent is display:flex and the element isn't rendered inside the window (like if it's below the scroll position)
    matrix,
        e1,
        point,
        oldValue;

    if (_doc.body && _transformProp) {
      style.position = "absolute";
      parent.appendChild(wrapper);
      wrapper.appendChild(div);
      oldValue = div.offsetParent;
      wrapper.style[_transformProp] = "rotate(1deg)";
      _hasReparentBug = div.offsetParent === oldValue;
      wrapper.style.position = "absolute";
      style.height = "10px";
      oldValue = div.offsetTop;
      wrapper.style.border = "5px solid red";
      _hasBorderBug = oldValue !== div.offsetTop; //some browsers, like Firefox 38, cause the offsetTop/Left to be affected by a parent's border.

      parent.removeChild(wrapper);
    }

    style = svg.style;
    svg.setAttributeNS(null, "width", "400px");
    svg.setAttributeNS(null, "height", "400px");
    svg.setAttributeNS(null, "viewBox", "0 0 400 400");
    style.display = "block";
    style.boxSizing = "border-box";
    style.border = "0px solid red";
    style.transform = "none"; // in some browsers (like certain flavors of Android), the getScreenCTM() matrix is contaminated by the scroll position. We can run some logic here to detect that condition, but we ended up not needing this because we found another workaround using getBoundingClientRect().

    div.style.cssText = "width:100px;height:100px;overflow:scroll;-ms-overflow-style:none;";
    parent.appendChild(div);
    div.appendChild(svg);
    point = svg.createSVGPoint().matrixTransform(svg.getScreenCTM());
    e1 = point.y;
    div.scrollTop = 100;
    point.x = point.y = 0;
    point = point.matrixTransform(svg.getScreenCTM());
    _svgScrollOffset = e1 - point.y < 100.1 ? 0 : e1 - point.y - 150;
    div.removeChild(svg);
    parent.removeChild(div); // -- end _svgScrollOffset calculation.

    parent.appendChild(svg);

    if (isFlex) {
      parent.style.display = "block"; //Firefox bug causes getScreenCTM() to return null when parent is display:flex and the element isn't rendered inside the window (like if it's below the scroll position)
    }

    matrix = svg.getScreenCTM();
    e1 = matrix.e;
    style.border = "50px solid red";
    matrix = svg.getScreenCTM();

    if (e1 === 0 && matrix.e === 0 && matrix.f === 0 && matrix.a === 1) {
      //Opera has a bunch of bugs - it doesn't adjust the x/y of the matrix, nor does it scale when box-sizing is border-box but it does so elsewhere; to get the correct behavior we set _svgBorderScales to true.
      _svgBorderFactor = 1;
      _svgBorderScales = true;
    } else {
      _svgBorderFactor = e1 !== matrix.e ? 1 : 0;
      _svgBorderScales = matrix.a !== 1;
    }

    if (isFlex) {
      parent.style.display = "flex";
    }

    parent.removeChild(svg);
  },
      _supports3D = _checkPrefix(_tempDiv, "perspective") !== "",
      // start matrix and point conversion methods...
  _transformOriginProp = _checkPrefix(_tempDiv, "transformOrigin").replace(/^ms/g, "Ms").replace(/([A-Z])/g, "-$1").toLowerCase(),
      _transformProp = _checkPrefix(_tempDiv, "transform"),
      _transformPropCSS = _transformProp.replace(/^ms/g, "Ms").replace(/([A-Z])/g, "-$1").toLowerCase(),
      _point1 = {},
      //we reuse _point1 and _point2 objects inside matrix and point conversion methods to conserve memory and minimize garbage collection tasks.
  _point2 = {},
      _SVGElement = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].SVGElement,
      _isSVG = function _isSVG(e) {
    return !!(_SVGElement && typeof e.getBBox === "function" && e.getCTM && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));
  },
      _isIE10orBelow = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].navigator && (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].navigator.userAgent) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].navigator.userAgent)) && parseFloat(RegExp.$1) < 11,
      //Ideally we'd avoid user agent sniffing, but there doesn't seem to be a way to feature-detect and sense a border-related bug that only affects IE10 and IE9.
  _tempTransforms = [],
      _tempElements = [],
      _getSVGOffsets = function _getSVGOffsets(e) {
    //SVG elements don't always report offsetTop/offsetLeft/offsetParent at all (I'm looking at you, Firefox 29 and Android), so we have to do some work to manufacture those values. You can pass any SVG element and it'll spit back an object with offsetTop, offsetLeft, offsetParent, scaleX, and scaleY properties. We need the scaleX and scaleY to handle the way SVG can resize itself based on the container.
    if (!e.getBoundingClientRect || !e.parentNode || !_transformProp) {
      return {
        offsetTop: 0,
        offsetLeft: 0,
        scaleX: 1,
        scaleY: 1,
        offsetParent: _docElement
      };
    }

    if (Draggable.cacheSVGData !== false && e._dCache && e._dCache.lastUpdate === __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.frame) {
      //performance optimization. Assume that if the offsets are requested again on the same tick, we can just feed back the values we already calculated (no need to keep recalculating until another tick elapses).
      return e._dCache;
    }

    var curElement = e,
        cache = _cache(e),
        eRect,
        parentRect,
        offsetParent,
        cs,
        m,
        i,
        point1,
        point2,
        borderWidth,
        borderHeight,
        width,
        height;

    cache.lastUpdate = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.frame;

    if (e.getBBox && !cache.isSVGRoot) {
      //if it's a nested/child SVG element, we must find the parent SVG canvas and measure the offset from there.
      curElement = e.parentNode;
      eRect = e.getBBox();

      while (curElement && (curElement.nodeName + "").toLowerCase() !== "svg") {
        curElement = curElement.parentNode;
      }

      cs = _getSVGOffsets(curElement);
      cache.offsetTop = eRect.y * cs.scaleY;
      cache.offsetLeft = eRect.x * cs.scaleX;
      cache.scaleX = cs.scaleX;
      cache.scaleY = cs.scaleY;
      cache.offsetParent = curElement || _docElement;
      return cache;
    } //only root SVG elements continue here...


    offsetParent = cache.offsetParent;

    if (offsetParent === _doc.body) {
      offsetParent = _docElement; //avoids problems with margins/padding on the body
    } //walk up the ancestors and record any non-identity transforms (and reset them to "none") until we reach the offsetParent. We must do this so that the getBoundingClientRect() is accurate for measuring the offsetTop/offsetLeft. We'll revert the values later...


    _tempElements.length = _tempTransforms.length = 0;

    while (curElement && curElement.parentNode) {
      m = _getStyle(curElement, _transformProp, true);

      if (m !== "matrix(1, 0, 0, 1, 0, 0)" && m !== "none" && m !== "translate3d(0px, 0px, 0px)") {
        _tempElements.push(curElement);

        _tempTransforms.push(curElement.style[_transformProp]);

        curElement.style[_transformProp] = "none";
      }

      curElement = curElement.parentNode;
    }

    parentRect = offsetParent.getBoundingClientRect();
    m = e.getScreenCTM();
    point2 = e.createSVGPoint();
    point1 = point2.matrixTransform(m);
    cache.scaleX = Math.sqrt(m.a * m.a + m.b * m.b);
    cache.scaleY = Math.sqrt(m.d * m.d + m.c * m.c);

    if (_svgBorderFactor === undefined) {
      _setEnvironmentVariables();
    }

    if (cache.borderBox && !_svgBorderScales && e.getAttribute("width")) {
      //some browsers (like Safari) don't properly scale the matrix to accommodate the border when box-sizing is border-box, so we must calculate it here...
      cs = _getComputedStyle(e) || {};
      borderWidth = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth) || 0;
      borderHeight = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth) || 0;
      width = parseFloat(cs.width) || 0;
      height = parseFloat(cs.height) || 0;
      cache.scaleX *= (width - borderWidth) / width;
      cache.scaleY *= (height - borderHeight) / height;
    }

    if (_svgScrollOffset) {
      //some browsers (like Chrome for Android) have bugs in the way getScreenCTM() is reported (it doesn't factor in scroll position), so we must revert to a more expensive technique for calculating offsetTop/Left.
      eRect = e.getBoundingClientRect();
      cache.offsetLeft = eRect.left - parentRect.left;
      cache.offsetTop = eRect.top - parentRect.top;
    } else {
      cache.offsetLeft = point1.x - parentRect.left;
      cache.offsetTop = point1.y - parentRect.top;
    }

    cache.offsetParent = offsetParent;
    i = _tempElements.length;

    while (--i > -1) {
      _tempElements[i].style[_transformProp] = _tempTransforms[i];
    }

    return cache;
  },
      _getOffsetTransformOrigin = function _getOffsetTransformOrigin(e, decoratee) {
    //returns the x/y position of the transformOrigin of the element, in its own local coordinate system (pixels), offset from the top left corner.
    decoratee = decoratee || {};

    if (!e || e === _docElement || !e.parentNode || e === window) {
      return {
        x: 0,
        y: 0
      };
    }

    var cs = _getComputedStyle(e),
        v = _transformOriginProp && cs ? cs.getPropertyValue(_transformOriginProp) : "50% 50%",
        a = v.split(" "),
        x = v.indexOf("left") !== -1 ? "0%" : v.indexOf("right") !== -1 ? "100%" : a[0],
        y = v.indexOf("top") !== -1 ? "0%" : v.indexOf("bottom") !== -1 ? "100%" : a[1];

    if (y === "center" || y == null) {
      y = "50%";
    }

    if (x === "center" || isNaN(parseFloat(x))) {
      //remember, the user could flip-flop the values and say "bottom center" or "center bottom", etc. "center" is ambiguous because it could be used to describe horizontal or vertical, hence the isNaN(). If there's an "=" sign in the value, it's relative.
      x = "50%";
    }

    if (e.getBBox && _isSVG(e)) {
      //SVG elements must be handled in a special way because their origins are calculated from the top left.
      if (!e._gsTransform) {
        __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].set(e, {
          x: "+=0",
          overwrite: false
        }); //forces creation of the _gsTransform where we store all the transform components including xOrigin and yOrigin for SVG elements, as of GSAP 1.15.0 which also takes care of calculating the origin from the upper left corner of the SVG canvas.

        if (e._gsTransform.xOrigin === undefined) {
          console.log("Draggable requires at least GSAP 1.17.0");
        }
      }

      v = e.getBBox();
      decoratee.x = e._gsTransform.xOrigin - v.x;
      decoratee.y = e._gsTransform.yOrigin - v.y;
    } else {
      if (e.getBBox && (x + y).indexOf("%") !== -1) {
        //Firefox doesn't report offsetWidth/height on <svg> elements.
        e = e.getBBox();
        e = {
          offsetWidth: e.width,
          offsetHeight: e.height
        };
      }

      decoratee.x = x.indexOf("%") !== -1 ? e.offsetWidth * parseFloat(x) / 100 : parseFloat(x);
      decoratee.y = y.indexOf("%") !== -1 ? e.offsetHeight * parseFloat(y) / 100 : parseFloat(y);
    }

    return decoratee;
  },
      _cache = function _cache(e) {
    //computes some important values and stores them in a _dCache object attached to the element itself so that we can optimize performance
    if (Draggable.cacheSVGData !== false && e._dCache && e._dCache.lastUpdate === __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].ticker.frame) {
      //performance optimization. Assume that if the offsets are requested again on the same tick, we can just feed back the values we already calculated (no need to keep recalculating until another tick elapses).
      return e._dCache;
    }

    var cache = e._dCache = e._dCache || {},
        cs = _getComputedStyle(e),
        isSVG = e.getBBox && _isSVG(e),
        isSVGRoot = (e.nodeName + "").toLowerCase() === "svg",
        curSVG;

    cache.isSVG = isSVG;
    cache.isSVGRoot = isSVGRoot;
    cache.borderBox = cs.boxSizing === "border-box";
    cache.computedStyle = cs;

    if (isSVGRoot) {
      //some browsers don't report parentNode on SVG elements.
      curSVG = e.parentNode || _docElement;
      curSVG.insertBefore(_tempDiv, e);
      cache.offsetParent = _tempDiv.offsetParent || _docElement; //in some cases, Firefox still reports offsetParent as null.

      curSVG.removeChild(_tempDiv);
    } else if (isSVG) {
      curSVG = e.parentNode;

      while (curSVG && (curSVG.nodeName + "").toLowerCase() !== "svg") {
        //offsetParent is always the SVG canvas for SVG elements.
        curSVG = curSVG.parentNode;
      }

      cache.offsetParent = curSVG;
    } else {
      cache.offsetParent = e.offsetParent;
    }

    return cache;
  },
      _getOffset2DMatrix = function _getOffset2DMatrix(e, offsetOrigin, parentOffsetOrigin, zeroOrigin, isBase) {
    //"isBase" helps us discern context - it should only be true when the element is the base one (the one at which we're starting to walk up the chain). It only matters in cases when it's an <svg> element itself because that's a case when we don't apply scaling.
    if (e === window || !e || !e.style || !e.parentNode) {
      return [1, 0, 0, 1, 0, 0];
    }

    var cache = e._dCache || _cache(e),
        parent = e.parentNode,
        parentCache = parent._dCache || _cache(parent),
        cs = cache.computedStyle,
        parentOffsetParent = cache.isSVG ? parentCache.offsetParent : parent.offsetParent,
        m,
        isRoot,
        offsets,
        rect,
        t,
        sx,
        sy,
        offsetX,
        offsetY,
        parentRect,
        borderTop,
        borderLeft,
        borderTranslateX,
        borderTranslateY;

    m = cache.isSVG && (e.style[_transformProp] + "").indexOf("matrix") !== -1 ? e.style[_transformProp] : cs ? cs.getPropertyValue(_transformPropCSS) : e.currentStyle ? e.currentStyle[_transformProp] : "1,0,0,1,0,0"; //some browsers (like Chrome 40) don't correctly report transforms that are applied inline on an SVG element (they don't get included in the computed style), so we double-check here and accept matrix values

    if (e.getBBox && (e.getAttribute("transform") + "").indexOf("matrix") !== -1) {
      //SVG can store transform data in its "transform" attribute instead of the CSS, so look for that here (only accept matrix()).
      m = e.getAttribute("transform");
    }

    m = (m + "").match(/(?:\-|\.|\b)(\d|\.|e\-)+/g) || [1, 0, 0, 1, 0, 0];

    if (m.length > 6) {
      m = [m[0], m[1], m[4], m[5], m[12], m[13]];
    }

    if (zeroOrigin) {
      m[4] = m[5] = 0;
    } else if (cache.isSVG && (t = e._gsTransform) && (t.xOrigin || t.yOrigin)) {
      //SVGs handle origin very differently. Factor in GSAP's handling of origin values here:
      m[0] = parseFloat(m[0]);
      m[1] = parseFloat(m[1]);
      m[2] = parseFloat(m[2]);
      m[3] = parseFloat(m[3]);
      m[4] = parseFloat(m[4]) - (t.xOrigin - (t.xOrigin * m[0] + t.yOrigin * m[2]));
      m[5] = parseFloat(m[5]) - (t.yOrigin - (t.xOrigin * m[1] + t.yOrigin * m[3]));
    }

    if (offsetOrigin) {
      if (_svgBorderFactor === undefined) {
        _setEnvironmentVariables();
      }

      offsets = cache.isSVG || cache.isSVGRoot ? _getSVGOffsets(e) : e;

      if (cache.isSVG) {
        //don't just rely on "instanceof _SVGElement" because if the SVG is embedded via an object tag, it won't work (SVGElement is mapped to a different object))
        rect = e.getBBox();
        parentRect = parentCache.isSVGRoot ? {
          x: 0,
          y: 0
        } : parent.getBBox();
        offsets = {
          offsetLeft: rect.x - parentRect.x,
          offsetTop: rect.y - parentRect.y,
          offsetParent: cache.offsetParent
        };
      } else if (cache.isSVGRoot) {
        borderTop = parseInt(cs.borderTopWidth, 10) || 0;
        borderLeft = parseInt(cs.borderLeftWidth, 10) || 0;
        borderTranslateX = (m[0] - _svgBorderFactor) * borderLeft + m[2] * borderTop;
        borderTranslateY = m[1] * borderLeft + (m[3] - _svgBorderFactor) * borderTop;
        sx = offsetOrigin.x;
        sy = offsetOrigin.y;
        offsetX = sx - (sx * m[0] + sy * m[2]); //accommodate the SVG root's transforms when the origin isn't in the top left.

        offsetY = sy - (sx * m[1] + sy * m[3]);
        m[4] = parseFloat(m[4]) + offsetX;
        m[5] = parseFloat(m[5]) + offsetY;
        offsetOrigin.x -= offsetX;
        offsetOrigin.y -= offsetY;
        sx = offsets.scaleX;
        sy = offsets.scaleY;

        if (!isBase) {
          //when getting the matrix for a root <svg> element itself (NOT in the context of an SVG element that's nested inside of it like a <path>), we do NOT apply the scaling!
          offsetOrigin.x *= sx;
          offsetOrigin.y *= sy;
        }

        m[0] *= sx;
        m[1] *= sy;
        m[2] *= sx;
        m[3] *= sy;

        if (!_isIE10orBelow) {
          offsetOrigin.x += borderTranslateX;
          offsetOrigin.y += borderTranslateY;
        }

        if (parentOffsetParent === _doc.body && offsets.offsetParent === _docElement) {
          //to avoid issues with margin/padding on the <body>, we always set the offsetParent to _docElement in the _getSVGOffsets() function but there's a condition we check later in this function for (parentOffsetParent === offsets.offsetParent) which would fail if we don't run this logic. In other words, parentOffsetParent may be <body> and the <svg>'s offsetParent is also <body> but artificially set to _docElement to avoid margin/padding issues.
          parentOffsetParent = _docElement;
        }
      } else if (!_hasBorderBug && e.offsetParent) {
        offsetOrigin.x += parseInt(_getStyle(e.offsetParent, "borderLeftWidth"), 10) || 0;
        offsetOrigin.y += parseInt(_getStyle(e.offsetParent, "borderTopWidth"), 10) || 0;
      }

      isRoot = parent === _docElement || parent === _doc.body;
      m[4] = Number(m[4]) + offsetOrigin.x + (offsets.offsetLeft || 0) - parentOffsetOrigin.x - (isRoot ? 0 : parent.scrollLeft || 0);
      m[5] = Number(m[5]) + offsetOrigin.y + (offsets.offsetTop || 0) - parentOffsetOrigin.y - (isRoot ? 0 : parent.scrollTop || 0);

      if (parent && _getStyle(e, "position", true) === "fixed") {
        //fixed position elements should factor in the scroll position of the document.
        m[4] += _getDocScrollLeft();
        m[5] += _getDocScrollTop();
        parent = parent.offsetParent;

        while (parent) {
          m[4] -= parent.offsetLeft;
          m[5] -= parent.offsetTop;
          parent = parent.offsetParent;
        }
      } else if (parent && parent !== _docElement && parentOffsetParent === offsets.offsetParent && !parentCache.isSVG && (!_hasReparentBug || _getOffset2DMatrix(parent).join("") === "100100")) {
        offsets = parentCache.isSVGRoot ? _getSVGOffsets(parent) : parent;
        m[4] -= offsets.offsetLeft || 0;
        m[5] -= offsets.offsetTop || 0;

        if (!_hasBorderBug && parentCache.offsetParent && !cache.isSVG && !cache.isSVGRoot) {
          m[4] -= parseInt(_getStyle(parentCache.offsetParent, "borderLeftWidth"), 10) || 0;
          m[5] -= parseInt(_getStyle(parentCache.offsetParent, "borderTopWidth"), 10) || 0;
        }
      }
    }

    return m;
  },
      _getConcatenatedMatrix = function _getConcatenatedMatrix(e, invert) {
    if (!e || e === window || !e.parentNode) {
      return [1, 0, 0, 1, 0, 0];
    } //note: we keep reusing _point1 and _point2 in order to minimize memory usage and garbage collection chores.


    var originOffset = _getOffsetTransformOrigin(e, _point1),
        parentOriginOffset = _getOffsetTransformOrigin(e.parentNode, _point2),
        m = _getOffset2DMatrix(e, originOffset, parentOriginOffset, false, !invert),
        a,
        b,
        c,
        d,
        tx,
        ty,
        m2,
        determinant;

    while ((e = e.parentNode) && e.parentNode && e !== _docElement) {
      originOffset = parentOriginOffset;
      parentOriginOffset = _getOffsetTransformOrigin(e.parentNode, originOffset === _point1 ? _point2 : _point1);
      m2 = _getOffset2DMatrix(e, originOffset, parentOriginOffset);
      a = m[0];
      b = m[1];
      c = m[2];
      d = m[3];
      tx = m[4];
      ty = m[5];
      m[0] = a * m2[0] + b * m2[2];
      m[1] = a * m2[1] + b * m2[3];
      m[2] = c * m2[0] + d * m2[2];
      m[3] = c * m2[1] + d * m2[3];
      m[4] = tx * m2[0] + ty * m2[2] + m2[4];
      m[5] = tx * m2[1] + ty * m2[3] + m2[5];
    }

    if (invert) {
      a = m[0];
      b = m[1];
      c = m[2];
      d = m[3];
      tx = m[4];
      ty = m[5];
      determinant = a * d - b * c;
      m[0] = d / determinant;
      m[1] = -b / determinant;
      m[2] = -c / determinant;
      m[3] = a / determinant;
      m[4] = (c * ty - d * tx) / determinant;
      m[5] = -(a * ty - b * tx) / determinant;
    }

    return m;
  },
      _localToGlobal = function _localToGlobal(e, p, fromTopLeft, decoratee) {
    e = _unwrapElement(e);

    var m = _getConcatenatedMatrix(e, false),
        x = p.x,
        y = p.y;

    if (fromTopLeft) {
      _getOffsetTransformOrigin(e, p);

      x -= p.x;
      y -= p.y;
    }

    decoratee = decoratee === true ? p : decoratee || {};
    decoratee.x = x * m[0] + y * m[2] + m[4];
    decoratee.y = x * m[1] + y * m[3] + m[5];
    return decoratee;
  },
      _localizePoint = function _localizePoint(p, localToGlobal, globalToLocal) {
    var x = p.x * localToGlobal[0] + p.y * localToGlobal[2] + localToGlobal[4],
        y = p.x * localToGlobal[1] + p.y * localToGlobal[3] + localToGlobal[5];
    p.x = x * globalToLocal[0] + y * globalToLocal[2] + globalToLocal[4];
    p.y = x * globalToLocal[1] + y * globalToLocal[3] + globalToLocal[5];
    return p;
  },
      _getElementBounds = function _getElementBounds(e, context, fromTopLeft) {
    if (!(e = _unwrapElement(e))) {
      return null;
    }

    context = _unwrapElement(context);

    var isSVG = e.getBBox && _isSVG(e),
        origin,
        left,
        right,
        top,
        bottom,
        mLocalToGlobal,
        mGlobalToLocal,
        p1,
        p2,
        p3,
        p4,
        bbox,
        width,
        height,
        cache,
        borderLeft,
        borderTop,
        viewBox,
        viewBoxX,
        viewBoxY,
        computedDimensions,
        cs;

    if (e === window) {
      top = _getDocScrollTop();
      left = _getDocScrollLeft();
      right = left + (_docElement.clientWidth || e.innerWidth || _doc.body.clientWidth || 0);
      bottom = top + ((e.innerHeight || 0) - 20 < _docElement.clientHeight ? _docElement.clientHeight : e.innerHeight || _doc.body.clientHeight || 0); //some browsers (like Firefox) ignore absolutely positioned elements, and collapse the height of the documentElement, so it could be 8px, for example, if you have just an absolutely positioned div. In that case, we use the innerHeight to resolve this.
    } else if (context === undefined || context === window) {
      return e.getBoundingClientRect();
    } else {
      origin = _getOffsetTransformOrigin(e);
      left = -origin.x;
      top = -origin.y;

      if (isSVG) {
        bbox = e.getBBox();
        width = bbox.width;
        height = bbox.height;
      } else if ((e.nodeName + "").toLowerCase() !== "svg" && e.offsetWidth) {
        //Chrome dropped support for "offsetWidth" on SVG elements
        width = e.offsetWidth;
        height = e.offsetHeight;
      } else {
        computedDimensions = _getComputedStyle(e);
        width = parseFloat(computedDimensions.width);
        height = parseFloat(computedDimensions.height);
      }

      right = left + width;
      bottom = top + height;

      if (e.nodeName.toLowerCase() === "svg" && !_isOldIE) {
        //root SVG elements are a special beast because they have 2 types of scaling - transforms on themselves as well as the stretching of the SVG canvas itself based on the outer size and the viewBox. If, for example, the SVG's viewbox is "0 0 100 100" but the CSS is set to width:200px; height:200px, that'd make it appear at 2x scale even though the element itself has no CSS transforms but the offsetWidth/offsetHeight are based on that css, not the viewBox so we need to adjust them accordingly.
        cache = _getSVGOffsets(e);
        cs = cache.computedStyle || {};
        viewBox = (e.getAttribute("viewBox") || "0 0").split(" ");
        viewBoxX = parseFloat(viewBox[0]);
        viewBoxY = parseFloat(viewBox[1]);
        borderLeft = parseFloat(cs.borderLeftWidth) || 0;
        borderTop = parseFloat(cs.borderTopWidth) || 0;
        left /= cache.scaleX;
        top /= cache.scaleY;
        right = left + width - (width - (width - borderLeft) / cache.scaleX - viewBoxX);
        bottom = top + height - (height - (height - borderTop) / cache.scaleY - viewBoxY);
        left -= borderLeft / cache.scaleX - viewBoxX;
        top -= borderTop / cache.scaleY - viewBoxY;

        if (computedDimensions) {
          //when we had to use computed styles, factor in the border now.
          right += (parseFloat(cs.borderRightWidth) + borderLeft) / cache.scaleX;
          bottom += (borderTop + parseFloat(cs.borderBottomWidth)) / cache.scaleY;
        }
      }
    }

    if (e === context) {
      return {
        left: left,
        top: top,
        width: right - left,
        height: bottom - top
      };
    }

    mLocalToGlobal = _getConcatenatedMatrix(e);
    mGlobalToLocal = _getConcatenatedMatrix(context, true);
    p1 = _localizePoint({
      x: left,
      y: top
    }, mLocalToGlobal, mGlobalToLocal);
    p2 = _localizePoint({
      x: right,
      y: top
    }, mLocalToGlobal, mGlobalToLocal);
    p3 = _localizePoint({
      x: right,
      y: bottom
    }, mLocalToGlobal, mGlobalToLocal);
    p4 = _localizePoint({
      x: left,
      y: bottom
    }, mLocalToGlobal, mGlobalToLocal);
    left = Math.min(p1.x, p2.x, p3.x, p4.x);
    top = Math.min(p1.y, p2.y, p3.y, p4.y);
    _temp1.x = _temp1.y = 0;

    if (fromTopLeft) {
      _getOffsetTransformOrigin(context, _temp1);
    }

    return {
      left: left + _temp1.x,
      top: top + _temp1.y,
      width: Math.max(p1.x, p2.x, p3.x, p4.x) - left,
      height: Math.max(p1.y, p2.y, p3.y, p4.y) - top
    };
  },
      // end matrix and point conversion methods
  _isArrayLike = function _isArrayLike(e) {
    return e && e.length && e[0] && (e[0].nodeType && e[0].style && !e.nodeType || e[0].length && e[0][0]) ? true : false; //could be an array of jQuery objects too, so accommodate that.
  },
      _flattenArray = function _flattenArray(a) {
    var result = [],
        l = a.length,
        i,
        e,
        j;

    for (i = 0; i < l; i++) {
      e = a[i];

      if (_isArrayLike(e)) {
        j = e.length;

        for (j = 0; j < e.length; j++) {
          result.push(e[j]);
        }
      } else if (e && e.length !== 0) {
        result.push(e);
      }
    }

    return result;
  },
      _isTouchDevice = typeof window !== "undefined" && "ontouchstart" in _docElement && "orientation" in window,
      _touchEventLookup = function (types) {
    //we create an object that makes it easy to translate touch event types into their "pointer" counterparts if we're in a browser that uses those instead. Like IE10 uses "MSPointerDown" instead of "touchstart", for example.
    var standard = types.split(","),
        converted = (_tempDiv.onpointerdown !== undefined ? "pointerdown,pointermove,pointerup,pointercancel" : _tempDiv.onmspointerdown !== undefined ? "MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel" : types).split(","),
        obj = {},
        i = 4;

    while (--i > -1) {
      obj[standard[i]] = converted[i];
      obj[converted[i]] = standard[i];
    } //to avoid problems in iOS 9, test to see if the browser supports the "passive" option on addEventListener().


    try {
      _docElement.addEventListener("test", null, Object.defineProperty({}, "passive", {
        get: function get() {
          _supportsPassive = 1;
        }
      }));
    } catch (e) {}

    return obj;
  }("touchstart,touchmove,touchend,touchcancel"),
      _addListener = function _addListener(element, type, func, capture) {
    if (element.addEventListener) {
      var touchType = _touchEventLookup[type];
      capture = capture || (_supportsPassive ? {
        passive: false
      } : null);
      element.addEventListener(touchType || type, func, capture);

      if (touchType && type !== touchType) {
        //some browsers actually support both, so must we.
        element.addEventListener(type, func, capture);
      }
    } else if (element.attachEvent) {
      element.attachEvent("on" + type, func);
    }
  },
      _removeListener = function _removeListener(element, type, func) {
    if (element.removeEventListener) {
      var touchType = _touchEventLookup[type];
      element.removeEventListener(touchType || type, func);

      if (touchType && type !== touchType) {
        element.removeEventListener(type, func);
      }
    } else if (element.detachEvent) {
      element.detachEvent("on" + type, func);
    }
  },
      _hasTouchID = function _hasTouchID(list, ID) {
    var i = list.length;

    while (--i > -1) {
      if (list[i].identifier === ID) {
        return true;
      }
    }

    return false;
  },
      _onMultiTouchDocumentEnd = function _onMultiTouchDocumentEnd(e) {
    _isMultiTouching = e.touches && _dragCount < e.touches.length;

    _removeListener(e.target, "touchend", _onMultiTouchDocumentEnd);
  },
      _onMultiTouchDocument = function _onMultiTouchDocument(e) {
    _isMultiTouching = e.touches && _dragCount < e.touches.length;

    _addListener(e.target, "touchend", _onMultiTouchDocumentEnd);
  },
      _parseThrowProps = function _parseThrowProps(draggable, snap, max, min, factor, forceZeroVelocity) {
    var vars = {},
        a,
        i,
        l;

    if (snap) {
      if (factor !== 1 && snap instanceof Array) {
        //some data must be altered to make sense, like if the user passes in an array of rotational values in degrees, we must convert it to radians. Or for scrollLeft and scrollTop, we invert the values.
        vars.end = a = [];
        l = snap.length;

        if (typeof snap[0] === "object") {
          //if the array is populated with objects, like points ({x:100, y:200}), make copies before multiplying by the factor, otherwise we'll mess up the originals and the user may reuse it elsewhere.
          for (i = 0; i < l; i++) {
            a[i] = _copy(snap[i], factor);
          }
        } else {
          for (i = 0; i < l; i++) {
            a[i] = snap[i] * factor;
          }
        }

        max += 1.1; //allow 1.1 pixels of wiggle room when snapping in order to work around some browser inconsistencies in the way bounds are reported which can make them roughly a pixel off. For example, if "snap:[-$('#menu').width(), 0]" was defined and #menu had a wrapper that was used as the bounds, some browsers would be one pixel off, making the minimum -752 for example when snap was [-753,0], thus instead of snapping to -753, it would snap to 0 since -753 was below the minimum.

        min -= 1.1;
      } else if (typeof snap === "function") {
        vars.end = function (value) {
          var result = snap.call(draggable, value),
              copy,
              p;

          if (factor !== 1) {
            if (typeof result === "object") {
              copy = {};

              for (p in result) {
                copy[p] = result[p] * factor;
              }

              result = copy;
            } else {
              result *= factor;
            }
          }

          return result; //we need to ensure that we can scope the function call to the Draggable instance itself so that users can access important values like maxX, minX, maxY, minY, x, and y from within that function.
        };
      } else {
        vars.end = snap;
      }
    }

    if (max || max === 0) {
      vars.max = max;
    }

    if (min || min === 0) {
      vars.min = min;
    }

    if (forceZeroVelocity) {
      vars.velocity = 0;
    }

    return vars;
  },
      _isClickable = function _isClickable(e) {
    //sometimes it's convenient to mark an element as clickable by adding a data-clickable="true" attribute (in which case we won't preventDefault() the mouse/touch event). This method checks if the element is an <a>, <input>, or <button> or has an onclick or has the data-clickable or contentEditable attribute set to true (or any of its parent elements).
    var data;
    return !e || !e.getAttribute || e.nodeName === "BODY" ? false : (data = e.getAttribute("data-clickable")) === "true" || data !== "false" && (e.onclick || _clickableTagExp.test(e.nodeName + "") || e.getAttribute("contentEditable") === "true") ? true : _isClickable(e.parentNode);
  },
      _setSelectable = function _setSelectable(elements, selectable) {
    var i = elements.length,
        e;

    while (--i > -1) {
      e = elements[i];
      e.ondragstart = e.onselectstart = selectable ? null : _emptyFunc;

      _setStyle(e, "userSelect", selectable ? "text" : "none");
    }
  },
      _addPaddingBR = function () {
    //this function is in charge of analyzing browser behavior related to padding. It sets the _addPaddingBR to true if the browser doesn't normally factor in the bottom or right padding on the element inside the scrolling area, and it sets _addPaddingLeft to true if it's a browser that requires the extra offset (offsetLeft) to be added to the paddingRight (like Opera).
    var div = _doc.createElement("div"),
        child = _doc.createElement("div"),
        childStyle = child.style,
        parent = _doc.body || _tempDiv,
        val;

    childStyle.display = "inline-block";
    childStyle.position = "relative";
    div.style.cssText = child.innerHTML = "width:90px; height:40px; padding:10px; overflow:auto; visibility: hidden";
    div.appendChild(child);
    parent.appendChild(div);
    val = child.offsetHeight + 18 > div.scrollHeight; //div.scrollHeight should be child.offsetHeight + 20 because of the 10px of padding on each side, but some browsers ignore one side. We allow a 2px margin of error.

    parent.removeChild(div);
    return val;
  }(),
      //The ScrollProxy class wraps an element's contents into another div (we call it "content") that we either add padding when necessary or apply a translate3d() transform in order to overscroll (scroll past the boundaries). This allows us to simply set the scrollTop/scrollLeft (or top/left for easier reverse-axis orientation, which is what we do in Draggable) and it'll do all the work for us. For example, if we tried setting scrollTop to -100 on a normal DOM element, it wouldn't work - it'd look the same as setting it to 0, but if we set scrollTop of a ScrollProxy to -100, it'll give the correct appearance by either setting paddingTop of the wrapper to 100 or applying a 100-pixel translateY.
  ScrollProxy = function ScrollProxy(element, vars) {
    element = _unwrapElement(element);
    vars = vars || {};

    var content = _doc.createElement("div"),
        style = content.style,
        node = element.firstChild,
        offsetTop = 0,
        offsetLeft = 0,
        prevTop = element.scrollTop,
        prevLeft = element.scrollLeft,
        scrollWidth = element.scrollWidth,
        scrollHeight = element.scrollHeight,
        extraPadRight = 0,
        maxLeft = 0,
        maxTop = 0,
        elementWidth,
        elementHeight,
        contentHeight,
        nextNode,
        transformStart,
        transformEnd;

    if (_supports3D && vars.force3D !== false) {
      transformStart = "translate3d(";
      transformEnd = "px,0px)";
    } else if (_transformProp) {
      transformStart = "translate(";
      transformEnd = "px)";
    }

    this.scrollTop = function (value, force) {
      if (!arguments.length) {
        return -this.top();
      }

      this.top(-value, force);
    };

    this.scrollLeft = function (value, force) {
      if (!arguments.length) {
        return -this.left();
      }

      this.left(-value, force);
    };

    this.left = function (value, force) {
      if (!arguments.length) {
        return -(element.scrollLeft + offsetLeft);
      }

      var dif = element.scrollLeft - prevLeft,
          oldOffset = offsetLeft;

      if ((dif > 2 || dif < -2) && !force) {
        //if the user interacts with the scrollbar (or something else scrolls it, like the mouse wheel), we should kill any tweens of the ScrollProxy.
        prevLeft = element.scrollLeft;
        __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].killTweensOf(this, true, {
          left: 1,
          scrollLeft: 1
        });
        this.left(-prevLeft);

        if (vars.onKill) {
          vars.onKill();
        }

        return;
      }

      value = -value; //invert because scrolling works in the opposite direction

      if (value < 0) {
        offsetLeft = value - 0.5 | 0;
        value = 0;
      } else if (value > maxLeft) {
        offsetLeft = value - maxLeft | 0;
        value = maxLeft;
      } else {
        offsetLeft = 0;
      }

      if (offsetLeft || oldOffset) {
        if (transformStart) {
          if (!this._suspendTransforms) {
            style[_transformProp] = transformStart + -offsetLeft + "px," + -offsetTop + transformEnd;
          }
        } else {
          style.left = -offsetLeft + "px";
        }

        if (offsetLeft + extraPadRight >= 0) {
          style.paddingRight = offsetLeft + extraPadRight + "px";
        }
      }

      element.scrollLeft = value | 0;
      prevLeft = element.scrollLeft; //don't merge this with the line above because some browsers adjsut the scrollLeft after it's set, so in order to be 100% accurate in tracking it, we need to ask the browser to report it.
    };

    this.top = function (value, force) {
      if (!arguments.length) {
        return -(element.scrollTop + offsetTop);
      }

      var dif = element.scrollTop - prevTop,
          oldOffset = offsetTop;

      if ((dif > 2 || dif < -2) && !force) {
        //if the user interacts with the scrollbar (or something else scrolls it, like the mouse wheel), we should kill any tweens of the ScrollProxy.
        prevTop = element.scrollTop;
        __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].killTweensOf(this, true, {
          top: 1,
          scrollTop: 1
        });
        this.top(-prevTop);

        if (vars.onKill) {
          vars.onKill();
        }

        return;
      }

      value = -value; //invert because scrolling works in the opposite direction

      if (value < 0) {
        offsetTop = value - 0.5 | 0;
        value = 0;
      } else if (value > maxTop) {
        offsetTop = value - maxTop | 0;
        value = maxTop;
      } else {
        offsetTop = 0;
      }

      if (offsetTop || oldOffset) {
        if (transformStart) {
          if (!this._suspendTransforms) {
            style[_transformProp] = transformStart + -offsetLeft + "px," + -offsetTop + transformEnd;
          }
        } else {
          style.top = -offsetTop + "px";
        }
      }

      element.scrollTop = value | 0;
      prevTop = element.scrollTop;
    };

    this.maxScrollTop = function () {
      return maxTop;
    };

    this.maxScrollLeft = function () {
      return maxLeft;
    };

    this.disable = function () {
      node = content.firstChild;

      while (node) {
        nextNode = node.nextSibling;
        element.appendChild(node);
        node = nextNode;
      }

      if (element === content.parentNode) {
        //in case disable() is called when it's already disabled.
        element.removeChild(content);
      }
    };

    this.enable = function () {
      node = element.firstChild;

      if (node === content) {
        return;
      }

      while (node) {
        nextNode = node.nextSibling;
        content.appendChild(node);
        node = nextNode;
      }

      element.appendChild(content);
      this.calibrate();
    };

    this.calibrate = function (force) {
      var widthMatches = element.clientWidth === elementWidth,
          x,
          y;
      prevTop = element.scrollTop;
      prevLeft = element.scrollLeft;

      if (widthMatches && element.clientHeight === elementHeight && content.offsetHeight === contentHeight && scrollWidth === element.scrollWidth && scrollHeight === element.scrollHeight && !force) {
        return; //no need to recalculate things if the width and height haven't changed.
      }

      if (offsetTop || offsetLeft) {
        x = this.left();
        y = this.top();
        this.left(-element.scrollLeft);
        this.top(-element.scrollTop);
      } //first, we need to remove any width constraints to see how the content naturally flows so that we can see if it's wider than the containing element. If so, we've got to record the amount of overage so that we can apply that as padding in order for browsers to correctly handle things. Then we switch back to a width of 100% (without that, some browsers don't flow the content correctly)


      if (!widthMatches || force) {
        style.display = "block";
        style.width = "auto";
        style.paddingRight = "0px";
        extraPadRight = Math.max(0, element.scrollWidth - element.clientWidth); //if the content is wider than the container, we need to add the paddingLeft and paddingRight in order for things to behave correctly.

        if (extraPadRight) {
          extraPadRight += _getStyle(element, "paddingLeft") + (_addPaddingBR ? _getStyle(element, "paddingRight") : 0);
        }
      }

      style.display = "inline-block";
      style.position = "relative";
      style.overflow = "visible";
      style.verticalAlign = "top";
      style.width = "100%";
      style.paddingRight = extraPadRight + "px"; //some browsers neglect to factor in the bottom padding when calculating the scrollHeight, so we need to add that padding to the content when that happens. Allow a 2px margin for error

      if (_addPaddingBR) {
        style.paddingBottom = _getStyle(element, "paddingBottom", true);
      }

      if (_isOldIE) {
        style.zoom = "1";
      }

      elementWidth = element.clientWidth;
      elementHeight = element.clientHeight;
      scrollWidth = element.scrollWidth;
      scrollHeight = element.scrollHeight;
      maxLeft = element.scrollWidth - elementWidth;
      maxTop = element.scrollHeight - elementHeight;
      contentHeight = content.offsetHeight;
      style.display = "block";

      if (x || y) {
        this.left(x);
        this.top(y);
      }
    };

    this.content = content;
    this.element = element;
    this._suspendTransforms = false;
    this.enable();
  },
      Draggable = function Draggable(target, vars) {
    __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["g" /* EventDispatcher */].call(this, target);
    target = _unwrapElement(target); //in case the target is a selector object or selector text

    if (!ThrowPropsPlugin) {
      ThrowPropsPlugin = _globals.com.greensock.plugins.ThrowPropsPlugin;
    }

    this.vars = vars = _copy(vars || {});
    this.target = target;
    this.x = this.y = this.rotation = 0;
    this.dragResistance = parseFloat(vars.dragResistance) || 0;
    this.edgeResistance = isNaN(vars.edgeResistance) ? 1 : parseFloat(vars.edgeResistance) || 0;
    this.lockAxis = vars.lockAxis;
    this.autoScroll = vars.autoScroll || 0;
    this.lockedAxis = null;
    this.allowEventDefault = !!vars.allowEventDefault;

    var type = (vars.type || (_isOldIE ? "top,left" : "x,y")).toLowerCase(),
        xyMode = type.indexOf("x") !== -1 || type.indexOf("y") !== -1,
        rotationMode = type.indexOf("rotation") !== -1,
        xProp = rotationMode ? "rotation" : xyMode ? "x" : "left",
        yProp = xyMode ? "y" : "top",
        allowX = type.indexOf("x") !== -1 || type.indexOf("left") !== -1 || type === "scroll",
        allowY = type.indexOf("y") !== -1 || type.indexOf("top") !== -1 || type === "scroll",
        minimumMovement = vars.minimumMovement || 2,
        self = this,
        triggers = _slice(vars.trigger || vars.handle || target),
        killProps = {},
        dragEndTime = 0,
        checkAutoScrollBounds = false,
        autoScrollMarginTop = vars.autoScrollMarginTop || 40,
        autoScrollMarginRight = vars.autoScrollMarginRight || 40,
        autoScrollMarginBottom = vars.autoScrollMarginBottom || 40,
        autoScrollMarginLeft = vars.autoScrollMarginLeft || 40,
        isClickable = vars.clickableTest || _isClickable,
        clickTime = 0,
        enabled,
        scrollProxy,
        startPointerX,
        startPointerY,
        startElementX,
        startElementY,
        hasBounds,
        hasDragCallback,
        maxX,
        minX,
        maxY,
        minY,
        tempVars,
        cssVars,
        touch,
        touchID,
        rotationOrigin,
        dirty,
        old,
        snapX,
        snapY,
        snapXY,
        isClicking,
        touchEventTarget,
        matrix,
        interrupted,
        startScrollTop,
        startScrollLeft,
        applyObj,
        allowNativeTouchScrolling,
        touchDragAxis,
        isDispatching,
        clickDispatch,
        trustedClickDispatch,
        onContextMenu = function onContextMenu(e) {
      //used to prevent long-touch from triggering a context menu.
      if (self.isPressed && e.which < 2) {
        self.endDrag();
      } else {
        e.preventDefault();
        e.stopPropagation();
        return false;
      }
    },
        //this method gets called on every tick of TweenLite.ticker which allows us to synchronize the renders to the core engine (which is typically synchronized with the display refresh via requestAnimationFrame). This is an optimization - it's better than applying the values inside the "mousemove" or "touchmove" event handler which may get called many times inbetween refreshes.
    render = function render(suppressEvents) {
      if (self.autoScroll && self.isDragging && (checkAutoScrollBounds || dirty)) {
        var e = target,
            autoScrollFactor = self.autoScroll * 15,
            //multiplying by 15 just gives us a better "feel" speed-wise.
        parent,
            isRoot,
            rect,
            pointerX,
            pointerY,
            changeX,
            changeY,
            gap;
        checkAutoScrollBounds = false;
        _windowProxy.scrollTop = window.pageYOffset != null ? window.pageYOffset : _docElement.scrollTop != null ? _docElement.scrollTop : _doc.body.scrollTop;
        _windowProxy.scrollLeft = window.pageXOffset != null ? window.pageXOffset : _docElement.scrollLeft != null ? _docElement.scrollLeft : _doc.body.scrollLeft;
        pointerX = self.pointerX - _windowProxy.scrollLeft;
        pointerY = self.pointerY - _windowProxy.scrollTop;

        while (e && !isRoot) {
          //walk up the chain and sense wherever the pointer is within 40px of an edge that's scrollable.
          isRoot = _isRoot(e.parentNode);
          parent = isRoot ? _windowProxy : e.parentNode;
          rect = isRoot ? {
            bottom: Math.max(_docElement.clientHeight, window.innerHeight || 0),
            right: Math.max(_docElement.clientWidth, window.innerWidth || 0),
            left: 0,
            top: 0
          } : parent.getBoundingClientRect();
          changeX = changeY = 0;

          if (allowY) {
            gap = parent._gsMaxScrollY - parent.scrollTop;

            if (gap < 0) {
              changeY = gap;
            } else if (pointerY > rect.bottom - autoScrollMarginBottom && gap) {
              checkAutoScrollBounds = true;
              changeY = Math.min(gap, autoScrollFactor * (1 - Math.max(0, rect.bottom - pointerY) / autoScrollMarginBottom) | 0);
            } else if (pointerY < rect.top + autoScrollMarginTop && parent.scrollTop) {
              checkAutoScrollBounds = true;
              changeY = -Math.min(parent.scrollTop, autoScrollFactor * (1 - Math.max(0, pointerY - rect.top) / autoScrollMarginTop) | 0);
            }

            if (changeY) {
              parent.scrollTop += changeY;
            }
          }

          if (allowX) {
            gap = parent._gsMaxScrollX - parent.scrollLeft;

            if (gap < 0) {
              changeX = gap;
            } else if (pointerX > rect.right - autoScrollMarginRight && gap) {
              checkAutoScrollBounds = true;
              changeX = Math.min(gap, autoScrollFactor * (1 - Math.max(0, rect.right - pointerX) / autoScrollMarginRight) | 0);
            } else if (pointerX < rect.left + autoScrollMarginLeft && parent.scrollLeft) {
              checkAutoScrollBounds = true;
              changeX = -Math.min(parent.scrollLeft, autoScrollFactor * (1 - Math.max(0, pointerX - rect.left) / autoScrollMarginLeft) | 0);
            }

            if (changeX) {
              parent.scrollLeft += changeX;
            }
          }

          if (isRoot && (changeX || changeY)) {
            window.scrollTo(parent.scrollLeft, parent.scrollTop);
            setPointerPosition(self.pointerX + changeX, self.pointerY + changeY);
          }

          e = parent;
        }
      }

      if (dirty) {
        var x = self.x,
            y = self.y,
            min = 0.000001;

        if (x < min && x > -min) {
          //browsers don't handle super small decimals well.
          x = 0;
        }

        if (y < min && y > -min) {
          y = 0;
        }

        if (rotationMode) {
          self.deltaX = x - applyObj.data.rotation;
          applyObj.data.rotation = self.rotation = x;
          applyObj.setRatio(1); //note: instead of doing TweenLite.set(), as a performance optimization we skip right to the method that renders the transforms inside CSSPlugin. For old versions of IE, though, we do a normal TweenLite.set() to leverage its ability to re-reroute to an IE-specific 2D renderer.
        } else {
          if (scrollProxy) {
            if (allowY) {
              self.deltaY = y - scrollProxy.top();
              scrollProxy.top(y);
            }

            if (allowX) {
              self.deltaX = x - scrollProxy.left();
              scrollProxy.left(x);
            }
          } else if (xyMode) {
            if (allowY) {
              self.deltaY = y - applyObj.data.y;
              applyObj.data.y = y;
            }

            if (allowX) {
              self.deltaX = x - applyObj.data.x;
              applyObj.data.x = x;
            }

            applyObj.setRatio(1); //note: instead of doing TweenLite.set(), as a performance optimization we skip right to the method that renders the transforms inside CSSPlugin. For old versions of IE, though, we do a normal TweenLite.set() to leverage its ability to re-reroute to an IE-specific 2D renderer.
          } else {
            if (allowY) {
              self.deltaY = y - parseFloat(target.style.top || 0);
              target.style.top = y + "px";
            }

            if (allowX) {
              self.deltaY = x - parseFloat(target.style.left || 0);
              target.style.left = x + "px";
            }
          }
        }

        if (hasDragCallback && !suppressEvents && !isDispatching) {
          isDispatching = true; //in case onDrag has an update() call (avoid endless loop)

          _dispatchEvent(self, "drag", "onDrag");

          isDispatching = false;
        }
      }

      dirty = false;
    },
        //copies the x/y from the element (whether that be transforms, top/left, or ScrollProxy's top/left) to the Draggable's x and y (and rotation if necessary) properties so that they reflect reality and it also (optionally) applies any snapping necessary. This is used by the ThrowPropsPlugin tween in an onUpdate to ensure things are synced and snapped.
    syncXY = function syncXY(skipOnUpdate, skipSnap) {
      var x = self.x,
          y = self.y,
          snappedValue;

      if (!target._gsTransform && (xyMode || rotationMode)) {
        //just in case the _gsTransform got wiped, like if the user called clearProps on the transform or something (very rare), doing an x tween forces a re-parsing of the transforms and population of the _gsTransform.
        __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].set(target, {
          x: "+=0",
          overwrite: false,
          data: "_draggable"
        });
      }

      if (xyMode) {
        self.y = target._gsTransform.y;
        self.x = target._gsTransform.x;
      } else if (rotationMode) {
        self.x = self.rotation = target._gsTransform.rotation;
      } else if (scrollProxy) {
        self.y = scrollProxy.top();
        self.x = scrollProxy.left();
      } else {
        self.y = parseInt(target.style.top, 10) || 0;
        self.x = parseInt(target.style.left, 10) || 0;
      }

      if ((snapX || snapY || snapXY) && !skipSnap && (self.isDragging || self.isThrowing)) {
        if (snapXY) {
          _temp1.x = self.x;
          _temp1.y = self.y;
          snappedValue = snapXY(_temp1);

          if (snappedValue.x !== self.x) {
            self.x = snappedValue.x;
            dirty = true;
          }

          if (snappedValue.y !== self.y) {
            self.y = snappedValue.y;
            dirty = true;
          }
        }

        if (snapX) {
          snappedValue = snapX(self.x);

          if (snappedValue !== self.x) {
            self.x = snappedValue;

            if (rotationMode) {
              self.rotation = snappedValue;
            }

            dirty = true;
          }
        }

        if (snapY) {
          snappedValue = snapY(self.y);

          if (snappedValue !== self.y) {
            self.y = snappedValue;
          }

          dirty = true;
        }
      }

      if (dirty) {
        render(true);
      }

      if (!skipOnUpdate) {
        self.deltaX = self.x - x;
        self.deltaY = self.y - y;

        _dispatchEvent(self, "throwupdate", "onThrowUpdate");
      }
    },
        calculateBounds = function calculateBounds() {
      var bounds, targetBounds, snap, snapIsRaw;
      hasBounds = false;

      if (scrollProxy) {
        scrollProxy.calibrate();
        self.minX = minX = -scrollProxy.maxScrollLeft();
        self.minY = minY = -scrollProxy.maxScrollTop();
        self.maxX = maxX = self.maxY = maxY = 0;
        hasBounds = true;
      } else if (!!vars.bounds) {
        bounds = _getBounds(vars.bounds, target.parentNode); //could be a selector/jQuery object or a DOM element or a generic object like {top:0, left:100, width:1000, height:800} or {minX:100, maxX:1100, minY:0, maxY:800}

        if (rotationMode) {
          self.minX = minX = bounds.left;
          self.maxX = maxX = bounds.left + bounds.width;
          self.minY = minY = self.maxY = maxY = 0;
        } else if (vars.bounds.maxX !== undefined || vars.bounds.maxY !== undefined) {
          bounds = vars.bounds;
          self.minX = minX = bounds.minX;
          self.minY = minY = bounds.minY;
          self.maxX = maxX = bounds.maxX;
          self.maxY = maxY = bounds.maxY;
        } else {
          targetBounds = _getBounds(target, target.parentNode);
          self.minX = minX = _getStyle(target, xProp) + bounds.left - targetBounds.left;
          self.minY = minY = _getStyle(target, yProp) + bounds.top - targetBounds.top;
          self.maxX = maxX = minX + (bounds.width - targetBounds.width);
          self.maxY = maxY = minY + (bounds.height - targetBounds.height);
        }

        if (minX > maxX) {
          self.minX = maxX;
          self.maxX = maxX = minX;
          minX = self.minX;
        }

        if (minY > maxY) {
          self.minY = maxY;
          self.maxY = maxY = minY;
          minY = self.minY;
        }

        if (rotationMode) {
          self.minRotation = minX;
          self.maxRotation = maxX;
        }

        hasBounds = true;
      }

      if (vars.liveSnap) {
        snap = vars.liveSnap === true ? vars.snap || {} : vars.liveSnap;
        snapIsRaw = snap instanceof Array || typeof snap === "function";

        if (rotationMode) {
          snapX = buildSnapFunc(snapIsRaw ? snap : snap.rotation, minX, maxX, 1);
          snapY = null;
        } else {
          if (snap.points) {
            snapXY = buildPointSnapFunc(snapIsRaw ? snap : snap.points, minX, maxX, minY, maxY, snap.radius, scrollProxy ? -1 : 1);
          } else {
            if (allowX) {
              snapX = buildSnapFunc(snapIsRaw ? snap : snap.x || snap.left || snap.scrollLeft, minX, maxX, scrollProxy ? -1 : 1);
            }

            if (allowY) {
              snapY = buildSnapFunc(snapIsRaw ? snap : snap.y || snap.top || snap.scrollTop, minY, maxY, scrollProxy ? -1 : 1);
            }
          }
        }
      }
    },
        onThrowComplete = function onThrowComplete() {
      self.isThrowing = false;

      _dispatchEvent(self, "throwcomplete", "onThrowComplete");
    },
        onThrowOverwrite = function onThrowOverwrite() {
      self.isThrowing = false;
    },
        animate = function animate(throwProps, forceZeroVelocity) {
      var snap, snapIsRaw, tween, overshootTolerance;

      if (throwProps && ThrowPropsPlugin) {
        if (throwProps === true) {
          snap = vars.snap || vars.liveSnap || {};
          snapIsRaw = snap instanceof Array || typeof snap === "function";
          throwProps = {
            resistance: (vars.throwResistance || vars.resistance || 1000) / (rotationMode ? 10 : 1)
          };

          if (rotationMode) {
            throwProps.rotation = _parseThrowProps(self, snapIsRaw ? snap : snap.rotation, maxX, minX, 1, forceZeroVelocity);
          } else {
            if (allowX) {
              throwProps[xProp] = _parseThrowProps(self, snapIsRaw ? snap : snap.points || snap.x || snap.left || snap.scrollLeft, maxX, minX, scrollProxy ? -1 : 1, forceZeroVelocity || self.lockedAxis === "x");
            }

            if (allowY) {
              throwProps[yProp] = _parseThrowProps(self, snapIsRaw ? snap : snap.points || snap.y || snap.top || snap.scrollTop, maxY, minY, scrollProxy ? -1 : 1, forceZeroVelocity || self.lockedAxis === "y");
            }

            if (snap.points || snap instanceof Array && typeof snap[0] === "object") {
              throwProps.linkedProps = xProp + "," + yProp;
              throwProps.radius = snap.radius; //note: we also disable liveSnapping while throwing if there's a "radius" defined, otherwise it looks weird to have the item thrown past a snapping point but live-snapping mid-tween. We do this by altering the onUpdateParams so that "skipSnap" parameter is true for syncXY.
            }
          }
        }

        self.isThrowing = true;
        overshootTolerance = !isNaN(vars.overshootTolerance) ? vars.overshootTolerance : vars.edgeResistance === 1 ? 0 : 1 - self.edgeResistance + 0.2;
        self.tween = tween = ThrowPropsPlugin.to(scrollProxy || target, {
          throwProps: throwProps,
          data: "_draggable",
          ease: vars.ease || _globals.Power3.easeOut,
          onComplete: onThrowComplete,
          onOverwrite: onThrowOverwrite,
          onUpdate: vars.fastMode ? _dispatchEvent : syncXY,
          onUpdateParams: vars.fastMode ? [self, "onthrowupdate", "onThrowUpdate"] : snap && snap.radius ? [false, true] : _emptyArray
        }, Math.max(vars.minDuration || 0, vars.maxDuration || 0) || 2, !isNaN(vars.minDuration) ? vars.minDuration : overshootTolerance === 0 || typeof throwProps === "object" && throwProps.resistance > 1000 ? 0 : 0.5, overshootTolerance);

        if (!vars.fastMode) {
          //to populate the end values, we just scrub the tween to the end, record the values, and then jump back to the beginning.
          if (scrollProxy) {
            scrollProxy._suspendTransforms = true; //Microsoft browsers have a bug that causes them to briefly render the position incorrectly (it flashes to the end state when we seek() the tween even though we jump right back to the current position, and this only seems to happen when we're affecting both top and left), so we set a _suspendTransforms flag to prevent it from actually applying the values in the ScrollProxy.
          }

          tween.render(tween.duration(), true, true);
          syncXY(true, true);
          self.endX = self.x;
          self.endY = self.y;

          if (rotationMode) {
            self.endRotation = self.x;
          }

          tween.play(0);
          syncXY(true, true);

          if (scrollProxy) {
            scrollProxy._suspendTransforms = false;
          }
        }
      } else if (hasBounds) {
        self.applyBounds();
      }
    },
        updateMatrix = function updateMatrix(shiftStart) {
      var start = matrix || [1, 0, 0, 1, 0, 0],
          a,
          b,
          c,
          d,
          tx,
          ty,
          determinant,
          pointerX,
          pointerY;
      matrix = _getConcatenatedMatrix(target.parentNode, true);

      if (shiftStart && self.isPressed && start.join(",") !== matrix.join(",")) {
        //if the matrix changes WHILE the element is pressed, we must adjust the startPointerX and startPointerY accordingly, so we invert the original matrix and figure out where the pointerX and pointerY were in the global space, then apply the new matrix to get the updated coordinates.
        a = start[0];
        b = start[1];
        c = start[2];
        d = start[3];
        tx = start[4];
        ty = start[5];
        determinant = a * d - b * c;
        pointerX = startPointerX * (d / determinant) + startPointerY * (-c / determinant) + (c * ty - d * tx) / determinant;
        pointerY = startPointerX * (-b / determinant) + startPointerY * (a / determinant) + -(a * ty - b * tx) / determinant;
        startPointerY = pointerX * matrix[1] + pointerY * matrix[3] + matrix[5];
        startPointerX = pointerX * matrix[0] + pointerY * matrix[2] + matrix[4];
      }

      if (!matrix[1] && !matrix[2] && matrix[0] == 1 && matrix[3] == 1 && matrix[4] == 0 && matrix[5] == 0) {
        //if there are no transforms, we can optimize performance by not factoring in the matrix
        matrix = null;
      }
    },
        recordStartPositions = function recordStartPositions() {
      var edgeTolerance = 1 - self.edgeResistance;
      updateMatrix(false);

      if (matrix) {
        startPointerX = self.pointerX * matrix[0] + self.pointerY * matrix[2] + matrix[4]; //translate to local coordinate system

        startPointerY = self.pointerX * matrix[1] + self.pointerY * matrix[3] + matrix[5];
      }

      if (dirty) {
        setPointerPosition(self.pointerX, self.pointerY);
        render(true);
      }

      if (scrollProxy) {
        calculateBounds();
        startElementY = scrollProxy.top();
        startElementX = scrollProxy.left();
      } else {
        //if the element is in the process of tweening, don't force snapping to occur because it could make it jump. Imagine the user throwing, then before it's done, clicking on the element in its inbetween state.
        if (isTweening()) {
          syncXY(true, true);
          calculateBounds();
        } else {
          self.applyBounds();
        }

        if (rotationMode) {
          rotationOrigin = self.rotationOrigin = _localToGlobal(target, {
            x: 0,
            y: 0
          });
          syncXY(true, true);
          startElementX = self.x; //starting rotation (x always refers to rotation in type:"rotation", measured in degrees)

          startElementY = self.y = Math.atan2(rotationOrigin.y - self.pointerY, self.pointerX - rotationOrigin.x) * _RAD2DEG;
        } else {
          startScrollTop = target.parentNode ? target.parentNode.scrollTop || 0 : 0;
          startScrollLeft = target.parentNode ? target.parentNode.scrollLeft || 0 : 0;
          startElementY = _getStyle(target, yProp); //record the starting top and left values so that we can just add the mouse's movement to them later.

          startElementX = _getStyle(target, xProp);
        }
      }

      if (hasBounds && edgeTolerance) {
        if (startElementX > maxX) {
          startElementX = maxX + (startElementX - maxX) / edgeTolerance;
        } else if (startElementX < minX) {
          startElementX = minX - (minX - startElementX) / edgeTolerance;
        }

        if (!rotationMode) {
          if (startElementY > maxY) {
            startElementY = maxY + (startElementY - maxY) / edgeTolerance;
          } else if (startElementY < minY) {
            startElementY = minY - (minY - startElementY) / edgeTolerance;
          }
        }
      }

      self.startX = startElementX;
      self.startY = startElementY;
    },
        isTweening = function isTweening() {
      return self.tween && self.tween.isActive();
    },
        removePlaceholder = function removePlaceholder() {
      if (_placeholderDiv.parentNode && !isTweening() && !self.isDragging) {
        //_placeholderDiv just props open auto-scrolling containers so they don't collapse as the user drags left/up. We remove it after dragging (and throwing, if necessary) finishes.
        _placeholderDiv.parentNode.removeChild(_placeholderDiv);
      }
    },
        buildSnapFunc = function buildSnapFunc(snap, min, max, factor) {
      if (min == null) {
        min = -_max;
      }

      if (max == null) {
        max = _max;
      }

      if (typeof snap === "function") {
        return function (n) {
          var edgeTolerance = !self.isPressed ? 1 : 1 - self.edgeResistance; //if we're tweening, disable the edgeTolerance because it's already factored into the tweening values (we don't want to apply it multiple times)

          return snap.call(self, n > max ? max + (n - max) * edgeTolerance : n < min ? min + (n - min) * edgeTolerance : n) * factor;
        };
      }

      if (snap instanceof Array) {
        return function (n) {
          var i = snap.length,
              closest = 0,
              absDif = _max,
              val,
              dif;

          while (--i > -1) {
            val = snap[i];
            dif = val - n;

            if (dif < 0) {
              dif = -dif;
            }

            if (dif < absDif && val >= min && val <= max) {
              closest = i;
              absDif = dif;
            }
          }

          return snap[closest];
        };
      }

      return isNaN(snap) ? function (n) {
        return n;
      } : function () {
        return snap * factor;
      };
    },
        buildPointSnapFunc = function buildPointSnapFunc(snap, minX, maxX, minY, maxY, radius, factor) {
      radius = radius && radius < _max ? radius * radius : _max; //so we don't have to Math.sqrt() in the functions. Performance optimization.

      if (typeof snap === "function") {
        return function (point) {
          var edgeTolerance = !self.isPressed ? 1 : 1 - self.edgeResistance,
              x = point.x,
              y = point.y,
              result,
              dx,
              dy; //if we're tweening, disable the edgeTolerance because it's already factored into the tweening values (we don't want to apply it multiple times)

          point.x = x = x > maxX ? maxX + (x - maxX) * edgeTolerance : x < minX ? minX + (x - minX) * edgeTolerance : x;
          point.y = y = y > maxY ? maxY + (y - maxY) * edgeTolerance : y < minY ? minY + (y - minY) * edgeTolerance : y;
          result = snap.call(self, point);

          if (result !== point) {
            point.x = result.x;
            point.y = result.y;
          }

          if (factor !== 1) {
            point.x *= factor;
            point.y *= factor;
          }

          if (radius < _max) {
            dx = point.x - x;
            dy = point.y - y;

            if (dx * dx + dy * dy > radius) {
              point.x = x;
              point.y = y;
            }
          }

          return point;
        };
      }

      if (snap instanceof Array) {
        return function (p) {
          var i = snap.length,
              closest = 0,
              minDist = _max,
              x,
              y,
              point,
              dist;

          while (--i > -1) {
            point = snap[i];
            x = point.x - p.x;
            y = point.y - p.y;
            dist = x * x + y * y;

            if (dist < minDist) {
              closest = i;
              minDist = dist;
            }
          }

          return minDist <= radius ? snap[closest] : p;
        };
      }

      return function (n) {
        return n;
      };
    },
        //called when the mouse is pressed (or touch starts)
    onPress = function onPress(e, force) {
      var i;

      if (!enabled || self.isPressed || !e || (e.type === "mousedown" || e.type === "pointerdown") && !force && _getTime() - clickTime < 30 && _touchEventLookup[self.pointerEvent.type]) {
        //when we DON'T preventDefault() in order to accommodate touch-scrolling and the user just taps, many browsers also fire a mousedown/mouseup sequence AFTER the touchstart/touchend sequence, thus it'd result in two quick "click" events being dispatched. This line senses that condition and halts it on the subsequent mousedown.
        return;
      }

      interrupted = isTweening();
      self.pointerEvent = e;

      if (_touchEventLookup[e.type]) {
        //note: on iOS, BOTH touchmove and mousemove are dispatched, but the mousemove has pageY and pageX of 0 which would mess up the calculations and needlessly hurt performance.
        touchEventTarget = e.type.indexOf("touch") !== -1 ? e.currentTarget || e.target : _doc; //pointer-based touches (for Microsoft browsers) don't remain locked to the original target like other browsers, so we must use the document instead. The event type would be "MSPointerDown" or "pointerdown".

        _addListener(touchEventTarget, "touchend", onRelease);

        _addListener(touchEventTarget, "touchmove", onMove);

        _addListener(touchEventTarget, "touchcancel", onRelease);

        _addListener(_doc, "touchstart", _onMultiTouchDocument);
      } else {
        touchEventTarget = null;

        _addListener(_doc, "mousemove", onMove); //attach these to the document instead of the box itself so that if the user's mouse moves too quickly (and off of the box), things still work.

      }

      touchDragAxis = null;

      _addListener(_doc, "mouseup", onRelease);

      if (e && e.target) {
        _addListener(e.target, "mouseup", onRelease); //we also have to listen directly on the element because some browsers don't bubble up the event to the _doc on elements with contentEditable="true"

      }

      isClicking = isClickable.call(self, e.target) && vars.dragClickables === false && !force;

      if (isClicking) {
        _addListener(e.target, "change", onRelease); //in some browsers, when you mousedown on a <select> element, no mouseup gets dispatched! So we listen for a "change" event instead.


        _dispatchEvent(self, "pressInit", "onPressInit");

        _dispatchEvent(self, "press", "onPress");

        _setSelectable(triggers, true); //accommodates things like inputs and elements with contentEditable="true" (otherwise user couldn't drag to select text)


        return;
      }

      allowNativeTouchScrolling = !touchEventTarget || allowX === allowY || self.vars.allowNativeTouchScrolling === false || self.vars.allowContextMenu && e && (e.ctrlKey || e.which > 2) ? false : allowX ? "y" : "x"; //note: in Chrome, right-clicking (for a context menu) fires onPress and it doesn't have the event.which set properly, so we must look for event.ctrlKey. If the user wants to allow context menus we should of course sense it here and not allow native touch scrolling.

      if (_isOldIE) {
        e = _populateIEEvent(e, true);
      } else if (!allowNativeTouchScrolling && !self.allowEventDefault) {
        e.preventDefault();

        if (e.preventManipulation) {
          e.preventManipulation(); //for some Microsoft browsers
        }
      }

      if (e.changedTouches) {
        //touch events store the data slightly differently
        e = touch = e.changedTouches[0];
        touchID = e.identifier;
      } else if (e.pointerId) {
        touchID = e.pointerId; //for some Microsoft browsers
      } else {
        touch = touchID = null;
      }

      _dragCount++;

      _addToRenderQueue(render); //causes the Draggable to render on each "tick" of TweenLite.ticker (performance optimization - updating values in a mousemove can cause them to happen too frequently, like multiple times between frame redraws which is wasteful, and it also prevents values from updating properly in IE8)


      startPointerY = self.pointerY = e.pageY; //record the starting x and y so that we can calculate the movement from the original in _onMouseMove

      startPointerX = self.pointerX = e.pageX;

      _dispatchEvent(self, "pressInit", "onPressInit");

      if (allowNativeTouchScrolling || self.autoScroll) {
        _recordMaxScrolls(target.parentNode);
      }

      if (target.parentNode && self.autoScroll && !scrollProxy && !rotationMode && target.parentNode._gsMaxScrollX && !_placeholderDiv.parentNode && !target.getBBox) {
        //add a placeholder div to prevent the parent container from collapsing when the user drags the element left.
        _placeholderDiv.style.width = target.parentNode.scrollWidth + "px";
        target.parentNode.appendChild(_placeholderDiv);
      }

      recordStartPositions();

      if (self.tween) {
        self.tween.kill();
      }

      self.isThrowing = false;
      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].killTweensOf(scrollProxy || target, true, killProps); //in case the user tries to drag it before the last tween is done.

      if (scrollProxy) {
        __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].killTweensOf(target, true, {
          scrollTo: 1
        }); //just in case the original target's scroll position is being tweened somewhere else.
      }

      self.tween = self.lockedAxis = null;

      if (vars.zIndexBoost || !rotationMode && !scrollProxy && vars.zIndexBoost !== false) {
        target.style.zIndex = Draggable.zIndex++;
      }

      self.isPressed = true;
      hasDragCallback = !!(vars.onDrag || self._listeners.drag);

      if (!rotationMode && (vars.cursor !== false || vars.activeCursor)) {
        i = triggers.length;

        while (--i > -1) {
          _setStyle(triggers[i], "cursor", vars.activeCursor || vars.cursor || "move");
        }
      }

      _dispatchEvent(self, "press", "onPress");
    },
        //called every time the mouse/touch moves
    onMove = function onMove(e) {
      var originalEvent = e,
          touches,
          pointerX,
          pointerY,
          i,
          dx,
          dy;

      if (!enabled || _isMultiTouching || !self.isPressed || !e) {
        return;
      }

      self.pointerEvent = e;
      touches = e.changedTouches;

      if (touches) {
        //touch events store the data slightly differently
        e = touches[0];

        if (e !== touch && e.identifier !== touchID) {
          //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)
          i = touches.length;

          while (--i > -1 && (e = touches[i]).identifier !== touchID) {}

          if (i < 0) {
            return;
          }
        }
      } else if (e.pointerId && touchID && e.pointerId !== touchID) {
        //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)
        return;
      }

      if (_isOldIE) {
        e = _populateIEEvent(e, true);
      } else {
        if (touchEventTarget && allowNativeTouchScrolling && !touchDragAxis) {
          //Android browsers force us to decide on the first "touchmove" event if we should allow the default (scrolling) behavior or preventDefault(). Otherwise, a "touchcancel" will be fired and then no "touchmove" or "touchend" will fire during the scrolling (no good).
          pointerX = e.pageX;
          pointerY = e.pageY;

          if (matrix) {
            i = pointerX * matrix[0] + pointerY * matrix[2] + matrix[4];
            pointerY = pointerX * matrix[1] + pointerY * matrix[3] + matrix[5];
            pointerX = i;
          }

          dx = Math.abs(pointerX - startPointerX);
          dy = Math.abs(pointerY - startPointerY);

          if (dx !== dy && (dx > minimumMovement || dy > minimumMovement) || _isAndroid && allowNativeTouchScrolling === touchDragAxis) {
            touchDragAxis = dx > dy && allowX ? "x" : "y";

            if (self.vars.lockAxisOnTouchScroll !== false) {
              self.lockedAxis = touchDragAxis === "x" ? "y" : "x";

              if (typeof self.vars.onLockAxis === "function") {
                self.vars.onLockAxis.call(self, originalEvent);
              }
            }

            if (_isAndroid && allowNativeTouchScrolling === touchDragAxis) {
              onRelease(originalEvent);
              return;
            }
          }
        }

        if (!self.allowEventDefault && (!allowNativeTouchScrolling || touchDragAxis && allowNativeTouchScrolling !== touchDragAxis) && originalEvent.cancelable !== false) {
          originalEvent.preventDefault();

          if (originalEvent.preventManipulation) {
            //for some Microsoft browsers
            originalEvent.preventManipulation();
          }
        }
      }

      if (self.autoScroll) {
        checkAutoScrollBounds = true;
      }

      setPointerPosition(e.pageX, e.pageY);
    },
        setPointerPosition = function setPointerPosition(pointerX, pointerY) {
      var dragTolerance = 1 - self.dragResistance,
          edgeTolerance = 1 - self.edgeResistance,
          xChange,
          yChange,
          x,
          y,
          dif,
          temp;
      self.pointerX = pointerX;
      self.pointerY = pointerY;

      if (rotationMode) {
        y = Math.atan2(rotationOrigin.y - pointerY, pointerX - rotationOrigin.x) * _RAD2DEG;
        dif = self.y - y;

        if (dif > 180) {
          startElementY -= 360;
          self.y = y;
        } else if (dif < -180) {
          startElementY += 360;
          self.y = y;
        }

        if (self.x !== startElementX || Math.abs(startElementY - y) > minimumMovement) {
          self.y = y;
          x = startElementX + (startElementY - y) * dragTolerance;
        } else {
          x = startElementX;
        }
      } else {
        if (matrix) {
          temp = pointerX * matrix[0] + pointerY * matrix[2] + matrix[4];
          pointerY = pointerX * matrix[1] + pointerY * matrix[3] + matrix[5];
          pointerX = temp;
        }

        yChange = pointerY - startPointerY;
        xChange = pointerX - startPointerX;

        if (yChange < minimumMovement && yChange > -minimumMovement) {
          yChange = 0;
        }

        if (xChange < minimumMovement && xChange > -minimumMovement) {
          xChange = 0;
        }

        if ((self.lockAxis || self.lockedAxis) && (xChange || yChange)) {
          temp = self.lockedAxis;

          if (!temp) {
            self.lockedAxis = temp = allowX && Math.abs(xChange) > Math.abs(yChange) ? "y" : allowY ? "x" : null;

            if (temp && typeof self.vars.onLockAxis === "function") {
              self.vars.onLockAxis.call(self, self.pointerEvent);
            }
          }

          if (temp === "y") {
            yChange = 0;
          } else if (temp === "x") {
            xChange = 0;
          }
        }

        x = startElementX + xChange * dragTolerance;
        y = startElementY + yChange * dragTolerance;
      }

      if ((snapX || snapY || snapXY) && (self.x !== x || self.y !== y && !rotationMode)) {
        if (snapXY) {
          _temp1.x = x;
          _temp1.y = y;
          temp = snapXY(_temp1);
          x = temp.x;
          y = temp.y;
        }

        if (snapX) {
          x = snapX(x);
        }

        if (snapY) {
          y = snapY(y);
        }
      } else if (hasBounds) {
        if (x > maxX) {
          x = maxX + (x - maxX) * edgeTolerance;
        } else if (x < minX) {
          x = minX + (x - minX) * edgeTolerance;
        }

        if (!rotationMode) {
          if (y > maxY) {
            y = maxY + (y - maxY) * edgeTolerance;
          } else if (y < minY) {
            y = minY + (y - minY) * edgeTolerance;
          }
        }
      }

      if (!rotationMode && !matrix) {
        x = Math.round(x); //helps work around an issue with some Win Touch devices

        y = Math.round(y);
      }

      if (self.x !== x || self.y !== y && !rotationMode) {
        if (rotationMode) {
          self.endRotation = self.x = self.endX = x;
          dirty = true;
        } else {
          if (allowY) {
            self.y = self.endY = y;
            dirty = true; //a flag that indicates we need to render the target next time the TweenLite.ticker dispatches a "tick" event (typically on a requestAnimationFrame) - this is a performance optimization (we shouldn't render on every move because sometimes many move events can get dispatched between screen refreshes, and that'd be wasteful to render every time)
          }

          if (allowX) {
            self.x = self.endX = x;
            dirty = true;
          }
        }

        if (!self.isDragging && self.isPressed) {
          self.isDragging = true;

          _dispatchEvent(self, "dragstart", "onDragStart");
        }
      }
    },
        //called when the mouse/touch is released
    onRelease = function onRelease(e, force) {
      if (!enabled || !self.isPressed || e && touchID != null && !force && (e.pointerId && e.pointerId !== touchID || e.changedTouches && !_hasTouchID(e.changedTouches, touchID))) {
        //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)
        return;
      }

      self.isPressed = false;
      var originalEvent = e,
          wasDragging = self.isDragging,
          isContextMenuRelease = self.vars.allowContextMenu && e && (e.ctrlKey || e.which > 2),
          placeholderDelayedCall = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0.001, removePlaceholder),
          touches,
          i,
          syntheticEvent,
          eventTarget,
          syntheticClick;

      if (touchEventTarget) {
        _removeListener(touchEventTarget, "touchend", onRelease);

        _removeListener(touchEventTarget, "touchmove", onMove);

        _removeListener(touchEventTarget, "touchcancel", onRelease);

        _removeListener(_doc, "touchstart", _onMultiTouchDocument);
      } else {
        _removeListener(_doc, "mousemove", onMove);
      }

      _removeListener(_doc, "mouseup", onRelease);

      if (e && e.target) {
        _removeListener(e.target, "mouseup", onRelease);
      }

      dirty = false;

      if (isClicking && !isContextMenuRelease) {
        if (e) {
          _removeListener(e.target, "change", onRelease);

          self.pointerEvent = originalEvent;
        }

        _setSelectable(triggers, false);

        _dispatchEvent(self, "release", "onRelease");

        _dispatchEvent(self, "click", "onClick");

        isClicking = false;
        return;
      }

      _removeFromRenderQueue(render);

      if (!rotationMode) {
        i = triggers.length;

        while (--i > -1) {
          _setStyle(triggers[i], "cursor", vars.cursor || (vars.cursor !== false ? "move" : null));
        }
      }

      if (wasDragging) {
        dragEndTime = _lastDragTime = _getTime();
        self.isDragging = false;
      }

      _dragCount--;

      if (e) {
        if (_isOldIE) {
          e = _populateIEEvent(e, false);
        }

        touches = e.changedTouches;

        if (touches) {
          //touch events store the data slightly differently
          e = touches[0];

          if (e !== touch && e.identifier !== touchID) {
            //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)
            i = touches.length;

            while (--i > -1 && (e = touches[i]).identifier !== touchID) {}

            if (i < 0) {
              return;
            }
          }
        }

        self.pointerEvent = originalEvent;
        self.pointerX = e.pageX;
        self.pointerY = e.pageY;
      }

      if (isContextMenuRelease && originalEvent) {
        originalEvent.preventDefault();

        if (originalEvent.preventManipulation) {
          originalEvent.preventManipulation(); //for some Microsoft browsers
        }

        _dispatchEvent(self, "release", "onRelease");
      } else if (originalEvent && !wasDragging) {
        if (interrupted && (vars.snap || vars.bounds)) {
          //otherwise, if the user clicks on the object while it's animating to a snapped position, and then releases without moving 3 pixels, it will just stay there (it should animate/snap)
          animate(vars.throwProps);
        }

        _dispatchEvent(self, "release", "onRelease");

        if ((!_isAndroid || originalEvent.type !== "touchmove") && originalEvent.type.indexOf("cancel") === -1) {
          //to accommodate native scrolling on Android devices, we have to immediately call onRelease() on the first touchmove event, but that shouldn't trigger a "click".
          _dispatchEvent(self, "click", "onClick");

          if (_getTime() - clickTime < 300) {
            _dispatchEvent(self, "doubleclick", "onDoubleClick");
          }

          eventTarget = originalEvent.target || originalEvent.srcElement || target; //old IE uses srcElement

          clickTime = _getTime();

          syntheticClick = function syntheticClick() {
            // some browsers (like Firefox) won't trust script-generated clicks, so if the user tries to click on a video to play it, for example, it simply won't work. Since a regular "click" event will most likely be generated anyway (one that has its isTrusted flag set to true), we must slightly delay our script-generated click so that the "real"/trusted one is prioritized. Remember, when there are duplicate events in quick succession, we suppress all but the first one. Some browsers don't even trigger the "real" one at all, so our synthetic one is a safety valve that ensures that no matter what, a click event does get dispatched.
            if (clickTime !== clickDispatch && self.enabled() && !self.isPressed) {
              if (eventTarget.click) {
                //some browsers (like mobile Safari) don't properly trigger the click event
                eventTarget.click();
              } else if (_doc.createEvent) {
                syntheticEvent = _doc.createEvent("MouseEvents");
                syntheticEvent.initMouseEvent("click", true, true, window, 1, self.pointerEvent.screenX, self.pointerEvent.screenY, self.pointerX, self.pointerY, false, false, false, false, 0, null);
                eventTarget.dispatchEvent(syntheticEvent);
              }
            }
          };

          if (!_isAndroid && !originalEvent.defaultPrevented) {
            //iOS Safari requires the synthetic click to happen immediately or else it simply won't work, but Android doesn't play nice.
            __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].delayedCall(0.00001, syntheticClick); //in addition to the iOS bug workaround, there's a Firefox issue with clicking on things like a video to play, so we must fake a click event in a slightly delayed fashion. Previously, we listened for the "click" event with "capture" false which solved the video-click-to-play issue, but it would allow the "click" event to be dispatched twice like if you were using a jQuery.click() because that was handled in the capture phase, thus we had to switch to the capture phase to avoid the double-dispatching, but do the delayed synthetic click.
          }
        }
      } else {
        animate(vars.throwProps); //will skip if throwProps isn't defined or ThrowPropsPlugin isn't loaded.

        if (!_isOldIE && !self.allowEventDefault && originalEvent && (vars.dragClickables !== false || !isClickable.call(self, originalEvent.target)) && wasDragging && (!allowNativeTouchScrolling || touchDragAxis && allowNativeTouchScrolling === touchDragAxis) && originalEvent.cancelable !== false) {
          originalEvent.preventDefault();

          if (originalEvent.preventManipulation) {
            originalEvent.preventManipulation(); //for some Microsoft browsers
          }
        }

        _dispatchEvent(self, "release", "onRelease");
      }

      if (isTweening()) {
        placeholderDelayedCall.duration(self.tween.duration()); //sync the timing so that the placeholder DIV gets
      }

      if (wasDragging) {
        _dispatchEvent(self, "dragend", "onDragEnd");
      }

      return true;
    },
        updateScroll = function updateScroll(e) {
      if (e && self.isDragging && !scrollProxy) {
        var parent = e.target || e.srcElement || target.parentNode,
            deltaX = parent.scrollLeft - parent._gsScrollX,
            deltaY = parent.scrollTop - parent._gsScrollY;

        if (deltaX || deltaY) {
          if (matrix) {
            startPointerX -= deltaX * matrix[0] + deltaY * matrix[2];
            startPointerY -= deltaY * matrix[3] + deltaX * matrix[1];
          } else {
            startPointerX -= deltaX;
            startPointerY -= deltaY;
          }

          parent._gsScrollX += deltaX;
          parent._gsScrollY += deltaY;
          setPointerPosition(self.pointerX, self.pointerY);
        }
      }
    },
        onClick = function onClick(e) {
      //this was a huge pain in the neck to align all the various browsers and their behaviors. Chrome, Firefox, Safari, Opera, Android, and Microsoft Edge all handle events differently! Some will only trigger native behavior (like checkbox toggling) from trusted events. Others don't even support isTrusted, but require 2 events to flow through before triggering native behavior. Edge treats everything as trusted but also mandates that 2 flow through to trigger the correct native behavior.
      var time = _getTime(),
          recentlyClicked = time - clickTime < 40,
          recentlyDragged = time - dragEndTime < 40,
          alreadyDispatched = recentlyClicked && clickDispatch === clickTime,
          isModern = !!e.preventDefault,
          defaultPrevented = self.pointerEvent && self.pointerEvent.defaultPrevented,
          alreadyDispatchedTrusted = recentlyClicked && trustedClickDispatch === clickTime,
          trusted = e.isTrusted || e.isTrusted == null && recentlyClicked && alreadyDispatched; //note: Safari doesn't support isTrusted, and it won't properly execute native behavior (like toggling checkboxes) on the first synthetic "click" event - we must wait for the 2nd and treat it as trusted (but stop propagation at that point). Confusing, I know. Don't you love cross-browser compatibility challenges?


      if (isModern && (alreadyDispatched || recentlyDragged && self.vars.suppressClickOnDrag !== false)) {
        e.stopImmediatePropagation();
      }

      if (recentlyClicked && !(self.pointerEvent && self.pointerEvent.defaultPrevented) && (!alreadyDispatched || trusted !== alreadyDispatchedTrusted)) {
        //let the first click pass through unhindered. Let the next one only if it's trusted, then no more (stop quick-succession ones)
        if (trusted && alreadyDispatched) {
          trustedClickDispatch = clickTime;
        }

        clickDispatch = clickTime;
        return;
      }

      if (self.isPressed || recentlyDragged || recentlyClicked) {
        if (!isModern) {
          e.returnValue = false;
        } else if (!trusted || !e.detail || !recentlyClicked || defaultPrevented) {
          e.preventDefault();

          if (e.preventManipulation) {
            e.preventManipulation(); //for some Microsoft browsers
          }
        }
      }
    },
        localizePoint = function localizePoint(p) {
      return matrix ? {
        x: p.x * matrix[0] + p.y * matrix[2] + matrix[4],
        y: p.x * matrix[1] + p.y * matrix[3] + matrix[5]
      } : {
        x: p.x,
        y: p.y
      };
    };

    old = Draggable.get(this.target);

    if (old) {
      old.kill(); // avoids duplicates (an element can only be controlled by one Draggable)
    } //give the user access to start/stop dragging...


    this.startDrag = function (e, align) {
      var r1, r2, p1, p2;
      onPress(e || self.pointerEvent, true); //if the pointer isn't on top of the element, adjust things accordingly

      if (align && !self.hitTest(e || self.pointerEvent)) {
        r1 = _parseRect(e || self.pointerEvent);
        r2 = _parseRect(target);
        p1 = localizePoint({
          x: r1.left + r1.width / 2,
          y: r1.top + r1.height / 2
        });
        p2 = localizePoint({
          x: r2.left + r2.width / 2,
          y: r2.top + r2.height / 2
        });
        startPointerX -= p1.x - p2.x;
        startPointerY -= p1.y - p2.y;
      }

      if (!self.isDragging) {
        self.isDragging = true;

        _dispatchEvent(self, "dragstart", "onDragStart");
      }
    };

    this.drag = onMove;

    this.endDrag = function (e) {
      onRelease(e || self.pointerEvent, true);
    };

    this.timeSinceDrag = function () {
      return self.isDragging ? 0 : (_getTime() - dragEndTime) / 1000;
    };

    this.timeSinceClick = function () {
      return (_getTime() - clickTime) / 1000;
    };

    this.hitTest = function (target, threshold) {
      return Draggable.hitTest(self.target, target, threshold);
    };

    this.getDirection = function (from, diagonalThreshold) {
      //from can be "start" (default), "velocity", or an element
      var mode = from === "velocity" && ThrowPropsPlugin ? from : typeof from === "object" && !rotationMode ? "element" : "start",
          xChange,
          yChange,
          ratio,
          direction,
          r1,
          r2;

      if (mode === "element") {
        r1 = _parseRect(self.target);
        r2 = _parseRect(from);
      }

      xChange = mode === "start" ? self.x - startElementX : mode === "velocity" ? ThrowPropsPlugin.getVelocity(this.target, xProp) : r1.left + r1.width / 2 - (r2.left + r2.width / 2);

      if (rotationMode) {
        return xChange < 0 ? "counter-clockwise" : "clockwise";
      } else {
        diagonalThreshold = diagonalThreshold || 2;
        yChange = mode === "start" ? self.y - startElementY : mode === "velocity" ? ThrowPropsPlugin.getVelocity(this.target, yProp) : r1.top + r1.height / 2 - (r2.top + r2.height / 2);
        ratio = Math.abs(xChange / yChange);
        direction = ratio < 1 / diagonalThreshold ? "" : xChange < 0 ? "left" : "right";

        if (ratio < diagonalThreshold) {
          if (direction !== "") {
            direction += "-";
          }

          direction += yChange < 0 ? "up" : "down";
        }
      }

      return direction;
    };

    this.applyBounds = function (newBounds) {
      var x, y, forceZeroVelocity, e, parent, isRoot;

      if (newBounds && vars.bounds !== newBounds) {
        vars.bounds = newBounds;
        return self.update(true);
      }

      syncXY(true);
      calculateBounds();

      if (hasBounds) {
        x = self.x;
        y = self.y;

        if (x > maxX) {
          x = maxX;
        } else if (x < minX) {
          x = minX;
        }

        if (y > maxY) {
          y = maxY;
        } else if (y < minY) {
          y = minY;
        }

        if (self.x !== x || self.y !== y) {
          forceZeroVelocity = true;
          self.x = self.endX = x;

          if (rotationMode) {
            self.endRotation = x;
          } else {
            self.y = self.endY = y;
          }

          dirty = true;
          render(true);

          if (self.autoScroll && !self.isDragging) {
            _recordMaxScrolls(target.parentNode);

            e = target;
            _windowProxy.scrollTop = window.pageYOffset != null ? window.pageYOffset : _docElement.scrollTop != null ? _docElement.scrollTop : _doc.body.scrollTop;
            _windowProxy.scrollLeft = window.pageXOffset != null ? window.pageXOffset : _docElement.scrollLeft != null ? _docElement.scrollLeft : _doc.body.scrollLeft;

            while (e && !isRoot) {
              //walk up the chain and sense wherever the scrollTop/scrollLeft exceeds the maximum.
              isRoot = _isRoot(e.parentNode);
              parent = isRoot ? _windowProxy : e.parentNode;

              if (allowY && parent.scrollTop > parent._gsMaxScrollY) {
                parent.scrollTop = parent._gsMaxScrollY;
              }

              if (allowX && parent.scrollLeft > parent._gsMaxScrollX) {
                parent.scrollLeft = parent._gsMaxScrollX;
              }

              e = parent;
            }
          }
        }

        if (self.isThrowing && (forceZeroVelocity || self.endX > maxX || self.endX < minX || self.endY > maxY || self.endY < minY)) {
          animate(vars.throwProps, forceZeroVelocity);
        }
      }

      return self;
    };

    this.update = function (applyBounds, sticky, ignoreExternalChanges) {
      var x = self.x,
          y = self.y;
      updateMatrix(!sticky);

      if (applyBounds) {
        self.applyBounds();
      } else {
        if (dirty && ignoreExternalChanges) {
          render(true);
        }

        syncXY(true);
      }

      if (sticky) {
        setPointerPosition(self.pointerX, self.pointerY);

        if (dirty) {
          render(true);
        }
      }

      if (self.isPressed && !sticky && (allowX && Math.abs(x - self.x) > 0.01 || allowY && Math.abs(y - self.y) > 0.01 && !rotationMode)) {
        recordStartPositions();
      }

      if (self.autoScroll) {
        _recordMaxScrolls(target.parentNode);

        checkAutoScrollBounds = self.isDragging;
        render(true);
      }

      if (self.autoScroll) {
        //in case reparenting occurred.
        _removeScrollListener(target, updateScroll);

        _addScrollListener(target, updateScroll);
      }

      return self;
    };

    this.enable = function (type) {
      var id, i, trigger;

      if (type !== "soft") {
        i = triggers.length;

        while (--i > -1) {
          trigger = triggers[i];

          _addListener(trigger, "mousedown", onPress);

          _addListener(trigger, "touchstart", onPress);

          _addListener(trigger, "click", onClick, true); //note: used to pass true for capture but it prevented click-to-play-video functionality in Firefox.


          if (!rotationMode && vars.cursor !== false) {
            _setStyle(trigger, "cursor", vars.cursor || "move");
          }

          _setStyle(trigger, "touchCallout", "none");

          _setStyle(trigger, "touchAction", allowX === allowY ? "none" : allowX ? "pan-y" : "pan-x");

          if (_isSVG(trigger)) {
            // a bug in chrome doesn't respect touch-action on SVG elements - it only works if we set it on the parent SVG.
            _setStyle(trigger.ownerSVGElement || trigger, "touchAction", allowX === allowY ? "none" : allowX ? "pan-y" : "pan-x");
          }

          if (!this.vars.allowContextMenu) {
            _addListener(trigger, "contextmenu", onContextMenu);
          }
        }

        _setSelectable(triggers, false);
      }

      _addScrollListener(target, updateScroll);

      enabled = true;

      if (ThrowPropsPlugin && type !== "soft") {
        ThrowPropsPlugin.track(scrollProxy || target, xyMode ? "x,y" : rotationMode ? "rotation" : "top,left");
      }

      if (scrollProxy) {
        scrollProxy.enable();
      }

      target._gsDragID = id = "d" + _lookupCount++;
      _lookup[id] = this;

      if (scrollProxy) {
        scrollProxy.element._gsDragID = id;
      }

      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].set(target, {
        x: "+=0",
        overwrite: false,
        data: "_draggable"
      }); //simply ensures that there's a _gsTransform on the element.

      applyObj = {
        t: target,
        data: _isOldIE ? cssVars : target._gsTransform,
        tween: {},
        setRatio: _isOldIE ? function () {
          __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].set(target, tempVars);
        } : __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__["a" /* default */]._internals.setTransformRatio || __WEBPACK_IMPORTED_MODULE_1__CSSPlugin_js__["a" /* default */]._internals.set3DTransformRatio
      };
      recordStartPositions();
      self.update(true);
      return self;
    };

    this.disable = function (type) {
      var dragging = self.isDragging,
          i,
          trigger;

      if (!rotationMode) {
        i = triggers.length;

        while (--i > -1) {
          _setStyle(triggers[i], "cursor", null);
        }
      }

      if (type !== "soft") {
        i = triggers.length;

        while (--i > -1) {
          trigger = triggers[i];

          _setStyle(trigger, "touchCallout", null);

          _setStyle(trigger, "touchAction", null);

          _removeListener(trigger, "mousedown", onPress);

          _removeListener(trigger, "touchstart", onPress);

          _removeListener(trigger, "click", onClick);

          _removeListener(trigger, "contextmenu", onContextMenu);
        }

        _setSelectable(triggers, true);

        if (touchEventTarget) {
          _removeListener(touchEventTarget, "touchcancel", onRelease);

          _removeListener(touchEventTarget, "touchend", onRelease);

          _removeListener(touchEventTarget, "touchmove", onMove);
        }

        _removeListener(_doc, "mouseup", onRelease);

        _removeListener(_doc, "mousemove", onMove);
      }

      _removeScrollListener(target, updateScroll);

      enabled = false;

      if (ThrowPropsPlugin && type !== "soft") {
        ThrowPropsPlugin.untrack(scrollProxy || target, xyMode ? "x,y" : rotationMode ? "rotation" : "top,left");
      }

      if (scrollProxy) {
        scrollProxy.disable();
      }

      _removeFromRenderQueue(render);

      self.isDragging = self.isPressed = isClicking = false;

      if (dragging) {
        _dispatchEvent(self, "dragend", "onDragEnd");
      }

      return self;
    };

    this.enabled = function (value, type) {
      return arguments.length ? value ? self.enable(type) : self.disable(type) : enabled;
    };

    this.kill = function () {
      self.isThrowing = false;
      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].killTweensOf(scrollProxy || target, true, killProps);
      self.disable();
      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].set(triggers, {
        clearProps: "userSelect"
      });
      delete _lookup[target._gsDragID];
      return self;
    };

    if (type.indexOf("scroll") !== -1) {
      scrollProxy = this.scrollProxy = new ScrollProxy(target, _extend({
        onKill: function onKill() {
          //ScrollProxy's onKill() gets called if/when the ScrollProxy senses that the user interacted with the scroll position manually (like using the scrollbar). IE9 doesn't fire the "mouseup" properly when users drag the scrollbar of an element, so this works around that issue.
          if (self.isPressed) {
            onRelease(null);
          }
        }
      }, vars)); //a bug in many Android devices' stock browser causes scrollTop to get forced back to 0 after it is altered via JS, so we set overflow to "hidden" on mobile/touch devices (they hide the scroll bar anyway). That works around the bug. (This bug is discussed at https://code.google.com/p/android/issues/detail?id=19625)

      target.style.overflowY = allowY && !_isTouchDevice ? "auto" : "hidden";
      target.style.overflowX = allowX && !_isTouchDevice ? "auto" : "hidden";
      target = scrollProxy.content;
    }

    if (vars.force3D !== false) {
      __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].set(target, {
        force3D: true
      }); //improve performance by forcing a GPU layer when possible
    }

    if (rotationMode) {
      killProps.rotation = 1;
    } else {
      if (allowX) {
        killProps[xProp] = 1;
      }

      if (allowY) {
        killProps[yProp] = 1;
      }
    }

    if (rotationMode) {
      tempVars = _tempVarsRotation;
      cssVars = tempVars.css;
      tempVars.overwrite = false;
    } else if (xyMode) {
      tempVars = allowX && allowY ? _tempVarsXY : allowX ? _tempVarsX : _tempVarsY;
      cssVars = tempVars.css;
      tempVars.overwrite = false;
    }

    this.enable();
  },
      p = Draggable.prototype = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["g" /* EventDispatcher */]();

  p.constructor = Draggable;
  p.pointerX = p.pointerY = p.startX = p.startY = p.deltaX = p.deltaY = 0;
  p.isDragging = p.isPressed = false;
  Draggable.version = "0.17.1";
  Draggable.zIndex = 1000;

  _addListener(_doc, "touchcancel", function () {//some older Android devices intermittently stop dispatching "touchmove" events if we don't listen for "touchcancel" on the document. Very strange indeed.
  });

  _addListener(_doc, "contextmenu", function (e) {
    var p;

    for (p in _lookup) {
      if (_lookup[p].isPressed) {
        _lookup[p].endDrag();
      }
    }
  });

  Draggable.create = function (targets, vars) {
    if (typeof targets === "string") {
      targets = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["b" /* default */].selector(targets);
    }

    var a = !targets || targets.length === 0 ? [] : _isArrayLike(targets) ? _flattenArray(targets) : [targets],
        i = a.length;

    while (--i > -1) {
      a[i] = new Draggable(a[i], vars);
    }

    return a;
  };

  Draggable.get = function (target) {
    return _lookup[(_unwrapElement(target) || {})._gsDragID];
  };

  Draggable.timeSinceDrag = function () {
    return (_getTime() - _lastDragTime) / 1000;
  };

  var _tempRect = {},
      //reuse to reduce garbage collection tasks
  _oldIERect = function _oldIERect(e) {
    //IE8 doesn't support getBoundingClientRect(), so we use this as a backup.
    var top = 0,
        left = 0,
        width,
        height;
    e = _unwrapElement(e);
    width = e.offsetWidth;
    height = e.offsetHeight;

    while (e) {
      top += e.offsetTop;
      left += e.offsetLeft;
      e = e.offsetParent;
    }

    return {
      top: top,
      left: left,
      width: width,
      height: height
    };
  },
      _parseRect = function _parseRect(e, undefined) {
    //accepts a DOM element, a mouse event, or a rectangle object and returns the corresponding rectangle with left, right, width, height, top, and bottom properties
    if (e === window) {
      _tempRect.left = _tempRect.top = 0;
      _tempRect.width = _tempRect.right = _docElement.clientWidth || e.innerWidth || _doc.body.clientWidth || 0;
      _tempRect.height = _tempRect.bottom = (e.innerHeight || 0) - 20 < _docElement.clientHeight ? _docElement.clientHeight : e.innerHeight || _doc.body.clientHeight || 0;
      return _tempRect;
    }

    var r = e.pageX !== undefined ? {
      left: e.pageX - _getDocScrollLeft(),
      top: e.pageY - _getDocScrollTop(),
      right: e.pageX - _getDocScrollLeft() + 1,
      bottom: e.pageY - _getDocScrollTop() + 1
    } : !e.nodeType && e.left !== undefined && e.top !== undefined ? e : _isOldIE ? _oldIERect(e) : _unwrapElement(e).getBoundingClientRect();

    if (r.right === undefined && r.width !== undefined) {
      r.right = r.left + r.width;
      r.bottom = r.top + r.height;
    } else if (r.width === undefined) {
      //some browsers don't include width and height properties. We can't just set them directly on r because some browsers throw errors, so create a new generic object.
      r = {
        width: r.right - r.left,
        height: r.bottom - r.top,
        right: r.right,
        left: r.left,
        bottom: r.bottom,
        top: r.top
      };
    }

    return r;
  };

  Draggable.hitTest = function (obj1, obj2, threshold) {
    if (obj1 === obj2) {
      return false;
    }

    var r1 = _parseRect(obj1),
        r2 = _parseRect(obj2),
        isOutside = r2.left > r1.right || r2.right < r1.left || r2.top > r1.bottom || r2.bottom < r1.top,
        overlap,
        area,
        isRatio;

    if (isOutside || !threshold) {
      return !isOutside;
    }

    isRatio = (threshold + "").indexOf("%") !== -1;
    threshold = parseFloat(threshold) || 0;
    overlap = {
      left: Math.max(r1.left, r2.left),
      top: Math.max(r1.top, r2.top)
    };
    overlap.width = Math.min(r1.right, r2.right) - overlap.left;
    overlap.height = Math.min(r1.bottom, r2.bottom) - overlap.top;

    if (overlap.width < 0 || overlap.height < 0) {
      return false;
    }

    if (isRatio) {
      threshold *= 0.01;
      area = overlap.width * overlap.height;
      return area >= r1.width * r1.height * threshold || area >= r2.width * r2.height * threshold;
    }

    return overlap.width > threshold && overlap.height > threshold;
  };

  _placeholderDiv.style.cssText = "visibility:hidden;height:1px;top:-1px;pointer-events:none;position:relative;clear:both;";
  return Draggable;
}, true);

var Draggable = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["d" /* globals */].Draggable;


/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export EaselPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.2.2
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */


var _numExp = /(\d|\.)+/g,
    _ColorFilter,
    _ColorMatrixFilter,
    _colorProps = ["redMultiplier", "greenMultiplier", "blueMultiplier", "alphaMultiplier", "redOffset", "greenOffset", "blueOffset", "alphaOffset"],
    _colorLookup = {
  aqua: [0, 255, 255],
  lime: [0, 255, 0],
  silver: [192, 192, 192],
  black: [0, 0, 0],
  maroon: [128, 0, 0],
  teal: [0, 128, 128],
  blue: [0, 0, 255],
  navy: [0, 0, 128],
  white: [255, 255, 255],
  fuchsia: [255, 0, 255],
  olive: [128, 128, 0],
  yellow: [255, 255, 0],
  orange: [255, 165, 0],
  gray: [128, 128, 128],
  purple: [128, 0, 128],
  green: [0, 128, 0],
  red: [255, 0, 0],
  pink: [255, 192, 203],
  cyan: [0, 255, 255],
  transparent: [255, 255, 255, 0]
},
    _parseColor = function _parseColor(color) {
  if (color === "" || color == null || color === "none") {
    return _colorLookup.transparent;
  } else if (_colorLookup[color]) {
    return _colorLookup[color];
  } else if (typeof color === "number") {
    return [color >> 16, color >> 8 & 255, color & 255];
  } else if (color.charAt(0) === "#") {
    if (color.length === 4) {
      //for shorthand like #9F0
      color = "#" + color.charAt(1) + color.charAt(1) + color.charAt(2) + color.charAt(2) + color.charAt(3) + color.charAt(3);
    }

    color = parseInt(color.substr(1), 16);
    return [color >> 16, color >> 8 & 255, color & 255];
  }

  return color.match(_numExp) || _colorLookup.transparent;
},
    _parseColorFilter = function _parseColorFilter(t, v, pg) {
  if (!_ColorFilter) {
    _ColorFilter = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].ColorFilter || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].createjs.ColorFilter;

    if (!_ColorFilter) {
      throw "EaselPlugin error: The EaselJS ColorFilter JavaScript file wasn't loaded.";
    }
  }

  var filters = t.filters || [],
      i = filters.length,
      c,
      s,
      e,
      a,
      p;

  while (--i > -1) {
    if (filters[i] instanceof _ColorFilter) {
      s = filters[i];
      break;
    }
  }

  if (!s) {
    s = new _ColorFilter();
    filters.push(s);
    t.filters = filters;
  }

  e = s.clone();

  if (v.tint != null) {
    c = _parseColor(v.tint);
    a = v.tintAmount != null ? Number(v.tintAmount) : 1;
    e.redOffset = Number(c[0]) * a;
    e.greenOffset = Number(c[1]) * a;
    e.blueOffset = Number(c[2]) * a;
    e.redMultiplier = e.greenMultiplier = e.blueMultiplier = 1 - a;
  } else {
    for (p in v) {
      if (p !== "exposure") if (p !== "brightness") {
        e[p] = Number(v[p]);
      }
    }
  }

  if (v.exposure != null) {
    e.redOffset = e.greenOffset = e.blueOffset = 255 * (Number(v.exposure) - 1);
    e.redMultiplier = e.greenMultiplier = e.blueMultiplier = 1;
  } else if (v.brightness != null) {
    a = Number(v.brightness) - 1;
    e.redOffset = e.greenOffset = e.blueOffset = a > 0 ? a * 255 : 0;
    e.redMultiplier = e.greenMultiplier = e.blueMultiplier = 1 - Math.abs(a);
  }

  i = 8;

  while (--i > -1) {
    p = _colorProps[i];

    if (s[p] !== e[p]) {
      pg._addTween(s, p, s[p], e[p], "easel_colorFilter");
    }
  }

  pg._overwriteProps.push("easel_colorFilter");

  if (!t.cacheID) {
    throw "EaselPlugin warning: for filters to display in EaselJS, you must call the object's cache() method first. " + t;
  }
},
    _idMatrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
    _lumR = 0.212671,
    _lumG = 0.715160,
    _lumB = 0.072169,
    _applyMatrix = function _applyMatrix(m, m2) {
  if (!(m instanceof Array) || !(m2 instanceof Array)) {
    return m2;
  }

  var temp = [],
      i = 0,
      z = 0,
      y,
      x;

  for (y = 0; y < 4; y++) {
    for (x = 0; x < 5; x++) {
      z = x === 4 ? m[i + 4] : 0;
      temp[i + x] = m[i] * m2[x] + m[i + 1] * m2[x + 5] + m[i + 2] * m2[x + 10] + m[i + 3] * m2[x + 15] + z;
    }

    i += 5;
  }

  return temp;
},
    _setSaturation = function _setSaturation(m, n) {
  if (isNaN(n)) {
    return m;
  }

  var inv = 1 - n,
      r = inv * _lumR,
      g = inv * _lumG,
      b = inv * _lumB;
  return _applyMatrix([r + n, g, b, 0, 0, r, g + n, b, 0, 0, r, g, b + n, 0, 0, 0, 0, 0, 1, 0], m);
},
    _colorize = function _colorize(m, color, amount) {
  if (isNaN(amount)) {
    amount = 1;
  }

  var c = _parseColor(color),
      r = c[0] / 255,
      g = c[1] / 255,
      b = c[2] / 255,
      inv = 1 - amount;

  return _applyMatrix([inv + amount * r * _lumR, amount * r * _lumG, amount * r * _lumB, 0, 0, amount * g * _lumR, inv + amount * g * _lumG, amount * g * _lumB, 0, 0, amount * b * _lumR, amount * b * _lumG, inv + amount * b * _lumB, 0, 0, 0, 0, 0, 1, 0], m);
},
    _setHue = function _setHue(m, n) {
  if (isNaN(n)) {
    return m;
  }

  n *= Math.PI / 180;
  var c = Math.cos(n),
      s = Math.sin(n);
  return _applyMatrix([_lumR + c * (1 - _lumR) + s * -_lumR, _lumG + c * -_lumG + s * -_lumG, _lumB + c * -_lumB + s * (1 - _lumB), 0, 0, _lumR + c * -_lumR + s * 0.143, _lumG + c * (1 - _lumG) + s * 0.14, _lumB + c * -_lumB + s * -0.283, 0, 0, _lumR + c * -_lumR + s * -(1 - _lumR), _lumG + c * -_lumG + s * _lumG, _lumB + c * (1 - _lumB) + s * _lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], m);
},
    _setContrast = function _setContrast(m, n) {
  if (isNaN(n)) {
    return m;
  }

  n += 0.01;
  return _applyMatrix([n, 0, 0, 0, 128 * (1 - n), 0, n, 0, 0, 128 * (1 - n), 0, 0, n, 0, 128 * (1 - n), 0, 0, 0, 1, 0], m);
},
    _parseColorMatrixFilter = function _parseColorMatrixFilter(t, v, pg) {
  if (!_ColorMatrixFilter) {
    _ColorMatrixFilter = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].ColorMatrixFilter || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].createjs.ColorMatrixFilter;

    if (!_ColorMatrixFilter) {
      throw "EaselPlugin error: The EaselJS ColorMatrixFilter JavaScript file wasn't loaded.";
    }
  }

  var filters = t.filters || [],
      i = filters.length,
      matrix,
      startMatrix,
      s;

  while (--i > -1) {
    if (filters[i] instanceof _ColorMatrixFilter) {
      s = filters[i];
      break;
    }
  }

  if (!s) {
    s = new _ColorMatrixFilter(_idMatrix.slice());
    filters.push(s);
    t.filters = filters;
  }

  startMatrix = s.matrix;
  matrix = _idMatrix.slice();

  if (v.colorize != null) {
    matrix = _colorize(matrix, v.colorize, Number(v.colorizeAmount));
  }

  if (v.contrast != null) {
    matrix = _setContrast(matrix, Number(v.contrast));
  }

  if (v.hue != null) {
    matrix = _setHue(matrix, Number(v.hue));
  }

  if (v.saturation != null) {
    matrix = _setSaturation(matrix, Number(v.saturation));
  }

  i = matrix.length;

  while (--i > -1) {
    if (matrix[i] !== startMatrix[i]) {
      pg._addTween(startMatrix, i, startMatrix[i], matrix[i], "easel_colorMatrixFilter");
    }
  }

  pg._overwriteProps.push("easel_colorMatrixFilter");

  if (!t.cacheID) {
    throw "EaselPlugin warning: for filters to display in EaselJS, you must call the object's cache() method first. " + t;
  }

  pg._matrix = startMatrix;
};

var EaselPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "easel",
  priority: -1,
  version: "0.2.2",
  API: 2,
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween, index) {
    this._target = target;
    var p, pt, tint, colorMatrix, end, labels, i;

    for (p in value) {
      end = value[p];

      if (typeof end === "function") {
        end = end(index, target);
      }

      if (p === "colorFilter" || p === "tint" || p === "tintAmount" || p === "exposure" || p === "brightness") {
        if (!tint) {
          _parseColorFilter(target, value.colorFilter || value, this);

          tint = true;
        }
      } else if (p === "saturation" || p === "contrast" || p === "hue" || p === "colorize" || p === "colorizeAmount") {
        if (!colorMatrix) {
          _parseColorMatrixFilter(target, value.colorMatrixFilter || value, this);

          colorMatrix = true;
        }
      } else if (p === "frame") {
        this._firstPT = pt = {
          _next: this._firstPT,
          t: target,
          p: "gotoAndStop",
          s: target.currentFrame,
          f: true,
          n: "frame",
          pr: 0,
          type: 0,
          m: Math.round
        };

        if (typeof end === "string" && end.charAt(1) !== "=" && (labels = target.labels)) {
          for (i = 0; i < labels.length; i++) {
            if (labels[i].label === end) {
              end = labels[i].position;
            }
          }
        }

        pt.c = typeof end === "number" ? end - pt.s : parseFloat((end + "").split("=").join(""));

        if (pt._next) {
          pt._next._prev = pt;
        }
      } else if (target[p] != null) {
        this._firstPT = pt = {
          _next: this._firstPT,
          t: target,
          p: p,
          f: typeof target[p] === "function",
          n: p,
          pr: 0,
          type: 0
        };
        pt.s = !pt.f ? parseFloat(target[p]) : target[p.indexOf("set") || typeof target["get" + p.substr(3)] !== "function" ? p : "get" + p.substr(3)]();
        pt.c = typeof end === "number" ? end - pt.s : typeof end === "string" ? parseFloat(end.split("=").join("")) : 0;

        if (pt._next) {
          pt._next._prev = pt;
        }
      }
    }

    return true;
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(v) {
    var pt = this._firstPT,
        min = 0.000001,
        val;

    while (pt) {
      val = pt.c * v + pt.s;

      if (pt.m) {
        val = pt.m(val, pt.t);
      } else if (val < min && val > -min) {
        val = 0;
      }

      if (pt.f) {
        pt.t[pt.p](val);
      } else {
        pt.t[pt.p] = val;
      }

      pt = pt._next;
    }

    if (this._target.cacheID) {
      this._target.updateCache();
    }
  }
});



/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export EndArrayPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.1.3
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */

var EndArrayPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "endArray",
  API: 2,
  version: "0.1.3",
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween) {
    var i = value.length,
        a = this.a = [],
        start,
        end;
    this.target = target;
    this._mod = 0;

    if (!i) {
      return false;
    }

    while (--i > -1) {
      start = target[i];
      end = value[i];

      if (start !== end) {
        a.push({
          i: i,
          s: start,
          c: end - start
        });
      }
    }

    return true;
  },
  mod: function mod(lookup) {
    if (typeof lookup.endArray === "function") {
      this._mod = lookup.endArray;
    }
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(ratio) {
    var target = this.target,
        a = this.a,
        i = a.length,
        mod = this._mod,
        e,
        val;

    if (mod) {
      while (--i > -1) {
        e = a[i];
        target[e.i] = mod(e.s + e.c * ratio, target);
      }
    } else {
      while (--i > -1) {
        e = a[i];
        val = e.s + e.c * ratio;
        target[e.i] = val < 0.000001 && val > -0.000001 ? 0 : val;
      }
    }
  }
});


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ModifiersPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.0.4
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */


var _cssRatioSetter = function _cssRatioSetter(pt, cssp, mod) {
  //Takes an individual CSSPropTween and converts it into a type:2 that has a setRatio that does everything the regular CSSPlugin.setRatio() method does but applying the mod() too. We do this to keep the main CSSPlugin.setRatio() as fast as possible (the vast majority of times, no mod() will be necessary)
  var type = pt.type,
      oldSetRatio = pt.setRatio,
      tween = cssp._tween,
      target = cssp._target;
  pt.type = 2;
  pt.m = mod;

  pt.setRatio = function (v) {
    var min = 0.000001,
        val,
        str,
        i;

    if (v === 1 && (tween._time === tween._duration || tween._time === 0)) {
      if (type !== 2) {
        if (pt.r && type !== -1) {
          val = Math.round(pt.s + pt.c);

          if (!type) {
            pt.t[pt.p] = mod.call(tween, val + pt.xs0, target, tween);
          } else if (type === 1) {
            str = pt.xs0 + val + pt.xs1;

            for (i = 1; i < pt.l; i++) {
              str += pt["xn" + i] + pt["xs" + (i + 1)];
            }

            pt.t[pt.p] = mod.call(tween, str, target, tween);
          }
        } else {
          pt.t[pt.p] = mod.call(tween, pt.e, target, tween);
        }
      } else {
        oldSetRatio.call(pt, v);
      }
    } else if (v || !(tween._time === tween._duration || tween._time === 0) || tween._rawPrevTime === -0.000001) {
      val = pt.c * v + pt.s;

      if (pt.r) {
        val = Math.round(val);
      } else if (val < min) if (val > -min) {
        val = 0;
      }

      if (!type) {
        pt.t[pt.p] = mod.call(tween, val + pt.xs0, target, tween);
      } else if (type === 1) {
        str = pt.xs0 + val + pt.xs1;

        for (i = 1; i < pt.l; i++) {
          str += pt["xn" + i] + pt["xs" + (i + 1)];
        }

        pt.t[pt.p] = mod.call(tween, str, target, tween);
      } else if (type === -1) {
        //non-tweening value
        pt.t[pt.p] = mod.call(tween, pt.xs0, target, tween);
      } else if (oldSetRatio) {
        oldSetRatio.call(pt, v);
      }
    } else {
      if (type !== 2) {
        pt.t[pt.p] = mod.call(tween, pt.b, target, tween);
      } else {
        oldSetRatio.call(pt, v);
      }
    }
  };
},
    _modCSS = function _modCSS(lookup, cssp) {
  var pt = cssp._firstPT,
      hasBezier = lookup.rotation && cssp._overwriteProps.join("").indexOf("bezier") !== -1; //when a Bezier tween is applying autoRotation, it's a very special case we need to handle differently.

  if (lookup.scale) {
    lookup.scaleX = lookup.scaleY = lookup.scale;
  } else if (lookup.rotationZ) {
    lookup.rotation = lookup.rotationZ;
  }

  while (pt) {
    if (typeof lookup[pt.p] === "function") {
      _cssRatioSetter(pt, cssp, lookup[pt.p]);
    } else if (hasBezier && pt.n === "bezier" && pt.plugin._overwriteProps.join("").indexOf("rotation") !== -1) {
      pt.data.mod = lookup.rotation;
    }

    pt = pt._next;
  }
},
    ModifiersPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "modifiers",
  version: "0.0.4",
  API: 2,
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween) {
    this._tween = tween;
    this._vars = value;
    return true;
  },
  initAll: function initAll() {
    var tween = this._tween,
        lookup = this._vars,
        mpt = this,
        pt = tween._firstPT,
        val,
        next; //initAll() gets called for each and every ModifiersPlugin instance in a tween, so if there are multiple targets, there will be multiple instances. Since we're ripping through the whole tween (and all the PropTweens), we only need to run this code ONCE. So we're setting a toggle on the first PropTween that just tells us if we've done it already. We don't set it on the tween instance because if it gets invalidated, we don't want to have to track this property and reset it. PropTweens get blown away when a tween is invalidated.

    if (pt._modInitted) {
      return false;
    } else {
      pt._modInitted = 1;
    }

    while (pt) {
      next = pt._next; //record here, because it may get removed

      val = lookup[pt.n];

      if (pt.pg) {
        if (pt.t._propName === "css") {
          //handle CSSPlugin uniquely (for performance, due to the fact that the values almost always are a concatenation of numbers and strings, like suffixes, and we don't want to slow down the regular CSSPlugin setRatio() performance with conditional checks for if the value needs to be modded, so we pull any modding prop out and change it to a type:2 one that simply calls a setRatio() method where we encapsulate the modding and update all together. That way, it says in the main CSSProp linked list and just has some custom logic applied to it inside its setRatio())
          _modCSS(lookup, pt.t);
        } else if (pt.t !== mpt) {
          //don't run modProps on modProps :)
          val = lookup[pt.t._propName];
          pt.t._tween = tween;

          pt.t._mod(typeof val === "object" ? val : lookup);
        }
      } else if (typeof val === "function") {
        if (pt.f === 2 && pt.t) {
          //a blob (text containing multiple numeric values)
          pt.t._applyPT.m = val;
          pt.t._tween = tween;
        } else {
          this._add(pt.t, pt.p, pt.s, pt.c, val); //remove from linked list


          if (next) {
            next._prev = pt._prev;
          }

          if (pt._prev) {
            pt._prev._next = next;
          } else if (tween._firstPT === pt) {
            tween._firstPT = next;
          }

          pt._next = pt._prev = null;
          tween._propLookup[pt.n] = mpt;
        }
      }

      pt = next;
    }

    return false;
  }
}),
    p = ModifiersPlugin.prototype;

p._add = function (target, p, s, c, mod) {
  this._addTween(target, p, s, s + c, p, mod);

  this._overwriteProps.push(p);
};

p = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.globals.TweenLite.version.split(".");

if (Number(p[0]) <= 1 && Number(p[1]) < 19 && __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].console) {
  console.log("ModifiersPlugin requires GSAP 1.19.0 or later.");
}



/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export PixiPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.3.0
 * DATE: 2019-05-13
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * PixiPlugin is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */


var _numExp = /(\d|\.)+/g,
    _relNumExp = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
    _colorLookup = {
  aqua: [0, 255, 255],
  lime: [0, 255, 0],
  silver: [192, 192, 192],
  black: [0, 0, 0],
  maroon: [128, 0, 0],
  teal: [0, 128, 128],
  blue: [0, 0, 255],
  navy: [0, 0, 128],
  white: [255, 255, 255],
  fuchsia: [255, 0, 255],
  olive: [128, 128, 0],
  yellow: [255, 255, 0],
  orange: [255, 165, 0],
  gray: [128, 128, 128],
  purple: [128, 0, 128],
  green: [0, 128, 0],
  red: [255, 0, 0],
  pink: [255, 192, 203],
  cyan: [0, 255, 255],
  transparent: [255, 255, 255, 0]
},
    _hue = function _hue(h, m1, m2) {
  h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
  return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < 0.5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + 0.5 | 0;
},

/**
 * @private Parses a color (like #9F0, #FF9900, rgb(255,51,153) or hsl(108, 50%, 10%)) into an array with 3 elements for red, green, and blue or if "format" parameter is "hsl", it will populate the array with hue, saturation, and lightness values. Or if "format" is "number", it'll return a number like 0xFF0000 instead of an array. If a relative value is found in an hsl() or hsla() string, it will preserve those relative prefixes and all the values in the array will be strings instead of numbers (in all other cases it will be populated with numbers).
 * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.
 * @param {(string)} format If "hsl", an hsl() or hsla() value will be returned instead of rgb() or rgba(). Or if "number", then a numeric value will be returned, like 0xFF0000. Default is rgb.
 * @return {(array|number)} An array containing red, green, and blue (and optionally alpha) in that order, or if the format parameter was "hsl", the array will contain hue, saturation and lightness (and optionally alpha) in that order. Or if "format" is defined as "number", it'll return a number like 0xFF0000. Always numbers unless there's a relative prefix found in an hsl() or hsla() string and "format" is "hsl".
 */
_parseColor = function _parseColor(v, format) {
  var toHSL = format === "hsl",
      a,
      r,
      g,
      b,
      h,
      s,
      l,
      max,
      min,
      d,
      wasHSL;

  if (!v) {
    a = _colorLookup.black;
  } else if (typeof v === "number") {
    a = [v >> 16, v >> 8 & 255, v & 255];
  } else {
    if (v.charAt(v.length - 1) === ",") {
      //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
      v = v.substr(0, v.length - 1);
    }

    if (_colorLookup[v]) {
      a = _colorLookup[v];
    } else if (v.charAt(0) === "#") {
      if (v.length === 4) {
        //for shorthand like #9F0
        r = v.charAt(1);
        g = v.charAt(2);
        b = v.charAt(3);
        v = "#" + r + r + g + g + b + b;
      }

      v = parseInt(v.substr(1), 16);
      a = [v >> 16, v >> 8 & 255, v & 255];
    } else if (v.substr(0, 3) === "hsl") {
      a = wasHSL = v.match(_numExp);

      if (!toHSL) {
        h = Number(a[0]) % 360 / 360;
        s = Number(a[1]) / 100;
        l = Number(a[2]) / 100;
        g = l <= 0.5 ? l * (s + 1) : l + s - l * s;
        r = l * 2 - g;

        if (a.length > 3) {
          a[3] = Number(v[3]);
        }

        a[0] = _hue(h + 1 / 3, r, g);
        a[1] = _hue(h, r, g);
        a[2] = _hue(h - 1 / 3, r, g);
      } else if (v.indexOf("=") !== -1) {
        //if relative values are found, just return the raw strings with the relative prefixes in place.
        return v.match(_relNumExp);
      }
    } else {
      a = v.match(_numExp) || _colorLookup.transparent;
    }

    a[0] = Number(a[0]);
    a[1] = Number(a[1]);
    a[2] = Number(a[2]);

    if (a.length > 3) {
      a[3] = Number(a[3]);
    }
  }

  if (toHSL && !wasHSL) {
    r = a[0] / 255;
    g = a[1] / 255;
    b = a[2] / 255;
    max = Math.max(r, g, b);
    min = Math.min(r, g, b);
    l = (max + min) / 2;

    if (max === min) {
      h = s = 0;
    } else {
      d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
      h *= 60;
    }

    a[0] = h + 0.5 | 0;
    a[1] = s * 100 + 0.5 | 0;
    a[2] = l * 100 + 0.5 | 0;
  }

  return format === "number" ? a[0] << 16 | a[1] << 8 | a[2] : a;
},
    _formatColors = function _formatColors(s, toHSL) {
  var colors = (s + "").match(_colorExp) || [],
      charIndex = 0,
      parsed = "",
      i,
      color,
      temp;

  if (!colors.length) {
    return s;
  }

  for (i = 0; i < colors.length; i++) {
    color = colors[i];
    temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);
    charIndex += temp.length + color.length;
    color = _parseColor(color, toHSL ? "hsl" : "rgb");

    if (color.length === 3) {
      color.push(1);
    }

    parsed += temp + (toHSL ? "hsla(" + color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : "rgba(" + color.join(",")) + ")";
  }

  return parsed + s.substr(charIndex);
},
    _colorStringFilter,
    TweenLite = (__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].GreenSockGlobals || __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]).TweenLite,
    _colorExp = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b",
    //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.
_idMatrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
    _lumR = 0.212671,
    _lumG = 0.715160,
    _lumB = 0.072169,
    _applyMatrix = function _applyMatrix(m, m2) {
  var temp = [],
      i = 0,
      z = 0,
      y,
      x;

  for (y = 0; y < 4; y++) {
    for (x = 0; x < 5; x++) {
      z = x === 4 ? m[i + 4] : 0;
      temp[i + x] = m[i] * m2[x] + m[i + 1] * m2[x + 5] + m[i + 2] * m2[x + 10] + m[i + 3] * m2[x + 15] + z;
    }

    i += 5;
  }

  return temp;
},
    _setSaturation = function _setSaturation(m, n) {
  var inv = 1 - n,
      r = inv * _lumR,
      g = inv * _lumG,
      b = inv * _lumB;
  return _applyMatrix([r + n, g, b, 0, 0, r, g + n, b, 0, 0, r, g, b + n, 0, 0, 0, 0, 0, 1, 0], m);
},
    _colorize = function _colorize(m, color, amount) {
  var c = _parseColor(color),
      r = c[0] / 255,
      g = c[1] / 255,
      b = c[2] / 255,
      inv = 1 - amount;

  return _applyMatrix([inv + amount * r * _lumR, amount * r * _lumG, amount * r * _lumB, 0, 0, amount * g * _lumR, inv + amount * g * _lumG, amount * g * _lumB, 0, 0, amount * b * _lumR, amount * b * _lumG, inv + amount * b * _lumB, 0, 0, 0, 0, 0, 1, 0], m);
},
    _setHue = function _setHue(m, n) {
  n *= Math.PI / 180;
  var c = Math.cos(n),
      s = Math.sin(n);
  return _applyMatrix([_lumR + c * (1 - _lumR) + s * -_lumR, _lumG + c * -_lumG + s * -_lumG, _lumB + c * -_lumB + s * (1 - _lumB), 0, 0, _lumR + c * -_lumR + s * 0.143, _lumG + c * (1 - _lumG) + s * 0.14, _lumB + c * -_lumB + s * -0.283, 0, 0, _lumR + c * -_lumR + s * -(1 - _lumR), _lumG + c * -_lumG + s * _lumG, _lumB + c * (1 - _lumB) + s * _lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], m);
},
    _setContrast = function _setContrast(m, n) {
  return _applyMatrix([n, 0, 0, 0, 0.5 * (1 - n), 0, n, 0, 0, 0.5 * (1 - n), 0, 0, n, 0, 0.5 * (1 - n), 0, 0, 0, 1, 0], m);
},
    _getFilter = function _getFilter(t, type) {
  var filterClass = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].PIXI.filters[type],
      filters = t.filters || [],
      i = filters.length,
      filter;

  if (!filterClass) {
    throw "PixiPlugin error: " + type + " isn't present.";
  }

  while (--i > -1) {
    if (filters[i] instanceof filterClass) {
      return filters[i];
    }
  }

  filter = new filterClass();

  if (type === "BlurFilter") {
    filter.blur = 0;
  }

  filters.push(filter);
  t.filters = filters;
  return filter;
},
    _addColorMatrixFilterCacheTween = function _addColorMatrixFilterCacheTween(p, pg, cache, vars) {
  //we cache the ColorMatrixFilter components in a _gsColorMatrixFilter object attached to the target object so that it's easy to grab the current value at any time.
  pg._addTween(cache, p, cache[p], vars[p], p);

  pg._overwriteProps.push(p);
},
    _applyBrightnessToMatrix = function _applyBrightnessToMatrix(brightness, matrix) {
  var temp = new __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].PIXI.filters.ColorMatrixFilter();
  temp.matrix = matrix;
  temp.brightness(brightness, true);
  return temp.matrix;
},
    _CMFdefaults = {
  contrast: 1,
  saturation: 1,
  colorizeAmount: 0,
  colorize: "rgb(255,255,255)",
  hue: 0,
  brightness: 1
},
    _parseColorMatrixFilter = function _parseColorMatrixFilter(t, v, pg) {
  var filter = _getFilter(t, "ColorMatrixFilter"),
      cache = t._gsColorMatrixFilter = t._gsColorMatrixFilter || {
    contrast: 1,
    saturation: 1,
    colorizeAmount: 0,
    colorize: "rgb(255,255,255)",
    hue: 0,
    brightness: 1
  },
      combine = v.combineCMF && !("colorMatrixFilter" in v && !v.colorMatrixFilter),
      i,
      matrix,
      startMatrix;

  startMatrix = filter.matrix;

  if (v.resolution) {
    filter.resolution = v.resolution;
  }

  if (v.matrix && v.matrix.length === startMatrix.length) {
    matrix = v.matrix;

    if (cache.contrast !== 1) {
      _addColorMatrixFilterCacheTween("contrast", pg, cache, _CMFdefaults);
    }

    if (cache.hue) {
      _addColorMatrixFilterCacheTween("hue", pg, cache, _CMFdefaults);
    }

    if (cache.brightness !== 1) {
      _addColorMatrixFilterCacheTween("brightness", pg, cache, _CMFdefaults);
    }

    if (cache.colorizeAmount) {
      _addColorMatrixFilterCacheTween("colorize", pg, cache, _CMFdefaults);

      _addColorMatrixFilterCacheTween("colorizeAmount", pg, cache, _CMFdefaults);
    }

    if (cache.saturation !== 1) {
      _addColorMatrixFilterCacheTween("saturation", pg, cache, _CMFdefaults);
    }
  } else {
    matrix = _idMatrix.slice();

    if (v.contrast != null) {
      matrix = _setContrast(matrix, Number(v.contrast));

      _addColorMatrixFilterCacheTween("contrast", pg, cache, v);
    } else if (cache.contrast !== 1) {
      if (combine) {
        matrix = _setContrast(matrix, cache.contrast);
      } else {
        _addColorMatrixFilterCacheTween("contrast", pg, cache, _CMFdefaults);
      }
    }

    if (v.hue != null) {
      matrix = _setHue(matrix, Number(v.hue));

      _addColorMatrixFilterCacheTween("hue", pg, cache, v);
    } else if (cache.hue) {
      if (combine) {
        matrix = _setHue(matrix, cache.hue);
      } else {
        _addColorMatrixFilterCacheTween("hue", pg, cache, _CMFdefaults);
      }
    }

    if (v.brightness != null) {
      matrix = _applyBrightnessToMatrix(Number(v.brightness), matrix);

      _addColorMatrixFilterCacheTween("brightness", pg, cache, v);
    } else if (cache.brightness !== 1) {
      if (combine) {
        matrix = _applyBrightnessToMatrix(cache.brightness, matrix);
      } else {
        _addColorMatrixFilterCacheTween("brightness", pg, cache, _CMFdefaults);
      }
    }

    if (v.colorize != null) {
      v.colorizeAmount = "colorizeAmount" in v ? Number(v.colorizeAmount) : 1;
      matrix = _colorize(matrix, v.colorize, v.colorizeAmount);

      _addColorMatrixFilterCacheTween("colorize", pg, cache, v);

      _addColorMatrixFilterCacheTween("colorizeAmount", pg, cache, v);
    } else if (cache.colorizeAmount) {
      if (combine) {
        matrix = _colorize(matrix, cache.colorize, cache.colorizeAmount);
      } else {
        _addColorMatrixFilterCacheTween("colorize", pg, cache, _CMFdefaults);

        _addColorMatrixFilterCacheTween("colorizeAmount", pg, cache, _CMFdefaults);
      }
    }

    if (v.saturation != null) {
      matrix = _setSaturation(matrix, Number(v.saturation));

      _addColorMatrixFilterCacheTween("saturation", pg, cache, v);
    } else if (cache.saturation !== 1) {
      if (combine) {
        matrix = _setSaturation(matrix, cache.saturation);
      } else {
        _addColorMatrixFilterCacheTween("saturation", pg, cache, _CMFdefaults);
      }
    }
  }

  i = matrix.length;

  while (--i > -1) {
    if (matrix[i] !== startMatrix[i]) {
      pg._addTween(startMatrix, i, startMatrix[i], matrix[i], "colorMatrixFilter");
    }
  }

  pg._overwriteProps.push("colorMatrixFilter");
},
    _addColorTween = function _addColorTween(target, p, value, colorSetter, plugin) {
  var pt = colorSetter._firstPT = {
    _next: colorSetter._firstPT,
    t: target,
    p: p,
    proxy: {},
    f: typeof target[p] === "function"
  };
  pt.proxy[p] = "rgb(" + _parseColor(!pt.f ? target[p] : target[p.indexOf("set") || typeof target["get" + p.substr(3)] !== "function" ? p : "get" + p.substr(3)]()).join(",") + ")";

  plugin._addTween(pt.proxy, p, "get", typeof value === "number" ? "rgb(" + _parseColor(value, false).join(",") + ")" : value, p, null, null, _colorStringFilter);
},
    //to improve performance, when a color is sensed, we hijack the setRatio() method of the plugin instance with a new function that this method spits back. This is a special method that handles parsing color values on-the-fly and turns them into numeric values which PixiJS requires. In other words, instead of "rgb(255, 0, 0)", PixiJS wants 0xFF0000. This also works with hsl() values.
_buildColorSetter = function _buildColorSetter(tween, plugin) {
  var setRatio = plugin.setRatio,
      //save the original (super) setRatio() function
  func = function func(v) {
    var pt = func._firstPT,
        val;
    setRatio.call(plugin, v);

    while (pt) {
      val = _parseColor(pt.proxy[pt.p], "number");

      if (pt.f) {
        pt.t[pt.p](val);
      } else {
        pt.t[pt.p] = val;
      }

      pt = pt._next;
    }

    if (func.graphics) {
      //in order for PixiJS to actually redraw GraphicsData, we've gotta increment the "dirty" and "clearDirty" values. If we don't do this, the values will be tween properly, but not rendered.
      func.graphics.dirty++;
      func.graphics.clearDirty++;
    }
  };

  plugin.setRatio = func;
  return func;
},
    _colorProps = {
  tint: 1,
  lineColor: 1,
  fillColor: 1
},
    _xyContexts = "position,scale,skew,pivot,anchor,tilePosition,tileScale".split(","),
    _contexts = {
  x: "position",
  y: "position",
  tileX: "tilePosition",
  tileY: "tilePosition"
},
    _colorMatrixFilterProps = {
  colorMatrixFilter: 1,
  saturation: 1,
  contrast: 1,
  hue: 1,
  colorize: 1,
  colorizeAmount: 1,
  brightness: 1,
  combineCMF: 1
},
    _DEG2RAD = Math.PI / 180,
    _degreesToRadians = function _degreesToRadians(value) {
  return typeof value === "string" && value.charAt(1) === "=" ? value.substr(0, 2) + parseFloat(value.substr(2)) * _DEG2RAD : value * _DEG2RAD;
},
    i,
    p; //context setup...


for (i = 0; i < _xyContexts.length; i++) {
  p = _xyContexts[i];
  _contexts[p + "X"] = p;
  _contexts[p + "Y"] = p;
} //color parsing setup...


for (p in _colorLookup) {
  _colorExp += "|" + p + "\\b";
}

_colorExp = new RegExp(_colorExp + ")", "gi");

_colorStringFilter = function _colorStringFilter(a) {
  var combined = a[0] + " " + a[1],
      toHSL;
  _colorExp.lastIndex = 0;

  if (_colorExp.test(combined)) {
    toHSL = combined.indexOf("hsl(") !== -1 || combined.indexOf("hsla(") !== -1;
    a[0] = _formatColors(a[0], toHSL);
    a[1] = _formatColors(a[1], toHSL);
  }
};

if (!TweenLite.defaultStringFilter) {
  TweenLite.defaultStringFilter = _colorStringFilter;
}

var PixiPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "pixi",
  priority: 0,
  API: 2,
  global: true,
  version: "0.3.0",
  init: function init(target, values, tween, index) {
    if (!target instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].PIXI.DisplayObject) {
      return false;
    }

    var isV4 = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].PIXI.VERSION.charAt(0) === "4",
        context,
        axis,
        value,
        colorMatrix,
        filter,
        p,
        padding,
        colorSetter,
        i,
        data,
        pt;

    for (p in values) {
      context = _contexts[p];
      value = values[p];

      if (typeof value === "function") {
        value = value(index || 0, target);
      }

      if (context) {
        axis = p.charAt(p.length - 1).toLowerCase().indexOf("x") !== -1 ? "x" : "y";

        this._addTween(target[context], axis, target[context][axis], context === "skew" ? _degreesToRadians(value) : value, p);
      } else if (p === "scale" || p === "anchor" || p === "pivot" || p === "tileScale") {
        this._addTween(target[p], "x", target[p].x, value, p + "X");

        this._addTween(target[p], "y", target[p].y, value, p + "Y");
      } else if (p === "rotation") {
        //PIXI expects rotation in radians, but as a convenience we let folks define it in degrees and we do the conversion.
        this._addTween(target, p, target.rotation, _degreesToRadians(value), p);
      } else if (_colorMatrixFilterProps[p]) {
        if (!colorMatrix) {
          _parseColorMatrixFilter(target, values.colorMatrixFilter || values, this);

          colorMatrix = true;
        }
      } else if (p === "blur" || p === "blurX" || p === "blurY" || p === "blurPadding") {
        filter = _getFilter(target, "BlurFilter");

        this._addTween(filter, p, filter[p], value, p);

        if (values.blurPadding !== 0) {
          padding = values.blurPadding || Math.max(filter[p], value) * 2;
          i = target.filters.length;

          while (--i > -1) {
            target.filters[i].padding = Math.max(target.filters[i].padding, padding); //if we don't expand the padding on all the filters, it can look clipped.
          }
        }
      } else if (_colorProps[p]) {
        if (!colorSetter) {
          colorSetter = _buildColorSetter(tween, this);
        }

        if ((p === "lineColor" || p === "fillColor") && target instanceof __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].PIXI.Graphics) {
          data = (target.geometry || target).graphicsData; //"geometry" was introduced in PIXI version 5

          i = data.length;

          while (--i > -1) {
            _addColorTween(isV4 ? data[i] : data[i][p.substr(0, 4) + "Style"], isV4 ? p : "color", value, colorSetter, this);
          }

          colorSetter.graphics = target.geometry || target;
        } else {
          _addColorTween(target, p, value, colorSetter, this);
        }
      } else if (p === "autoAlpha") {
        this._firstPT = pt = {
          t: {
            setRatio: function setRatio() {
              target.visible = !!target.alpha;
            }
          },
          p: "setRatio",
          s: 0,
          c: 1,
          f: 1,
          pg: 0,
          n: "visible",
          pr: 0,
          m: 0,
          _next: this._firstPT
        };

        if (pt._next) {
          pt._next._prev = pt;
        }

        this._addTween(target, "alpha", target.alpha, value, "alpha");

        this._overwriteProps.push("alpha", "visible");
      } else {
        this._addTween(target, p, target[p], value, p);
      }

      this._overwriteProps.push(p);
    }

    return true;
  }
});

PixiPlugin.colorProps = _colorProps;
PixiPlugin.parseColor = _parseColor;
PixiPlugin.formatColors = _formatColors;
PixiPlugin.colorStringFilter = _colorStringFilter;

PixiPlugin.registerPIXI = function (PIXI) {
  __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].PIXI = PIXI;
};



/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ScrollToPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 1.9.2
 * DATE: 2019-02-07
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/

/* eslint-disable */


var _doc = (__WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */].document || {}).documentElement,
    _window = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */],
    _max = function _max(element, axis) {
  var dim = axis === "x" ? "Width" : "Height",
      scroll = "scroll" + dim,
      client = "client" + dim,
      body = document.body;
  return element === _window || element === _doc || element === body ? Math.max(_doc[scroll], body[scroll]) - (_window["inner" + dim] || _doc[client] || body[client]) : element[scroll] - element["offset" + dim];
},
    _unwrapElement = function _unwrapElement(value) {
  if (typeof value === "string") {
    value = TweenLite.selector(value);
  }

  if (value.length && value !== _window && value[0] && value[0].style && !value.nodeType) {
    value = value[0];
  }

  return value === _window || value.nodeType && value.style ? value : null;
},
    _buildGetter = function _buildGetter(e, axis) {
  //pass in an element and an axis ("x" or "y") and it'll return a getter function for the scroll position of that element (like scrollTop or scrollLeft, although if the element is the window, it'll use the pageXOffset/pageYOffset or the documentElement's scrollTop/scrollLeft or document.body's. Basically this streamlines things and makes a very fast getter across browsers.
  var p = "scroll" + (axis === "x" ? "Left" : "Top");

  if (e === _window) {
    if (e.pageXOffset != null) {
      p = "page" + axis.toUpperCase() + "Offset";
    } else if (_doc[p] != null) {
      e = _doc;
    } else {
      e = document.body;
    }
  }

  return function () {
    return e[p];
  };
},
    _getOffset = function _getOffset(element, container) {
  var rect = _unwrapElement(element).getBoundingClientRect(),
      b = document.body,
      isRoot = !container || container === _window || container === b,
      cRect = isRoot ? {
    top: _doc.clientTop - (window.pageYOffset || _doc.scrollTop || b.scrollTop || 0),
    left: _doc.clientLeft - (window.pageXOffset || _doc.scrollLeft || b.scrollLeft || 0)
  } : container.getBoundingClientRect(),
      offsets = {
    x: rect.left - cRect.left,
    y: rect.top - cRect.top
  };

  if (!isRoot && container) {
    //only add the current scroll position if it's not the window/body.
    offsets.x += _buildGetter(container, "x")();
    offsets.y += _buildGetter(container, "y")();
  }

  return offsets;
  /*	PREVIOUS
  var rect = _unwrapElement(element).getBoundingClientRect(),
  	isRoot = (!container || container === _window || container === document.body),
  	cRect = (isRoot ? _doc : container).getBoundingClientRect(),
  	offsets = {x: rect.left - cRect.left, y: rect.top - cRect.top};
  if (!isRoot && container) { //only add the current scroll position if it's not the window/body.
  	offsets.x += _buildGetter(container, "x")();
  	offsets.y += _buildGetter(container, "y")();
  }
  return offsets;
  */
},
    _parseVal = function _parseVal(value, target, axis, currentVal) {
  var type = typeof value;
  return !isNaN(value) ? parseFloat(value) : type === "string" && value.charAt(1) === "=" ? parseInt(value.charAt(0) + "1", 10) * parseFloat(value.substr(2)) + currentVal : value === "max" ? _max(target, axis) : Math.min(_max(target, axis), _getOffset(value, target)[axis]);
},
    ScrollToPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "scrollTo",
  API: 2,
  global: true,
  version: "1.9.2",
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween) {
    this._wdw = target === _window;
    this._target = target;
    this._tween = tween;

    if (typeof value !== "object") {
      value = {
        y: value
      }; //if we don't receive an object as the parameter, assume the user intends "y".

      if (typeof value.y === "string" && value.y !== "max" && value.y.charAt(1) !== "=") {
        value.x = value.y;
      }
    } else if (value.nodeType) {
      value = {
        y: value,
        x: value
      };
    }

    this.vars = value;
    this._autoKill = value.autoKill !== false;
    this.getX = _buildGetter(target, "x");
    this.getY = _buildGetter(target, "y");
    this.x = this.xPrev = this.getX();
    this.y = this.yPrev = this.getY();

    if (value.x != null) {
      this._addTween(this, "x", this.x, _parseVal(value.x, target, "x", this.x) - (value.offsetX || 0), "scrollTo_x", true);

      this._overwriteProps.push("scrollTo_x");
    } else {
      this.skipX = true;
    }

    if (value.y != null) {
      this._addTween(this, "y", this.y, _parseVal(value.y, target, "y", this.y) - (value.offsetY || 0), "scrollTo_y", true);

      this._overwriteProps.push("scrollTo_y");
    } else {
      this.skipY = true;
    }

    return true;
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(v) {
    this._super.setRatio.call(this, v);

    var x = this._wdw || !this.skipX ? this.getX() : this.xPrev,
        y = this._wdw || !this.skipY ? this.getY() : this.yPrev,
        yDif = y - this.yPrev,
        xDif = x - this.xPrev,
        threshold = ScrollToPlugin.autoKillThreshold;

    if (this.x < 0) {
      //can't scroll to a position less than 0! Might happen if someone uses a Back.easeOut or Elastic.easeOut when scrolling back to the top of the page (for example)
      this.x = 0;
    }

    if (this.y < 0) {
      this.y = 0;
    }

    if (this._autoKill) {
      //note: iOS has a bug that throws off the scroll by several pixels, so we need to check if it's within 7 pixels of the previous one that we set instead of just looking for an exact match.
      if (!this.skipX && (xDif > threshold || xDif < -threshold) && x < _max(this._target, "x")) {
        this.skipX = true; //if the user scrolls separately, we should stop tweening!
      }

      if (!this.skipY && (yDif > threshold || yDif < -threshold) && y < _max(this._target, "y")) {
        this.skipY = true; //if the user scrolls separately, we should stop tweening!
      }

      if (this.skipX && this.skipY) {
        this._tween.kill();

        if (this.vars.onAutoKill) {
          this.vars.onAutoKill.apply(this.vars.onAutoKillScope || this._tween, this.vars.onAutoKillParams || []);
        }
      }
    }

    if (this._wdw) {
      _window.scrollTo(!this.skipX ? this.x : x, !this.skipY ? this.y : y);
    } else {
      if (!this.skipY) {
        this._target.scrollTop = this.y;
      }

      if (!this.skipX) {
        this._target.scrollLeft = this.x;
      }
    }

    this.xPrev = this.x;
    this.yPrev = this.y;
  }
}),
    p = ScrollToPlugin.prototype;

ScrollToPlugin.max = _max;
ScrollToPlugin.getOffset = _getOffset;
ScrollToPlugin.buildGetter = _buildGetter;
ScrollToPlugin.autoKillThreshold = 7;

p._kill = function (lookup) {
  if (lookup.scrollTo_x) {
    this.skipX = true;
  }

  if (lookup.scrollTo_y) {
    this.skipY = true;
  }

  return this._super._kill.call(this, lookup);
};



/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export TextPlugin */
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__ = __webpack_require__(0);
/*!
 * VERSION: 0.6.2
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */

/* eslint-disable */


var _getText = function _getText(e) {
  var type = e.nodeType,
      result = "";

  if (type === 1 || type === 9 || type === 11) {
    if (typeof e.textContent === "string") {
      return e.textContent;
    } else {
      for (e = e.firstChild; e; e = e.nextSibling) {
        result += _getText(e);
      }
    }
  } else if (type === 3 || type === 4) {
    return e.nodeValue;
  }

  return result;
},
    _emoji = "[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2694-\u2697]|\uD83E[\uDD10-\uDD5D]|[\uD800-\uDBFF][\uDC00-\uDFFF]",
    _emojiExp = new RegExp(_emoji),
    _emojiAndCharsExp = new RegExp(_emoji + "|.", "g"),
    _emojiSafeSplit = function _emojiSafeSplit(text, delimiter) {
  return (delimiter === "" || !delimiter) && _emojiExp.test(text) ? text.match(_emojiAndCharsExp) : text.split(delimiter || "");
},

/* //previous emoji-related splitting. New method above is faster and more concise.
_emojiStart = 0xD800,
_emojiEnd = 0xDBFF,
_emojiLowStart = 0xDC00,
_emojiRegionStart = 0x1F1E6,
_emojiRegionEnd = 0x1F1FF,
_emojiModStart = 0x1f3fb,
_emojiModEnd = 0x1f3ff,
_emojiPairCode = function(s) {
	return ((s.charCodeAt(0) - _emojiStart) << 10) + (s.charCodeAt(1) - _emojiLowStart) + 0x10000;
},
_emojiSafeSplit = function(text, delimiter) { //like calling String.split(delimiter) except that it keeps emoji characters together.
	if (delimiter !== "") {
		return text.split(delimiter);
	}
	var l = text.length,
		a = [],
		character, i, emojiPair1, emojiPair2, j;
	for (i = 0; i < l; i++) {
		character = text.charAt(i);
		if ((character.charCodeAt(0) >= _emojiStart && character.charCodeAt(0) <= _emojiEnd) || (text.charCodeAt(i+1) >= 0xFE00 && text.charCodeAt(i+1) <= 0xFE0F)) { //special emoji characters use 2 or 4 unicode characters that we must keep together.
			emojiPair1 = _emojiPairCode(text.substr(i, 2));
			emojiPair2 = _emojiPairCode(text.substr(i + 2, 2));
			j = ((emojiPair1 >= _emojiRegionStart && emojiPair1 <= _emojiRegionEnd && emojiPair2 >= _emojiRegionStart && emojiPair2 <= _emojiRegionEnd) || (emojiPair2 >= _emojiModStart && emojiPair2 <= _emojiModEnd)) ? 4 : 2;
			a.push(text.substr(i, j));
			i += j - 1;
		} else {
			a.push(character);
		}
	}
	return a;
},
*/
TextPlugin = __WEBPACK_IMPORTED_MODULE_0__TweenLite_js__["a" /* _gsScope */]._gsDefine.plugin({
  propName: "text",
  API: 2,
  version: "0.6.2",
  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.
  init: function init(target, value, tween, index) {
    var i = target.nodeName.toUpperCase(),
        shrt;

    if (typeof value === "function") {
      value = value(index, target);
    }

    this._svg = target.getBBox && (i === "TEXT" || i === "TSPAN");

    if (!("innerHTML" in target) && !this._svg) {
      return false;
    }

    this._target = target;

    if (typeof value !== "object") {
      value = {
        value: value
      };
    }

    if (value.value === undefined) {
      this._text = this._original = [""];
      return true;
    }

    this._delimiter = value.delimiter || "";
    this._original = _emojiSafeSplit(_getText(target).replace(/\s+/g, " "), this._delimiter);
    this._text = _emojiSafeSplit(value.value.replace(/\s+/g, " "), this._delimiter);
    this._runBackwards = tween.vars.runBackwards === true;

    if (this._runBackwards) {
      i = this._original;
      this._original = this._text;
      this._text = i;
    }

    if (typeof value.newClass === "string") {
      this._newClass = value.newClass;
      this._hasClass = true;
    }

    if (typeof value.oldClass === "string") {
      this._oldClass = value.oldClass;
      this._hasClass = true;
    }

    i = this._original.length - this._text.length;
    shrt = i < 0 ? this._original : this._text;
    this._fillChar = value.fillChar || (value.padSpace ? "&nbsp;" : "");

    if (i < 0) {
      i = -i;
    }

    while (--i > -1) {
      shrt.push(this._fillChar);
    }

    return true;
  },
  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)
  set: function set(ratio) {
    if (ratio > 1) {
      ratio = 1;
    } else if (ratio < 0) {
      ratio = 0;
    }

    if (this._runBackwards) {
      ratio = 1 - ratio;
    }

    var l = this._text.length,
        i = ratio * l + 0.5 | 0,
        applyNew,
        applyOld,
        str;

    if (this._hasClass) {
      applyNew = this._newClass && i !== 0;
      applyOld = this._oldClass && i !== l;
      str = (applyNew ? "<span class='" + this._newClass + "'>" : "") + this._text.slice(0, i).join(this._delimiter) + (applyNew ? "</span>" : "") + (applyOld ? "<span class='" + this._oldClass + "'>" : "") + this._delimiter + this._original.slice(i).join(this._delimiter) + (applyOld ? "</span>" : "");
    } else {
      str = this._text.slice(0, i).join(this._delimiter) + this._delimiter + this._original.slice(i).join(this._delimiter);
    }

    if (this._svg) {
      //SVG text elements don't have an "innerHTML" in Microsoft browsers.
      this._target.textContent = str;
    } else {
      this._target.innerHTML = this._fillChar === "&nbsp;" && str.indexOf("  ") !== -1 ? str.split("  ").join("&nbsp;&nbsp;") : str;
    }
  }
}),
    p = TextPlugin.prototype;

p._newClass = p._oldClass = p._delimiter = "";


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(3),
    root = __webpack_require__(2);
/* Built-in method references that are verified to be native. */


var DataView = getNative(root, 'DataView');
module.exports = DataView;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(101),
    hashDelete = __webpack_require__(102),
    hashGet = __webpack_require__(103),
    hashHas = __webpack_require__(104),
    hashSet = __webpack_require__(105);
/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `Hash`.


Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
module.exports = Hash;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(3),
    root = __webpack_require__(2);
/* Built-in method references that are verified to be native. */


var Promise = getNative(root, 'Promise');
module.exports = Promise;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(3),
    root = __webpack_require__(2);
/* Built-in method references that are verified to be native. */


var Set = getNative(root, 'Set');
module.exports = Set;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(33),
    setCacheAdd = __webpack_require__(125),
    setCacheHas = __webpack_require__(126);
/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */


function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();

  while (++index < length) {
    this.add(values[index]);
  }
} // Add methods to `SetCache`.


SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
module.exports = SetCache;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(8),
    stackClear = __webpack_require__(128),
    stackDelete = __webpack_require__(129),
    stackGet = __webpack_require__(130),
    stackHas = __webpack_require__(131),
    stackSet = __webpack_require__(132);
/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
} // Add methods to `Stack`.


Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
module.exports = Stack;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(2);
/** Built-in value references. */


var Uint8Array = root.Uint8Array;
module.exports = Uint8Array;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(3),
    root = __webpack_require__(2);
/* Built-in method references that are verified to be native. */


var WeakMap = getNative(root, 'WeakMap');
module.exports = WeakMap;

/***/ }),
/* 79 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];

    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }

  return result;
}

module.exports = arrayFilter;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(90),
    isArguments = __webpack_require__(133),
    isArray = __webpack_require__(23),
    isBuffer = __webpack_require__(38),
    isIndex = __webpack_require__(106),
    isTypedArray = __webpack_require__(42);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */

function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.
    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
    isIndex(key, length)))) {
      result.push(key);
    }
  }

  return result;
}

module.exports = arrayLikeKeys;

/***/ }),
/* 81 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }

  return array;
}

module.exports = arrayPush;

/***/ }),
/* 82 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }

  return false;
}

module.exports = arraySome;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(81),
    isArray = __webpack_require__(23);
/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */


function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(10),
    isObjectLike = __webpack_require__(13);
/** `Object#toString` result references. */


var argsTag = '[object Arguments]';
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */

function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(86),
    isObjectLike = __webpack_require__(13);
/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */


function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }

  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }

  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(76),
    equalArrays = __webpack_require__(34),
    equalByTag = __webpack_require__(94),
    equalObjects = __webpack_require__(95),
    getTag = __webpack_require__(99),
    isArray = __webpack_require__(23),
    isBuffer = __webpack_require__(38),
    isTypedArray = __webpack_require__(42);
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1;
/** `Object#toString` result references. */

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }

    objIsArr = true;
    objIsObj = false;
  }

  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }

  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }

  if (!isSameTag) {
    return false;
  }

  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(39),
    isMasked = __webpack_require__(108),
    isObject = __webpack_require__(41),
    toSource = __webpack_require__(36);
/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */


var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */

var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used for built-in method references. */

var funcProto = Function.prototype,
    objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect if a method is native. */

var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */

function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }

  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(10),
    isLength = __webpack_require__(40),
    isObjectLike = __webpack_require__(13);
/** `Object#toString` result references. */


var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values of typed arrays. */

var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */

function baseIsTypedArray(value) {
  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(109),
    nativeKeys = __webpack_require__(121);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }

  var result = [];

  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }

  return result;
}

module.exports = baseKeys;

/***/ }),
/* 90 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }

  return result;
}

module.exports = baseTimes;

/***/ }),
/* 91 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

module.exports = baseUnary;

/***/ }),
/* 92 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(2);
/** Used to detect overreaching core-js shims. */


var coreJsData = root['__core-js_shared__'];
module.exports = coreJsData;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(22),
    Uint8Array = __webpack_require__(77),
    eq = __webpack_require__(37),
    equalArrays = __webpack_require__(34),
    mapToArray = __webpack_require__(120),
    setToArray = __webpack_require__(127);
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/** `Object#toString` result references. */

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';
/** Used to convert symbols to primitives and strings. */

var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }

      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }

      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == other + '';

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      } // Assume cyclic values are equal.


      var stacked = stack.get(object);

      if (stacked) {
        return stacked == other;
      }

      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).

      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }

  }

  return false;
}

module.exports = equalByTag;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(96);
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1;
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }

  var index = objLength;

  while (index--) {
    var key = objProps[index];

    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  } // Assume cyclic values are equal.


  var stacked = stack.get(object);

  if (stacked && stack.get(other)) {
    return stacked == other;
  }

  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;

  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    } // Recursively compare objects (susceptible to call stack limits).


    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }

    skipCtor || (skipCtor = key == 'constructor');
  }

  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.

    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }

  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(83),
    getSymbols = __webpack_require__(98),
    keys = __webpack_require__(136);
/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */


function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(22);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/** Built-in value references. */

var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);

  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }

  return result;
}

module.exports = getRawTag;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(79),
    stubArray = __webpack_require__(137);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Built-in value references. */

var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */

var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
  if (object == null) {
    return [];
  }

  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};
module.exports = getSymbols;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(71),
    Map = __webpack_require__(21),
    Promise = __webpack_require__(73),
    Set = __webpack_require__(74),
    WeakMap = __webpack_require__(78),
    baseGetTag = __webpack_require__(10),
    toSource = __webpack_require__(36);
/** `Object#toString` result references. */


var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';
var dataViewTag = '[object DataView]';
/** Used to detect maps, sets, and weakmaps. */

var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.

if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
  getTag = function getTag(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;

        case mapCtorString:
          return mapTag;

        case promiseCtorString:
          return promiseTag;

        case setCtorString:
          return setTag;

        case weakMapCtorString:
          return weakMapTag;
      }
    }

    return result;
  };
}

module.exports = getTag;

/***/ }),
/* 100 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(12);
/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */


function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

/***/ }),
/* 102 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(12);
/** Used to stand-in for `undefined` hash values. */


var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

function hashGet(key) {
  var data = this.__data__;

  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }

  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(12);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(12);
/** Used to stand-in for `undefined` hash values. */


var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */

function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

/***/ }),
/* 106 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/** Used to detect unsigned integer values. */

var reIsUint = /^(?:0|[1-9]\d*)$/;
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */

function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;

/***/ }),
/* 107 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

module.exports = isKeyable;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(93);
/** Used to detect methods masquerading as native. */


var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */


function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

module.exports = isMasked;

/***/ }),
/* 109 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */

function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
  return value === proto;
}

module.exports = isPrototype;

/***/ }),
/* 110 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(9);
/** Used for built-in method references. */


var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }

  var lastIndex = data.length - 1;

  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }

  --this.size;
  return true;
}

module.exports = listCacheDelete;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(9);
/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */


function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);
  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(9);
/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */


function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(9);
/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */


function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }

  return this;
}

module.exports = listCacheSet;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(72),
    ListCache = __webpack_require__(8),
    Map = __webpack_require__(21);
/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */


function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash(),
    'map': new (Map || ListCache)(),
    'string': new Hash()
  };
}

module.exports = mapCacheClear;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(11);
/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */


function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(11);
/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */


function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(11);
/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */


function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(11);
/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */


function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

/***/ }),
/* 120 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);
  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(124);
/* Built-in method references for those with the same name as other `lodash` methods. */


var nativeKeys = overArg(Object.keys, Object);
module.exports = nativeKeys;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(35);
/** Detect free variable `exports`. */


var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */

var freeProcess = moduleExports && freeGlobal.process;
/** Used to access faster Node.js helpers. */

var nodeUtil = function () {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    } // Legacy `process.binding('util')` for Node.js < 10.


    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

module.exports = nodeUtil;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))

/***/ }),
/* 123 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

/***/ }),
/* 124 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

/***/ }),
/* 125 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */

function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);

  return this;
}

module.exports = setCacheAdd;

/***/ }),
/* 126 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

/***/ }),
/* 127 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);
  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(8);
/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */


function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}

module.exports = stackClear;

/***/ }),
/* 129 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);
  this.size = data.size;
  return result;
}

module.exports = stackDelete;

/***/ }),
/* 130 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

/***/ }),
/* 131 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(8),
    Map = __webpack_require__(21),
    MapCache = __webpack_require__(33);
/** Used as the size to enable large array optimizations. */


var LARGE_ARRAY_SIZE = 200;
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */

function stackSet(key, value) {
  var data = this.__data__;

  if (data instanceof ListCache) {
    var pairs = data.__data__;

    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }

    data = this.__data__ = new MapCache(pairs);
  }

  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(84),
    isObjectLike = __webpack_require__(13);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references. */

var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */

var isArguments = baseIsArguments(function () {
  return arguments;
}()) ? baseIsArguments : function (value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
module.exports = isArguments;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(39),
    isLength = __webpack_require__(40);
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */


function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(85);
/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */


function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(80),
    baseKeys = __webpack_require__(89),
    isArrayLike = __webpack_require__(134);
/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */


function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

/***/ }),
/* 137 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

/***/ }),
/* 138 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;typeof navigator!=="undefined"&&function(root,factory){if(true){!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return factory(root);}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof module==="object"&&module.exports){module.exports=factory(root);}else{root.lottie=factory(root);root.bodymovin=root.lottie;}}(window||{},function(window){"use strict";var svgNS="http://www.w3.org/2000/svg";var locationHref='';var initialDefaultFrame=-999999;var subframeEnabled=true;var expressionsPlugin;var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var cachedColors={};var bm_rounder=Math.round;var bm_rnd;var bm_pow=Math.pow;var bm_sqrt=Math.sqrt;var bm_abs=Math.abs;var bm_floor=Math.floor;var bm_max=Math.max;var bm_min=Math.min;var blitter=10;var BMMath={};(function(){var propertyNames=["abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","cbrt","expm1","clz32","cos","cosh","exp","floor","fround","hypot","imul","log","log1p","log2","log10","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2"];var i,len=propertyNames.length;for(i=0;i<len;i+=1){BMMath[propertyNames[i]]=Math[propertyNames[i]];}})();function ProjectInterface(){return{};}BMMath.random=Math.random;BMMath.abs=function(val){var tOfVal=typeof val;if(tOfVal==='object'&&val.length){var absArr=createSizedArray(val.length);var i,len=val.length;for(i=0;i<len;i+=1){absArr[i]=Math.abs(val[i]);}return absArr;}return Math.abs(val);};var defaultCurveSegments=150;var degToRads=Math.PI/180;var roundCorner=0.5519;function roundValues(flag){if(flag){bm_rnd=Math.round;}else{bm_rnd=function bm_rnd(val){return val;};}}roundValues(false);function styleDiv(element){element.style.position='absolute';element.style.top=0;element.style.left=0;element.style.display='block';element.style.transformOrigin=element.style.webkitTransformOrigin='0 0';element.style.backfaceVisibility=element.style.webkitBackfaceVisibility='visible';element.style.transformStyle=element.style.webkitTransformStyle=element.style.mozTransformStyle="preserve-3d";}function BMEnterFrameEvent(type,currentTime,totalTime,frameMultiplier){this.type=type;this.currentTime=currentTime;this.totalTime=totalTime;this.direction=frameMultiplier<0?-1:1;}function BMCompleteEvent(type,frameMultiplier){this.type=type;this.direction=frameMultiplier<0?-1:1;}function BMCompleteLoopEvent(type,totalLoops,currentLoop,frameMultiplier){this.type=type;this.currentLoop=currentLoop;this.totalLoops=totalLoops;this.direction=frameMultiplier<0?-1:1;}function BMSegmentStartEvent(type,firstFrame,totalFrames){this.type=type;this.firstFrame=firstFrame;this.totalFrames=totalFrames;}function BMDestroyEvent(type,target){this.type=type;this.target=target;}function BMRenderFrameErrorEvent(nativeError,currentTime){this.type='renderFrameError';this.nativeError=nativeError;this.currentTime=currentTime;}function BMConfigErrorEvent(nativeError){this.type='configError';this.nativeError=nativeError;}function BMAnimationConfigErrorEvent(type,nativeError){this.type=type;this.nativeError=nativeError;this.currentTime=currentTime;}var createElementID=function(){var _count=0;return function createID(){return'__lottie_element_'+ ++_count;};}();function HSVtoRGB(h,s,v){var r,g,b,i,f,p,q,t;i=Math.floor(h*6);f=h*6-i;p=v*(1-s);q=v*(1-f*s);t=v*(1-(1-f)*s);switch(i%6){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break;}return[r,g,b];}function RGBtoHSV(r,g,b){var max=Math.max(r,g,b),min=Math.min(r,g,b),d=max-min,h,s=max===0?0:d/max,v=max/255;switch(max){case min:h=0;break;case r:h=g-b+d*(g<b?6:0);h/=6*d;break;case g:h=b-r+d*2;h/=6*d;break;case b:h=r-g+d*4;h/=6*d;break;}return[h,s,v];}function addSaturationToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[1]+=offset;if(hsv[1]>1){hsv[1]=1;}else if(hsv[1]<=0){hsv[1]=0;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}function addBrightnessToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[2]+=offset;if(hsv[2]>1){hsv[2]=1;}else if(hsv[2]<0){hsv[2]=0;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}function addHueToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[0]+=offset/360;if(hsv[0]>1){hsv[0]-=1;}else if(hsv[0]<0){hsv[0]+=1;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}var rgbToHex=function(){var colorMap=[];var i;var hex;for(i=0;i<256;i+=1){hex=i.toString(16);colorMap[i]=hex.length==1?'0'+hex:hex;}return function(r,g,b){if(r<0){r=0;}if(g<0){g=0;}if(b<0){b=0;}return'#'+colorMap[r]+colorMap[g]+colorMap[b];};}();function BaseEvent(){}BaseEvent.prototype={triggerEvent:function triggerEvent(eventName,args){if(this._cbs[eventName]){var len=this._cbs[eventName].length;for(var i=0;i<len;i++){this._cbs[eventName][i](args);}}},addEventListener:function addEventListener(eventName,callback){if(!this._cbs[eventName]){this._cbs[eventName]=[];}this._cbs[eventName].push(callback);return function(){this.removeEventListener(eventName,callback);}.bind(this);},removeEventListener:function removeEventListener(eventName,callback){if(!callback){this._cbs[eventName]=null;}else if(this._cbs[eventName]){var i=0,len=this._cbs[eventName].length;while(i<len){if(this._cbs[eventName][i]===callback){this._cbs[eventName].splice(i,1);i-=1;len-=1;}i+=1;}if(!this._cbs[eventName].length){this._cbs[eventName]=null;}}}};var createTypedArray=function(){function createRegularArray(type,len){var i=0,arr=[],value;switch(type){case'int16':case'uint8c':value=1;break;default:value=1.1;break;}for(i=0;i<len;i+=1){arr.push(value);}return arr;}function createTypedArray(type,len){if(type==='float32'){return new Float32Array(len);}else if(type==='int16'){return new Int16Array(len);}else if(type==='uint8c'){return new Uint8ClampedArray(len);}}if(typeof Uint8ClampedArray==='function'&&typeof Float32Array==='function'){return createTypedArray;}else{return createRegularArray;}}();function createSizedArray(len){return Array.apply(null,{length:len});}function createNS(type){//return {appendChild:function(){},setAttribute:function(){},style:{}}
return document.createElementNS(svgNS,type);}function createTag(type){//return {appendChild:function(){},setAttribute:function(){},style:{}}
return document.createElement(type);}function DynamicPropertyContainer(){};DynamicPropertyContainer.prototype={addDynamicProperty:function addDynamicProperty(prop){if(this.dynamicProperties.indexOf(prop)===-1){this.dynamicProperties.push(prop);this.container.addDynamicProperty(this);this._isAnimated=true;}},iterateDynamicProperties:function iterateDynamicProperties(){this._mdf=false;var i,len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();if(this.dynamicProperties[i]._mdf){this._mdf=true;}}},initDynamicPropertyContainer:function initDynamicPropertyContainer(container){this.container=container;this.dynamicProperties=[];this._mdf=false;this._isAnimated=false;}};var getBlendMode=function(){var blendModeEnums={0:'source-over',1:'multiply',2:'screen',3:'overlay',4:'darken',5:'lighten',6:'color-dodge',7:'color-burn',8:'hard-light',9:'soft-light',10:'difference',11:'exclusion',12:'hue',13:'saturation',14:'color',15:'luminosity'};return function(mode){return blendModeEnums[mode]||'';};}();/*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */ /**
 * 2D transformation matrix object initialized with identity matrix.
 *
 * The matrix can synchronize a canvas context by supplying the context
 * as an argument, or later apply current absolute transform to an
 * existing context.
 *
 * All values are handled as floating point values.
 *
 * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
 * @prop {number} a - scale x
 * @prop {number} b - shear y
 * @prop {number} c - shear x
 * @prop {number} d - scale y
 * @prop {number} e - translate x
 * @prop {number} f - translate y
 * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
 * @constructor
 */var Matrix=function(){var _cos=Math.cos;var _sin=Math.sin;var _tan=Math.tan;var _rnd=Math.round;function reset(){this.props[0]=1;this.props[1]=0;this.props[2]=0;this.props[3]=0;this.props[4]=0;this.props[5]=1;this.props[6]=0;this.props[7]=0;this.props[8]=0;this.props[9]=0;this.props[10]=1;this.props[11]=0;this.props[12]=0;this.props[13]=0;this.props[14]=0;this.props[15]=1;return this;}function rotate(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);}function rotateX(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(1,0,0,0,0,mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1);}function rotateY(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,0,mSin,0,0,1,0,0,-mSin,0,mCos,0,0,0,0,1);}function rotateZ(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);}function shear(sx,sy){return this._t(1,sy,sx,1,0,0);}function skew(ax,ay){return this.shear(_tan(ax),_tan(ay));}function skewFromAxis(ax,angle){var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,mSin,0,0,-mSin,mCos,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,_tan(ax),1,0,0,0,0,1,0,0,0,0,1)._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);//return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
}function scale(sx,sy,sz){if(!sz&&sz!==0){sz=1;}if(sx===1&&sy===1&&sz===1){return this;}return this._t(sx,0,0,0,0,sy,0,0,0,0,sz,0,0,0,0,1);}function setTransform(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.props[0]=a;this.props[1]=b;this.props[2]=c;this.props[3]=d;this.props[4]=e;this.props[5]=f;this.props[6]=g;this.props[7]=h;this.props[8]=i;this.props[9]=j;this.props[10]=k;this.props[11]=l;this.props[12]=m;this.props[13]=n;this.props[14]=o;this.props[15]=p;return this;}function translate(tx,ty,tz){tz=tz||0;if(tx!==0||ty!==0||tz!==0){return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);}return this;}function transform(a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2){var _p=this.props;if(a2===1&&b2===0&&c2===0&&d2===0&&e2===0&&f2===1&&g2===0&&h2===0&&i2===0&&j2===0&&k2===1&&l2===0){//NOTE: commenting this condition because TurboFan deoptimizes code when present
//if(m2 !== 0 || n2 !== 0 || o2 !== 0){
_p[12]=_p[12]*a2+_p[15]*m2;_p[13]=_p[13]*f2+_p[15]*n2;_p[14]=_p[14]*k2+_p[15]*o2;_p[15]=_p[15]*p2;//}
this._identityCalculated=false;return this;}var a1=_p[0];var b1=_p[1];var c1=_p[2];var d1=_p[3];var e1=_p[4];var f1=_p[5];var g1=_p[6];var h1=_p[7];var i1=_p[8];var j1=_p[9];var k1=_p[10];var l1=_p[11];var m1=_p[12];var n1=_p[13];var o1=_p[14];var p1=_p[15];/* matrix order (canvas compatible):
         * ace
         * bdf
         * 001
         */_p[0]=a1*a2+b1*e2+c1*i2+d1*m2;_p[1]=a1*b2+b1*f2+c1*j2+d1*n2;_p[2]=a1*c2+b1*g2+c1*k2+d1*o2;_p[3]=a1*d2+b1*h2+c1*l2+d1*p2;_p[4]=e1*a2+f1*e2+g1*i2+h1*m2;_p[5]=e1*b2+f1*f2+g1*j2+h1*n2;_p[6]=e1*c2+f1*g2+g1*k2+h1*o2;_p[7]=e1*d2+f1*h2+g1*l2+h1*p2;_p[8]=i1*a2+j1*e2+k1*i2+l1*m2;_p[9]=i1*b2+j1*f2+k1*j2+l1*n2;_p[10]=i1*c2+j1*g2+k1*k2+l1*o2;_p[11]=i1*d2+j1*h2+k1*l2+l1*p2;_p[12]=m1*a2+n1*e2+o1*i2+p1*m2;_p[13]=m1*b2+n1*f2+o1*j2+p1*n2;_p[14]=m1*c2+n1*g2+o1*k2+p1*o2;_p[15]=m1*d2+n1*h2+o1*l2+p1*p2;this._identityCalculated=false;return this;}function isIdentity(){if(!this._identityCalculated){this._identity=!(this.props[0]!==1||this.props[1]!==0||this.props[2]!==0||this.props[3]!==0||this.props[4]!==0||this.props[5]!==1||this.props[6]!==0||this.props[7]!==0||this.props[8]!==0||this.props[9]!==0||this.props[10]!==1||this.props[11]!==0||this.props[12]!==0||this.props[13]!==0||this.props[14]!==0||this.props[15]!==1);this._identityCalculated=true;}return this._identity;}function equals(matr){var i=0;while(i<16){if(matr.props[i]!==this.props[i]){return false;}i+=1;}return true;}function clone(matr){var i;for(i=0;i<16;i+=1){matr.props[i]=this.props[i];}}function cloneFromProps(props){var i;for(i=0;i<16;i+=1){this.props[i]=props[i];}}function applyToPoint(x,y,z){return{x:x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12],y:x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13],z:x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14]};/*return {
         x: x * me.a + y * me.c + me.e,
         y: x * me.b + y * me.d + me.f
         };*/}function applyToX(x,y,z){return x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12];}function applyToY(x,y,z){return x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13];}function applyToZ(x,y,z){return x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14];}function getInverseMatrix(){var determinant=this.props[0]*this.props[5]-this.props[1]*this.props[4];var a=this.props[5]/determinant;var b=-this.props[1]/determinant;var c=-this.props[4]/determinant;var d=this.props[0]/determinant;var e=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/determinant;var f=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/determinant;var inverseMatrix=new Matrix();inverseMatrix.props[0]=a;inverseMatrix.props[1]=b;inverseMatrix.props[4]=c;inverseMatrix.props[5]=d;inverseMatrix.props[12]=e;inverseMatrix.props[13]=f;return inverseMatrix;}function inversePoint(pt){var inverseMatrix=this.getInverseMatrix();return inverseMatrix.applyToPointArray(pt[0],pt[1],pt[2]||0);}function inversePoints(pts){var i,len=pts.length,retPts=[];for(i=0;i<len;i+=1){retPts[i]=inversePoint(pts[i]);}return retPts;}function applyToTriplePoints(pt1,pt2,pt3){var arr=createTypedArray('float32',6);if(this.isIdentity()){arr[0]=pt1[0];arr[1]=pt1[1];arr[2]=pt2[0];arr[3]=pt2[1];arr[4]=pt3[0];arr[5]=pt3[1];}else{var p0=this.props[0],p1=this.props[1],p4=this.props[4],p5=this.props[5],p12=this.props[12],p13=this.props[13];arr[0]=pt1[0]*p0+pt1[1]*p4+p12;arr[1]=pt1[0]*p1+pt1[1]*p5+p13;arr[2]=pt2[0]*p0+pt2[1]*p4+p12;arr[3]=pt2[0]*p1+pt2[1]*p5+p13;arr[4]=pt3[0]*p0+pt3[1]*p4+p12;arr[5]=pt3[0]*p1+pt3[1]*p5+p13;}return arr;}function applyToPointArray(x,y,z){var arr;if(this.isIdentity()){arr=[x,y,z];}else{arr=[x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12],x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13],x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14]];}return arr;}function applyToPointStringified(x,y){if(this.isIdentity()){return x+','+y;}var _p=this.props;return Math.round((x*_p[0]+y*_p[4]+_p[12])*100)/100+','+Math.round((x*_p[1]+y*_p[5]+_p[13])*100)/100;}function toCSS(){//Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
/*if(this.isIdentity()) {
            return '';
        }*/var i=0;var props=this.props;var cssValue='matrix3d(';var v=10000;while(i<16){cssValue+=_rnd(props[i]*v)/v;cssValue+=i===15?')':',';i+=1;}return cssValue;}function roundMatrixProperty(val){var v=10000;if(val<0.000001&&val>0||val>-0.000001&&val<0){return _rnd(val*v)/v;}return val;}function to2dCSS(){//Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
/*if(this.isIdentity()) {
            return '';
        }*/var props=this.props;var _a=roundMatrixProperty(props[0]);var _b=roundMatrixProperty(props[1]);var _c=roundMatrixProperty(props[4]);var _d=roundMatrixProperty(props[5]);var _e=roundMatrixProperty(props[12]);var _f=roundMatrixProperty(props[13]);return"matrix("+_a+','+_b+','+_c+','+_d+','+_e+','+_f+")";}return function(){this.reset=reset;this.rotate=rotate;this.rotateX=rotateX;this.rotateY=rotateY;this.rotateZ=rotateZ;this.skew=skew;this.skewFromAxis=skewFromAxis;this.shear=shear;this.scale=scale;this.setTransform=setTransform;this.translate=translate;this.transform=transform;this.applyToPoint=applyToPoint;this.applyToX=applyToX;this.applyToY=applyToY;this.applyToZ=applyToZ;this.applyToPointArray=applyToPointArray;this.applyToTriplePoints=applyToTriplePoints;this.applyToPointStringified=applyToPointStringified;this.toCSS=toCSS;this.to2dCSS=to2dCSS;this.clone=clone;this.cloneFromProps=cloneFromProps;this.equals=equals;this.inversePoints=inversePoints;this.inversePoint=inversePoint;this.getInverseMatrix=getInverseMatrix;this._t=this.transform;this.isIdentity=isIdentity;this._identity=true;this._identityCalculated=false;this.props=createTypedArray('float32',16);this.reset();};}();/*
 Copyright 2014 David Bau.

 Permission is hereby granted, free of charge, to any person obtaining
 a copy of this software and associated documentation files (the
 "Software"), to deal in the Software without restriction, including
 without limitation the rights to use, copy, modify, merge, publish,
 distribute, sublicense, and/or sell copies of the Software, and to
 permit persons to whom the Software is furnished to do so, subject to
 the following conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 */(function(pool,math){//
// The following constants are related to IEEE 754 limits.
//
var global=this,width=256,// each RC4 output is 0 <= x < 256
chunks=6,// at least six RC4 outputs for each double
digits=52,// there are 52 significant digits in a double
rngname='random',// rngname: name for Math.random and Math.seedrandom
startdenom=math.pow(width,chunks),significance=math.pow(2,digits),overflow=significance*2,mask=width-1,nodecrypto;// node.js crypto module, initialized at the bottom.
//
// seedrandom()
// This is the seedrandom function described above.
//
function seedrandom(seed,options,callback){var key=[];options=options===true?{entropy:true}:options||{};// Flatten the seed string or build one from local entropy if needed.
var shortseed=mixkey(flatten(options.entropy?[seed,tostring(pool)]:seed===null?autoseed():seed,3),key);// Use the seed to initialize an ARC4 generator.
var arc4=new ARC4(key);// This function returns a random double in [0, 1) that contains
// randomness in every bit of the mantissa of the IEEE 754 value.
var prng=function prng(){var n=arc4.g(chunks),// Start with a numerator n < 2 ^ 48
d=startdenom,//   and denominator d = 2 ^ 48.
x=0;//   and no 'extra last byte'.
while(n<significance){// Fill up all significant digits by
n=(n+x)*width;//   shifting numerator and
d*=width;//   denominator and generating a
x=arc4.g(1);//   new least-significant-byte.
}while(n>=overflow){// To avoid rounding up, before adding
n/=2;//   last byte, shift everything
d/=2;//   right using integer math until
x>>>=1;//   we have exactly the desired bits.
}return(n+x)/d;// Form the number within [0, 1).
};prng.int32=function(){return arc4.g(4)|0;};prng.quick=function(){return arc4.g(4)/0x100000000;};prng.double=prng;// Mix the randomness into accumulated entropy.
mixkey(tostring(arc4.S),pool);// Calling convention: what to return as a function of prng, seed, is_math.
return(options.pass||callback||function(prng,seed,is_math_call,state){if(state){// Load the arc4 state from the given state if it has an S array.
if(state.S){copy(state,arc4);}// Only provide the .state method if requested via options.state.
prng.state=function(){return copy(arc4,{});};}// If called as a method of Math (Math.seedrandom()), mutate
// Math.random because that is how seedrandom.js has worked since v1.0.
if(is_math_call){math[rngname]=prng;return seed;}// Otherwise, it is a newer calling convention, so return the
// prng directly.
else return prng;})(prng,shortseed,'global'in options?options.global:this==math,options.state);}math['seed'+rngname]=seedrandom;//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
function ARC4(key){var t,keylen=key.length,me=this,i=0,j=me.i=me.j=0,s=me.S=[];// The empty key [] is treated as [0].
if(!keylen){key=[keylen++];}// Set up S using the standard key scheduling algorithm.
while(i<width){s[i]=i++;}for(i=0;i<width;i++){s[i]=s[j=mask&j+key[i%keylen]+(t=s[i])];s[j]=t;}// The "g" method returns the next (count) outputs as one number.
me.g=function(count){// Using instance members instead of closure state nearly doubles speed.
var t,r=0,i=me.i,j=me.j,s=me.S;while(count--){t=s[i=mask&i+1];r=r*width+s[mask&(s[i]=s[j=mask&j+t])+(s[j]=t)];}me.i=i;me.j=j;return r;// For robust unpredictability, the function call below automatically
// discards an initial batch of values.  This is called RC4-drop[256].
// See http://google.com/search?q=rsa+fluhrer+response&btnI
};}//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
function copy(f,t){t.i=f.i;t.j=f.j;t.S=f.S.slice();return t;}//
// flatten()
// Converts an object tree to nested arrays of strings.
//
function flatten(obj,depth){var result=[],typ=typeof obj,prop;if(depth&&typ=='object'){for(prop in obj){try{result.push(flatten(obj[prop],depth-1));}catch(e){}}}return result.length?result:typ=='string'?obj:obj+'\0';}//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function mixkey(seed,key){var stringseed=seed+'',smear,j=0;while(j<stringseed.length){key[mask&j]=mask&(smear^=key[mask&j]*19)+stringseed.charCodeAt(j++);}return tostring(key);}//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
function autoseed(){try{if(nodecrypto){return tostring(nodecrypto.randomBytes(width));}var out=new Uint8Array(width);(global.crypto||global.msCrypto).getRandomValues(out);return tostring(out);}catch(e){var browser=global.navigator,plugins=browser&&browser.plugins;return[+new Date(),global,plugins,global.screen,tostring(pool)];}}//
// tostring()
// Converts an array of charcodes to a string
//
function tostring(a){return String.fromCharCode.apply(0,a);}//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(),pool);//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//
// End anonymous scope, and pass initial values.
})([],// pool: entropy pool starts empty
BMMath// math: package containing random, pow, and seedrandom
);var BezierFactory=function(){/**
     * BezierEasing - use bezier curve for transition easing function
     * by Gaëtan Renaudeau 2014 - 2015 – MIT License
     *
     * Credits: is based on Firefox's nsSMILKeySpline.cpp
     * Usage:
     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
     * spline.get(x) => returns the easing value | x must be in [0, 1] range
     *
     */var ob={};ob.getBezierEasing=getBezierEasing;var beziers={};function getBezierEasing(a,b,c,d,nm){var str=nm||('bez_'+a+'_'+b+'_'+c+'_'+d).replace(/\./g,'p');if(beziers[str]){return beziers[str];}var bezEasing=new BezierEasing([a,b,c,d]);beziers[str]=bezEasing;return bezEasing;}// These values are established by empiricism with tests (tradeoff: performance VS precision)
var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var float32ArraySupported=typeof Float32Array==="function";function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}function C(aA1){return 3.0*aA1;}// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
function calcBezier(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
function getSlope(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}function binarySubdivide(aX,aA,aB,mX1,mX2){var currentX,currentT,i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0)return aGuessT;var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}/**
     * points is an array of [ mX1, mY1, mX2, mY2 ]
     */function BezierEasing(points){this._p=points;this._mSampleValues=float32ArraySupported?new Float32Array(kSplineTableSize):new Array(kSplineTableSize);this._precomputed=false;this.get=this.get.bind(this);}BezierEasing.prototype={get:function get(x){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];if(!this._precomputed)this._precompute();if(mX1===mY1&&mX2===mY2)return x;// linear
// Because JavaScript number are imprecise, we should guarantee the extremes are right.
if(x===0)return 0;if(x===1)return 1;return calcBezier(this._getTForX(x),mY1,mY2);},// Private part
_precompute:function _precompute(){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];this._precomputed=true;if(mX1!==mY1||mX2!==mY2)this._calcSampleValues();},_calcSampleValues:function _calcSampleValues(){var mX1=this._p[0],mX2=this._p[2];for(var i=0;i<kSplineTableSize;++i){this._mSampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}},/**
         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
         */_getTForX:function _getTForX(aX){var mX1=this._p[0],mX2=this._p[2],mSampleValues=this._mSampleValues;var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&mSampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;// Interpolate to provide an initial guess for t
var dist=(aX-mSampleValues[currentSample])/(mSampleValues[currentSample+1]-mSampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}};return ob;}();(function(){var lastTime=0;var vendors=['ms','moz','webkit','o'];for(var x=0;x<vendors.length&&!window.requestAnimationFrame;++x){window.requestAnimationFrame=window[vendors[x]+'RequestAnimationFrame'];window.cancelAnimationFrame=window[vendors[x]+'CancelAnimationFrame']||window[vendors[x]+'CancelRequestAnimationFrame'];}if(!window.requestAnimationFrame)window.requestAnimationFrame=function(callback,element){var currTime=new Date().getTime();var timeToCall=Math.max(0,16-(currTime-lastTime));var id=setTimeout(function(){callback(currTime+timeToCall);},timeToCall);lastTime=currTime+timeToCall;return id;};if(!window.cancelAnimationFrame)window.cancelAnimationFrame=function(id){clearTimeout(id);};})();function extendPrototype(sources,destination){var i,len=sources.length,sourcePrototype;for(i=0;i<len;i+=1){sourcePrototype=sources[i].prototype;for(var attr in sourcePrototype){if(sourcePrototype.hasOwnProperty(attr))destination.prototype[attr]=sourcePrototype[attr];}}}function getDescriptor(object,prop){return Object.getOwnPropertyDescriptor(object,prop);}function createProxyFunction(prototype){function ProxyFunction(){}ProxyFunction.prototype=prototype;return ProxyFunction;}function bezFunction(){var easingFunctions=[];var math=Math;function pointOnLine2D(x1,y1,x2,y2,x3,y3){var det1=x1*y2+y1*x3+x2*y3-x3*y2-y3*x1-x2*y1;return det1>-0.001&&det1<0.001;}function pointOnLine3D(x1,y1,z1,x2,y2,z2,x3,y3,z3){if(z1===0&&z2===0&&z3===0){return pointOnLine2D(x1,y1,x2,y2,x3,y3);}var dist1=Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2)+Math.pow(z2-z1,2));var dist2=Math.sqrt(Math.pow(x3-x1,2)+Math.pow(y3-y1,2)+Math.pow(z3-z1,2));var dist3=Math.sqrt(Math.pow(x3-x2,2)+Math.pow(y3-y2,2)+Math.pow(z3-z2,2));var diffDist;if(dist1>dist2){if(dist1>dist3){diffDist=dist1-dist2-dist3;}else{diffDist=dist3-dist2-dist1;}}else if(dist3>dist2){diffDist=dist3-dist2-dist1;}else{diffDist=dist2-dist1-dist3;}return diffDist>-0.0001&&diffDist<0.0001;}var getBezierLength=function(){return function(pt1,pt2,pt3,pt4){var curveSegments=defaultCurveSegments;var k;var i,len;var ptCoord,perc,addedLength=0;var ptDistance;var point=[],lastPoint=[];var lengthData=bezier_length_pool.newElement();len=pt3.length;for(k=0;k<curveSegments;k+=1){perc=k/(curveSegments-1);ptDistance=0;for(i=0;i<len;i+=1){ptCoord=bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];point[i]=ptCoord;if(lastPoint[i]!==null){ptDistance+=bm_pow(point[i]-lastPoint[i],2);}lastPoint[i]=point[i];}if(ptDistance){ptDistance=bm_sqrt(ptDistance);addedLength+=ptDistance;}lengthData.percents[k]=perc;lengthData.lengths[k]=addedLength;}lengthData.addedLength=addedLength;return lengthData;};}();function getSegmentsLength(shapeData){var segmentsLength=segments_length_pool.newElement();var closed=shapeData.c;var pathV=shapeData.v;var pathO=shapeData.o;var pathI=shapeData.i;var i,len=shapeData._length;var lengths=segmentsLength.lengths;var totalLength=0;for(i=0;i<len-1;i+=1){lengths[i]=getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);totalLength+=lengths[i].addedLength;}if(closed&&len){lengths[i]=getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);totalLength+=lengths[i].addedLength;}segmentsLength.totalLength=totalLength;return segmentsLength;}function BezierData(length){this.segmentLength=0;this.points=new Array(length);}function PointData(partial,point){this.partialLength=partial;this.point=point;}var buildBezierData=function(){var storedData={};return function(pt1,pt2,pt3,pt4){var bezierName=(pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\./g,'p');if(!storedData[bezierName]){var curveSegments=defaultCurveSegments;var k,i,len;var ptCoord,perc,addedLength=0;var ptDistance;var point,lastPoint=null;if(pt1.length===2&&(pt1[0]!=pt2[0]||pt1[1]!=pt2[1])&&pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1])&&pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){curveSegments=2;}var bezierData=new BezierData(curveSegments);len=pt3.length;for(k=0;k<curveSegments;k+=1){point=createSizedArray(len);perc=k/(curveSegments-1);ptDistance=0;for(i=0;i<len;i+=1){ptCoord=bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i]+pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i]+pt4[i])+bm_pow(perc,3)*pt2[i];point[i]=ptCoord;if(lastPoint!==null){ptDistance+=bm_pow(point[i]-lastPoint[i],2);}}ptDistance=bm_sqrt(ptDistance);addedLength+=ptDistance;bezierData.points[k]=new PointData(ptDistance,point);lastPoint=point;}bezierData.segmentLength=addedLength;storedData[bezierName]=bezierData;}return storedData[bezierName];};}();function getDistancePerc(perc,bezierData){var percents=bezierData.percents;var lengths=bezierData.lengths;var len=percents.length;var initPos=bm_floor((len-1)*perc);var lengthPos=perc*bezierData.addedLength;var lPerc=0;if(initPos===len-1||initPos===0||lengthPos===lengths[initPos]){return percents[initPos];}else{var dir=lengths[initPos]>lengthPos?-1:1;var flag=true;while(flag){if(lengths[initPos]<=lengthPos&&lengths[initPos+1]>lengthPos){lPerc=(lengthPos-lengths[initPos])/(lengths[initPos+1]-lengths[initPos]);flag=false;}else{initPos+=dir;}if(initPos<0||initPos>=len-1){//FIX for TypedArrays that don't store floating point values with enough accuracy
if(initPos===len-1){return percents[initPos];}flag=false;}}return percents[initPos]+(percents[initPos+1]-percents[initPos])*lPerc;}}function getPointInSegment(pt1,pt2,pt3,pt4,percent,bezierData){var t1=getDistancePerc(percent,bezierData);var u0=1;var u1=1-t1;var ptX=Math.round((u1*u1*u1*pt1[0]+(t1*u1*u1+u1*t1*u1+u1*u1*t1)*pt3[0]+(t1*t1*u1+u1*t1*t1+t1*u1*t1)*pt4[0]+t1*t1*t1*pt2[0])*1000)/1000;var ptY=Math.round((u1*u1*u1*pt1[1]+(t1*u1*u1+u1*t1*u1+u1*u1*t1)*pt3[1]+(t1*t1*u1+u1*t1*t1+t1*u1*t1)*pt4[1]+t1*t1*t1*pt2[1])*1000)/1000;return[ptX,ptY];}function getSegmentArray(){}var bezier_segment_points=createTypedArray('float32',8);function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc,bezierData){startPerc=startPerc<0?0:startPerc>1?1:startPerc;var t0=getDistancePerc(startPerc,bezierData);endPerc=endPerc>1?1:endPerc;var t1=getDistancePerc(endPerc,bezierData);var i,len=pt1.length;var u0=1-t0;var u1=1-t1;var u0u0u0=u0*u0*u0;var t0u0u0_3=t0*u0*u0*3;var t0t0u0_3=t0*t0*u0*3;var t0t0t0=t0*t0*t0;//
var u0u0u1=u0*u0*u1;var t0u0u1_3=t0*u0*u1+u0*t0*u1+u0*u0*t1;var t0t0u1_3=t0*t0*u1+u0*t0*t1+t0*u0*t1;var t0t0t1=t0*t0*t1;//
var u0u1u1=u0*u1*u1;var t0u1u1_3=t0*u1*u1+u0*t1*u1+u0*u1*t1;var t0t1u1_3=t0*t1*u1+u0*t1*t1+t0*u1*t1;var t0t1t1=t0*t1*t1;//
var u1u1u1=u1*u1*u1;var t1u1u1_3=t1*u1*u1+u1*t1*u1+u1*u1*t1;var t1t1u1_3=t1*t1*u1+u1*t1*t1+t1*u1*t1;var t1t1t1=t1*t1*t1;for(i=0;i<len;i+=1){bezier_segment_points[i*4]=Math.round((u0u0u0*pt1[i]+t0u0u0_3*pt3[i]+t0t0u0_3*pt4[i]+t0t0t0*pt2[i])*1000)/1000;bezier_segment_points[i*4+1]=Math.round((u0u0u1*pt1[i]+t0u0u1_3*pt3[i]+t0t0u1_3*pt4[i]+t0t0t1*pt2[i])*1000)/1000;bezier_segment_points[i*4+2]=Math.round((u0u1u1*pt1[i]+t0u1u1_3*pt3[i]+t0t1u1_3*pt4[i]+t0t1t1*pt2[i])*1000)/1000;bezier_segment_points[i*4+3]=Math.round((u1u1u1*pt1[i]+t1u1u1_3*pt3[i]+t1t1u1_3*pt4[i]+t1t1t1*pt2[i])*1000)/1000;}return bezier_segment_points;}return{getSegmentsLength:getSegmentsLength,getNewSegment:getNewSegment,getPointInSegment:getPointInSegment,buildBezierData:buildBezierData,pointOnLine2D:pointOnLine2D,pointOnLine3D:pointOnLine3D};}var bez=bezFunction();function dataFunctionManager(){//var tCanvasHelper = createTag('canvas').getContext('2d');
function completeLayers(layers,comps,fontManager){var layerData;var animArray,lastFrame;var i,len=layers.length;var j,jLen,k,kLen;for(i=0;i<len;i+=1){layerData=layers[i];if(!('ks'in layerData)||layerData.completed){continue;}layerData.completed=true;if(layerData.tt){layers[i-1].td=layerData.tt;}animArray=[];lastFrame=-1;if(layerData.hasMask){var maskProps=layerData.masksProperties;jLen=maskProps.length;for(j=0;j<jLen;j+=1){if(maskProps[j].pt.k.i){convertPathsToAbsoluteValues(maskProps[j].pt.k);}else{kLen=maskProps[j].pt.k.length;for(k=0;k<kLen;k+=1){if(maskProps[j].pt.k[k].s){convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);}if(maskProps[j].pt.k[k].e){convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);}}}}}if(layerData.ty===0){layerData.layers=findCompLayers(layerData.refId,comps);completeLayers(layerData.layers,comps,fontManager);}else if(layerData.ty===4){completeShapes(layerData.shapes);}else if(layerData.ty==5){completeText(layerData,fontManager);}}}function findCompLayers(id,comps){var i=0,len=comps.length;while(i<len){if(comps[i].id===id){if(!comps[i].layers.__used){comps[i].layers.__used=true;return comps[i].layers;}return JSON.parse(JSON.stringify(comps[i].layers));}i+=1;}}function completeShapes(arr){var i,len=arr.length;var j,jLen;var hasPaths=false;for(i=len-1;i>=0;i-=1){if(arr[i].ty=='sh'){if(arr[i].ks.k.i){convertPathsToAbsoluteValues(arr[i].ks.k);}else{jLen=arr[i].ks.k.length;for(j=0;j<jLen;j+=1){if(arr[i].ks.k[j].s){convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);}if(arr[i].ks.k[j].e){convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);}}}hasPaths=true;}else if(arr[i].ty=='gr'){completeShapes(arr[i].it);}}/*if(hasPaths){
            //mx: distance
            //ss: sensitivity
            //dc: decay
            arr.splice(arr.length-1,0,{
                "ty": "ms",
                "mx":20,
                "ss":10,
                 "dc":0.001,
                "maxDist":200
            });
        }*/}function convertPathsToAbsoluteValues(path){var i,len=path.i.length;for(i=0;i<len;i+=1){path.i[i][0]+=path.v[i][0];path.i[i][1]+=path.v[i][1];path.o[i][0]+=path.v[i][0];path.o[i][1]+=path.v[i][1];}}function checkVersion(minimum,animVersionString){var animVersion=animVersionString?animVersionString.split('.'):[100,100,100];if(minimum[0]>animVersion[0]){return true;}else if(animVersion[0]>minimum[0]){return false;}if(minimum[1]>animVersion[1]){return true;}else if(animVersion[1]>minimum[1]){return false;}if(minimum[2]>animVersion[2]){return true;}else if(animVersion[2]>minimum[2]){return false;}}var checkText=function(){var minimumVersion=[4,4,14];function updateTextLayer(textLayer){var documentData=textLayer.t.d;textLayer.t.d={k:[{s:documentData,t:0}]};}function iterateLayers(layers){var i,len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===5){updateTextLayer(layers[i]);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i,len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkChars=function(){var minimumVersion=[4,7,99];return function(animationData){if(animationData.chars&&!checkVersion(minimumVersion,animationData.v)){var i,len=animationData.chars.length,j,jLen,k,kLen;var pathData,paths;for(i=0;i<len;i+=1){if(animationData.chars[i].data&&animationData.chars[i].data.shapes){paths=animationData.chars[i].data.shapes[0].it;jLen=paths.length;for(j=0;j<jLen;j+=1){pathData=paths[j].ks.k;if(!pathData.__converted){convertPathsToAbsoluteValues(paths[j].ks.k);pathData.__converted=true;}}}}}};}();var checkColors=function(){var minimumVersion=[4,1,9];function iterateShapes(shapes){var i,len=shapes.length;var j,jLen;for(i=0;i<len;i+=1){if(shapes[i].ty==='gr'){iterateShapes(shapes[i].it);}else if(shapes[i].ty==='fl'||shapes[i].ty==='st'){if(shapes[i].c.k&&shapes[i].c.k[0].i){jLen=shapes[i].c.k.length;for(j=0;j<jLen;j+=1){if(shapes[i].c.k[j].s){shapes[i].c.k[j].s[0]/=255;shapes[i].c.k[j].s[1]/=255;shapes[i].c.k[j].s[2]/=255;shapes[i].c.k[j].s[3]/=255;}if(shapes[i].c.k[j].e){shapes[i].c.k[j].e[0]/=255;shapes[i].c.k[j].e[1]/=255;shapes[i].c.k[j].e[2]/=255;shapes[i].c.k[j].e[3]/=255;}}}else{shapes[i].c.k[0]/=255;shapes[i].c.k[1]/=255;shapes[i].c.k[2]/=255;shapes[i].c.k[3]/=255;}}}}function iterateLayers(layers){var i,len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===4){iterateShapes(layers[i].shapes);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i,len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkShapes=function(){var minimumVersion=[4,4,18];function completeShapes(arr){var i,len=arr.length;var j,jLen;var hasPaths=false;for(i=len-1;i>=0;i-=1){if(arr[i].ty=='sh'){if(arr[i].ks.k.i){arr[i].ks.k.c=arr[i].closed;}else{jLen=arr[i].ks.k.length;for(j=0;j<jLen;j+=1){if(arr[i].ks.k[j].s){arr[i].ks.k[j].s[0].c=arr[i].closed;}if(arr[i].ks.k[j].e){arr[i].ks.k[j].e[0].c=arr[i].closed;}}}hasPaths=true;}else if(arr[i].ty=='gr'){completeShapes(arr[i].it);}}}function iterateLayers(layers){var layerData;var i,len=layers.length;var j,jLen,k,kLen;for(i=0;i<len;i+=1){layerData=layers[i];if(layerData.hasMask){var maskProps=layerData.masksProperties;jLen=maskProps.length;for(j=0;j<jLen;j+=1){if(maskProps[j].pt.k.i){maskProps[j].pt.k.c=maskProps[j].cl;}else{kLen=maskProps[j].pt.k.length;for(k=0;k<kLen;k+=1){if(maskProps[j].pt.k[k].s){maskProps[j].pt.k[k].s[0].c=maskProps[j].cl;}if(maskProps[j].pt.k[k].e){maskProps[j].pt.k[k].e[0].c=maskProps[j].cl;}}}}}if(layerData.ty===4){completeShapes(layerData.shapes);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i,len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();function completeData(animationData,fontManager){if(animationData.__complete){return;}checkColors(animationData);checkText(animationData);checkChars(animationData);checkShapes(animationData);completeLayers(animationData.layers,animationData.assets,fontManager);animationData.__complete=true;//blitAnimation(animationData, animationData.assets, fontManager);
}function completeText(data,fontManager){if(data.t.a.length===0&&!('m'in data.t.p)){data.singleShape=true;}}var moduleOb={};moduleOb.completeData=completeData;moduleOb.checkColors=checkColors;moduleOb.checkChars=checkChars;moduleOb.checkShapes=checkShapes;moduleOb.completeLayers=completeLayers;return moduleOb;}var dataManager=dataFunctionManager();var FontManager=function(){var maxWaitingTime=5000;var emptyChar={w:0,size:0,shapes:[]};var combinedCharacters=[];//Hindi characters
combinedCharacters=combinedCharacters.concat([2304,2305,2306,2307,2362,2363,2364,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2387,2388,2389,2390,2391,2402,2403]);function setUpNode(font,family){var parentNode=createTag('span');parentNode.style.fontFamily=family;var node=createTag('span');// Characters that vary significantly among different fonts
node.innerHTML='giItT1WQy@!-/#';// Visible - so we can measure it - but not on the screen
parentNode.style.position='absolute';parentNode.style.left='-10000px';parentNode.style.top='-10000px';// Large font size makes even subtle changes obvious
parentNode.style.fontSize='300px';// Reset any font properties
parentNode.style.fontVariant='normal';parentNode.style.fontStyle='normal';parentNode.style.fontWeight='normal';parentNode.style.letterSpacing='0';parentNode.appendChild(node);document.body.appendChild(parentNode);// Remember width with no applied web font
var width=node.offsetWidth;node.style.fontFamily=font+', '+family;return{node:node,w:width,parent:parentNode};}function checkLoadedFonts(){var i,len=this.fonts.length;var node,w;var loadedCount=len;for(i=0;i<len;i+=1){if(this.fonts[i].loaded){loadedCount-=1;continue;}if(this.fonts[i].fOrigin==='n'||this.fonts[i].origin===0){this.fonts[i].loaded=true;}else{node=this.fonts[i].monoCase.node;w=this.fonts[i].monoCase.w;if(node.offsetWidth!==w){loadedCount-=1;this.fonts[i].loaded=true;}else{node=this.fonts[i].sansCase.node;w=this.fonts[i].sansCase.w;if(node.offsetWidth!==w){loadedCount-=1;this.fonts[i].loaded=true;}}if(this.fonts[i].loaded){this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);}}}if(loadedCount!==0&&Date.now()-this.initTime<maxWaitingTime){setTimeout(this.checkLoadedFonts.bind(this),20);}else{setTimeout(function(){this.isLoaded=true;}.bind(this),0);}}function createHelper(def,fontData){var tHelper=createNS('text');tHelper.style.fontSize='100px';//tHelper.style.fontFamily = fontData.fFamily;
tHelper.setAttribute('font-family',fontData.fFamily);tHelper.setAttribute('font-style',fontData.fStyle);tHelper.setAttribute('font-weight',fontData.fWeight);tHelper.textContent='1';if(fontData.fClass){tHelper.style.fontFamily='inherit';tHelper.setAttribute('class',fontData.fClass);}else{tHelper.style.fontFamily=fontData.fFamily;}def.appendChild(tHelper);var tCanvasHelper=createTag('canvas').getContext('2d');tCanvasHelper.font=fontData.fWeight+' '+fontData.fStyle+' 100px '+fontData.fFamily;//tCanvasHelper.font = ' 100px '+ fontData.fFamily;
return tHelper;}function addFonts(fontData,defs){if(!fontData){this.isLoaded=true;return;}if(this.chars){this.isLoaded=true;this.fonts=fontData.list;return;}var fontArr=fontData.list;var i,len=fontArr.length;var _pendingFonts=len;for(i=0;i<len;i+=1){var shouldLoadFont=true;var loadedSelector;var j;fontArr[i].loaded=false;fontArr[i].monoCase=setUpNode(fontArr[i].fFamily,'monospace');fontArr[i].sansCase=setUpNode(fontArr[i].fFamily,'sans-serif');if(!fontArr[i].fPath){fontArr[i].loaded=true;_pendingFonts-=1;}else if(fontArr[i].fOrigin==='p'||fontArr[i].origin===3){loadedSelector=document.querySelectorAll('style[f-forigin="p"][f-family="'+fontArr[i].fFamily+'"], style[f-origin="3"][f-family="'+fontArr[i].fFamily+'"]');if(loadedSelector.length>0){shouldLoadFont=false;}if(shouldLoadFont){var s=createTag('style');s.setAttribute('f-forigin',fontArr[i].fOrigin);s.setAttribute('f-origin',fontArr[i].origin);s.setAttribute('f-family',fontArr[i].fFamily);s.type="text/css";s.innerHTML="@font-face {"+"font-family: "+fontArr[i].fFamily+"; font-style: normal; src: url('"+fontArr[i].fPath+"');}";defs.appendChild(s);}}else if(fontArr[i].fOrigin==='g'||fontArr[i].origin===1){loadedSelector=document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');for(j=0;j<loadedSelector.length;j++){if(loadedSelector[j].href.indexOf(fontArr[i].fPath)!==-1){// Font is already loaded
shouldLoadFont=false;}}if(shouldLoadFont){var l=createTag('link');l.setAttribute('f-forigin',fontArr[i].fOrigin);l.setAttribute('f-origin',fontArr[i].origin);l.type="text/css";l.rel="stylesheet";l.href=fontArr[i].fPath;document.body.appendChild(l);}}else if(fontArr[i].fOrigin==='t'||fontArr[i].origin===2){loadedSelector=document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');for(j=0;j<loadedSelector.length;j++){if(fontArr[i].fPath===loadedSelector[j].src){// Font is already loaded
shouldLoadFont=false;}}if(shouldLoadFont){var sc=createTag('link');sc.setAttribute('f-forigin',fontArr[i].fOrigin);sc.setAttribute('f-origin',fontArr[i].origin);sc.setAttribute('rel','stylesheet');sc.setAttribute('href',fontArr[i].fPath);defs.appendChild(sc);}}fontArr[i].helper=createHelper(defs,fontArr[i]);fontArr[i].cache={};this.fonts.push(fontArr[i]);}if(_pendingFonts===0){this.isLoaded=true;}else{//On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
//Adding this timeout seems to fix it
setTimeout(this.checkLoadedFonts.bind(this),100);}}function addChars(chars){if(!chars){return;}if(!this.chars){this.chars=[];}var i,len=chars.length;var j,jLen=this.chars.length,found;for(i=0;i<len;i+=1){j=0;found=false;while(j<jLen){if(this.chars[j].style===chars[i].style&&this.chars[j].fFamily===chars[i].fFamily&&this.chars[j].ch===chars[i].ch){found=true;}j+=1;}if(!found){this.chars.push(chars[i]);jLen+=1;}}}function getCharData(char,style,font){var i=0,len=this.chars.length;while(i<len){if(this.chars[i].ch===char&&this.chars[i].style===style&&this.chars[i].fFamily===font){return this.chars[i];}i+=1;}if((typeof char==='string'&&char.charCodeAt(0)!==13||!char)&&console&&console.warn){console.warn('Missing character from exported characters list: ',char,style,font);}return emptyChar;}function measureText(char,fontName,size){var fontData=this.getFontByName(fontName);var index=char.charCodeAt(0);if(!fontData.cache[index+1]){var tHelper=fontData.helper;//Canvas version
//fontData.cache[index] = tHelper.measureText(char).width / 100;
//SVG version
//console.log(tHelper.getBBox().width)
if(char===' '){tHelper.textContent='|'+char+'|';var doubleSize=tHelper.getComputedTextLength();tHelper.textContent='||';var singleSize=tHelper.getComputedTextLength();fontData.cache[index+1]=(doubleSize-singleSize)/100;}else{tHelper.textContent=char;fontData.cache[index+1]=tHelper.getComputedTextLength()/100;}}return fontData.cache[index+1]*size;}function getFontByName(name){var i=0,len=this.fonts.length;while(i<len){if(this.fonts[i].fName===name){return this.fonts[i];}i+=1;}return this.fonts[0];}function getCombinedCharacterCodes(){return combinedCharacters;}function loaded(){return this.isLoaded;}var Font=function Font(){this.fonts=[];this.chars=null;this.typekitLoaded=0;this.isLoaded=false;this.initTime=Date.now();};//TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. 
Font.getCombinedCharacterCodes=getCombinedCharacterCodes;Font.prototype.addChars=addChars;Font.prototype.addFonts=addFonts;Font.prototype.getCharData=getCharData;Font.prototype.getFontByName=getFontByName;Font.prototype.measureText=measureText;Font.prototype.checkLoadedFonts=checkLoadedFonts;Font.prototype.loaded=loaded;return Font;}();var PropertyFactory=function(){var initFrame=initialDefaultFrame;var math_abs=Math.abs;function interpolateValue(frameNum,caching){var offsetTime=this.offsetTime;var newValue;if(this.propType==='multidimensional'){newValue=createTypedArray('float32',this.pv.length);}var iterationIndex=caching.lastIndex;var i=iterationIndex;var len=this.keyframes.length-1,flag=true;var keyData,nextKeyData;while(flag){keyData=this.keyframes[i];nextKeyData=this.keyframes[i+1];if(i===len-1&&frameNum>=nextKeyData.t-offsetTime){if(keyData.h){keyData=nextKeyData;}iterationIndex=0;break;}if(nextKeyData.t-offsetTime>frameNum){iterationIndex=i;break;}if(i<len-1){i+=1;}else{iterationIndex=0;flag=false;}}var k,kLen,perc,jLen,j,fnc;var nextKeyTime=nextKeyData.t-offsetTime;var keyTime=keyData.t-offsetTime;var endValue;if(keyData.to){if(!keyData.bezierData){keyData.bezierData=bez.buildBezierData(keyData.s,nextKeyData.s||keyData.e,keyData.to,keyData.ti);}var bezierData=keyData.bezierData;if(frameNum>=nextKeyTime||frameNum<keyTime){var ind=frameNum>=nextKeyTime?bezierData.points.length-1:0;kLen=bezierData.points[ind].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[ind].point[k];}// caching._lastKeyframeIndex = -1;
}else{if(keyData.__fnct){fnc=keyData.__fnct;}else{fnc=BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;keyData.__fnct=fnc;}perc=fnc((frameNum-keyTime)/(nextKeyTime-keyTime));var distanceInLine=bezierData.segmentLength*perc;var segmentPerc;var addedLength=caching.lastFrame<frameNum&&caching._lastKeyframeIndex===i?caching._lastAddedLength:0;j=caching.lastFrame<frameNum&&caching._lastKeyframeIndex===i?caching._lastPoint:0;flag=true;jLen=bezierData.points.length;while(flag){addedLength+=bezierData.points[j].partialLength;if(distanceInLine===0||perc===0||j===bezierData.points.length-1){kLen=bezierData.points[j].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[j].point[k];}break;}else if(distanceInLine>=addedLength&&distanceInLine<addedLength+bezierData.points[j+1].partialLength){segmentPerc=(distanceInLine-addedLength)/bezierData.points[j+1].partialLength;kLen=bezierData.points[j].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[j].point[k]+(bezierData.points[j+1].point[k]-bezierData.points[j].point[k])*segmentPerc;}break;}if(j<jLen-1){j+=1;}else{flag=false;}}caching._lastPoint=j;caching._lastAddedLength=addedLength-bezierData.points[j].partialLength;caching._lastKeyframeIndex=i;}}else{var outX,outY,inX,inY,keyValue;len=keyData.s.length;endValue=nextKeyData.s||keyData.e;if(this.sh&&keyData.h!==1){if(frameNum>=nextKeyTime){newValue[0]=endValue[0];newValue[1]=endValue[1];newValue[2]=endValue[2];}else if(frameNum<=keyTime){newValue[0]=keyData.s[0];newValue[1]=keyData.s[1];newValue[2]=keyData.s[2];}else{var quatStart=createQuaternion(keyData.s);var quatEnd=createQuaternion(endValue);var time=(frameNum-keyTime)/(nextKeyTime-keyTime);quaternionToEuler(newValue,slerp(quatStart,quatEnd,time));}}else{for(i=0;i<len;i+=1){if(keyData.h!==1){if(frameNum>=nextKeyTime){perc=1;}else if(frameNum<keyTime){perc=0;}else{if(keyData.o.x.constructor===Array){if(!keyData.__fnct){keyData.__fnct=[];}if(!keyData.__fnct[i]){outX=typeof keyData.o.x[i]==='undefined'?keyData.o.x[0]:keyData.o.x[i];outY=typeof keyData.o.y[i]==='undefined'?keyData.o.y[0]:keyData.o.y[i];inX=typeof keyData.i.x[i]==='undefined'?keyData.i.x[0]:keyData.i.x[i];inY=typeof keyData.i.y[i]==='undefined'?keyData.i.y[0]:keyData.i.y[i];fnc=BezierFactory.getBezierEasing(outX,outY,inX,inY).get;keyData.__fnct[i]=fnc;}else{fnc=keyData.__fnct[i];}}else{if(!keyData.__fnct){outX=keyData.o.x;outY=keyData.o.y;inX=keyData.i.x;inY=keyData.i.y;fnc=BezierFactory.getBezierEasing(outX,outY,inX,inY).get;keyData.__fnct=fnc;}else{fnc=keyData.__fnct;}}perc=fnc((frameNum-keyTime)/(nextKeyTime-keyTime));}}endValue=nextKeyData.s||keyData.e;keyValue=keyData.h===1?keyData.s[i]:keyData.s[i]+(endValue[i]-keyData.s[i])*perc;if(this.propType==='multidimensional'){newValue[i]=keyValue;}else{newValue=keyValue;}}}}caching.lastIndex=iterationIndex;return newValue;}//based on @Toji's https://github.com/toji/gl-matrix/
function slerp(a,b,t){var out=[];var ax=a[0],ay=a[1],az=a[2],aw=a[3],bx=b[0],by=b[1],bz=b[2],bw=b[3];var omega,cosom,sinom,scale0,scale1;cosom=ax*bx+ay*by+az*bz+aw*bw;if(cosom<0.0){cosom=-cosom;bx=-bx;by=-by;bz=-bz;bw=-bw;}if(1.0-cosom>0.000001){omega=Math.acos(cosom);sinom=Math.sin(omega);scale0=Math.sin((1.0-t)*omega)/sinom;scale1=Math.sin(t*omega)/sinom;}else{scale0=1.0-t;scale1=t;}out[0]=scale0*ax+scale1*bx;out[1]=scale0*ay+scale1*by;out[2]=scale0*az+scale1*bz;out[3]=scale0*aw+scale1*bw;return out;}function quaternionToEuler(out,quat){var qx=quat[0];var qy=quat[1];var qz=quat[2];var qw=quat[3];var heading=Math.atan2(2*qy*qw-2*qx*qz,1-2*qy*qy-2*qz*qz);var attitude=Math.asin(2*qx*qy+2*qz*qw);var bank=Math.atan2(2*qx*qw-2*qy*qz,1-2*qx*qx-2*qz*qz);out[0]=heading/degToRads;out[1]=attitude/degToRads;out[2]=bank/degToRads;}function createQuaternion(values){var heading=values[0]*degToRads;var attitude=values[1]*degToRads;var bank=values[2]*degToRads;var c1=Math.cos(heading/2);var c2=Math.cos(attitude/2);var c3=Math.cos(bank/2);var s1=Math.sin(heading/2);var s2=Math.sin(attitude/2);var s3=Math.sin(bank/2);var w=c1*c2*c3-s1*s2*s3;var x=s1*s2*c3+c1*c2*s3;var y=s1*c2*c3+c1*s2*s3;var z=c1*s2*c3-s1*c2*s3;return[x,y,z,w];}function getValueAtCurrentTime(){var frameNum=this.comp.renderedFrame-this.offsetTime;var initTime=this.keyframes[0].t-this.offsetTime;var endTime=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(frameNum===this._caching.lastFrame||this._caching.lastFrame!==initFrame&&(this._caching.lastFrame>=endTime&&frameNum>=endTime||this._caching.lastFrame<initTime&&frameNum<initTime))){if(this._caching.lastFrame>=frameNum){this._caching._lastKeyframeIndex=-1;this._caching.lastIndex=0;}var renderResult=this.interpolateValue(frameNum,this._caching);this.pv=renderResult;}this._caching.lastFrame=frameNum;return this.pv;}function setVValue(val){var multipliedValue;if(this.propType==='unidimensional'){multipliedValue=val*this.mult;if(math_abs(this.v-multipliedValue)>0.00001){this.v=multipliedValue;this._mdf=true;}}else{var i=0,len=this.v.length;while(i<len){multipliedValue=val[i]*this.mult;if(math_abs(this.v[i]-multipliedValue)>0.00001){this.v[i]=multipliedValue;this._mdf=true;}i+=1;}}}function processEffectsSequence(){if(this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length){return;}if(this.lock){this.setVValue(this.pv);return;}this.lock=true;this._mdf=this._isFirstFrame;var multipliedValue;var i,len=this.effectsSequence.length;var finalValue=this.kf?this.pv:this.data.k;for(i=0;i<len;i+=1){finalValue=this.effectsSequence[i](finalValue);}this.setVValue(finalValue);this._isFirstFrame=false;this.lock=false;this.frameId=this.elem.globalData.frameId;}function addEffect(effectFunction){this.effectsSequence.push(effectFunction);this.container.addDynamicProperty(this);}function ValueProperty(elem,data,mult,container){this.propType='unidimensional';this.mult=mult||1;this.data=data;this.v=mult?data.k*mult:data.k;this.pv=data.k;this._mdf=false;this.elem=elem;this.container=container;this.comp=elem.comp;this.k=false;this.kf=false;this.vel=0;this.effectsSequence=[];this._isFirstFrame=true;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.addEffect=addEffect;}function MultiDimensionalProperty(elem,data,mult,container){this.propType='multidimensional';this.mult=mult||1;this.data=data;this._mdf=false;this.elem=elem;this.container=container;this.comp=elem.comp;this.k=false;this.kf=false;this.frameId=-1;var i,len=data.k.length;this.v=createTypedArray('float32',len);this.pv=createTypedArray('float32',len);var arr=createTypedArray('float32',len);this.vel=createTypedArray('float32',len);for(i=0;i<len;i+=1){this.v[i]=data.k[i]*this.mult;this.pv[i]=data.k[i];}this._isFirstFrame=true;this.effectsSequence=[];this.getValue=processEffectsSequence;this.setVValue=setVValue;this.addEffect=addEffect;}function KeyframedValueProperty(elem,data,mult,container){this.propType='unidimensional';this.keyframes=data.k;this.offsetTime=elem.data.st;this.frameId=-1;this._caching={lastFrame:initFrame,lastIndex:0,value:0,_lastKeyframeIndex:-1};this.k=true;this.kf=true;this.data=data;this.mult=mult||1;this.elem=elem;this.container=container;this.comp=elem.comp;this.v=initFrame;this.pv=initFrame;this._isFirstFrame=true;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.interpolateValue=interpolateValue;this.effectsSequence=[getValueAtCurrentTime.bind(this)];this.addEffect=addEffect;}function KeyframedMultidimensionalProperty(elem,data,mult,container){this.propType='multidimensional';var i,len=data.k.length;var s,e,to,ti;for(i=0;i<len-1;i+=1){if(data.k[i].to&&data.k[i].s&&data.k[i+1]&&data.k[i+1].s){s=data.k[i].s;e=data.k[i+1].s;to=data.k[i].to;ti=data.k[i].ti;if(s.length===2&&!(s[0]===e[0]&&s[1]===e[1])&&bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0]+to[0],s[1]+to[1])&&bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0]+ti[0],e[1]+ti[1])||s.length===3&&!(s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])&&bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0]+to[0],s[1]+to[1],s[2]+to[2])&&bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0]+ti[0],e[1]+ti[1],e[2]+ti[2])){data.k[i].to=null;data.k[i].ti=null;}if(s[0]===e[0]&&s[1]===e[1]&&to[0]===0&&to[1]===0&&ti[0]===0&&ti[1]===0){if(s.length===2||s[2]===e[2]&&to[2]===0&&ti[2]===0){data.k[i].to=null;data.k[i].ti=null;}}}}this.effectsSequence=[getValueAtCurrentTime.bind(this)];this.keyframes=data.k;this.offsetTime=elem.data.st;this.k=true;this.kf=true;this._isFirstFrame=true;this.mult=mult||1;this.elem=elem;this.container=container;this.comp=elem.comp;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.interpolateValue=interpolateValue;this.frameId=-1;var arrLen=data.k[0].s.length;this.v=createTypedArray('float32',arrLen);this.pv=createTypedArray('float32',arrLen);for(i=0;i<arrLen;i+=1){this.v[i]=initFrame;this.pv[i]=initFrame;}this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32',arrLen)};this.addEffect=addEffect;}function getProp(elem,data,type,mult,container){var p;if(!data.k.length){p=new ValueProperty(elem,data,mult,container);}else if(typeof data.k[0]==='number'){p=new MultiDimensionalProperty(elem,data,mult,container);}else{switch(type){case 0:p=new KeyframedValueProperty(elem,data,mult,container);break;case 1:p=new KeyframedMultidimensionalProperty(elem,data,mult,container);break;}}if(p.effectsSequence.length){container.addDynamicProperty(p);}return p;}var ob={getProp:getProp};return ob;}();var TransformPropertyFactory=function(){var defaultVector=[0,0];function applyToMatrix(mat){var _mdf=this._mdf;this.iterateDynamicProperties();this._mdf=this._mdf||_mdf;if(this.a){mat.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);}if(this.s){mat.scale(this.s.v[0],this.s.v[1],this.s.v[2]);}if(this.sk){mat.skewFromAxis(-this.sk.v,this.sa.v);}if(this.r){mat.rotate(-this.r.v);}else{mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);}if(this.data.p.s){if(this.data.p.z){mat.translate(this.px.v,this.py.v,-this.pz.v);}else{mat.translate(this.px.v,this.py.v,0);}}else{mat.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}}function processKeys(forceRender){if(this.elem.globalData.frameId===this.frameId){return;}if(this._isDirty){this.precalculateMatrix();this._isDirty=false;}this.iterateDynamicProperties();if(this._mdf||forceRender){this.v.cloneFromProps(this.pre.props);if(this.appliedTransformations<1){this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);}if(this.appliedTransformations<2){this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);}if(this.sk&&this.appliedTransformations<3){this.v.skewFromAxis(-this.sk.v,this.sa.v);}if(this.r&&this.appliedTransformations<4){this.v.rotate(-this.r.v);}else if(!this.r&&this.appliedTransformations<4){this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);}if(this.autoOriented){var v1,v2,frameRate=this.elem.globalData.frameRate;if(this.p&&this.p.keyframes&&this.p.getValueAtTime){if(this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t){v1=this.p.getValueAtTime((this.p.keyframes[0].t+0.01)/frameRate,0);v2=this.p.getValueAtTime(this.p.keyframes[0].t/frameRate,0);}else if(this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t){v1=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/frameRate,0);v2=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-0.05)/frameRate,0);}else{v1=this.p.pv;v2=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-0.01)/frameRate,this.p.offsetTime);}}else if(this.px&&this.px.keyframes&&this.py.keyframes&&this.px.getValueAtTime&&this.py.getValueAtTime){v1=[];v2=[];var px=this.px,py=this.py,frameRate;if(px._caching.lastFrame+px.offsetTime<=px.keyframes[0].t){v1[0]=px.getValueAtTime((px.keyframes[0].t+0.01)/frameRate,0);v1[1]=py.getValueAtTime((py.keyframes[0].t+0.01)/frameRate,0);v2[0]=px.getValueAtTime(px.keyframes[0].t/frameRate,0);v2[1]=py.getValueAtTime(py.keyframes[0].t/frameRate,0);}else if(px._caching.lastFrame+px.offsetTime>=px.keyframes[px.keyframes.length-1].t){v1[0]=px.getValueAtTime(px.keyframes[px.keyframes.length-1].t/frameRate,0);v1[1]=py.getValueAtTime(py.keyframes[py.keyframes.length-1].t/frameRate,0);v2[0]=px.getValueAtTime((px.keyframes[px.keyframes.length-1].t-0.01)/frameRate,0);v2[1]=py.getValueAtTime((py.keyframes[py.keyframes.length-1].t-0.01)/frameRate,0);}else{v1=[px.pv,py.pv];v2[0]=px.getValueAtTime((px._caching.lastFrame+px.offsetTime-0.01)/frameRate,px.offsetTime);v2[1]=py.getValueAtTime((py._caching.lastFrame+py.offsetTime-0.01)/frameRate,py.offsetTime);}}else{v1=v2=defaultVector;}this.v.rotate(-Math.atan2(v1[1]-v2[1],v1[0]-v2[0]));}if(this.data.p&&this.data.p.s){if(this.data.p.z){this.v.translate(this.px.v,this.py.v,-this.pz.v);}else{this.v.translate(this.px.v,this.py.v,0);}}else{this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}}this.frameId=this.elem.globalData.frameId;}function precalculateMatrix(){if(!this.a.k){this.pre.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);this.appliedTransformations=1;}else{return;}if(!this.s.effectsSequence.length){this.pre.scale(this.s.v[0],this.s.v[1],this.s.v[2]);this.appliedTransformations=2;}else{return;}if(this.sk){if(!this.sk.effectsSequence.length&&!this.sa.effectsSequence.length){this.pre.skewFromAxis(-this.sk.v,this.sa.v);this.appliedTransformations=3;}else{return;}}if(this.r){if(!this.r.effectsSequence.length){this.pre.rotate(-this.r.v);this.appliedTransformations=4;}else{return;}}else if(!this.rz.effectsSequence.length&&!this.ry.effectsSequence.length&&!this.rx.effectsSequence.length&&!this.or.effectsSequence.length){this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);this.appliedTransformations=4;}}function autoOrient(){//
//var prevP = this.getValueAtTime();
}function addDynamicProperty(prop){this._addDynamicProperty(prop);this.elem.addDynamicProperty(prop);this._isDirty=true;}function TransformProperty(elem,data,container){this.elem=elem;this.frameId=-1;this.propType='transform';this.data=data;this.v=new Matrix();//Precalculated matrix with non animated properties
this.pre=new Matrix();this.appliedTransformations=0;this.initDynamicPropertyContainer(container||elem);if(data.p&&data.p.s){this.px=PropertyFactory.getProp(elem,data.p.x,0,0,this);this.py=PropertyFactory.getProp(elem,data.p.y,0,0,this);if(data.p.z){this.pz=PropertyFactory.getProp(elem,data.p.z,0,0,this);}}else{this.p=PropertyFactory.getProp(elem,data.p||{k:[0,0,0]},1,0,this);}if(data.rx){this.rx=PropertyFactory.getProp(elem,data.rx,0,degToRads,this);this.ry=PropertyFactory.getProp(elem,data.ry,0,degToRads,this);this.rz=PropertyFactory.getProp(elem,data.rz,0,degToRads,this);if(data.or.k[0].ti){var i,len=data.or.k.length;for(i=0;i<len;i+=1){data.or.k[i].to=data.or.k[i].ti=null;}}this.or=PropertyFactory.getProp(elem,data.or,1,degToRads,this);//sh Indicates it needs to be capped between -180 and 180
this.or.sh=true;}else{this.r=PropertyFactory.getProp(elem,data.r||{k:0},0,degToRads,this);}if(data.sk){this.sk=PropertyFactory.getProp(elem,data.sk,0,degToRads,this);this.sa=PropertyFactory.getProp(elem,data.sa,0,degToRads,this);}this.a=PropertyFactory.getProp(elem,data.a||{k:[0,0,0]},1,0,this);this.s=PropertyFactory.getProp(elem,data.s||{k:[100,100,100]},1,0.01,this);// Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
if(data.o){this.o=PropertyFactory.getProp(elem,data.o,0,0.01,elem);}else{this.o={_mdf:false,v:1};}this._isDirty=true;if(!this.dynamicProperties.length){this.getValue(true);}}TransformProperty.prototype={applyToMatrix:applyToMatrix,getValue:processKeys,precalculateMatrix:precalculateMatrix,autoOrient:autoOrient};extendPrototype([DynamicPropertyContainer],TransformProperty);TransformProperty.prototype.addDynamicProperty=addDynamicProperty;TransformProperty.prototype._addDynamicProperty=DynamicPropertyContainer.prototype.addDynamicProperty;function getTransformProperty(elem,data,container){return new TransformProperty(elem,data,container);}return{getTransformProperty:getTransformProperty};}();function ShapePath(){this.c=false;this._length=0;this._maxLength=8;this.v=createSizedArray(this._maxLength);this.o=createSizedArray(this._maxLength);this.i=createSizedArray(this._maxLength);}ShapePath.prototype.setPathData=function(closed,len){this.c=closed;this.setLength(len);var i=0;while(i<len){this.v[i]=point_pool.newElement();this.o[i]=point_pool.newElement();this.i[i]=point_pool.newElement();i+=1;}};ShapePath.prototype.setLength=function(len){while(this._maxLength<len){this.doubleArrayLength();}this._length=len;};ShapePath.prototype.doubleArrayLength=function(){this.v=this.v.concat(createSizedArray(this._maxLength));this.i=this.i.concat(createSizedArray(this._maxLength));this.o=this.o.concat(createSizedArray(this._maxLength));this._maxLength*=2;};ShapePath.prototype.setXYAt=function(x,y,type,pos,replace){var arr;this._length=Math.max(this._length,pos+1);if(this._length>=this._maxLength){this.doubleArrayLength();}switch(type){case'v':arr=this.v;break;case'i':arr=this.i;break;case'o':arr=this.o;break;}if(!arr[pos]||arr[pos]&&!replace){arr[pos]=point_pool.newElement();}arr[pos][0]=x;arr[pos][1]=y;};ShapePath.prototype.setTripleAt=function(vX,vY,oX,oY,iX,iY,pos,replace){this.setXYAt(vX,vY,'v',pos,replace);this.setXYAt(oX,oY,'o',pos,replace);this.setXYAt(iX,iY,'i',pos,replace);};ShapePath.prototype.reverse=function(){var newPath=new ShapePath();newPath.setPathData(this.c,this._length);var vertices=this.v,outPoints=this.o,inPoints=this.i;var init=0;if(this.c){newPath.setTripleAt(vertices[0][0],vertices[0][1],inPoints[0][0],inPoints[0][1],outPoints[0][0],outPoints[0][1],0,false);init=1;}var cnt=this._length-1;var len=this._length;var i;for(i=init;i<len;i+=1){newPath.setTripleAt(vertices[cnt][0],vertices[cnt][1],inPoints[cnt][0],inPoints[cnt][1],outPoints[cnt][0],outPoints[cnt][1],i,false);cnt-=1;}return newPath;};var ShapePropertyFactory=function(){var initFrame=-999999;function interpolateShape(frameNum,previousValue,caching){var iterationIndex=caching.lastIndex;var keyPropS,keyPropE,isHold,j,k,jLen,kLen,perc,vertexValue;var kf=this.keyframes;if(frameNum<kf[0].t-this.offsetTime){keyPropS=kf[0].s[0];isHold=true;iterationIndex=0;}else if(frameNum>=kf[kf.length-1].t-this.offsetTime){keyPropS=kf[kf.length-1].s?kf[kf.length-1].s[0]:kf[kf.length-2].e[0];/*if(kf[kf.length - 1].s){
                keyPropS = kf[kf.length - 1].s[0];
            }else{
                keyPropS = kf[kf.length - 2].e[0];
            }*/isHold=true;}else{var i=iterationIndex;var len=kf.length-1,flag=true,keyData,nextKeyData;while(flag){keyData=kf[i];nextKeyData=kf[i+1];if(nextKeyData.t-this.offsetTime>frameNum){break;}if(i<len-1){i+=1;}else{flag=false;}}isHold=keyData.h===1;iterationIndex=i;if(!isHold){if(frameNum>=nextKeyData.t-this.offsetTime){perc=1;}else if(frameNum<keyData.t-this.offsetTime){perc=0;}else{var fnc;if(keyData.__fnct){fnc=keyData.__fnct;}else{fnc=BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;keyData.__fnct=fnc;}perc=fnc((frameNum-(keyData.t-this.offsetTime))/(nextKeyData.t-this.offsetTime-(keyData.t-this.offsetTime)));}keyPropE=nextKeyData.s?nextKeyData.s[0]:keyData.e[0];}keyPropS=keyData.s[0];}jLen=previousValue._length;kLen=keyPropS.i[0].length;caching.lastIndex=iterationIndex;for(j=0;j<jLen;j+=1){for(k=0;k<kLen;k+=1){vertexValue=isHold?keyPropS.i[j][k]:keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;previousValue.i[j][k]=vertexValue;vertexValue=isHold?keyPropS.o[j][k]:keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;previousValue.o[j][k]=vertexValue;vertexValue=isHold?keyPropS.v[j][k]:keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;previousValue.v[j][k]=vertexValue;}}}function interpolateShapeCurrentTime(){var frameNum=this.comp.renderedFrame-this.offsetTime;var initTime=this.keyframes[0].t-this.offsetTime;var endTime=this.keyframes[this.keyframes.length-1].t-this.offsetTime;var lastFrame=this._caching.lastFrame;if(!(lastFrame!==initFrame&&(lastFrame<initTime&&frameNum<initTime||lastFrame>endTime&&frameNum>endTime))){////
this._caching.lastIndex=lastFrame<frameNum?this._caching.lastIndex:0;this.interpolateShape(frameNum,this.pv,this._caching);////
}this._caching.lastFrame=frameNum;return this.pv;}function resetShape(){this.paths=this.localShapeCollection;}function shapesEqual(shape1,shape2){if(shape1._length!==shape2._length||shape1.c!==shape2.c){return false;}var i,len=shape1._length;for(i=0;i<len;i+=1){if(shape1.v[i][0]!==shape2.v[i][0]||shape1.v[i][1]!==shape2.v[i][1]||shape1.o[i][0]!==shape2.o[i][0]||shape1.o[i][1]!==shape2.o[i][1]||shape1.i[i][0]!==shape2.i[i][0]||shape1.i[i][1]!==shape2.i[i][1]){return false;}}return true;}function setVValue(newPath){if(!shapesEqual(this.v,newPath)){this.v=shape_pool.clone(newPath);this.localShapeCollection.releaseShapes();this.localShapeCollection.addShape(this.v);this._mdf=true;this.paths=this.localShapeCollection;}}function processEffectsSequence(){if(this.elem.globalData.frameId===this.frameId){return;}else if(!this.effectsSequence.length){this._mdf=false;return;}if(this.lock){this.setVValue(this.pv);return;}this.lock=true;this._mdf=false;var finalValue=this.kf?this.pv:this.data.ks?this.data.ks.k:this.data.pt.k;var i,len=this.effectsSequence.length;for(i=0;i<len;i+=1){finalValue=this.effectsSequence[i](finalValue);}this.setVValue(finalValue);this.lock=false;this.frameId=this.elem.globalData.frameId;};function ShapeProperty(elem,data,type){this.propType='shape';this.comp=elem.comp;this.container=elem;this.elem=elem;this.data=data;this.k=false;this.kf=false;this._mdf=false;var pathData=type===3?data.pt.k:data.ks.k;this.v=shape_pool.clone(pathData);this.pv=shape_pool.clone(this.v);this.localShapeCollection=shapeCollection_pool.newShapeCollection();this.paths=this.localShapeCollection;this.paths.addShape(this.v);this.reset=resetShape;this.effectsSequence=[];}function addEffect(effectFunction){this.effectsSequence.push(effectFunction);this.container.addDynamicProperty(this);}ShapeProperty.prototype.interpolateShape=interpolateShape;ShapeProperty.prototype.getValue=processEffectsSequence;ShapeProperty.prototype.setVValue=setVValue;ShapeProperty.prototype.addEffect=addEffect;function KeyframedShapeProperty(elem,data,type){this.propType='shape';this.comp=elem.comp;this.elem=elem;this.container=elem;this.offsetTime=elem.data.st;this.keyframes=type===3?data.pt.k:data.ks.k;this.k=true;this.kf=true;var i,len=this.keyframes[0].s[0].i.length;var jLen=this.keyframes[0].s[0].i[0].length;this.v=shape_pool.newElement();this.v.setPathData(this.keyframes[0].s[0].c,len);this.pv=shape_pool.clone(this.v);this.localShapeCollection=shapeCollection_pool.newShapeCollection();this.paths=this.localShapeCollection;this.paths.addShape(this.v);this.lastFrame=initFrame;this.reset=resetShape;this._caching={lastFrame:initFrame,lastIndex:0};this.effectsSequence=[interpolateShapeCurrentTime.bind(this)];}KeyframedShapeProperty.prototype.getValue=processEffectsSequence;KeyframedShapeProperty.prototype.interpolateShape=interpolateShape;KeyframedShapeProperty.prototype.setVValue=setVValue;KeyframedShapeProperty.prototype.addEffect=addEffect;var EllShapeProperty=function(){var cPoint=roundCorner;function EllShapeProperty(elem,data){/*this.v = {
                v: createSizedArray(4),
                i: createSizedArray(4),
                o: createSizedArray(4),
                c: true
            };*/this.v=shape_pool.newElement();this.v.setPathData(true,4);this.localShapeCollection=shapeCollection_pool.newShapeCollection();this.paths=this.localShapeCollection;this.localShapeCollection.addShape(this.v);this.d=data.d;this.elem=elem;this.comp=elem.comp;this.frameId=-1;this.initDynamicPropertyContainer(elem);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.s=PropertyFactory.getProp(elem,data.s,1,0,this);if(this.dynamicProperties.length){this.k=true;}else{this.k=false;this.convertEllToPath();}};EllShapeProperty.prototype={reset:resetShape,getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertEllToPath();}},convertEllToPath:function convertEllToPath(){var p0=this.p.v[0],p1=this.p.v[1],s0=this.s.v[0]/2,s1=this.s.v[1]/2;var _cw=this.d!==3;var _v=this.v;_v.v[0][0]=p0;_v.v[0][1]=p1-s1;_v.v[1][0]=_cw?p0+s0:p0-s0;_v.v[1][1]=p1;_v.v[2][0]=p0;_v.v[2][1]=p1+s1;_v.v[3][0]=_cw?p0-s0:p0+s0;_v.v[3][1]=p1;_v.i[0][0]=_cw?p0-s0*cPoint:p0+s0*cPoint;_v.i[0][1]=p1-s1;_v.i[1][0]=_cw?p0+s0:p0-s0;_v.i[1][1]=p1-s1*cPoint;_v.i[2][0]=_cw?p0+s0*cPoint:p0-s0*cPoint;_v.i[2][1]=p1+s1;_v.i[3][0]=_cw?p0-s0:p0+s0;_v.i[3][1]=p1+s1*cPoint;_v.o[0][0]=_cw?p0+s0*cPoint:p0-s0*cPoint;_v.o[0][1]=p1-s1;_v.o[1][0]=_cw?p0+s0:p0-s0;_v.o[1][1]=p1+s1*cPoint;_v.o[2][0]=_cw?p0-s0*cPoint:p0+s0*cPoint;_v.o[2][1]=p1+s1;_v.o[3][0]=_cw?p0-s0:p0+s0;_v.o[3][1]=p1-s1*cPoint;}};extendPrototype([DynamicPropertyContainer],EllShapeProperty);return EllShapeProperty;}();var StarShapeProperty=function(){function StarShapeProperty(elem,data){this.v=shape_pool.newElement();this.v.setPathData(true,0);this.elem=elem;this.comp=elem.comp;this.data=data;this.frameId=-1;this.d=data.d;this.initDynamicPropertyContainer(elem);if(data.sy===1){this.ir=PropertyFactory.getProp(elem,data.ir,0,0,this);this.is=PropertyFactory.getProp(elem,data.is,0,0.01,this);this.convertToPath=this.convertStarToPath;}else{this.convertToPath=this.convertPolygonToPath;}this.pt=PropertyFactory.getProp(elem,data.pt,0,0,this);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.r=PropertyFactory.getProp(elem,data.r,0,degToRads,this);this.or=PropertyFactory.getProp(elem,data.or,0,0,this);this.os=PropertyFactory.getProp(elem,data.os,0,0.01,this);this.localShapeCollection=shapeCollection_pool.newShapeCollection();this.localShapeCollection.addShape(this.v);this.paths=this.localShapeCollection;if(this.dynamicProperties.length){this.k=true;}else{this.k=false;this.convertToPath();}};StarShapeProperty.prototype={reset:resetShape,getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertToPath();}},convertStarToPath:function convertStarToPath(){var numPts=Math.floor(this.pt.v)*2;var angle=Math.PI*2/numPts;/*this.v.v.length = numPts;
                this.v.i.length = numPts;
                this.v.o.length = numPts;*/var longFlag=true;var longRad=this.or.v;var shortRad=this.ir.v;var longRound=this.os.v;var shortRound=this.is.v;var longPerimSegment=2*Math.PI*longRad/(numPts*2);var shortPerimSegment=2*Math.PI*shortRad/(numPts*2);var i,rad,roundness,perimSegment,currentAng=-Math.PI/2;currentAng+=this.r.v;var dir=this.data.d===3?-1:1;this.v._length=0;for(i=0;i<numPts;i+=1){rad=longFlag?longRad:shortRad;roundness=longFlag?longRound:shortRound;perimSegment=longFlag?longPerimSegment:shortPerimSegment;var x=rad*Math.cos(currentAng);var y=rad*Math.sin(currentAng);var ox=x===0&&y===0?0:y/Math.sqrt(x*x+y*y);var oy=x===0&&y===0?0:-x/Math.sqrt(x*x+y*y);x+=+this.p.v[0];y+=+this.p.v[1];this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir,i,true);/*this.v.v[i] = [x,y];
                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
                    this.v._length = numPts;*/longFlag=!longFlag;currentAng+=angle*dir;}},convertPolygonToPath:function convertPolygonToPath(){var numPts=Math.floor(this.pt.v);var angle=Math.PI*2/numPts;var rad=this.or.v;var roundness=this.os.v;var perimSegment=2*Math.PI*rad/(numPts*4);var i,currentAng=-Math.PI/2;var dir=this.data.d===3?-1:1;currentAng+=this.r.v;this.v._length=0;for(i=0;i<numPts;i+=1){var x=rad*Math.cos(currentAng);var y=rad*Math.sin(currentAng);var ox=x===0&&y===0?0:y/Math.sqrt(x*x+y*y);var oy=x===0&&y===0?0:-x/Math.sqrt(x*x+y*y);x+=+this.p.v[0];y+=+this.p.v[1];this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir,i,true);currentAng+=angle*dir;}this.paths.length=0;this.paths[0]=this.v;}};extendPrototype([DynamicPropertyContainer],StarShapeProperty);return StarShapeProperty;}();var RectShapeProperty=function(){function RectShapeProperty(elem,data){this.v=shape_pool.newElement();this.v.c=true;this.localShapeCollection=shapeCollection_pool.newShapeCollection();this.localShapeCollection.addShape(this.v);this.paths=this.localShapeCollection;this.elem=elem;this.comp=elem.comp;this.frameId=-1;this.d=data.d;this.initDynamicPropertyContainer(elem);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.s=PropertyFactory.getProp(elem,data.s,1,0,this);this.r=PropertyFactory.getProp(elem,data.r,0,0,this);if(this.dynamicProperties.length){this.k=true;}else{this.k=false;this.convertRectToPath();}};RectShapeProperty.prototype={convertRectToPath:function convertRectToPath(){var p0=this.p.v[0],p1=this.p.v[1],v0=this.s.v[0]/2,v1=this.s.v[1]/2;var round=bm_min(v0,v1,this.r.v);var cPoint=round*(1-roundCorner);this.v._length=0;if(this.d===2||this.d===1){this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,0,true);this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,p0+v0,p1+v1-round,1,true);if(round!==0){this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2,true);this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3,true);this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4,true);this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5,true);this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6,true);this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7,true);}else{this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);}}else{this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0,true);if(round!==0){this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1,true);this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2,true);this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3,true);this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4,true);this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5,true);this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6,true);this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7,true);}else{this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1,true);this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2,true);this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3,true);}}},getValue:function getValue(frameNum){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertRectToPath();}},reset:resetShape};extendPrototype([DynamicPropertyContainer],RectShapeProperty);return RectShapeProperty;}();function getShapeProp(elem,data,type){var prop;if(type===3||type===4){var dataProp=type===3?data.pt:data.ks;var keys=dataProp.k;if(keys.length){prop=new KeyframedShapeProperty(elem,data,type);}else{prop=new ShapeProperty(elem,data,type);}}else if(type===5){prop=new RectShapeProperty(elem,data);}else if(type===6){prop=new EllShapeProperty(elem,data);}else if(type===7){prop=new StarShapeProperty(elem,data);}if(prop.k){elem.addDynamicProperty(prop);}return prop;}function getConstructorFunction(){return ShapeProperty;}function getKeyframedConstructorFunction(){return KeyframedShapeProperty;}var ob={};ob.getShapeProp=getShapeProp;ob.getConstructorFunction=getConstructorFunction;ob.getKeyframedConstructorFunction=getKeyframedConstructorFunction;return ob;}();var ShapeModifiers=function(){var ob={};var modifiers={};ob.registerModifier=registerModifier;ob.getModifier=getModifier;function registerModifier(nm,factory){if(!modifiers[nm]){modifiers[nm]=factory;}}function getModifier(nm,elem,data){return new modifiers[nm](elem,data);}return ob;}();function ShapeModifier(){}ShapeModifier.prototype.initModifierProperties=function(){};ShapeModifier.prototype.addShapeToModifier=function(){};ShapeModifier.prototype.addShape=function(data){if(!this.closed){// Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
data.sh.container.addDynamicProperty(data.sh);var shapeData={shape:data.sh,data:data,localShapeCollection:shapeCollection_pool.newShapeCollection()};this.shapes.push(shapeData);this.addShapeToModifier(shapeData);if(this._isAnimated){data.setAsAnimated();}}};ShapeModifier.prototype.init=function(elem,data){this.shapes=[];this.elem=elem;this.initDynamicPropertyContainer(elem);this.initModifierProperties(elem,data);this.frameId=initialDefaultFrame;this.closed=false;this.k=false;if(this.dynamicProperties.length){this.k=true;}else{this.getValue(true);}};ShapeModifier.prototype.processKeys=function(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();};extendPrototype([DynamicPropertyContainer],ShapeModifier);function TrimModifier(){}extendPrototype([ShapeModifier],TrimModifier);TrimModifier.prototype.initModifierProperties=function(elem,data){this.s=PropertyFactory.getProp(elem,data.s,0,0.01,this);this.e=PropertyFactory.getProp(elem,data.e,0,0.01,this);this.o=PropertyFactory.getProp(elem,data.o,0,0,this);this.sValue=0;this.eValue=0;this.getValue=this.processKeys;this.m=data.m;this._isAnimated=!!this.s.effectsSequence.length||!!this.e.effectsSequence.length||!!this.o.effectsSequence.length;};TrimModifier.prototype.addShapeToModifier=function(shapeData){shapeData.pathsData=[];};TrimModifier.prototype.calculateShapeEdges=function(s,e,shapeLength,addedLength,totalModifierLength){var segments=[];if(e<=1){segments.push({s:s,e:e});}else if(s>=1){segments.push({s:s-1,e:e-1});}else{segments.push({s:s,e:1});segments.push({s:0,e:e-1});}var shapeSegments=[];var i,len=segments.length,segmentOb;for(i=0;i<len;i+=1){segmentOb=segments[i];if(segmentOb.e*totalModifierLength<addedLength||segmentOb.s*totalModifierLength>addedLength+shapeLength){}else{var shapeS,shapeE;if(segmentOb.s*totalModifierLength<=addedLength){shapeS=0;}else{shapeS=(segmentOb.s*totalModifierLength-addedLength)/shapeLength;}if(segmentOb.e*totalModifierLength>=addedLength+shapeLength){shapeE=1;}else{shapeE=(segmentOb.e*totalModifierLength-addedLength)/shapeLength;}shapeSegments.push([shapeS,shapeE]);}}if(!shapeSegments.length){shapeSegments.push([0,0]);}return shapeSegments;};TrimModifier.prototype.releasePathsData=function(pathsData){var i,len=pathsData.length;for(i=0;i<len;i+=1){segments_length_pool.release(pathsData[i]);}pathsData.length=0;return pathsData;};TrimModifier.prototype.processShapes=function(_isFirstFrame){var s,e;if(this._mdf||_isFirstFrame){var o=this.o.v%360/360;if(o<0){o+=1;}s=(this.s.v>1?1:this.s.v<0?0:this.s.v)+o;e=(this.e.v>1?1:this.e.v<0?0:this.e.v)+o;if(s===e){}if(s>e){var _s=s;s=e;e=_s;}s=Math.round(s*10000)*0.0001;e=Math.round(e*10000)*0.0001;this.sValue=s;this.eValue=e;}else{s=this.sValue;e=this.eValue;}var shapePaths;var i,len=this.shapes.length,j,jLen;var pathsData,pathData,totalShapeLength,totalModifierLength=0;if(e===s){for(i=0;i<len;i+=1){this.shapes[i].localShapeCollection.releaseShapes();this.shapes[i].shape._mdf=true;this.shapes[i].shape.paths=this.shapes[i].localShapeCollection;}}else if(!(e===1&&s===0||e===0&&s===1)){var segments=[],shapeData,localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];// if shape hasn't changed and trim properties haven't changed, cached previous path can be used
if(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame&&this.m!==2){shapeData.shape.paths=shapeData.localShapeCollection;}else{shapePaths=shapeData.shape.paths;jLen=shapePaths._length;totalShapeLength=0;if(!shapeData.shape._mdf&&shapeData.pathsData.length){totalShapeLength=shapeData.totalShapeLength;}else{pathsData=this.releasePathsData(shapeData.pathsData);for(j=0;j<jLen;j+=1){pathData=bez.getSegmentsLength(shapePaths.shapes[j]);pathsData.push(pathData);totalShapeLength+=pathData.totalLength;}shapeData.totalShapeLength=totalShapeLength;shapeData.pathsData=pathsData;}totalModifierLength+=totalShapeLength;shapeData.shape._mdf=true;}}var shapeS=s,shapeE=e,addedLength=0,edges;for(i=len-1;i>=0;i-=1){shapeData=this.shapes[i];if(shapeData.shape._mdf){localShapeCollection=shapeData.localShapeCollection;localShapeCollection.releaseShapes();//if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
if(this.m===2&&len>1){edges=this.calculateShapeEdges(s,e,shapeData.totalShapeLength,addedLength,totalModifierLength);addedLength+=shapeData.totalShapeLength;}else{edges=[[shapeS,shapeE]];}jLen=edges.length;for(j=0;j<jLen;j+=1){shapeS=edges[j][0];shapeE=edges[j][1];segments.length=0;if(shapeE<=1){segments.push({s:shapeData.totalShapeLength*shapeS,e:shapeData.totalShapeLength*shapeE});}else if(shapeS>=1){segments.push({s:shapeData.totalShapeLength*(shapeS-1),e:shapeData.totalShapeLength*(shapeE-1)});}else{segments.push({s:shapeData.totalShapeLength*shapeS,e:shapeData.totalShapeLength});segments.push({s:0,e:shapeData.totalShapeLength*(shapeE-1)});}var newShapesData=this.addShapes(shapeData,segments[0]);if(segments[0].s!==segments[0].e){if(segments.length>1){var lastShapeInCollection=shapeData.shape.paths.shapes[shapeData.shape.paths._length-1];if(lastShapeInCollection.c){var lastShape=newShapesData.pop();this.addPaths(newShapesData,localShapeCollection);newShapesData=this.addShapes(shapeData,segments[1],lastShape);}else{this.addPaths(newShapesData,localShapeCollection);newShapesData=this.addShapes(shapeData,segments[1]);}}this.addPaths(newShapesData,localShapeCollection);}}shapeData.shape.paths=localShapeCollection;}}}else if(this._mdf){for(i=0;i<len;i+=1){//Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
//Don't remove this even if it's losing cached info.
this.shapes[i].pathsData.length=0;this.shapes[i].shape._mdf=true;}}};TrimModifier.prototype.addPaths=function(newPaths,localShapeCollection){var i,len=newPaths.length;for(i=0;i<len;i+=1){localShapeCollection.addShape(newPaths[i]);}};TrimModifier.prototype.addSegment=function(pt1,pt2,pt3,pt4,shapePath,pos,newShape){shapePath.setXYAt(pt2[0],pt2[1],'o',pos);shapePath.setXYAt(pt3[0],pt3[1],'i',pos+1);if(newShape){shapePath.setXYAt(pt1[0],pt1[1],'v',pos);}shapePath.setXYAt(pt4[0],pt4[1],'v',pos+1);};TrimModifier.prototype.addSegmentFromArray=function(points,shapePath,pos,newShape){shapePath.setXYAt(points[1],points[5],'o',pos);shapePath.setXYAt(points[2],points[6],'i',pos+1);if(newShape){shapePath.setXYAt(points[0],points[4],'v',pos);}shapePath.setXYAt(points[3],points[7],'v',pos+1);};TrimModifier.prototype.addShapes=function(shapeData,shapeSegment,shapePath){var pathsData=shapeData.pathsData;var shapePaths=shapeData.shape.paths.shapes;var i,len=shapeData.shape.paths._length,j,jLen;var addedLength=0;var currentLengthData,segmentCount;var lengths;var segment;var shapes=[];var initPos;var newShape=true;if(!shapePath){shapePath=shape_pool.newElement();segmentCount=0;initPos=0;}else{segmentCount=shapePath._length;initPos=shapePath._length;}shapes.push(shapePath);for(i=0;i<len;i+=1){lengths=pathsData[i].lengths;shapePath.c=shapePaths[i].c;jLen=shapePaths[i].c?lengths.length:lengths.length+1;for(j=1;j<jLen;j+=1){currentLengthData=lengths[j-1];if(addedLength+currentLengthData.addedLength<shapeSegment.s){addedLength+=currentLengthData.addedLength;shapePath.c=false;}else if(addedLength>shapeSegment.e){shapePath.c=false;break;}else{if(shapeSegment.s<=addedLength&&shapeSegment.e>=addedLength+currentLengthData.addedLength){this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);newShape=false;}else{segment=bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j],(shapeSegment.s-addedLength)/currentLengthData.addedLength,(shapeSegment.e-addedLength)/currentLengthData.addedLength,lengths[j-1]);this.addSegmentFromArray(segment,shapePath,segmentCount,newShape);// this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
newShape=false;shapePath.c=false;}addedLength+=currentLengthData.addedLength;segmentCount+=1;}}if(shapePaths[i].c&&lengths.length){currentLengthData=lengths[j-1];if(addedLength<=shapeSegment.e){var segmentLength=lengths[j-1].addedLength;if(shapeSegment.s<=addedLength&&shapeSegment.e>=addedLength+segmentLength){this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);newShape=false;}else{segment=bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0],(shapeSegment.s-addedLength)/segmentLength,(shapeSegment.e-addedLength)/segmentLength,lengths[j-1]);this.addSegmentFromArray(segment,shapePath,segmentCount,newShape);// this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
newShape=false;shapePath.c=false;}}else{shapePath.c=false;}addedLength+=currentLengthData.addedLength;segmentCount+=1;}if(shapePath._length){shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);shapePath.setXYAt(shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1],'o',shapePath._length-1);}if(addedLength>shapeSegment.e){break;}if(i<len-1){shapePath=shape_pool.newElement();newShape=true;shapes.push(shapePath);segmentCount=0;}}return shapes;};ShapeModifiers.registerModifier('tm',TrimModifier);function RoundCornersModifier(){}extendPrototype([ShapeModifier],RoundCornersModifier);RoundCornersModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.rd=PropertyFactory.getProp(elem,data.r,0,null,this);this._isAnimated=!!this.rd.effectsSequence.length;};RoundCornersModifier.prototype.processPath=function(path,round){var cloned_path=shape_pool.newElement();cloned_path.c=path.c;var i,len=path._length;var currentV,currentI,currentO,closerV,newV,newO,newI,distance,newPosPerc,index=0;var vX,vY,oX,oY,iX,iY;for(i=0;i<len;i+=1){currentV=path.v[i];currentO=path.o[i];currentI=path.i[i];if(currentV[0]===currentO[0]&&currentV[1]===currentO[1]&&currentV[0]===currentI[0]&&currentV[1]===currentI[1]){if((i===0||i===len-1)&&!path.c){cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);/*cloned_path.v[index] = currentV;
                cloned_path.o[index] = currentO;
                cloned_path.i[index] = currentI;*/index+=1;}else{if(i===0){closerV=path.v[len-1];}else{closerV=path.v[i-1];}distance=Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));newPosPerc=distance?Math.min(distance/2,round)/distance:0;vX=iX=currentV[0]+(closerV[0]-currentV[0])*newPosPerc;vY=iY=currentV[1]-(currentV[1]-closerV[1])*newPosPerc;oX=vX-(vX-currentV[0])*roundCorner;oY=vY-(vY-currentV[1])*roundCorner;cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);index+=1;if(i===len-1){closerV=path.v[0];}else{closerV=path.v[i+1];}distance=Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));newPosPerc=distance?Math.min(distance/2,round)/distance:0;vX=oX=currentV[0]+(closerV[0]-currentV[0])*newPosPerc;vY=oY=currentV[1]+(closerV[1]-currentV[1])*newPosPerc;iX=vX-(vX-currentV[0])*roundCorner;iY=vY-(vY-currentV[1])*roundCorner;cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);index+=1;}}else{cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);index+=1;}}return cloned_path;};RoundCornersModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i,len=this.shapes.length;var j,jLen;var rd=this.rd.v;if(rd!==0){var shapeData,newPaths,localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];newPaths=shapeData.shape.paths;localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],rd));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};ShapeModifiers.registerModifier('rd',RoundCornersModifier);function RepeaterModifier(){}extendPrototype([ShapeModifier],RepeaterModifier);RepeaterModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.c=PropertyFactory.getProp(elem,data.c,0,null,this);this.o=PropertyFactory.getProp(elem,data.o,0,null,this);this.tr=TransformPropertyFactory.getTransformProperty(elem,data.tr,this);this.so=PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);this.eo=PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);this.data=data;if(!this.dynamicProperties.length){this.getValue(true);}this._isAnimated=!!this.dynamicProperties.length;this.pMatrix=new Matrix();this.rMatrix=new Matrix();this.sMatrix=new Matrix();this.tMatrix=new Matrix();this.matrix=new Matrix();};RepeaterModifier.prototype.applyTransforms=function(pMatrix,rMatrix,sMatrix,transform,perc,inv){var dir=inv?-1:1;var scaleX=transform.s.v[0]+(1-transform.s.v[0])*(1-perc);var scaleY=transform.s.v[1]+(1-transform.s.v[1])*(1-perc);pMatrix.translate(transform.p.v[0]*dir*perc,transform.p.v[1]*dir*perc,transform.p.v[2]);rMatrix.translate(-transform.a.v[0],-transform.a.v[1],transform.a.v[2]);rMatrix.rotate(-transform.r.v*dir*perc);rMatrix.translate(transform.a.v[0],transform.a.v[1],transform.a.v[2]);sMatrix.translate(-transform.a.v[0],-transform.a.v[1],transform.a.v[2]);sMatrix.scale(inv?1/scaleX:scaleX,inv?1/scaleY:scaleY);sMatrix.translate(transform.a.v[0],transform.a.v[1],transform.a.v[2]);};RepeaterModifier.prototype.init=function(elem,arr,pos,elemsData){this.elem=elem;this.arr=arr;this.pos=pos;this.elemsData=elemsData;this._currentCopies=0;this._elements=[];this._groups=[];this.frameId=-1;this.initDynamicPropertyContainer(elem);this.initModifierProperties(elem,arr[pos]);var cont=0;while(pos>0){pos-=1;//this._elements.unshift(arr.splice(pos,1)[0]);
this._elements.unshift(arr[pos]);cont+=1;}if(this.dynamicProperties.length){this.k=true;}else{this.getValue(true);}};RepeaterModifier.prototype.resetElements=function(elements){var i,len=elements.length;for(i=0;i<len;i+=1){elements[i]._processed=false;if(elements[i].ty==='gr'){this.resetElements(elements[i].it);}}};RepeaterModifier.prototype.cloneElements=function(elements){var i,len=elements.length;var newElements=JSON.parse(JSON.stringify(elements));this.resetElements(newElements);return newElements;};RepeaterModifier.prototype.changeGroupRender=function(elements,renderFlag){var i,len=elements.length;for(i=0;i<len;i+=1){elements[i]._render=renderFlag;if(elements[i].ty==='gr'){this.changeGroupRender(elements[i].it,renderFlag);}}};RepeaterModifier.prototype.processShapes=function(_isFirstFrame){var items,itemsTransform,i,dir,cont;if(this._mdf||_isFirstFrame){var copies=Math.ceil(this.c.v);if(this._groups.length<copies){while(this._groups.length<copies){var group={it:this.cloneElements(this._elements),ty:'gr'};group.it.push({"a":{"a":0,"ix":1,"k":[0,0]},"nm":"Transform","o":{"a":0,"ix":7,"k":100},"p":{"a":0,"ix":2,"k":[0,0]},"r":{"a":1,"ix":6,"k":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},"s":{"a":0,"ix":3,"k":[100,100]},"sa":{"a":0,"ix":5,"k":0},"sk":{"a":0,"ix":4,"k":0},"ty":"tr"});this.arr.splice(0,0,group);this._groups.splice(0,0,group);this._currentCopies+=1;}this.elem.reloadShapes();}cont=0;var renderFlag;for(i=0;i<=this._groups.length-1;i+=1){renderFlag=cont<copies;this._groups[i]._render=renderFlag;this.changeGroupRender(this._groups[i].it,renderFlag);cont+=1;}this._currentCopies=copies;////
var offset=this.o.v;var offsetModulo=offset%1;var roundOffset=offset>0?Math.floor(offset):Math.ceil(offset);var k;var tMat=this.tr.v.props;var pProps=this.pMatrix.props;var rProps=this.rMatrix.props;var sProps=this.sMatrix.props;this.pMatrix.reset();this.rMatrix.reset();this.sMatrix.reset();this.tMatrix.reset();this.matrix.reset();var iteration=0;if(offset>0){while(iteration<roundOffset){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,false);iteration+=1;}if(offsetModulo){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,offsetModulo,false);iteration+=offsetModulo;}}else if(offset<0){while(iteration>roundOffset){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,true);iteration-=1;}if(offsetModulo){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-offsetModulo,true);iteration-=offsetModulo;}}i=this.data.m===1?0:this._currentCopies-1;dir=this.data.m===1?1:-1;cont=this._currentCopies;var j,jLen;while(cont){items=this.elemsData[i].it;itemsTransform=items[items.length-1].transform.mProps.v.props;jLen=itemsTransform.length;items[items.length-1].transform.mProps._mdf=true;items[items.length-1].transform.op._mdf=true;items[items.length-1].transform.op.v=this.so.v+(this.eo.v-this.so.v)*(i/(this._currentCopies-1));if(iteration!==0){if(i!==0&&dir===1||i!==this._currentCopies-1&&dir===-1){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,false);}this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);for(j=0;j<jLen;j+=1){itemsTransform[j]=this.matrix.props[j];}this.matrix.reset();}else{this.matrix.reset();for(j=0;j<jLen;j+=1){itemsTransform[j]=this.matrix.props[j];}}iteration+=1;cont-=1;i+=dir;}}else{cont=this._currentCopies;i=0;dir=1;while(cont){items=this.elemsData[i].it;itemsTransform=items[items.length-1].transform.mProps.v.props;items[items.length-1].transform.mProps._mdf=false;items[items.length-1].transform.op._mdf=false;cont-=1;i+=dir;}}};RepeaterModifier.prototype.addShape=function(){};ShapeModifiers.registerModifier('rp',RepeaterModifier);function ShapeCollection(){this._length=0;this._maxLength=4;this.shapes=createSizedArray(this._maxLength);}ShapeCollection.prototype.addShape=function(shapeData){if(this._length===this._maxLength){this.shapes=this.shapes.concat(createSizedArray(this._maxLength));this._maxLength*=2;}this.shapes[this._length]=shapeData;this._length+=1;};ShapeCollection.prototype.releaseShapes=function(){var i;for(i=0;i<this._length;i+=1){shape_pool.release(this.shapes[i]);}this._length=0;};function DashProperty(elem,data,renderer,container){this.elem=elem;this.frameId=-1;this.dataProps=createSizedArray(data.length);this.renderer=renderer;this.k=false;this.dashStr='';this.dashArray=createTypedArray('float32',data.length?data.length-1:0);this.dashoffset=createTypedArray('float32',1);this.initDynamicPropertyContainer(container);var i,len=data.length||0,prop;for(i=0;i<len;i+=1){prop=PropertyFactory.getProp(elem,data[i].v,0,0,this);this.k=prop.k||this.k;this.dataProps[i]={n:data[i].n,p:prop};}if(!this.k){this.getValue(true);}this._isAnimated=this.k;}DashProperty.prototype.getValue=function(forceRender){if(this.elem.globalData.frameId===this.frameId&&!forceRender){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();this._mdf=this._mdf||forceRender;if(this._mdf){var i=0,len=this.dataProps.length;if(this.renderer==='svg'){this.dashStr='';}for(i=0;i<len;i+=1){if(this.dataProps[i].n!='o'){if(this.renderer==='svg'){this.dashStr+=' '+this.dataProps[i].p.v;}else{this.dashArray[i]=this.dataProps[i].p.v;}}else{this.dashoffset[0]=this.dataProps[i].p.v;}}}};extendPrototype([DynamicPropertyContainer],DashProperty);function GradientProperty(elem,data,container){this.data=data;this.c=createTypedArray('uint8c',data.p*4);var cLength=data.k.k[0].s?data.k.k[0].s.length-data.p*4:data.k.k.length-data.p*4;this.o=createTypedArray('float32',cLength);this._cmdf=false;this._omdf=false;this._collapsable=this.checkCollapsable();this._hasOpacity=cLength;this.initDynamicPropertyContainer(container);this.prop=PropertyFactory.getProp(elem,data.k,1,null,this);this.k=this.prop.k;this.getValue(true);}GradientProperty.prototype.comparePoints=function(values,points){var i=0,len=this.o.length/2,diff;while(i<len){diff=Math.abs(values[i*4]-values[points*4+i*2]);if(diff>0.01){return false;}i+=1;}return true;};GradientProperty.prototype.checkCollapsable=function(){if(this.o.length/2!==this.c.length/4){return false;}if(this.data.k.k[0].s){var i=0,len=this.data.k.k.length;while(i<len){if(!this.comparePoints(this.data.k.k[i].s,this.data.p)){return false;}i+=1;}}else if(!this.comparePoints(this.data.k.k,this.data.p)){return false;}return true;};GradientProperty.prototype.getValue=function(forceRender){this.prop.getValue();this._mdf=false;this._cmdf=false;this._omdf=false;if(this.prop._mdf||forceRender){var i,len=this.data.p*4;var mult,val;for(i=0;i<len;i+=1){mult=i%4===0?100:255;val=Math.round(this.prop.v[i]*mult);if(this.c[i]!==val){this.c[i]=val;this._cmdf=!forceRender;}}if(this.o.length){len=this.prop.v.length;for(i=this.data.p*4;i<len;i+=1){mult=i%2===0?100:1;val=i%2===0?Math.round(this.prop.v[i]*100):this.prop.v[i];if(this.o[i-this.data.p*4]!==val){this.o[i-this.data.p*4]=val;this._omdf=!forceRender;}}}this._mdf=!forceRender;}};extendPrototype([DynamicPropertyContainer],GradientProperty);var buildShapeString=function buildShapeString(pathNodes,length,closed,mat){if(length===0){return'';}var _o=pathNodes.o;var _i=pathNodes.i;var _v=pathNodes.v;var i,shapeString=" M"+mat.applyToPointStringified(_v[0][0],_v[0][1]);for(i=1;i<length;i+=1){shapeString+=" C"+mat.applyToPointStringified(_o[i-1][0],_o[i-1][1])+" "+mat.applyToPointStringified(_i[i][0],_i[i][1])+" "+mat.applyToPointStringified(_v[i][0],_v[i][1]);}if(closed&&length){shapeString+=" C"+mat.applyToPointStringified(_o[i-1][0],_o[i-1][1])+" "+mat.applyToPointStringified(_i[0][0],_i[0][1])+" "+mat.applyToPointStringified(_v[0][0],_v[0][1]);shapeString+='z';}return shapeString;};var ImagePreloader=function(){var proxyImage=function(){var canvas=createTag('canvas');canvas.width=1;canvas.height=1;var ctx=canvas.getContext('2d');ctx.fillStyle='rgba(0,0,0,0)';ctx.fillRect(0,0,1,1);return canvas;}();function imageLoaded(){this.loadedAssets+=1;if(this.loadedAssets===this.totalImages){if(this.imagesLoadedCb){this.imagesLoadedCb(null);}}}function getAssetsPath(assetData,assetsPath,original_path){var path='';if(assetData.e){path=assetData.p;}else if(assetsPath){var imagePath=assetData.p;if(imagePath.indexOf('images/')!==-1){imagePath=imagePath.split('/')[1];}path=assetsPath+imagePath;}else{path=original_path;path+=assetData.u?assetData.u:'';path+=assetData.p;}return path;}function createImageData(assetData){var path=getAssetsPath(assetData,this.assetsPath,this.path);var img=createTag('img');img.crossOrigin='anonymous';img.addEventListener('load',this._imageLoaded.bind(this),false);img.addEventListener('error',function(){ob.img=proxyImage;this._imageLoaded();}.bind(this),false);img.src=path;var ob={img:img,assetData:assetData};return ob;}function loadAssets(assets,cb){this.imagesLoadedCb=cb;var i,len=assets.length;for(i=0;i<len;i+=1){if(!assets[i].layers){this.totalImages+=1;this.images.push(this._createImageData(assets[i]));}}}function setPath(path){this.path=path||'';}function setAssetsPath(path){this.assetsPath=path||'';}function getImage(assetData){var i=0,len=this.images.length;while(i<len){if(this.images[i].assetData===assetData){return this.images[i].img;}i+=1;}}function destroy(){this.imagesLoadedCb=null;this.images.length=0;}function loaded(){return this.totalImages===this.loadedAssets;}return function ImagePreloader(){this.loadAssets=loadAssets;this.setAssetsPath=setAssetsPath;this.setPath=setPath;this.loaded=loaded;this.destroy=destroy;this.getImage=getImage;this._createImageData=createImageData;this._imageLoaded=imageLoaded;this.assetsPath='';this.path='';this.totalImages=0;this.loadedAssets=0;this.imagesLoadedCb=null;this.images=[];};}();var featureSupport=function(){var ob={maskType:true};if(/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\/\d./i.test(navigator.userAgent)){ob.maskType=false;}return ob;}();var filtersFactory=function(){var ob={};ob.createFilter=createFilter;ob.createAlphaToLuminanceFilter=createAlphaToLuminanceFilter;function createFilter(filId){var fil=createNS('filter');fil.setAttribute('id',filId);fil.setAttribute('filterUnits','objectBoundingBox');fil.setAttribute('x','0%');fil.setAttribute('y','0%');fil.setAttribute('width','100%');fil.setAttribute('height','100%');return fil;}function createAlphaToLuminanceFilter(){var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');return feColorMatrix;}return ob;}();var assetLoader=function(){function formatResponse(xhr){if(xhr.response&&typeof xhr.response==='object'){return xhr.response;}else if(xhr.response&&typeof xhr.response==='string'){return JSON.parse(xhr.response);}else if(xhr.responseText){return JSON.parse(xhr.responseText);}}function loadAsset(path,callback,errorCallback){var response;var xhr=new XMLHttpRequest();xhr.open('GET',path,true);// set responseType after calling open or IE will break.
try{// This crashes on Android WebView prior to KitKat
xhr.responseType="json";}catch(err){}xhr.send();xhr.onreadystatechange=function(){if(xhr.readyState==4){if(xhr.status==200){response=formatResponse(xhr);callback(response);}else{try{response=formatResponse(xhr);callback(response);}catch(err){if(errorCallback){errorCallback(err);}}}}};}return{load:loadAsset};}();function TextAnimatorProperty(textData,renderType,elem){this._isFirstFrame=true;this._hasMaskedPath=false;this._frameId=-1;this._textData=textData;this._renderType=renderType;this._elem=elem;this._animatorsData=createSizedArray(this._textData.a.length);this._pathData={};this._moreOptions={alignment:{}};this.renderedLetters=[];this.lettersChangedFlag=false;this.initDynamicPropertyContainer(elem);}TextAnimatorProperty.prototype.searchProperties=function(){var i,len=this._textData.a.length,animatorProps;var getProp=PropertyFactory.getProp;for(i=0;i<len;i+=1){animatorProps=this._textData.a[i];this._animatorsData[i]=new TextAnimatorDataProperty(this._elem,animatorProps,this);}if(this._textData.p&&'m'in this._textData.p){this._pathData={f:getProp(this._elem,this._textData.p.f,0,0,this),l:getProp(this._elem,this._textData.p.l,0,0,this),r:this._textData.p.r,m:this._elem.maskManager.getMaskProperty(this._textData.p.m)};this._hasMaskedPath=true;}else{this._hasMaskedPath=false;}this._moreOptions.alignment=getProp(this._elem,this._textData.m.a,1,0,this);};TextAnimatorProperty.prototype.getMeasures=function(documentData,lettersChangedFlag){this.lettersChangedFlag=lettersChangedFlag;if(!this._mdf&&!this._isFirstFrame&&!lettersChangedFlag&&(!this._hasMaskedPath||!this._pathData.m._mdf)){return;}this._isFirstFrame=false;var alignment=this._moreOptions.alignment.v;var animators=this._animatorsData;var textData=this._textData;var matrixHelper=this.mHelper;var renderType=this._renderType;var renderedLettersCount=this.renderedLetters.length;var data=this.data;var xPos,yPos;var i,len;var letters=documentData.l,pathInfo,currentLength,currentPoint,segmentLength,flag,pointInd,segmentInd,prevPoint,points,segments,partialLength,totalLength,perc,tanAngle,mask;if(this._hasMaskedPath){mask=this._pathData.m;if(!this._pathData.n||this._pathData._mdf){var paths=mask.v;if(this._pathData.r){paths=paths.reverse();}// TODO: release bezier data cached from previous pathInfo: this._pathData.pi
pathInfo={tLength:0,segments:[]};len=paths._length-1;var bezierData;totalLength=0;for(i=0;i<len;i+=1){bezierData=bez.buildBezierData(paths.v[i],paths.v[i+1],[paths.o[i][0]-paths.v[i][0],paths.o[i][1]-paths.v[i][1]],[paths.i[i+1][0]-paths.v[i+1][0],paths.i[i+1][1]-paths.v[i+1][1]]);pathInfo.tLength+=bezierData.segmentLength;pathInfo.segments.push(bezierData);totalLength+=bezierData.segmentLength;}i=len;if(mask.v.c){bezierData=bez.buildBezierData(paths.v[i],paths.v[0],[paths.o[i][0]-paths.v[i][0],paths.o[i][1]-paths.v[i][1]],[paths.i[0][0]-paths.v[0][0],paths.i[0][1]-paths.v[0][1]]);pathInfo.tLength+=bezierData.segmentLength;pathInfo.segments.push(bezierData);totalLength+=bezierData.segmentLength;}this._pathData.pi=pathInfo;}pathInfo=this._pathData.pi;currentLength=this._pathData.f.v;segmentInd=0;pointInd=1;segmentLength=0;flag=true;segments=pathInfo.segments;if(currentLength<0&&mask.v.c){if(pathInfo.tLength<Math.abs(currentLength)){currentLength=-Math.abs(currentLength)%pathInfo.tLength;}segmentInd=segments.length-1;points=segments[segmentInd].points;pointInd=points.length-1;while(currentLength<0){currentLength+=points[pointInd].partialLength;pointInd-=1;if(pointInd<0){segmentInd-=1;points=segments[segmentInd].points;pointInd=points.length-1;}}}points=segments[segmentInd].points;prevPoint=points[pointInd-1];currentPoint=points[pointInd];partialLength=currentPoint.partialLength;}len=letters.length;xPos=0;yPos=0;var yOff=documentData.finalSize*1.2*0.714;var firstLine=true;var animatorProps,animatorSelector;var j,jLen;var letterValue;jLen=animators.length;var lastLetter;var mult,ind=-1,offf,xPathPos,yPathPos;var initPathPos=currentLength,initSegmentInd=segmentInd,initPointInd=pointInd,currentLine=-1;var elemOpacity;var sc,sw,fc,k;var lineLength=0;var letterSw,letterSc,letterFc,letterM='',letterP=this.defaultPropsArray,letterO;//
if(documentData.j===2||documentData.j===1){var animatorJustifyOffset=0;var animatorFirstCharOffset=0;var justifyOffsetMult=documentData.j===2?-0.5:-1;var lastIndex=0;var isNewLine=true;for(i=0;i<len;i+=1){if(letters[i].n){if(animatorJustifyOffset){animatorJustifyOffset+=animatorFirstCharOffset;}while(lastIndex<i){letters[lastIndex].animatorJustifyOffset=animatorJustifyOffset;lastIndex+=1;}animatorJustifyOffset=0;isNewLine=true;}else{for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.t.propType){if(isNewLine&&documentData.j===2){animatorFirstCharOffset+=animatorProps.t.v*justifyOffsetMult;}animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorJustifyOffset+=animatorProps.t.v*mult[0]*justifyOffsetMult;}else{animatorJustifyOffset+=animatorProps.t.v*mult*justifyOffsetMult;}}}isNewLine=false;}}if(animatorJustifyOffset){animatorJustifyOffset+=animatorFirstCharOffset;}while(lastIndex<i){letters[lastIndex].animatorJustifyOffset=animatorJustifyOffset;lastIndex+=1;}}//
for(i=0;i<len;i+=1){matrixHelper.reset();elemOpacity=1;if(letters[i].n){xPos=0;yPos+=documentData.yOffset;yPos+=firstLine?1:0;currentLength=initPathPos;firstLine=false;lineLength=0;if(this._hasMaskedPath){segmentInd=initSegmentInd;pointInd=initPointInd;points=segments[segmentInd].points;prevPoint=points[pointInd-1];currentPoint=points[pointInd];partialLength=currentPoint.partialLength;segmentLength=0;}letterO=letterSw=letterFc=letterM='';letterP=this.defaultPropsArray;}else{if(this._hasMaskedPath){if(currentLine!==letters[i].line){switch(documentData.j){case 1:currentLength+=totalLength-documentData.lineWidths[letters[i].line];break;case 2:currentLength+=(totalLength-documentData.lineWidths[letters[i].line])/2;break;}currentLine=letters[i].line;}if(ind!==letters[i].ind){if(letters[ind]){currentLength+=letters[ind].extra;}currentLength+=letters[i].an/2;ind=letters[i].ind;}currentLength+=alignment[0]*letters[i].an/200;var animatorOffset=0;for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.p.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorOffset+=animatorProps.p.v[0]*mult[0];}else{animatorOffset+=animatorProps.p.v[0]*mult;}}if(animatorProps.a.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorOffset+=animatorProps.a.v[0]*mult[0];}else{animatorOffset+=animatorProps.a.v[0]*mult;}}}flag=true;while(flag){if(segmentLength+partialLength>=currentLength+animatorOffset||!points){perc=(currentLength+animatorOffset-segmentLength)/currentPoint.partialLength;xPathPos=prevPoint.point[0]+(currentPoint.point[0]-prevPoint.point[0])*perc;yPathPos=prevPoint.point[1]+(currentPoint.point[1]-prevPoint.point[1])*perc;matrixHelper.translate(-alignment[0]*letters[i].an/200,-(alignment[1]*yOff/100));flag=false;}else if(points){segmentLength+=currentPoint.partialLength;pointInd+=1;if(pointInd>=points.length){pointInd=0;segmentInd+=1;if(!segments[segmentInd]){if(mask.v.c){pointInd=0;segmentInd=0;points=segments[segmentInd].points;}else{segmentLength-=currentPoint.partialLength;points=null;}}else{points=segments[segmentInd].points;}}if(points){prevPoint=currentPoint;currentPoint=points[pointInd];partialLength=currentPoint.partialLength;}}}offf=letters[i].an/2-letters[i].add;matrixHelper.translate(-offf,0,0);}else{offf=letters[i].an/2-letters[i].add;matrixHelper.translate(-offf,0,0);// Grouping alignment
matrixHelper.translate(-alignment[0]*letters[i].an/200,-alignment[1]*yOff/100,0);}lineLength+=letters[i].l/2;for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.t.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);//This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
if(xPos!==0||documentData.j!==0){if(this._hasMaskedPath){if(mult.length){currentLength+=animatorProps.t.v*mult[0];}else{currentLength+=animatorProps.t.v*mult;}}else{if(mult.length){xPos+=animatorProps.t.v*mult[0];}else{xPos+=animatorProps.t.v*mult;}}}}}lineLength+=letters[i].l/2;if(documentData.strokeWidthAnim){sw=documentData.sw||0;}if(documentData.strokeColorAnim){if(documentData.sc){sc=[documentData.sc[0],documentData.sc[1],documentData.sc[2]];}else{sc=[0,0,0];}}if(documentData.fillColorAnim&&documentData.fc){fc=[documentData.fc[0],documentData.fc[1],documentData.fc[2]];}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.a.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){matrixHelper.translate(-animatorProps.a.v[0]*mult[0],-animatorProps.a.v[1]*mult[1],animatorProps.a.v[2]*mult[2]);}else{matrixHelper.translate(-animatorProps.a.v[0]*mult,-animatorProps.a.v[1]*mult,animatorProps.a.v[2]*mult);}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.s.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){matrixHelper.scale(1+(animatorProps.s.v[0]-1)*mult[0],1+(animatorProps.s.v[1]-1)*mult[1],1);}else{matrixHelper.scale(1+(animatorProps.s.v[0]-1)*mult,1+(animatorProps.s.v[1]-1)*mult,1);}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(animatorProps.sk.propType){if(mult.length){matrixHelper.skewFromAxis(-animatorProps.sk.v*mult[0],animatorProps.sa.v*mult[1]);}else{matrixHelper.skewFromAxis(-animatorProps.sk.v*mult,animatorProps.sa.v*mult);}}if(animatorProps.r.propType){if(mult.length){matrixHelper.rotateZ(-animatorProps.r.v*mult[2]);}else{matrixHelper.rotateZ(-animatorProps.r.v*mult);}}if(animatorProps.ry.propType){if(mult.length){matrixHelper.rotateY(animatorProps.ry.v*mult[1]);}else{matrixHelper.rotateY(animatorProps.ry.v*mult);}}if(animatorProps.rx.propType){if(mult.length){matrixHelper.rotateX(animatorProps.rx.v*mult[0]);}else{matrixHelper.rotateX(animatorProps.rx.v*mult);}}if(animatorProps.o.propType){if(mult.length){elemOpacity+=(animatorProps.o.v*mult[0]-elemOpacity)*mult[0];}else{elemOpacity+=(animatorProps.o.v*mult-elemOpacity)*mult;}}if(documentData.strokeWidthAnim&&animatorProps.sw.propType){if(mult.length){sw+=animatorProps.sw.v*mult[0];}else{sw+=animatorProps.sw.v*mult;}}if(documentData.strokeColorAnim&&animatorProps.sc.propType){for(k=0;k<3;k+=1){if(mult.length){sc[k]=sc[k]+(animatorProps.sc.v[k]-sc[k])*mult[0];}else{sc[k]=sc[k]+(animatorProps.sc.v[k]-sc[k])*mult;}}}if(documentData.fillColorAnim&&documentData.fc){if(animatorProps.fc.propType){for(k=0;k<3;k+=1){if(mult.length){fc[k]=fc[k]+(animatorProps.fc.v[k]-fc[k])*mult[0];}else{fc[k]=fc[k]+(animatorProps.fc.v[k]-fc[k])*mult;}}}if(animatorProps.fh.propType){if(mult.length){fc=addHueToRGB(fc,animatorProps.fh.v*mult[0]);}else{fc=addHueToRGB(fc,animatorProps.fh.v*mult);}}if(animatorProps.fs.propType){if(mult.length){fc=addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);}else{fc=addSaturationToRGB(fc,animatorProps.fs.v*mult);}}if(animatorProps.fb.propType){if(mult.length){fc=addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);}else{fc=addBrightnessToRGB(fc,animatorProps.fb.v*mult);}}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.p.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(this._hasMaskedPath){if(mult.length){matrixHelper.translate(0,animatorProps.p.v[1]*mult[0],-animatorProps.p.v[2]*mult[1]);}else{matrixHelper.translate(0,animatorProps.p.v[1]*mult,-animatorProps.p.v[2]*mult);}}else{if(mult.length){matrixHelper.translate(animatorProps.p.v[0]*mult[0],animatorProps.p.v[1]*mult[1],-animatorProps.p.v[2]*mult[2]);}else{matrixHelper.translate(animatorProps.p.v[0]*mult,animatorProps.p.v[1]*mult,-animatorProps.p.v[2]*mult);}}}}if(documentData.strokeWidthAnim){letterSw=sw<0?0:sw;}if(documentData.strokeColorAnim){letterSc='rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';}if(documentData.fillColorAnim&&documentData.fc){letterFc='rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';}if(this._hasMaskedPath){matrixHelper.translate(0,-documentData.ls);matrixHelper.translate(0,alignment[1]*yOff/100+yPos,0);if(textData.p.p){tanAngle=(currentPoint.point[1]-prevPoint.point[1])/(currentPoint.point[0]-prevPoint.point[0]);var rot=Math.atan(tanAngle)*180/Math.PI;if(currentPoint.point[0]<prevPoint.point[0]){rot+=180;}matrixHelper.rotate(-rot*Math.PI/180);}matrixHelper.translate(xPathPos,yPathPos,0);currentLength-=alignment[0]*letters[i].an/200;if(letters[i+1]&&ind!==letters[i+1].ind){currentLength+=letters[i].an/2;currentLength+=documentData.tr/1000*documentData.finalSize;}}else{matrixHelper.translate(xPos,yPos,0);if(documentData.ps){//matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
matrixHelper.translate(documentData.ps[0],documentData.ps[1]+documentData.ascent,0);}switch(documentData.j){case 1:matrixHelper.translate(letters[i].animatorJustifyOffset+documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[letters[i].line]),0,0);break;case 2:matrixHelper.translate(letters[i].animatorJustifyOffset+documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[letters[i].line])/2,0,0);break;}matrixHelper.translate(0,-documentData.ls);matrixHelper.translate(offf,0,0);matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);xPos+=letters[i].l+documentData.tr/1000*documentData.finalSize;}if(renderType==='html'){letterM=matrixHelper.toCSS();}else if(renderType==='svg'){letterM=matrixHelper.to2dCSS();}else{letterP=[matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];}letterO=elemOpacity;}if(renderedLettersCount<=i){letterValue=new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);this.renderedLetters.push(letterValue);renderedLettersCount+=1;this.lettersChangedFlag=true;}else{letterValue=this.renderedLetters[i];this.lettersChangedFlag=letterValue.update(letterO,letterSw,letterSc,letterFc,letterM,letterP)||this.lettersChangedFlag;}}};TextAnimatorProperty.prototype.getValue=function(){if(this._elem.globalData.frameId===this._frameId){return;}this._frameId=this._elem.globalData.frameId;this.iterateDynamicProperties();};TextAnimatorProperty.prototype.mHelper=new Matrix();TextAnimatorProperty.prototype.defaultPropsArray=[];extendPrototype([DynamicPropertyContainer],TextAnimatorProperty);function TextAnimatorDataProperty(elem,animatorProps,container){var defaultData={propType:false};var getProp=PropertyFactory.getProp;var textAnimator_animatables=animatorProps.a;this.a={r:textAnimator_animatables.r?getProp(elem,textAnimator_animatables.r,0,degToRads,container):defaultData,rx:textAnimator_animatables.rx?getProp(elem,textAnimator_animatables.rx,0,degToRads,container):defaultData,ry:textAnimator_animatables.ry?getProp(elem,textAnimator_animatables.ry,0,degToRads,container):defaultData,sk:textAnimator_animatables.sk?getProp(elem,textAnimator_animatables.sk,0,degToRads,container):defaultData,sa:textAnimator_animatables.sa?getProp(elem,textAnimator_animatables.sa,0,degToRads,container):defaultData,s:textAnimator_animatables.s?getProp(elem,textAnimator_animatables.s,1,0.01,container):defaultData,a:textAnimator_animatables.a?getProp(elem,textAnimator_animatables.a,1,0,container):defaultData,o:textAnimator_animatables.o?getProp(elem,textAnimator_animatables.o,0,0.01,container):defaultData,p:textAnimator_animatables.p?getProp(elem,textAnimator_animatables.p,1,0,container):defaultData,sw:textAnimator_animatables.sw?getProp(elem,textAnimator_animatables.sw,0,0,container):defaultData,sc:textAnimator_animatables.sc?getProp(elem,textAnimator_animatables.sc,1,0,container):defaultData,fc:textAnimator_animatables.fc?getProp(elem,textAnimator_animatables.fc,1,0,container):defaultData,fh:textAnimator_animatables.fh?getProp(elem,textAnimator_animatables.fh,0,0,container):defaultData,fs:textAnimator_animatables.fs?getProp(elem,textAnimator_animatables.fs,0,0.01,container):defaultData,fb:textAnimator_animatables.fb?getProp(elem,textAnimator_animatables.fb,0,0.01,container):defaultData,t:textAnimator_animatables.t?getProp(elem,textAnimator_animatables.t,0,0,container):defaultData};this.s=TextSelectorProp.getTextSelectorProp(elem,animatorProps.s,container);this.s.t=animatorProps.s.t;}function LetterProps(o,sw,sc,fc,m,p){this.o=o;this.sw=sw;this.sc=sc;this.fc=fc;this.m=m;this.p=p;this._mdf={o:true,sw:!!sw,sc:!!sc,fc:!!fc,m:true,p:true};}LetterProps.prototype.update=function(o,sw,sc,fc,m,p){this._mdf.o=false;this._mdf.sw=false;this._mdf.sc=false;this._mdf.fc=false;this._mdf.m=false;this._mdf.p=false;var updated=false;if(this.o!==o){this.o=o;this._mdf.o=true;updated=true;}if(this.sw!==sw){this.sw=sw;this._mdf.sw=true;updated=true;}if(this.sc!==sc){this.sc=sc;this._mdf.sc=true;updated=true;}if(this.fc!==fc){this.fc=fc;this._mdf.fc=true;updated=true;}if(this.m!==m){this.m=m;this._mdf.m=true;updated=true;}if(p.length&&(this.p[0]!==p[0]||this.p[1]!==p[1]||this.p[4]!==p[4]||this.p[5]!==p[5]||this.p[12]!==p[12]||this.p[13]!==p[13])){this.p=p;this._mdf.p=true;updated=true;}return updated;};function TextProperty(elem,data){this._frameId=initialDefaultFrame;this.pv='';this.v='';this.kf=false;this._isFirstFrame=true;this._mdf=false;this.data=data;this.elem=elem;this.comp=this.elem.comp;this.keysIndex=0;this.canResize=false;this.minimumFontSize=1;this.effectsSequence=[];this.currentData={ascent:0,boxWidth:this.defaultBoxWidth,f:'',fStyle:'',fWeight:'',fc:'',j:'',justifyOffset:'',l:[],lh:0,lineWidths:[],ls:'',of:'',s:'',sc:'',sw:0,t:0,tr:0,sz:0,ps:null,fillColorAnim:false,strokeColorAnim:false,strokeWidthAnim:false,yOffset:0,finalSize:0,finalText:[],finalLineHeight:0,__complete:false};this.copyData(this.currentData,this.data.d.k[0].s);if(!this.searchProperty()){this.completeTextData(this.currentData);}}TextProperty.prototype.defaultBoxWidth=[0,0];TextProperty.prototype.copyData=function(obj,data){for(var s in data){if(data.hasOwnProperty(s)){obj[s]=data[s];}}return obj;};TextProperty.prototype.setCurrentData=function(data){if(!data.__complete){this.completeTextData(data);}this.currentData=data;this.currentData.boxWidth=this.currentData.boxWidth||this.defaultBoxWidth;this._mdf=true;};TextProperty.prototype.searchProperty=function(){return this.searchKeyframes();};TextProperty.prototype.searchKeyframes=function(){this.kf=this.data.d.k.length>1;if(this.kf){this.addEffect(this.getKeyframeValue.bind(this));}return this.kf;};TextProperty.prototype.addEffect=function(effectFunction){this.effectsSequence.push(effectFunction);this.elem.addDynamicProperty(this);};TextProperty.prototype.getValue=function(_finalValue){if((this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length)&&!_finalValue){return;}this.currentData.t=this.data.d.k[this.keysIndex].s.t;var currentValue=this.currentData;var currentIndex=this.keysIndex;if(this.lock){this.setCurrentData(this.currentData);return;}this.lock=true;this._mdf=false;var multipliedValue;var i,len=this.effectsSequence.length;var finalValue=_finalValue||this.data.d.k[this.keysIndex].s;for(i=0;i<len;i+=1){//Checking if index changed to prevent creating a new object every time the expression updates.
if(currentIndex!==this.keysIndex){finalValue=this.effectsSequence[i](finalValue,finalValue.t);}else{finalValue=this.effectsSequence[i](this.currentData,finalValue.t);}}if(currentValue!==finalValue){this.setCurrentData(finalValue);}this.pv=this.v=this.currentData;this.lock=false;this.frameId=this.elem.globalData.frameId;};TextProperty.prototype.getKeyframeValue=function(){var textKeys=this.data.d.k,textDocumentData;var frameNum=this.elem.comp.renderedFrame;var i=0,len=textKeys.length;while(i<=len-1){textDocumentData=textKeys[i].s;if(i===len-1||textKeys[i+1].t>frameNum){break;}i+=1;}if(this.keysIndex!==i){this.keysIndex=i;}return this.data.d.k[this.keysIndex].s;};TextProperty.prototype.buildFinalText=function(text){var combinedCharacters=FontManager.getCombinedCharacterCodes();var charactersArray=[];var i=0,len=text.length;var charCode;while(i<len){charCode=text.charCodeAt(i);if(combinedCharacters.indexOf(charCode)!==-1){charactersArray[charactersArray.length-1]+=text.charAt(i);}else{if(charCode>=0xD800&&charCode<=0xDBFF){charCode=text.charCodeAt(i+1);if(charCode>=0xDC00&&charCode<=0xDFFF){charactersArray.push(text.substr(i,2));++i;}else{charactersArray.push(text.charAt(i));}}else{charactersArray.push(text.charAt(i));}}i+=1;}return charactersArray;};TextProperty.prototype.completeTextData=function(documentData){documentData.__complete=true;var fontManager=this.elem.globalData.fontManager;var data=this.data;var letters=[];var i,len;var newLineFlag,index=0,val;var anchorGrouping=data.m.g;var currentSize=0,currentPos=0,currentLine=0,lineWidths=[];var lineWidth=0;var maxLineWidth=0;var j,jLen;var fontData=fontManager.getFontByName(documentData.f);var charData,cLength=0;var styles=fontData.fStyle?fontData.fStyle.split(' '):[];var fWeight='normal',fStyle='normal';len=styles.length;var styleName;for(i=0;i<len;i+=1){styleName=styles[i].toLowerCase();switch(styleName){case'italic':fStyle='italic';break;case'bold':fWeight='700';break;case'black':fWeight='900';break;case'medium':fWeight='500';break;case'regular':case'normal':fWeight='400';break;case'light':case'thin':fWeight='200';break;}}documentData.fWeight=fontData.fWeight||fWeight;documentData.fStyle=fStyle;documentData.finalSize=documentData.s;documentData.finalText=this.buildFinalText(documentData.t);len=documentData.finalText.length;documentData.finalLineHeight=documentData.lh;var trackingOffset=documentData.tr/1000*documentData.finalSize;var charCode;if(documentData.sz){var flag=true;var boxWidth=documentData.sz[0];var boxHeight=documentData.sz[1];var currentHeight,finalText;while(flag){finalText=this.buildFinalText(documentData.t);currentHeight=0;lineWidth=0;len=finalText.length;trackingOffset=documentData.tr/1000*documentData.finalSize;var lastSpaceIndex=-1;for(i=0;i<len;i+=1){charCode=finalText[i].charCodeAt(0);newLineFlag=false;if(finalText[i]===' '){lastSpaceIndex=i;}else if(charCode===13||charCode===3){lineWidth=0;newLineFlag=true;currentHeight+=documentData.finalLineHeight||documentData.finalSize*1.2;}if(fontManager.chars){charData=fontManager.getCharData(finalText[i],fontData.fStyle,fontData.fFamily);cLength=newLineFlag?0:charData.w*documentData.finalSize/100;}else{//tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
cLength=fontManager.measureText(finalText[i],documentData.f,documentData.finalSize);}if(lineWidth+cLength>boxWidth&&finalText[i]!==' '){if(lastSpaceIndex===-1){len+=1;}else{i=lastSpaceIndex;}currentHeight+=documentData.finalLineHeight||documentData.finalSize*1.2;finalText.splice(i,lastSpaceIndex===i?1:0,"\r");//finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
lastSpaceIndex=-1;lineWidth=0;}else{lineWidth+=cLength;lineWidth+=trackingOffset;}}currentHeight+=fontData.ascent*documentData.finalSize/100;if(this.canResize&&documentData.finalSize>this.minimumFontSize&&boxHeight<currentHeight){documentData.finalSize-=1;documentData.finalLineHeight=documentData.finalSize*documentData.lh/documentData.s;}else{documentData.finalText=finalText;len=documentData.finalText.length;flag=false;}}}lineWidth=-trackingOffset;cLength=0;var uncollapsedSpaces=0;var currentChar;for(i=0;i<len;i+=1){newLineFlag=false;currentChar=documentData.finalText[i];charCode=currentChar.charCodeAt(0);if(currentChar===' '){val='\u00A0';}else if(charCode===13||charCode===3){uncollapsedSpaces=0;lineWidths.push(lineWidth);maxLineWidth=lineWidth>maxLineWidth?lineWidth:maxLineWidth;lineWidth=-2*trackingOffset;val='';newLineFlag=true;currentLine+=1;}else{val=documentData.finalText[i];}if(fontManager.chars){charData=fontManager.getCharData(currentChar,fontData.fStyle,fontManager.getFontByName(documentData.f).fFamily);cLength=newLineFlag?0:charData.w*documentData.finalSize/100;}else{//var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
//tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
cLength=fontManager.measureText(val,documentData.f,documentData.finalSize);}//
if(currentChar===' '){uncollapsedSpaces+=cLength+trackingOffset;}else{lineWidth+=cLength+trackingOffset+uncollapsedSpaces;uncollapsedSpaces=0;}letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag,anIndexes:[],val:val,line:currentLine,animatorJustifyOffset:0});if(anchorGrouping==2){currentSize+=cLength;if(val===''||val==='\u00A0'||i===len-1){if(val===''||val==='\u00A0'){currentSize-=cLength;}while(currentPos<=i){letters[currentPos].an=currentSize;letters[currentPos].ind=index;letters[currentPos].extra=cLength;currentPos+=1;}index+=1;currentSize=0;}}else if(anchorGrouping==3){currentSize+=cLength;if(val===''||i===len-1){if(val===''){currentSize-=cLength;}while(currentPos<=i){letters[currentPos].an=currentSize;letters[currentPos].ind=index;letters[currentPos].extra=cLength;currentPos+=1;}currentSize=0;index+=1;}}else{letters[index].ind=index;letters[index].extra=0;index+=1;}}documentData.l=letters;maxLineWidth=lineWidth>maxLineWidth?lineWidth:maxLineWidth;lineWidths.push(lineWidth);if(documentData.sz){documentData.boxWidth=documentData.sz[0];documentData.justifyOffset=0;}else{documentData.boxWidth=maxLineWidth;switch(documentData.j){case 1:documentData.justifyOffset=-documentData.boxWidth;break;case 2:documentData.justifyOffset=-documentData.boxWidth/2;break;default:documentData.justifyOffset=0;}}documentData.lineWidths=lineWidths;var animators=data.a,animatorData,letterData;jLen=animators.length;var based,ind,indexes=[];for(j=0;j<jLen;j+=1){animatorData=animators[j];if(animatorData.a.sc){documentData.strokeColorAnim=true;}if(animatorData.a.sw){documentData.strokeWidthAnim=true;}if(animatorData.a.fc||animatorData.a.fh||animatorData.a.fs||animatorData.a.fb){documentData.fillColorAnim=true;}ind=0;based=animatorData.s.b;for(i=0;i<len;i+=1){letterData=letters[i];letterData.anIndexes[j]=ind;if(based==1&&letterData.val!==''||based==2&&letterData.val!==''&&letterData.val!=='\u00A0'||based==3&&(letterData.n||letterData.val=='\u00A0'||i==len-1)||based==4&&(letterData.n||i==len-1)){if(animatorData.s.rn===1){indexes.push(ind);}ind+=1;}}data.a[j].s.totalChars=ind;var currentInd=-1,newInd;if(animatorData.s.rn===1){for(i=0;i<len;i+=1){letterData=letters[i];if(currentInd!=letterData.anIndexes[j]){currentInd=letterData.anIndexes[j];newInd=indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];}letterData.anIndexes[j]=newInd;}}}documentData.yOffset=documentData.finalLineHeight||documentData.finalSize*1.2;documentData.ls=documentData.ls||0;documentData.ascent=fontData.ascent*documentData.finalSize/100;};TextProperty.prototype.updateDocumentData=function(newData,index){index=index===undefined?this.keysIndex:index;var dData=this.copyData({},this.data.d.k[index].s);dData=this.copyData(dData,newData);this.data.d.k[index].s=dData;this.recalculate(index);this.elem.addDynamicProperty(this);};TextProperty.prototype.recalculate=function(index){var dData=this.data.d.k[index].s;dData.__complete=false;this.keysIndex=0;this._isFirstFrame=true;this.getValue(dData);};TextProperty.prototype.canResizeFont=function(_canResize){this.canResize=_canResize;this.recalculate(this.keysIndex);this.elem.addDynamicProperty(this);};TextProperty.prototype.setMinimumFontSize=function(_fontValue){this.minimumFontSize=Math.floor(_fontValue)||1;this.recalculate(this.keysIndex);this.elem.addDynamicProperty(this);};var TextSelectorProp=function(){var max=Math.max;var min=Math.min;var floor=Math.floor;function TextSelectorProp(elem,data){this._currentTextLength=-1;this.k=false;this.data=data;this.elem=elem;this.comp=elem.comp;this.finalS=0;this.finalE=0;this.initDynamicPropertyContainer(elem);this.s=PropertyFactory.getProp(elem,data.s||{k:0},0,0,this);if('e'in data){this.e=PropertyFactory.getProp(elem,data.e,0,0,this);}else{this.e={v:100};}this.o=PropertyFactory.getProp(elem,data.o||{k:0},0,0,this);this.xe=PropertyFactory.getProp(elem,data.xe||{k:0},0,0,this);this.ne=PropertyFactory.getProp(elem,data.ne||{k:0},0,0,this);this.a=PropertyFactory.getProp(elem,data.a,0,0.01,this);if(!this.dynamicProperties.length){this.getValue();}}TextSelectorProp.prototype={getMult:function getMult(ind){if(this._currentTextLength!==this.elem.textProperty.currentData.l.length){this.getValue();}//var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);
var x1=0;var y1=0;var x2=1;var y2=1;if(this.ne.v>0){x1=this.ne.v/100.0;}else{y1=-this.ne.v/100.0;}if(this.xe.v>0){x2=1.0-this.xe.v/100.0;}else{y2=1.0+this.xe.v/100.0;}var easer=BezierFactory.getBezierEasing(x1,y1,x2,y2).get;var mult=0;var s=this.finalS;var e=this.finalE;var type=this.data.sh;if(type==2){if(e===s){mult=ind>=e?1:0;}else{mult=max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));}mult=easer(mult);}else if(type==3){if(e===s){mult=ind>=e?0:1;}else{mult=1-max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));}mult=easer(mult);}else if(type==4){if(e===s){mult=0;}else{mult=max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));if(mult<0.5){mult*=2;}else{mult=1-2*(mult-0.5);}}mult=easer(mult);}else if(type==5){if(e===s){mult=0;}else{var tot=e-s;/*ind += 0.5;
                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/ind=min(max(0,ind+0.5-s),e-s);var x=-tot/2+ind;var a=tot/2;mult=Math.sqrt(1-x*x/(a*a));}mult=easer(mult);}else if(type==6){if(e===s){mult=0;}else{ind=min(max(0,ind+0.5-s),e-s);mult=(1+Math.cos(Math.PI+Math.PI*2*ind/(e-s)))/2;/*
                     ind = Math.min(Math.max(s,ind),e-1);
                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;
                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/}mult=easer(mult);}else{if(ind>=floor(s)){if(ind-s<0){mult=1-(s-ind);}else{mult=max(0,min(e-ind,1));}}mult=easer(mult);}return mult*this.a.v;},getValue:function getValue(newCharsFlag){this.iterateDynamicProperties();this._mdf=newCharsFlag||this._mdf;this._currentTextLength=this.elem.textProperty.currentData.l.length||0;if(newCharsFlag&&this.data.r===2){this.e.v=this._currentTextLength;}var divisor=this.data.r===2?1:100/this.data.totalChars;var o=this.o.v/divisor;var s=this.s.v/divisor+o;var e=this.e.v/divisor+o;if(s>e){var _s=s;s=e;e=_s;}this.finalS=s;this.finalE=e;}};extendPrototype([DynamicPropertyContainer],TextSelectorProp);function getTextSelectorProp(elem,data,arr){return new TextSelectorProp(elem,data,arr);}return{getTextSelectorProp:getTextSelectorProp};}();var pool_factory=function(){return function(initialLength,_create,_release,_clone){var _length=0;var _maxLength=initialLength;var pool=createSizedArray(_maxLength);var ob={newElement:newElement,release:release};function newElement(){var element;if(_length){_length-=1;element=pool[_length];}else{element=_create();}return element;}function release(element){if(_length===_maxLength){pool=pooling.double(pool);_maxLength=_maxLength*2;}if(_release){_release(element);}pool[_length]=element;_length+=1;}function clone(){var clonedElement=newElement();return _clone(clonedElement);}return ob;};}();var pooling=function(){function double(arr){return arr.concat(createSizedArray(arr.length));}return{double:double};}();var point_pool=function(){function create(){return createTypedArray('float32',2);}return pool_factory(8,create);}();var shape_pool=function(){function create(){return new ShapePath();}function release(shapePath){var len=shapePath._length,i;for(i=0;i<len;i+=1){point_pool.release(shapePath.v[i]);point_pool.release(shapePath.i[i]);point_pool.release(shapePath.o[i]);shapePath.v[i]=null;shapePath.i[i]=null;shapePath.o[i]=null;}shapePath._length=0;shapePath.c=false;}function clone(shape){var cloned=factory.newElement();var i,len=shape._length===undefined?shape.v.length:shape._length;cloned.setLength(len);cloned.c=shape.c;var pt;for(i=0;i<len;i+=1){cloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1],i);}return cloned;}var factory=pool_factory(4,create,release);factory.clone=clone;return factory;}();var shapeCollection_pool=function(){var ob={newShapeCollection:newShapeCollection,release:release};var _length=0;var _maxLength=4;var pool=createSizedArray(_maxLength);function newShapeCollection(){var shapeCollection;if(_length){_length-=1;shapeCollection=pool[_length];}else{shapeCollection=new ShapeCollection();}return shapeCollection;}function release(shapeCollection){var i,len=shapeCollection._length;for(i=0;i<len;i+=1){shape_pool.release(shapeCollection.shapes[i]);}shapeCollection._length=0;if(_length===_maxLength){pool=pooling.double(pool);_maxLength=_maxLength*2;}pool[_length]=shapeCollection;_length+=1;}return ob;}();var segments_length_pool=function(){function create(){return{lengths:[],totalLength:0};}function release(element){var i,len=element.lengths.length;for(i=0;i<len;i+=1){bezier_length_pool.release(element.lengths[i]);}element.lengths.length=0;}return pool_factory(8,create,release);}();var bezier_length_pool=function(){function create(){return{addedLength:0,percents:createTypedArray('float32',defaultCurveSegments),lengths:createTypedArray('float32',defaultCurveSegments)};}return pool_factory(8,create);}();function BaseRenderer(){}BaseRenderer.prototype.checkLayers=function(num){var i,len=this.layers.length,data;this.completeLayers=true;for(i=len-1;i>=0;i--){if(!this.elements[i]){data=this.layers[i];if(data.ip-data.st<=num-this.layers[i].st&&data.op-data.st>num-this.layers[i].st){this.buildItem(i);}}this.completeLayers=this.elements[i]?this.completeLayers:false;}this.checkPendingElements();};BaseRenderer.prototype.createItem=function(layer){switch(layer.ty){case 2:return this.createImage(layer);case 0:return this.createComp(layer);case 1:return this.createSolid(layer);case 3:return this.createNull(layer);case 4:return this.createShape(layer);case 5:return this.createText(layer);case 13:return this.createCamera(layer);}return this.createNull(layer);};BaseRenderer.prototype.createCamera=function(){throw new Error('You\'re using a 3d camera. Try the html renderer.');};BaseRenderer.prototype.buildAllItems=function(){var i,len=this.layers.length;for(i=0;i<len;i+=1){this.buildItem(i);}this.checkPendingElements();};BaseRenderer.prototype.includeLayers=function(newLayers){this.completeLayers=false;var i,len=newLayers.length;var j,jLen=this.layers.length;for(i=0;i<len;i+=1){j=0;while(j<jLen){if(this.layers[j].id==newLayers[i].id){this.layers[j]=newLayers[i];break;}j+=1;}}};BaseRenderer.prototype.setProjectInterface=function(pInterface){this.globalData.projectInterface=pInterface;};BaseRenderer.prototype.initItems=function(){if(!this.globalData.progressiveLoad){this.buildAllItems();}};BaseRenderer.prototype.buildElementParenting=function(element,parentName,hierarchy){var elements=this.elements;var layers=this.layers;var i=0,len=layers.length;while(i<len){if(layers[i].ind==parentName){if(!elements[i]||elements[i]===true){this.buildItem(i);this.addPendingElement(element);}else{hierarchy.push(elements[i]);elements[i].setAsParent();if(layers[i].parent!==undefined){this.buildElementParenting(element,layers[i].parent,hierarchy);}else{element.setHierarchy(hierarchy);}}}i+=1;}};BaseRenderer.prototype.addPendingElement=function(element){this.pendingElements.push(element);};BaseRenderer.prototype.searchExtraCompositions=function(assets){var i,len=assets.length;for(i=0;i<len;i+=1){if(assets[i].xt){var comp=this.createComp(assets[i]);comp.initExpressions();this.globalData.projectInterface.registerComposition(comp);}}};BaseRenderer.prototype.setupGlobalData=function(animData,fontsContainer){this.globalData.fontManager=new FontManager();this.globalData.fontManager.addChars(animData.chars);this.globalData.fontManager.addFonts(animData.fonts,fontsContainer);this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem);this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem);this.globalData.imageLoader=this.animationItem.imagePreloader;this.globalData.frameId=0;this.globalData.frameRate=animData.fr;this.globalData.nm=animData.nm;this.globalData.compSize={w:animData.w,h:animData.h};};function SVGRenderer(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.svgElement=createNS('svg');var ariaLabel='';if(config&&config.title){var titleElement=createNS('title');var titleId=createElementID();titleElement.setAttribute('id',titleId);titleElement.textContent=config.title;this.svgElement.appendChild(titleElement);ariaLabel+=titleId;}if(config&&config.description){var descElement=createNS('desc');var descId=createElementID();descElement.setAttribute('id',descId);descElement.textContent=config.description;this.svgElement.appendChild(descElement);ariaLabel+=' '+descId;}if(ariaLabel){this.svgElement.setAttribute('aria-labelledby',ariaLabel);}var defs=createNS('defs');this.svgElement.appendChild(defs);var maskElement=createNS('g');this.svgElement.appendChild(maskElement);this.layerElement=maskElement;this.renderConfig={preserveAspectRatio:config&&config.preserveAspectRatio||'xMidYMid meet',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',progressiveLoad:config&&config.progressiveLoad||false,hideOnTransparent:config&&config.hideOnTransparent===false?false:true,viewBoxOnly:config&&config.viewBoxOnly||false,viewBoxSize:config&&config.viewBoxSize||false,className:config&&config.className||'',focusable:config&&config.focusable};this.globalData={_mdf:false,frameNum:-1,defs:defs,renderConfig:this.renderConfig};this.elements=[];this.pendingElements=[];this.destroyed=false;this.rendererType='svg';}extendPrototype([BaseRenderer],SVGRenderer);SVGRenderer.prototype.createNull=function(data){return new NullElement(data,this.globalData,this);};SVGRenderer.prototype.createShape=function(data){return new SVGShapeElement(data,this.globalData,this);};SVGRenderer.prototype.createText=function(data){return new SVGTextElement(data,this.globalData,this);};SVGRenderer.prototype.createImage=function(data){return new IImageElement(data,this.globalData,this);};SVGRenderer.prototype.createComp=function(data){return new SVGCompElement(data,this.globalData,this);};SVGRenderer.prototype.createSolid=function(data){return new ISolidElement(data,this.globalData,this);};SVGRenderer.prototype.configAnimation=function(animData){this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');if(this.renderConfig.viewBoxSize){this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);}else{this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);}if(!this.renderConfig.viewBoxOnly){this.svgElement.setAttribute('width',animData.w);this.svgElement.setAttribute('height',animData.h);this.svgElement.style.width='100%';this.svgElement.style.height='100%';this.svgElement.style.transform='translate3d(0,0,0)';}if(this.renderConfig.className){this.svgElement.setAttribute('class',this.renderConfig.className);}if(this.renderConfig.focusable!==undefined){this.svgElement.setAttribute('focusable',this.renderConfig.focusable);}this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);//this.layerElement.style.transform = 'translate3d(0,0,0)';
//this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
this.animationItem.wrapper.appendChild(this.svgElement);//Mask animation
var defs=this.globalData.defs;this.setupGlobalData(animData,defs);this.globalData.progressiveLoad=this.renderConfig.progressiveLoad;this.data=animData;var maskElement=createNS('clipPath');var rect=createNS('rect');rect.setAttribute('width',animData.w);rect.setAttribute('height',animData.h);rect.setAttribute('x',0);rect.setAttribute('y',0);var maskId=createElementID();maskElement.setAttribute('id',maskId);maskElement.appendChild(rect);this.layerElement.setAttribute("clip-path","url("+locationHref+"#"+maskId+")");defs.appendChild(maskElement);this.layers=animData.layers;this.elements=createSizedArray(animData.layers.length);};SVGRenderer.prototype.destroy=function(){this.animationItem.wrapper.innerHTML='';this.layerElement=null;this.globalData.defs=null;var i,len=this.layers?this.layers.length:0;for(i=0;i<len;i++){if(this.elements[i]){this.elements[i].destroy();}}this.elements.length=0;this.destroyed=true;this.animationItem=null;};SVGRenderer.prototype.updateContainerSize=function(){};SVGRenderer.prototype.buildItem=function(pos){var elements=this.elements;if(elements[pos]||this.layers[pos].ty==99){return;}elements[pos]=true;var element=this.createItem(this.layers[pos]);elements[pos]=element;if(expressionsPlugin){if(this.layers[pos].ty===0){this.globalData.projectInterface.registerComposition(element);}element.initExpressions();}this.appendElementInPos(element,pos);if(this.layers[pos].tt){if(!this.elements[pos-1]||this.elements[pos-1]===true){this.buildItem(pos-1);this.addPendingElement(element);}else{element.setMatte(elements[pos-1].layerId);}}};SVGRenderer.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();if(element.data.tt){var i=0,len=this.elements.length;while(i<len){if(this.elements[i]===element){element.setMatte(this.elements[i-1].layerId);break;}i+=1;}}}};SVGRenderer.prototype.renderFrame=function(num){if(this.renderedFrame===num||this.destroyed){return;}if(num===null){num=this.renderedFrame;}else{this.renderedFrame=num;}// console.log('-------');
// console.log('FRAME ',num);
this.globalData.frameNum=num;this.globalData.frameId+=1;this.globalData.projectInterface.currentFrame=num;this.globalData._mdf=false;var i,len=this.layers.length;if(!this.completeLayers){this.checkLayers(num);}for(i=len-1;i>=0;i--){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(num-this.layers[i].st);}}if(this.globalData._mdf){for(i=0;i<len;i+=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}}};SVGRenderer.prototype.appendElementInPos=function(element,pos){var newElement=element.getBaseElement();if(!newElement){return;}var i=0;var nextElement;while(i<pos){if(this.elements[i]&&this.elements[i]!==true&&this.elements[i].getBaseElement()){nextElement=this.elements[i].getBaseElement();}i+=1;}if(nextElement){this.layerElement.insertBefore(newElement,nextElement);}else{this.layerElement.appendChild(newElement);}};SVGRenderer.prototype.hide=function(){this.layerElement.style.display='none';};SVGRenderer.prototype.show=function(){this.layerElement.style.display='block';};function CanvasRenderer(animationItem,config){this.animationItem=animationItem;this.renderConfig={clearCanvas:config&&config.clearCanvas!==undefined?config.clearCanvas:true,context:config&&config.context||null,progressiveLoad:config&&config.progressiveLoad||false,preserveAspectRatio:config&&config.preserveAspectRatio||'xMidYMid meet',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',className:config&&config.className||''};this.renderConfig.dpr=config&&config.dpr||1;if(this.animationItem.wrapper){this.renderConfig.dpr=config&&config.dpr||window.devicePixelRatio||1;}this.renderedFrame=-1;this.globalData={frameNum:-1,_mdf:false,renderConfig:this.renderConfig,currentGlobalAlpha:-1};this.contextData=new CVContextData();this.elements=[];this.pendingElements=[];this.transformMat=new Matrix();this.completeLayers=false;this.rendererType='canvas';}extendPrototype([BaseRenderer],CanvasRenderer);CanvasRenderer.prototype.createShape=function(data){return new CVShapeElement(data,this.globalData,this);};CanvasRenderer.prototype.createText=function(data){return new CVTextElement(data,this.globalData,this);};CanvasRenderer.prototype.createImage=function(data){return new CVImageElement(data,this.globalData,this);};CanvasRenderer.prototype.createComp=function(data){return new CVCompElement(data,this.globalData,this);};CanvasRenderer.prototype.createSolid=function(data){return new CVSolidElement(data,this.globalData,this);};CanvasRenderer.prototype.createNull=SVGRenderer.prototype.createNull;CanvasRenderer.prototype.ctxTransform=function(props){if(props[0]===1&&props[1]===0&&props[4]===0&&props[5]===1&&props[12]===0&&props[13]===0){return;}if(!this.renderConfig.clearCanvas){this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);return;}this.transformMat.cloneFromProps(props);var cProps=this.contextData.cTr.props;this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);//this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
this.contextData.cTr.cloneFromProps(this.transformMat.props);var trProps=this.contextData.cTr.props;this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);};CanvasRenderer.prototype.ctxOpacity=function(op){/*if(op === 1){
        return;
    }*/if(!this.renderConfig.clearCanvas){this.canvasContext.globalAlpha*=op<0?0:op;this.globalData.currentGlobalAlpha=this.contextData.cO;return;}this.contextData.cO*=op<0?0:op;if(this.globalData.currentGlobalAlpha!==this.contextData.cO){this.canvasContext.globalAlpha=this.contextData.cO;this.globalData.currentGlobalAlpha=this.contextData.cO;}};CanvasRenderer.prototype.reset=function(){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return;}this.contextData.reset();};CanvasRenderer.prototype.save=function(actionFlag){if(!this.renderConfig.clearCanvas){this.canvasContext.save();return;}if(actionFlag){this.canvasContext.save();}var props=this.contextData.cTr.props;if(this.contextData._length<=this.contextData.cArrPos){this.contextData.duplicate();}var i,arr=this.contextData.saved[this.contextData.cArrPos];for(i=0;i<16;i+=1){arr[i]=props[i];}this.contextData.savedOp[this.contextData.cArrPos]=this.contextData.cO;this.contextData.cArrPos+=1;};CanvasRenderer.prototype.restore=function(actionFlag){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return;}if(actionFlag){this.canvasContext.restore();this.globalData.blendMode='source-over';}this.contextData.cArrPos-=1;var popped=this.contextData.saved[this.contextData.cArrPos];var i,arr=this.contextData.cTr.props;for(i=0;i<16;i+=1){arr[i]=popped[i];}this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);popped=this.contextData.savedOp[this.contextData.cArrPos];this.contextData.cO=popped;if(this.globalData.currentGlobalAlpha!==popped){this.canvasContext.globalAlpha=popped;this.globalData.currentGlobalAlpha=popped;}};CanvasRenderer.prototype.configAnimation=function(animData){if(this.animationItem.wrapper){this.animationItem.container=createTag('canvas');this.animationItem.container.style.width='100%';this.animationItem.container.style.height='100%';//this.animationItem.container.style.transform = 'translate3d(0,0,0)';
//this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';
this.animationItem.container.style.transformOrigin=this.animationItem.container.style.mozTransformOrigin=this.animationItem.container.style.webkitTransformOrigin=this.animationItem.container.style['-webkit-transform']="0px 0px 0px";this.animationItem.wrapper.appendChild(this.animationItem.container);this.canvasContext=this.animationItem.container.getContext('2d');if(this.renderConfig.className){this.animationItem.container.setAttribute('class',this.renderConfig.className);}}else{this.canvasContext=this.renderConfig.context;}this.data=animData;this.layers=animData.layers;this.transformCanvas={w:animData.w,h:animData.h,sx:0,sy:0,tx:0,ty:0};this.setupGlobalData(animData,document.body);this.globalData.canvasContext=this.canvasContext;this.globalData.renderer=this;this.globalData.isDashed=false;this.globalData.progressiveLoad=this.renderConfig.progressiveLoad;this.globalData.transformCanvas=this.transformCanvas;this.elements=createSizedArray(animData.layers.length);this.updateContainerSize();};CanvasRenderer.prototype.updateContainerSize=function(){this.reset();var elementWidth,elementHeight;if(this.animationItem.wrapper&&this.animationItem.container){elementWidth=this.animationItem.wrapper.offsetWidth;elementHeight=this.animationItem.wrapper.offsetHeight;this.animationItem.container.setAttribute('width',elementWidth*this.renderConfig.dpr);this.animationItem.container.setAttribute('height',elementHeight*this.renderConfig.dpr);}else{elementWidth=this.canvasContext.canvas.width*this.renderConfig.dpr;elementHeight=this.canvasContext.canvas.height*this.renderConfig.dpr;}var elementRel,animationRel;if(this.renderConfig.preserveAspectRatio.indexOf('meet')!==-1||this.renderConfig.preserveAspectRatio.indexOf('slice')!==-1){var par=this.renderConfig.preserveAspectRatio.split(' ');var fillType=par[1]||'meet';var pos=par[0]||'xMidYMid';var xPos=pos.substr(0,4);var yPos=pos.substr(4);elementRel=elementWidth/elementHeight;animationRel=this.transformCanvas.w/this.transformCanvas.h;if(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice'){this.transformCanvas.sx=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);this.transformCanvas.sy=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);}else{this.transformCanvas.sx=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);this.transformCanvas.sy=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);}if(xPos==='xMid'&&(animationRel<elementRel&&fillType==='meet'||animationRel>elementRel&&fillType==='slice')){this.transformCanvas.tx=(elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;}else if(xPos==='xMax'&&(animationRel<elementRel&&fillType==='meet'||animationRel>elementRel&&fillType==='slice')){this.transformCanvas.tx=(elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;}else{this.transformCanvas.tx=0;}if(yPos==='YMid'&&(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice')){this.transformCanvas.ty=(elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2*this.renderConfig.dpr;}else if(yPos==='YMax'&&(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice')){this.transformCanvas.ty=(elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))*this.renderConfig.dpr;}else{this.transformCanvas.ty=0;}}else if(this.renderConfig.preserveAspectRatio=='none'){this.transformCanvas.sx=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);this.transformCanvas.sy=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);this.transformCanvas.tx=0;this.transformCanvas.ty=0;}else{this.transformCanvas.sx=this.renderConfig.dpr;this.transformCanvas.sy=this.renderConfig.dpr;this.transformCanvas.tx=0;this.transformCanvas.ty=0;}this.transformCanvas.props=[this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];/*var i, len = this.elements.length;
    for(i=0;i<len;i+=1){
        if(this.elements[i] && this.elements[i].data.ty === 0){
            this.elements[i].resize(this.globalData.transformCanvas);
        }
    }*/this.ctxTransform(this.transformCanvas.props);this.canvasContext.beginPath();this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);this.canvasContext.closePath();this.canvasContext.clip();this.renderFrame(this.renderedFrame,true);};CanvasRenderer.prototype.destroy=function(){if(this.renderConfig.clearCanvas){this.animationItem.wrapper.innerHTML='';}var i,len=this.layers?this.layers.length:0;for(i=len-1;i>=0;i-=1){if(this.elements[i]){this.elements[i].destroy();}}this.elements.length=0;this.globalData.canvasContext=null;this.animationItem.container=null;this.destroyed=true;};CanvasRenderer.prototype.renderFrame=function(num,forceRender){if(this.renderedFrame===num&&this.renderConfig.clearCanvas===true&&!forceRender||this.destroyed||num===-1){return;}this.renderedFrame=num;this.globalData.frameNum=num-this.animationItem._isFirstFrame;this.globalData.frameId+=1;this.globalData._mdf=!this.renderConfig.clearCanvas||forceRender;this.globalData.projectInterface.currentFrame=num;// console.log('--------');
// console.log('NEW: ',num);
var i,len=this.layers.length;if(!this.completeLayers){this.checkLayers(num);}for(i=0;i<len;i++){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(num-this.layers[i].st);}}if(this.globalData._mdf){if(this.renderConfig.clearCanvas===true){this.canvasContext.clearRect(0,0,this.transformCanvas.w,this.transformCanvas.h);}else{this.save();}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}if(this.renderConfig.clearCanvas!==true){this.restore();}}};CanvasRenderer.prototype.buildItem=function(pos){var elements=this.elements;if(elements[pos]||this.layers[pos].ty==99){return;}var element=this.createItem(this.layers[pos],this,this.globalData);elements[pos]=element;element.initExpressions();/*if(this.layers[pos].ty === 0){
        element.resize(this.globalData.transformCanvas);
    }*/};CanvasRenderer.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();}};CanvasRenderer.prototype.hide=function(){this.animationItem.container.style.display='none';};CanvasRenderer.prototype.show=function(){this.animationItem.container.style.display='block';};function HybridRenderer(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.renderConfig={className:config&&config.className||'',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',hideOnTransparent:config&&config.hideOnTransparent===false?false:true};this.globalData={_mdf:false,frameNum:-1,renderConfig:this.renderConfig};this.pendingElements=[];this.elements=[];this.threeDElements=[];this.destroyed=false;this.camera=null;this.supports3d=true;this.rendererType='html';}extendPrototype([BaseRenderer],HybridRenderer);HybridRenderer.prototype.buildItem=SVGRenderer.prototype.buildItem;HybridRenderer.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();}};HybridRenderer.prototype.appendElementInPos=function(element,pos){var newDOMElement=element.getBaseElement();if(!newDOMElement){return;}var layer=this.layers[pos];if(!layer.ddd||!this.supports3d){if(this.threeDElements){this.addTo3dContainer(newDOMElement,pos);}else{var i=0;var nextDOMElement,nextLayer,tmpDOMElement;while(i<pos){if(this.elements[i]&&this.elements[i]!==true&&this.elements[i].getBaseElement){nextLayer=this.elements[i];tmpDOMElement=this.layers[i].ddd?this.getThreeDContainerByPos(i):nextLayer.getBaseElement();nextDOMElement=tmpDOMElement||nextDOMElement;}i+=1;}if(nextDOMElement){if(!layer.ddd||!this.supports3d){this.layerElement.insertBefore(newDOMElement,nextDOMElement);}}else{if(!layer.ddd||!this.supports3d){this.layerElement.appendChild(newDOMElement);}}}}else{this.addTo3dContainer(newDOMElement,pos);}};HybridRenderer.prototype.createShape=function(data){if(!this.supports3d){return new SVGShapeElement(data,this.globalData,this);}return new HShapeElement(data,this.globalData,this);};HybridRenderer.prototype.createText=function(data){if(!this.supports3d){return new SVGTextElement(data,this.globalData,this);}return new HTextElement(data,this.globalData,this);};HybridRenderer.prototype.createCamera=function(data){this.camera=new HCameraElement(data,this.globalData,this);return this.camera;};HybridRenderer.prototype.createImage=function(data){if(!this.supports3d){return new IImageElement(data,this.globalData,this);}return new HImageElement(data,this.globalData,this);};HybridRenderer.prototype.createComp=function(data){if(!this.supports3d){return new SVGCompElement(data,this.globalData,this);}return new HCompElement(data,this.globalData,this);};HybridRenderer.prototype.createSolid=function(data){if(!this.supports3d){return new ISolidElement(data,this.globalData,this);}return new HSolidElement(data,this.globalData,this);};HybridRenderer.prototype.createNull=SVGRenderer.prototype.createNull;HybridRenderer.prototype.getThreeDContainerByPos=function(pos){var i=0,len=this.threeDElements.length;while(i<len){if(this.threeDElements[i].startPos<=pos&&this.threeDElements[i].endPos>=pos){return this.threeDElements[i].perspectiveElem;}i+=1;}};HybridRenderer.prototype.createThreeDContainer=function(pos,type){var perspectiveElem=createTag('div');styleDiv(perspectiveElem);var container=createTag('div');styleDiv(container);if(type==='3d'){perspectiveElem.style.width=this.globalData.compSize.w+'px';perspectiveElem.style.height=this.globalData.compSize.h+'px';perspectiveElem.style.transformOrigin=perspectiveElem.style.mozTransformOrigin=perspectiveElem.style.webkitTransformOrigin="50% 50%";container.style.transform=container.style.webkitTransform='matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';}perspectiveElem.appendChild(container);//this.resizerElem.appendChild(perspectiveElem);
var threeDContainerData={container:container,perspectiveElem:perspectiveElem,startPos:pos,endPos:pos,type:type};this.threeDElements.push(threeDContainerData);return threeDContainerData;};HybridRenderer.prototype.build3dContainers=function(){var i,len=this.layers.length;var lastThreeDContainerData;var currentContainer='';for(i=0;i<len;i+=1){if(this.layers[i].ddd&&this.layers[i].ty!==3){if(currentContainer!=='3d'){currentContainer='3d';lastThreeDContainerData=this.createThreeDContainer(i,'3d');}lastThreeDContainerData.endPos=Math.max(lastThreeDContainerData.endPos,i);}else{if(currentContainer!=='2d'){currentContainer='2d';lastThreeDContainerData=this.createThreeDContainer(i,'2d');}lastThreeDContainerData.endPos=Math.max(lastThreeDContainerData.endPos,i);}}len=this.threeDElements.length;for(i=len-1;i>=0;i--){this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);}};HybridRenderer.prototype.addTo3dContainer=function(elem,pos){var i=0,len=this.threeDElements.length;while(i<len){if(pos<=this.threeDElements[i].endPos){var j=this.threeDElements[i].startPos;var nextElement;while(j<pos){if(this.elements[j]&&this.elements[j].getBaseElement){nextElement=this.elements[j].getBaseElement();}j+=1;}if(nextElement){this.threeDElements[i].container.insertBefore(elem,nextElement);}else{this.threeDElements[i].container.appendChild(elem);}break;}i+=1;}};HybridRenderer.prototype.configAnimation=function(animData){var resizerElem=createTag('div');var wrapper=this.animationItem.wrapper;resizerElem.style.width=animData.w+'px';resizerElem.style.height=animData.h+'px';this.resizerElem=resizerElem;styleDiv(resizerElem);resizerElem.style.transformStyle=resizerElem.style.webkitTransformStyle=resizerElem.style.mozTransformStyle="flat";if(this.renderConfig.className){resizerElem.setAttribute('class',this.renderConfig.className);}wrapper.appendChild(resizerElem);resizerElem.style.overflow='hidden';var svg=createNS('svg');svg.setAttribute('width','1');svg.setAttribute('height','1');styleDiv(svg);this.resizerElem.appendChild(svg);var defs=createNS('defs');svg.appendChild(defs);this.data=animData;//Mask animation
this.setupGlobalData(animData,svg);this.globalData.defs=defs;this.layers=animData.layers;this.layerElement=this.resizerElem;this.build3dContainers();this.updateContainerSize();};HybridRenderer.prototype.destroy=function(){this.animationItem.wrapper.innerHTML='';this.animationItem.container=null;this.globalData.defs=null;var i,len=this.layers?this.layers.length:0;for(i=0;i<len;i++){this.elements[i].destroy();}this.elements.length=0;this.destroyed=true;this.animationItem=null;};HybridRenderer.prototype.updateContainerSize=function(){var elementWidth=this.animationItem.wrapper.offsetWidth;var elementHeight=this.animationItem.wrapper.offsetHeight;var elementRel=elementWidth/elementHeight;var animationRel=this.globalData.compSize.w/this.globalData.compSize.h;var sx,sy,tx,ty;if(animationRel>elementRel){sx=elementWidth/this.globalData.compSize.w;sy=elementWidth/this.globalData.compSize.w;tx=0;ty=(elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2;}else{sx=elementHeight/this.globalData.compSize.h;sy=elementHeight/this.globalData.compSize.h;tx=(elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;ty=0;}this.resizerElem.style.transform=this.resizerElem.style.webkitTransform='matrix3d('+sx+',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';};HybridRenderer.prototype.renderFrame=SVGRenderer.prototype.renderFrame;HybridRenderer.prototype.hide=function(){this.resizerElem.style.display='none';};HybridRenderer.prototype.show=function(){this.resizerElem.style.display='block';};HybridRenderer.prototype.initItems=function(){this.buildAllItems();if(this.camera){this.camera.setup();}else{var cWidth=this.globalData.compSize.w;var cHeight=this.globalData.compSize.h;var i,len=this.threeDElements.length;for(i=0;i<len;i+=1){this.threeDElements[i].perspectiveElem.style.perspective=this.threeDElements[i].perspectiveElem.style.webkitPerspective=Math.sqrt(Math.pow(cWidth,2)+Math.pow(cHeight,2))+'px';}}};HybridRenderer.prototype.searchExtraCompositions=function(assets){var i,len=assets.length;var floatingContainer=createTag('div');for(i=0;i<len;i+=1){if(assets[i].xt){var comp=this.createComp(assets[i],floatingContainer,this.globalData.comp,null);comp.initExpressions();this.globalData.projectInterface.registerComposition(comp);}}};function MaskElement(data,element,globalData){this.data=data;this.element=element;this.globalData=globalData;this.storedData=[];this.masksProperties=this.data.masksProperties||[];this.maskElement=null;var defs=this.globalData.defs;var i,len=this.masksProperties?this.masksProperties.length:0;this.viewData=createSizedArray(len);this.solidPath='';var path,properties=this.masksProperties;var count=0;var currentMasks=[];var j,jLen;var layerId=createElementID();var rect,expansor,feMorph,x;var maskType='clipPath',maskRef='clip-path';for(i=0;i<len;i++){if(properties[i].mode!=='a'&&properties[i].mode!=='n'||properties[i].inv||properties[i].o.k!==100||properties[i].o.x){maskType='mask';maskRef='mask';}if((properties[i].mode=='s'||properties[i].mode=='i')&&count===0){rect=createNS('rect');rect.setAttribute('fill','#ffffff');rect.setAttribute('width',this.element.comp.data.w||0);rect.setAttribute('height',this.element.comp.data.h||0);currentMasks.push(rect);}else{rect=null;}path=createNS('path');if(properties[i].mode=='n'){// TODO move this to a factory or to a constructor
this.viewData[i]={op:PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),elem:path,lastPath:''};defs.appendChild(path);continue;}count+=1;path.setAttribute('fill',properties[i].mode==='s'?'#000000':'#ffffff');path.setAttribute('clip-rule','nonzero');var filterID;if(properties[i].x.k!==0){maskType='mask';maskRef='mask';x=PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);filterID=createElementID();expansor=createNS('filter');expansor.setAttribute('id',filterID);feMorph=createNS('feMorphology');feMorph.setAttribute('operator','erode');feMorph.setAttribute('in','SourceGraphic');feMorph.setAttribute('radius','0');expansor.appendChild(feMorph);defs.appendChild(expansor);path.setAttribute('stroke',properties[i].mode==='s'?'#000000':'#ffffff');}else{feMorph=null;x=null;}// TODO move this to a factory or to a constructor
this.storedData[i]={elem:path,x:x,expan:feMorph,lastPath:'',lastOperator:'',filterId:filterID,lastRadius:0};if(properties[i].mode=='i'){jLen=currentMasks.length;var g=createNS('g');for(j=0;j<jLen;j+=1){g.appendChild(currentMasks[j]);}var mask=createNS('mask');mask.setAttribute('mask-type','alpha');mask.setAttribute('id',layerId+'_'+count);mask.appendChild(path);defs.appendChild(mask);g.setAttribute('mask','url('+locationHref+'#'+layerId+'_'+count+')');currentMasks.length=0;currentMasks.push(g);}else{currentMasks.push(path);}if(properties[i].inv&&!this.solidPath){this.solidPath=this.createLayerSolidPath();}// TODO move this to a factory or to a constructor
this.viewData[i]={elem:path,lastPath:'',op:PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),invRect:rect};if(!this.viewData[i].prop.k){this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);}}this.maskElement=createNS(maskType);len=currentMasks.length;for(i=0;i<len;i+=1){this.maskElement.appendChild(currentMasks[i]);}if(count>0){this.maskElement.setAttribute('id',layerId);this.element.maskedElement.setAttribute(maskRef,"url("+locationHref+"#"+layerId+")");defs.appendChild(this.maskElement);}if(this.viewData.length){this.element.addRenderableComponent(this);}}MaskElement.prototype.getMaskProperty=function(pos){return this.viewData[pos].prop;};MaskElement.prototype.renderFrame=function(isFirstFrame){var finalMat=this.element.finalTransform.mat;var i,len=this.masksProperties.length;for(i=0;i<len;i++){if(this.viewData[i].prop._mdf||isFirstFrame){this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);}if(this.viewData[i].op._mdf||isFirstFrame){this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);}if(this.masksProperties[i].mode!=='n'){if(this.viewData[i].invRect&&(this.element.finalTransform.mProp._mdf||isFirstFrame)){this.viewData[i].invRect.setAttribute('transform',finalMat.getInverseMatrix().to2dCSS());}if(this.storedData[i].x&&(this.storedData[i].x._mdf||isFirstFrame)){var feMorph=this.storedData[i].expan;if(this.storedData[i].x.v<0){if(this.storedData[i].lastOperator!=='erode'){this.storedData[i].lastOperator='erode';this.storedData[i].elem.setAttribute('filter','url('+locationHref+'#'+this.storedData[i].filterId+')');}feMorph.setAttribute('radius',-this.storedData[i].x.v);}else{if(this.storedData[i].lastOperator!=='dilate'){this.storedData[i].lastOperator='dilate';this.storedData[i].elem.setAttribute('filter',null);}this.storedData[i].elem.setAttribute('stroke-width',this.storedData[i].x.v*2);}}}}};MaskElement.prototype.getMaskelement=function(){return this.maskElement;};MaskElement.prototype.createLayerSolidPath=function(){var path='M0,0 ';path+=' h'+this.globalData.compSize.w;path+=' v'+this.globalData.compSize.h;path+=' h-'+this.globalData.compSize.w;path+=' v-'+this.globalData.compSize.h+' ';return path;};MaskElement.prototype.drawPath=function(pathData,pathNodes,viewData){var pathString=" M"+pathNodes.v[0][0]+','+pathNodes.v[0][1];var i,len;len=pathNodes._length;for(i=1;i<len;i+=1){//pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
pathString+=" C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1]+" "+pathNodes.i[i][0]+','+pathNodes.i[i][1]+" "+pathNodes.v[i][0]+','+pathNodes.v[i][1];}//pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
if(pathNodes.c&&len>1){pathString+=" C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1]+" "+pathNodes.i[0][0]+','+pathNodes.i[0][1]+" "+pathNodes.v[0][0]+','+pathNodes.v[0][1];}//pathNodes.__renderedString = pathString;
if(viewData.lastPath!==pathString){var pathShapeValue='';if(viewData.elem){if(pathNodes.c){pathShapeValue=pathData.inv?this.solidPath+pathString:pathString;}viewData.elem.setAttribute('d',pathShapeValue);}viewData.lastPath=pathString;}};MaskElement.prototype.destroy=function(){this.element=null;this.globalData=null;this.maskElement=null;this.data=null;this.masksProperties=null;};/**
 * @file 
 * Handles AE's layer parenting property.
 *
 */function HierarchyElement(){}HierarchyElement.prototype={/**
     * @function 
     * Initializes hierarchy properties
     *
     */initHierarchy:function initHierarchy(){//element's parent list
this.hierarchy=[];//if element is parent of another layer _isParent will be true
this._isParent=false;this.checkParenting();},/**
     * @function 
     * Sets layer's hierarchy.
     * @param {array} hierarch
     * layer's parent list
     *
     */setHierarchy:function setHierarchy(hierarchy){this.hierarchy=hierarchy;},/**
     * @function 
     * Sets layer as parent.
     *
     */setAsParent:function setAsParent(){this._isParent=true;},/**
     * @function 
     * Searches layer's parenting chain
     *
     */checkParenting:function checkParenting(){if(this.data.parent!==undefined){this.comp.buildElementParenting(this,this.data.parent,[]);}}};/**
 * @file 
 * Handles element's layer frame update.
 * Checks layer in point and out point
 *
 */function FrameElement(){}FrameElement.prototype={/**
     * @function 
     * Initializes frame related properties.
     *
     */initFrame:function initFrame(){//set to true when inpoint is rendered
this._isFirstFrame=false;//list of animated properties
this.dynamicProperties=[];// If layer has been modified in current tick this will be true
this._mdf=false;},/**
     * @function 
     * Calculates all dynamic values
     *
     * @param {number} num
     * current frame number in Layer's time
     * @param {boolean} isVisible
     * if layers is currently in range
     * 
     */prepareProperties:function prepareProperties(num,isVisible){var i,len=this.dynamicProperties.length;for(i=0;i<len;i+=1){if(isVisible||this._isParent&&this.dynamicProperties[i].propType==='transform'){this.dynamicProperties[i].getValue();if(this.dynamicProperties[i]._mdf){this.globalData._mdf=true;this._mdf=true;}}}},addDynamicProperty:function addDynamicProperty(prop){if(this.dynamicProperties.indexOf(prop)===-1){this.dynamicProperties.push(prop);}}};function TransformElement(){}TransformElement.prototype={initTransform:function initTransform(){this.finalTransform={mProp:this.data.ks?TransformPropertyFactory.getTransformProperty(this,this.data.ks,this):{o:0},_matMdf:false,_opMdf:false,mat:new Matrix()};if(this.data.ao){this.finalTransform.mProp.autoOriented=true;}//TODO: check TYPE 11: Guided elements
if(this.data.ty!==11){//this.createElements();
}},renderTransform:function renderTransform(){this.finalTransform._opMdf=this.finalTransform.mProp.o._mdf||this._isFirstFrame;this.finalTransform._matMdf=this.finalTransform.mProp._mdf||this._isFirstFrame;if(this.hierarchy){var mat;var finalMat=this.finalTransform.mat;var i=0,len=this.hierarchy.length;//Checking if any of the transformation matrices in the hierarchy chain has changed.
if(!this.finalTransform._matMdf){while(i<len){if(this.hierarchy[i].finalTransform.mProp._mdf){this.finalTransform._matMdf=true;break;}i+=1;}}if(this.finalTransform._matMdf){mat=this.finalTransform.mProp.v.props;finalMat.cloneFromProps(mat);for(i=0;i<len;i+=1){mat=this.hierarchy[i].finalTransform.mProp.v.props;finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);}}}},globalToLocal:function globalToLocal(pt){var transforms=[];transforms.push(this.finalTransform);var flag=true;var comp=this.comp;while(flag){if(comp.finalTransform){if(comp.data.hasMask){transforms.splice(0,0,comp.finalTransform);}comp=comp.comp;}else{flag=false;}}var i,len=transforms.length,ptNew;for(i=0;i<len;i+=1){ptNew=transforms[i].mat.applyToPointArray(0,0,0);//ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
pt=[pt[0]-ptNew[0],pt[1]-ptNew[1],0];}return pt;},mHelper:new Matrix()};function RenderableElement(){}RenderableElement.prototype={initRenderable:function initRenderable(){//layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
this.isInRange=false;//layer's display state
this.hidden=false;// If layer's transparency equals 0, it can be hidden
this.isTransparent=false;//list of animated components
this.renderableComponents=[];},addRenderableComponent:function addRenderableComponent(component){if(this.renderableComponents.indexOf(component)===-1){this.renderableComponents.push(component);}},removeRenderableComponent:function removeRenderableComponent(component){if(this.renderableComponents.indexOf(component)!==-1){this.renderableComponents.splice(this.renderableComponents.indexOf(component),1);}},prepareRenderableFrame:function prepareRenderableFrame(num){this.checkLayerLimits(num);},checkTransparency:function checkTransparency(){if(this.finalTransform.mProp.o.v<=0){if(!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent){this.isTransparent=true;this.hide();}}else if(this.isTransparent){this.isTransparent=false;this.show();}},/**
     * @function 
     * Initializes frame related properties.
     *
     * @param {number} num
     * current frame number in Layer's time
     * 
     */checkLayerLimits:function checkLayerLimits(num){if(this.data.ip-this.data.st<=num&&this.data.op-this.data.st>num){if(this.isInRange!==true){this.globalData._mdf=true;this._mdf=true;this.isInRange=true;this.show();}}else{if(this.isInRange!==false){this.globalData._mdf=true;this.isInRange=false;this.hide();}}},renderRenderable:function renderRenderable(){var i,len=this.renderableComponents.length;for(i=0;i<len;i+=1){this.renderableComponents[i].renderFrame(this._isFirstFrame);}/*this.maskManager.renderFrame(this.finalTransform.mat);
        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/},sourceRectAtTime:function sourceRectAtTime(){return{top:0,left:0,width:100,height:100};},getLayerSize:function getLayerSize(){if(this.data.ty===5){return{w:this.data.textData.width,h:this.data.textData.height};}else{return{w:this.data.width,h:this.data.height};}}};function RenderableDOMElement(){}(function(){var _prototype={initElement:function initElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initTransform(data,globalData,comp);this.initHierarchy();this.initRenderable();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();this.createContent();this.hide();},hide:function hide(){if(!this.hidden&&(!this.isInRange||this.isTransparent)){var elem=this.baseElement||this.layerElement;elem.style.display='none';this.hidden=true;}},show:function show(){if(this.isInRange&&!this.isTransparent){if(!this.data.hd){var elem=this.baseElement||this.layerElement;elem.style.display='block';}this.hidden=false;this._isFirstFrame=true;}},renderFrame:function renderFrame(){//If it is exported as hidden (data.hd === true) no need to render
//If it is not visible no need to render
if(this.data.hd||this.hidden){return;}this.renderTransform();this.renderRenderable();this.renderElement();this.renderInnerContent();if(this._isFirstFrame){this._isFirstFrame=false;}},renderInnerContent:function renderInnerContent(){},prepareFrame:function prepareFrame(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);this.checkTransparency();},destroy:function destroy(){this.innerElem=null;this.destroyBaseElement();}};extendPrototype([RenderableElement,createProxyFunction(_prototype)],RenderableDOMElement);})();function ProcessedElement(element,position){this.elem=element;this.pos=position;}function SVGStyleData(data,level){this.data=data;this.type=data.ty;this.d='';this.lvl=level;this._mdf=false;this.closed=data.hd===true;this.pElem=createNS('path');this.msElem=null;}SVGStyleData.prototype.reset=function(){this.d='';this._mdf=false;};function SVGShapeData(transformers,level,shape){this.caches=[];this.styles=[];this.transformers=transformers;this.lStr='';this.sh=shape;this.lvl=level;//TODO find if there are some cases where _isAnimated can be false. 
// For now, since shapes add up with other shapes. They have to be calculated every time.
// One way of finding out is checking if all styles associated to this shape depend only of this shape
this._isAnimated=!!shape.k;// TODO: commenting this for now since all shapes are animated
var i=0,len=transformers.length;while(i<len){if(transformers[i].mProps.dynamicProperties.length){this._isAnimated=true;break;}i+=1;}}SVGShapeData.prototype.setAsAnimated=function(){this._isAnimated=true;};function SVGTransformData(mProps,op,container){this.transform={mProps:mProps,op:op,container:container};this.elements=[];this._isAnimated=this.transform.mProps.dynamicProperties.length||this.transform.op.effectsSequence.length;}function SVGStrokeStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.w=PropertyFactory.getProp(elem,data.w,0,null,this);this.d=new DashProperty(elem,data.d||{},'svg',this);this.c=PropertyFactory.getProp(elem,data.c,1,255,this);this.style=styleOb;this._isAnimated=!!this._isAnimated;}extendPrototype([DynamicPropertyContainer],SVGStrokeStyleData);function SVGFillStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.c=PropertyFactory.getProp(elem,data.c,1,255,this);this.style=styleOb;}extendPrototype([DynamicPropertyContainer],SVGFillStyleData);function SVGGradientFillStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.initGradientData(elem,data,styleOb);}SVGGradientFillStyleData.prototype.initGradientData=function(elem,data,styleOb){this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.s=PropertyFactory.getProp(elem,data.s,1,null,this);this.e=PropertyFactory.getProp(elem,data.e,1,null,this);this.h=PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);this.a=PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);this.g=new GradientProperty(elem,data.g,this);this.style=styleOb;this.stops=[];this.setGradientData(styleOb.pElem,data);this.setGradientOpacity(data,styleOb);this._isAnimated=!!this._isAnimated;};SVGGradientFillStyleData.prototype.setGradientData=function(pathElement,data){var gradientId=createElementID();var gfill=createNS(data.t===1?'linearGradient':'radialGradient');gfill.setAttribute('id',gradientId);gfill.setAttribute('spreadMethod','pad');gfill.setAttribute('gradientUnits','userSpaceOnUse');var stops=[];var stop,j,jLen;jLen=data.g.p*4;for(j=0;j<jLen;j+=4){stop=createNS('stop');gfill.appendChild(stop);stops.push(stop);}pathElement.setAttribute(data.ty==='gf'?'fill':'stroke','url('+locationHref+'#'+gradientId+')');this.gf=gfill;this.cst=stops;};SVGGradientFillStyleData.prototype.setGradientOpacity=function(data,styleOb){if(this.g._hasOpacity&&!this.g._collapsable){var stop,j,jLen;var mask=createNS("mask");var maskElement=createNS('path');mask.appendChild(maskElement);var opacityId=createElementID();var maskId=createElementID();mask.setAttribute('id',maskId);var opFill=createNS(data.t===1?'linearGradient':'radialGradient');opFill.setAttribute('id',opacityId);opFill.setAttribute('spreadMethod','pad');opFill.setAttribute('gradientUnits','userSpaceOnUse');jLen=data.g.k.k[0].s?data.g.k.k[0].s.length:data.g.k.k.length;var stops=this.stops;for(j=data.g.p*4;j<jLen;j+=2){stop=createNS('stop');stop.setAttribute('stop-color','rgb(255,255,255)');opFill.appendChild(stop);stops.push(stop);}maskElement.setAttribute(data.ty==='gf'?'fill':'stroke','url('+locationHref+'#'+opacityId+')');this.of=opFill;this.ms=mask;this.ost=stops;this.maskId=maskId;styleOb.msElem=maskElement;}};extendPrototype([DynamicPropertyContainer],SVGGradientFillStyleData);function SVGGradientStrokeStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.w=PropertyFactory.getProp(elem,data.w,0,null,this);this.d=new DashProperty(elem,data.d||{},'svg',this);this.initGradientData(elem,data,styleOb);this._isAnimated=!!this._isAnimated;}extendPrototype([SVGGradientFillStyleData,DynamicPropertyContainer],SVGGradientStrokeStyleData);function ShapeGroupData(){this.it=[];this.prevViewData=[];this.gr=createNS('g');}var SVGElementsRenderer=function(){var _identityMatrix=new Matrix();var _matrixHelper=new Matrix();var ob={createRenderFunction:createRenderFunction};function createRenderFunction(data){var ty=data.ty;switch(data.ty){case'fl':return renderFill;case'gf':return renderGradient;case'gs':return renderGradientStroke;case'st':return renderStroke;case'sh':case'el':case'rc':case'sr':return renderPath;case'tr':return renderContentTransform;}}function renderContentTransform(styleData,itemData,isFirstFrame){if(isFirstFrame||itemData.transform.op._mdf){itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);}if(isFirstFrame||itemData.transform.mProps._mdf){itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());}}function renderPath(styleData,itemData,isFirstFrame){var j,jLen,pathStringTransformed,redraw,pathNodes,l,lLen=itemData.styles.length;var lvl=itemData.lvl;var paths,mat,props,iterations,k;for(l=0;l<lLen;l+=1){redraw=itemData.sh._mdf||isFirstFrame;if(itemData.styles[l].lvl<lvl){mat=_matrixHelper.reset();iterations=lvl-itemData.styles[l].lvl;k=itemData.transformers.length-1;while(!redraw&&iterations>0){redraw=itemData.transformers[k].mProps._mdf||redraw;iterations--;k--;}if(redraw){iterations=lvl-itemData.styles[l].lvl;k=itemData.transformers.length-1;while(iterations>0){props=itemData.transformers[k].mProps.v.props;mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);iterations--;k--;}}}else{mat=_identityMatrix;}paths=itemData.sh.paths;jLen=paths._length;if(redraw){pathStringTransformed='';for(j=0;j<jLen;j+=1){pathNodes=paths.shapes[j];if(pathNodes&&pathNodes._length){pathStringTransformed+=buildShapeString(pathNodes,pathNodes._length,pathNodes.c,mat);}}itemData.caches[l]=pathStringTransformed;}else{pathStringTransformed=itemData.caches[l];}itemData.styles[l].d+=styleData.hd===true?'':pathStringTransformed;itemData.styles[l]._mdf=redraw||itemData.styles[l]._mdf;}}function renderFill(styleData,itemData,isFirstFrame){var styleElem=itemData.style;if(itemData.c._mdf||isFirstFrame){styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');}if(itemData.o._mdf||isFirstFrame){styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);}};function renderGradientStroke(styleData,itemData,isFirstFrame){renderGradient(styleData,itemData,isFirstFrame);renderStroke(styleData,itemData,isFirstFrame);}function renderGradient(styleData,itemData,isFirstFrame){var gfill=itemData.gf;var hasOpacity=itemData.g._hasOpacity;var pt1=itemData.s.v,pt2=itemData.e.v;if(itemData.o._mdf||isFirstFrame){var attr=styleData.ty==='gf'?'fill-opacity':'stroke-opacity';itemData.style.pElem.setAttribute(attr,itemData.o.v);}if(itemData.s._mdf||isFirstFrame){var attr1=styleData.t===1?'x1':'cx';var attr2=attr1==='x1'?'y1':'cy';gfill.setAttribute(attr1,pt1[0]);gfill.setAttribute(attr2,pt1[1]);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute(attr1,pt1[0]);itemData.of.setAttribute(attr2,pt1[1]);}}var stops,i,len,stop;if(itemData.g._cmdf||isFirstFrame){stops=itemData.cst;var cValues=itemData.g.c;len=stops.length;for(i=0;i<len;i+=1){stop=stops[i];stop.setAttribute('offset',cValues[i*4]+'%');stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');}}if(hasOpacity&&(itemData.g._omdf||isFirstFrame)){var oValues=itemData.g.o;if(itemData.g._collapsable){stops=itemData.cst;}else{stops=itemData.ost;}len=stops.length;for(i=0;i<len;i+=1){stop=stops[i];if(!itemData.g._collapsable){stop.setAttribute('offset',oValues[i*2]+'%');}stop.setAttribute('stop-opacity',oValues[i*2+1]);}}if(styleData.t===1){if(itemData.e._mdf||isFirstFrame){gfill.setAttribute('x2',pt2[0]);gfill.setAttribute('y2',pt2[1]);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('x2',pt2[0]);itemData.of.setAttribute('y2',pt2[1]);}}}else{var rad;if(itemData.s._mdf||itemData.e._mdf||isFirstFrame){rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));gfill.setAttribute('r',rad);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('r',rad);}}if(itemData.e._mdf||itemData.h._mdf||itemData.a._mdf||isFirstFrame){if(!rad){rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));}var ang=Math.atan2(pt2[1]-pt1[1],pt2[0]-pt1[0]);var percent=itemData.h.v>=1?0.99:itemData.h.v<=-1?-0.99:itemData.h.v;var dist=rad*percent;var x=Math.cos(ang+itemData.a.v)*dist+pt1[0];var y=Math.sin(ang+itemData.a.v)*dist+pt1[1];gfill.setAttribute('fx',x);gfill.setAttribute('fy',y);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('fx',x);itemData.of.setAttribute('fy',y);}}//gfill.setAttribute('fy','200');
}};function renderStroke(styleData,itemData,isFirstFrame){var styleElem=itemData.style;var d=itemData.d;if(d&&(d._mdf||isFirstFrame)&&d.dashStr){styleElem.pElem.setAttribute('stroke-dasharray',d.dashStr);styleElem.pElem.setAttribute('stroke-dashoffset',d.dashoffset[0]);}if(itemData.c&&(itemData.c._mdf||isFirstFrame)){styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');}if(itemData.o._mdf||isFirstFrame){styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);}if(itemData.w._mdf||isFirstFrame){styleElem.pElem.setAttribute('stroke-width',itemData.w.v);if(styleElem.msElem){styleElem.msElem.setAttribute('stroke-width',itemData.w.v);}}};return ob;}();function ShapeTransformManager(){this.sequences={};this.sequenceList=[];this.transform_key_count=0;}ShapeTransformManager.prototype={addTransformSequence:function addTransformSequence(transforms){var i,len=transforms.length;var key='_';for(i=0;i<len;i+=1){key+=transforms[i].transform.key+'_';}var sequence=this.sequences[key];if(!sequence){sequence={transforms:[].concat(transforms),finalTransform:new Matrix(),_mdf:false};this.sequences[key]=sequence;this.sequenceList.push(sequence);}return sequence;},processSequence:function processSequence(sequence,isFirstFrame){var i=0,len=sequence.transforms.length,_mdf=isFirstFrame;while(i<len&&!isFirstFrame){if(sequence.transforms[i].transform.mProps._mdf){_mdf=true;break;}i+=1;}if(_mdf){var props;sequence.finalTransform.reset();for(i=len-1;i>=0;i-=1){props=sequence.transforms[i].transform.mProps.v.props;sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);}}sequence._mdf=_mdf;},processSequences:function processSequences(isFirstFrame){var i,len=this.sequenceList.length;for(i=0;i<len;i+=1){this.processSequence(this.sequenceList[i],isFirstFrame);}},getNewKey:function getNewKey(){return'_'+this.transform_key_count++;}};function CVShapeData(element,data,styles,transformsManager){this.styledShapes=[];this.tr=[0,0,0,0,0,0];var ty=4;if(data.ty=='rc'){ty=5;}else if(data.ty=='el'){ty=6;}else if(data.ty=='sr'){ty=7;}this.sh=ShapePropertyFactory.getShapeProp(element,data,ty,element);var i,len=styles.length,styledShape;for(i=0;i<len;i+=1){if(!styles[i].closed){styledShape={transforms:transformsManager.addTransformSequence(styles[i].transforms),trNodes:[]};this.styledShapes.push(styledShape);styles[i].elements.push(styledShape);}}}CVShapeData.prototype.setAsAnimated=SVGShapeData.prototype.setAsAnimated;function BaseElement(){}BaseElement.prototype={checkMasks:function checkMasks(){if(!this.data.hasMask){return false;}var i=0,len=this.data.masksProperties.length;while(i<len){if(this.data.masksProperties[i].mode!=='n'&&this.data.masksProperties[i].cl!==false){return true;}i+=1;}return false;},initExpressions:function initExpressions(){this.layerInterface=LayerExpressionInterface(this);if(this.data.hasMask&&this.maskManager){this.layerInterface.registerMaskInterface(this.maskManager);}var effectsInterface=EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(effectsInterface);if(this.data.ty===0||this.data.xt){this.compInterface=CompExpressionInterface(this);}else if(this.data.ty===4){this.layerInterface.shapeInterface=ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);this.layerInterface.content=this.layerInterface.shapeInterface;}else if(this.data.ty===5){this.layerInterface.textInterface=TextExpressionInterface(this);this.layerInterface.text=this.layerInterface.textInterface;}},setBlendMode:function setBlendMode(){var blendModeValue=getBlendMode(this.data.bm);var elem=this.baseElement||this.layerElement;elem.style['mix-blend-mode']=blendModeValue;},initBaseData:function initBaseData(data,globalData,comp){this.globalData=globalData;this.comp=comp;this.data=data;this.layerId=createElementID();//Stretch factor for old animations missing this property.
if(!this.data.sr){this.data.sr=1;}// effects manager
this.effectsManager=new EffectsManager(this.data,this,this.dynamicProperties);},getType:function getType(){return this.type;},sourceRectAtTime:function sourceRectAtTime(){}};function NullElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initFrame();this.initTransform(data,globalData,comp);this.initHierarchy();}NullElement.prototype.prepareFrame=function(num){this.prepareProperties(num,true);};NullElement.prototype.renderFrame=function(){};NullElement.prototype.getBaseElement=function(){return null;};NullElement.prototype.destroy=function(){};NullElement.prototype.sourceRectAtTime=function(){};NullElement.prototype.hide=function(){};extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement],NullElement);function SVGBaseElement(){}SVGBaseElement.prototype={initRendererElement:function initRendererElement(){this.layerElement=createNS('g');},createContainerElements:function createContainerElements(){this.matteElement=createNS('g');this.transformedElement=this.layerElement;this.maskedElement=this.layerElement;this._sizeChanged=false;var layerElementParent=null;//If this layer acts as a mask for the following layer
var filId,fil,gg;if(this.data.td){if(this.data.td==3||this.data.td==1){var masker=createNS('mask');masker.setAttribute('id',this.layerId);masker.setAttribute('mask-type',this.data.td==3?'luminance':'alpha');masker.appendChild(this.layerElement);layerElementParent=masker;this.globalData.defs.appendChild(masker);// This is only for IE and Edge when mask if of type alpha
if(!featureSupport.maskType&&this.data.td==1){masker.setAttribute('mask-type','luminance');filId=createElementID();fil=filtersFactory.createFilter(filId);this.globalData.defs.appendChild(fil);fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());gg=createNS('g');gg.appendChild(this.layerElement);layerElementParent=gg;masker.appendChild(gg);gg.setAttribute('filter','url('+locationHref+'#'+filId+')');}}else if(this.data.td==2){var maskGroup=createNS('mask');maskGroup.setAttribute('id',this.layerId);maskGroup.setAttribute('mask-type','alpha');var maskGrouper=createNS('g');maskGroup.appendChild(maskGrouper);filId=createElementID();fil=filtersFactory.createFilter(filId);////
// This solution doesn't work on Android when meta tag with viewport attribute is set
/*var feColorMatrix = createNS('feColorMatrix');
                feColorMatrix.setAttribute('type', 'matrix');
                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');
                fil.appendChild(feColorMatrix);*/ ////
var feCTr=createNS('feComponentTransfer');feCTr.setAttribute('in','SourceGraphic');fil.appendChild(feCTr);var feFunc=createNS('feFuncA');feFunc.setAttribute('type','table');feFunc.setAttribute('tableValues','1.0 0.0');feCTr.appendChild(feFunc);////
this.globalData.defs.appendChild(fil);var alphaRect=createNS('rect');alphaRect.setAttribute('width',this.comp.data.w);alphaRect.setAttribute('height',this.comp.data.h);alphaRect.setAttribute('x','0');alphaRect.setAttribute('y','0');alphaRect.setAttribute('fill','#ffffff');alphaRect.setAttribute('opacity','0');maskGrouper.setAttribute('filter','url('+locationHref+'#'+filId+')');maskGrouper.appendChild(alphaRect);maskGrouper.appendChild(this.layerElement);layerElementParent=maskGrouper;if(!featureSupport.maskType){maskGroup.setAttribute('mask-type','luminance');fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());gg=createNS('g');maskGrouper.appendChild(alphaRect);gg.appendChild(this.layerElement);layerElementParent=gg;maskGrouper.appendChild(gg);}this.globalData.defs.appendChild(maskGroup);}}else if(this.data.tt){this.matteElement.appendChild(this.layerElement);layerElementParent=this.matteElement;this.baseElement=this.matteElement;}else{this.baseElement=this.layerElement;}if(this.data.ln){this.layerElement.setAttribute('id',this.data.ln);}if(this.data.cl){this.layerElement.setAttribute('class',this.data.cl);}//Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
if(this.data.ty===0&&!this.data.hd){var cp=createNS('clipPath');var pt=createNS('path');pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');var clipId=createElementID();cp.setAttribute('id',clipId);cp.appendChild(pt);this.globalData.defs.appendChild(cp);if(this.checkMasks()){var cpGroup=createNS('g');cpGroup.setAttribute('clip-path','url('+locationHref+'#'+clipId+')');cpGroup.appendChild(this.layerElement);this.transformedElement=cpGroup;if(layerElementParent){layerElementParent.appendChild(this.transformedElement);}else{this.baseElement=this.transformedElement;}}else{this.layerElement.setAttribute('clip-path','url('+locationHref+'#'+clipId+')');}}if(this.data.bm!==0){this.setBlendMode();}},renderElement:function renderElement(){if(this.finalTransform._matMdf){this.transformedElement.setAttribute('transform',this.finalTransform.mat.to2dCSS());}if(this.finalTransform._opMdf){this.transformedElement.setAttribute('opacity',this.finalTransform.mProp.o.v);}},destroyBaseElement:function destroyBaseElement(){this.layerElement=null;this.matteElement=null;this.maskManager.destroy();},getBaseElement:function getBaseElement(){if(this.data.hd){return null;}return this.baseElement;},createRenderableComponents:function createRenderableComponents(){this.maskManager=new MaskElement(this.data,this,this.globalData);this.renderableEffectsManager=new SVGEffects(this);},setMatte:function setMatte(id){if(!this.matteElement){return;}this.matteElement.setAttribute("mask","url("+locationHref+"#"+id+")");}};function IShapeElement(){}IShapeElement.prototype={addShapeToModifiers:function addShapeToModifiers(data){var i,len=this.shapeModifiers.length;for(i=0;i<len;i+=1){this.shapeModifiers[i].addShape(data);}},isShapeInAnimatedModifiers:function isShapeInAnimatedModifiers(data){var i=0,len=this.shapeModifiers.length;while(i<len){if(this.shapeModifiers[i].isAnimatedWithShape(data)){return true;}}return false;},renderModifiers:function renderModifiers(){if(!this.shapeModifiers.length){return;}var i,len=this.shapes.length;for(i=0;i<len;i+=1){this.shapes[i].sh.reset();}len=this.shapeModifiers.length;for(i=len-1;i>=0;i-=1){this.shapeModifiers[i].processShapes(this._isFirstFrame);}},lcEnum:{'1':'butt','2':'round','3':'square'},ljEnum:{'1':'miter','2':'round','3':'bevel'},searchProcessedElement:function searchProcessedElement(elem){var elements=this.processedElements;var i=0,len=elements.length;while(i<len){if(elements[i].elem===elem){return elements[i].pos;}i+=1;}return 0;},addProcessedElement:function addProcessedElement(elem,pos){var elements=this.processedElements;var i=elements.length;while(i){i-=1;if(elements[i].elem===elem){elements[i].pos=pos;return;}}elements.push(new ProcessedElement(elem,pos));},prepareFrame:function prepareFrame(num){this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);}};function ITextElement(){}ITextElement.prototype.initElement=function(data,globalData,comp){this.lettersChangedFlag=true;this.initFrame();this.initBaseData(data,globalData,comp);this.textProperty=new TextProperty(this,data.t,this.dynamicProperties);this.textAnimator=new TextAnimatorProperty(data.t,this.renderType,this);this.initTransform(data,globalData,comp);this.initHierarchy();this.initRenderable();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();this.createContent();this.hide();this.textAnimator.searchProperties(this.dynamicProperties);};ITextElement.prototype.prepareFrame=function(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);if(this.textProperty._mdf||this.textProperty._isFirstFrame){this.buildNewText();this.textProperty._isFirstFrame=false;this.textProperty._mdf=false;}};ITextElement.prototype.createPathShape=function(matrixHelper,shapes){var j,jLen=shapes.length;var k,kLen,pathNodes;var shapeStr='';for(j=0;j<jLen;j+=1){pathNodes=shapes[j].ks.k;shapeStr+=buildShapeString(pathNodes,pathNodes.i.length,true,matrixHelper);}return shapeStr;};ITextElement.prototype.updateDocumentData=function(newData,index){this.textProperty.updateDocumentData(newData,index);};ITextElement.prototype.canResizeFont=function(_canResize){this.textProperty.canResizeFont(_canResize);};ITextElement.prototype.setMinimumFontSize=function(_fontSize){this.textProperty.setMinimumFontSize(_fontSize);};ITextElement.prototype.applyTextPropertiesToMatrix=function(documentData,matrixHelper,lineNumber,xPos,yPos){if(documentData.ps){matrixHelper.translate(documentData.ps[0],documentData.ps[1]+documentData.ascent,0);}matrixHelper.translate(0,-documentData.ls,0);switch(documentData.j){case 1:matrixHelper.translate(documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[lineNumber]),0,0);break;case 2:matrixHelper.translate(documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[lineNumber])/2,0,0);break;}matrixHelper.translate(xPos,yPos,0);};ITextElement.prototype.buildColor=function(colorData){return'rgb('+Math.round(colorData[0]*255)+','+Math.round(colorData[1]*255)+','+Math.round(colorData[2]*255)+')';};ITextElement.prototype.emptyProp=new LetterProps();ITextElement.prototype.destroy=function(){};function ICompElement(){}extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement,RenderableDOMElement],ICompElement);ICompElement.prototype.initElement=function(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initTransform(data,globalData,comp);this.initRenderable();this.initHierarchy();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();if(this.data.xt||!globalData.progressiveLoad){this.buildAllItems();}this.hide();};/*ICompElement.prototype.hide = function(){
    if(!this.hidden){
        this.hideElement();
        var i,len = this.elements.length;
        for( i = 0; i < len; i+=1 ){
            if(this.elements[i]){
                this.elements[i].hide();
            }
        }
    }
};*/ICompElement.prototype.prepareFrame=function(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);if(!this.isInRange&&!this.data.xt){return;}if(!this.tm._placeholder){var timeRemapped=this.tm.v;if(timeRemapped===this.data.op){timeRemapped=this.data.op-1;}this.renderedFrame=timeRemapped;}else{this.renderedFrame=num/this.data.sr;}var i,len=this.elements.length;if(!this.completeLayers){this.checkLayers(this.renderedFrame);}//This iteration needs to be backwards because of how expressions connect between each other
for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(this.renderedFrame-this.layers[i].st);if(this.elements[i]._mdf){this._mdf=true;}}}};ICompElement.prototype.renderInnerContent=function(){var i,len=this.layers.length;for(i=0;i<len;i+=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}};ICompElement.prototype.setElements=function(elems){this.elements=elems;};ICompElement.prototype.getElements=function(){return this.elements;};ICompElement.prototype.destroyElements=function(){var i,len=this.layers.length;for(i=0;i<len;i+=1){if(this.elements[i]){this.elements[i].destroy();}}};ICompElement.prototype.destroy=function(){this.destroyElements();this.destroyBaseElement();};function IImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.initElement(data,globalData,comp);this.sourceRect={top:0,left:0,width:this.assetData.w,height:this.assetData.h};}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],IImageElement);IImageElement.prototype.createContent=function(){var assetPath=this.globalData.getAssetsPath(this.assetData);this.innerElem=createNS('image');this.innerElem.setAttribute('width',this.assetData.w+"px");this.innerElem.setAttribute('height',this.assetData.h+"px");this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio);this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);this.layerElement.appendChild(this.innerElem);};IImageElement.prototype.sourceRectAtTime=function(){return this.sourceRect;};function ISolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([IImageElement],ISolidElement);ISolidElement.prototype.createContent=function(){var rect=createNS('rect');////rect.style.width = this.data.sw;
////rect.style.height = this.data.sh;
////rect.style.fill = this.data.sc;
rect.setAttribute('width',this.data.sw);rect.setAttribute('height',this.data.sh);rect.setAttribute('fill',this.data.sc);this.layerElement.appendChild(rect);};function SVGCompElement(data,globalData,comp){this.layers=data.layers;this.supports3d=true;this.completeLayers=false;this.pendingElements=[];this.elements=this.layers?createSizedArray(this.layers.length):[];//this.layerElement = createNS('g');
this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([SVGRenderer,ICompElement,SVGBaseElement],SVGCompElement);function SVGTextElement(data,globalData,comp){this.textSpans=[];this.renderType='svg';this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],SVGTextElement);SVGTextElement.prototype.createContent=function(){if(this.data.singleShape&&!this.globalData.fontManager.chars){this.textContainer=createNS('text');}};SVGTextElement.prototype.buildTextContents=function(textArray){var i=0,len=textArray.length;var textContents=[],currentTextContent='';while(i<len){if(textArray[i]===String.fromCharCode(13)||textArray[i]===String.fromCharCode(3)){textContents.push(currentTextContent);currentTextContent='';}else{currentTextContent+=textArray[i];}i+=1;}textContents.push(currentTextContent);return textContents;};SVGTextElement.prototype.buildNewText=function(){var i,len;var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData?documentData.l.length:0);if(documentData.fc){this.layerElement.setAttribute('fill',this.buildColor(documentData.fc));}else{this.layerElement.setAttribute('fill','rgba(0,0,0,0)');}if(documentData.sc){this.layerElement.setAttribute('stroke',this.buildColor(documentData.sc));this.layerElement.setAttribute('stroke-width',documentData.sw);}this.layerElement.setAttribute('font-size',documentData.finalSize);var fontData=this.globalData.fontManager.getFontByName(documentData.f);if(fontData.fClass){this.layerElement.setAttribute('class',fontData.fClass);}else{this.layerElement.setAttribute('font-family',fontData.fFamily);var fWeight=documentData.fWeight,fStyle=documentData.fStyle;this.layerElement.setAttribute('font-style',fStyle);this.layerElement.setAttribute('font-weight',fWeight);}this.layerElement.setAttribute('aria-label',documentData.t);var letters=documentData.l||[];var usesGlyphs=!!this.globalData.fontManager.chars;len=letters.length;var tSpan;var matrixHelper=this.mHelper;var shapes,shapeStr='',singleShape=this.data.singleShape;var xPos=0,yPos=0,firstLine=true;var trackingOffset=documentData.tr/1000*documentData.finalSize;if(singleShape&&!usesGlyphs&&!documentData.sz){var tElement=this.textContainer;var justify='start';switch(documentData.j){case 1:justify='end';break;case 2:justify='middle';break;}tElement.setAttribute('text-anchor',justify);tElement.setAttribute('letter-spacing',trackingOffset);var textContent=this.buildTextContents(documentData.finalText);len=textContent.length;yPos=documentData.ps?documentData.ps[1]+documentData.ascent:0;for(i=0;i<len;i+=1){tSpan=this.textSpans[i]||createNS('tspan');tSpan.textContent=textContent[i];tSpan.setAttribute('x',0);tSpan.setAttribute('y',yPos);tSpan.style.display='inherit';tElement.appendChild(tSpan);this.textSpans[i]=tSpan;yPos+=documentData.finalLineHeight;}this.layerElement.appendChild(tElement);}else{var cachedSpansLength=this.textSpans.length;var shapeData,charData;for(i=0;i<len;i+=1){if(!usesGlyphs||!singleShape||i===0){tSpan=cachedSpansLength>i?this.textSpans[i]:createNS(usesGlyphs?'path':'text');if(cachedSpansLength<=i){tSpan.setAttribute('stroke-linecap','butt');tSpan.setAttribute('stroke-linejoin','round');tSpan.setAttribute('stroke-miterlimit','4');this.textSpans[i]=tSpan;this.layerElement.appendChild(tSpan);}tSpan.style.display='inherit';}matrixHelper.reset();matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);if(singleShape){if(letters[i].n){xPos=-trackingOffset;yPos+=documentData.yOffset;yPos+=firstLine?1:0;firstLine=false;}this.applyTextPropertiesToMatrix(documentData,matrixHelper,letters[i].line,xPos,yPos);xPos+=letters[i].l||0;//xPos += letters[i].val === ' ' ? 0 : trackingOffset;
xPos+=trackingOffset;}if(usesGlyphs){charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);shapeData=charData&&charData.data||{};shapes=shapeData.shapes?shapeData.shapes[0].it:[];if(!singleShape){tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));}else{shapeStr+=this.createPathShape(matrixHelper,shapes);}}else{if(singleShape){tSpan.setAttribute("transform","translate("+matrixHelper.props[12]+","+matrixHelper.props[13]+")");}tSpan.textContent=letters[i].val;tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve");}//
}if(singleShape&&tSpan){tSpan.setAttribute('d',shapeStr);}}while(i<this.textSpans.length){this.textSpans[i].style.display='none';i+=1;}this._sizeChanged=true;};SVGTextElement.prototype.sourceRectAtTime=function(time){this.prepareFrame(this.comp.renderedFrame-this.data.st);this.renderInnerContent();if(this._sizeChanged){this._sizeChanged=false;var textBox=this.layerElement.getBBox();this.bbox={top:textBox.y,left:textBox.x,width:textBox.width,height:textBox.height};}return this.bbox;};SVGTextElement.prototype.renderInnerContent=function(){if(!this.data.singleShape){this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);if(this.lettersChangedFlag||this.textAnimator.lettersChangedFlag){this._sizeChanged=true;var i,len;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter,textSpan;for(i=0;i<len;i+=1){if(letters[i].n){continue;}renderedLetter=renderedLetters[i];textSpan=this.textSpans[i];if(renderedLetter._mdf.m){textSpan.setAttribute('transform',renderedLetter.m);}if(renderedLetter._mdf.o){textSpan.setAttribute('opacity',renderedLetter.o);}if(renderedLetter._mdf.sw){textSpan.setAttribute('stroke-width',renderedLetter.sw);}if(renderedLetter._mdf.sc){textSpan.setAttribute('stroke',renderedLetter.sc);}if(renderedLetter._mdf.fc){textSpan.setAttribute('fill',renderedLetter.fc);}}}}};function SVGShapeElement(data,globalData,comp){//List of drawable elements
this.shapes=[];// Full shape data
this.shapesData=data.shapes;//List of styles that will be applied to shapes
this.stylesList=[];//List of modifiers that will be applied to shapes
this.shapeModifiers=[];//List of items in shape tree
this.itemsData=[];//List of items in previous shape tree
this.processedElements=[];// List of animated components
this.animatedContents=[];this.initElement(data,globalData,comp);//Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
// List of elements that have been created
this.prevViewData=[];//Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
}extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement],SVGShapeElement);SVGShapeElement.prototype.initSecondaryElement=function(){};SVGShapeElement.prototype.identityMatrix=new Matrix();SVGShapeElement.prototype.buildExpressionInterface=function(){};SVGShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],true);this.filterUniqueShapes();};/*
This method searches for multiple shapes that affect a single element and one of them is animated
*/SVGShapeElement.prototype.filterUniqueShapes=function(){var i,len=this.shapes.length,shape;var j,jLen=this.stylesList.length;var style,count=0;var tempShapes=[];var areAnimated=false;for(j=0;j<jLen;j+=1){style=this.stylesList[j];areAnimated=false;tempShapes.length=0;for(i=0;i<len;i+=1){shape=this.shapes[i];if(shape.styles.indexOf(style)!==-1){tempShapes.push(shape);areAnimated=shape._isAnimated||areAnimated;}}if(tempShapes.length>1&&areAnimated){this.setShapesAsAnimated(tempShapes);}}};SVGShapeElement.prototype.setShapesAsAnimated=function(shapes){var i,len=shapes.length;for(i=0;i<len;i+=1){shapes[i].setAsAnimated();}};SVGShapeElement.prototype.createStyleElement=function(data,level){//TODO: prevent drawing of hidden styles
var elementData;var styleOb=new SVGStyleData(data,level);var pathElement=styleOb.pElem;if(data.ty==='st'){elementData=new SVGStrokeStyleData(this,data,styleOb);}else if(data.ty==='fl'){elementData=new SVGFillStyleData(this,data,styleOb);}else if(data.ty==='gf'||data.ty==='gs'){var gradientConstructor=data.ty==='gf'?SVGGradientFillStyleData:SVGGradientStrokeStyleData;elementData=new gradientConstructor(this,data,styleOb);this.globalData.defs.appendChild(elementData.gf);if(elementData.maskId){this.globalData.defs.appendChild(elementData.ms);this.globalData.defs.appendChild(elementData.of);pathElement.setAttribute('mask','url('+locationHref+'#'+elementData.maskId+')');}}if(data.ty==='st'||data.ty==='gs'){pathElement.setAttribute('stroke-linecap',this.lcEnum[data.lc]||'round');pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj]||'round');pathElement.setAttribute('fill-opacity','0');if(data.lj===1){pathElement.setAttribute('stroke-miterlimit',data.ml);}}if(data.r===2){pathElement.setAttribute('fill-rule','evenodd');}if(data.ln){pathElement.setAttribute('id',data.ln);}if(data.cl){pathElement.setAttribute('class',data.cl);}if(data.bm){pathElement.style['mix-blend-mode']=getBlendMode(data.bm);}this.stylesList.push(styleOb);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.createGroupElement=function(data){var elementData=new ShapeGroupData();if(data.ln){elementData.gr.setAttribute('id',data.ln);}if(data.cl){elementData.gr.setAttribute('class',data.cl);}if(data.bm){elementData.gr.style['mix-blend-mode']=getBlendMode(data.bm);}return elementData;};SVGShapeElement.prototype.createTransformElement=function(data,container){var transformProperty=TransformPropertyFactory.getTransformProperty(this,data,this);var elementData=new SVGTransformData(transformProperty,transformProperty.o,container);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.createShapeElement=function(data,ownTransformers,level){var ty=4;if(data.ty==='rc'){ty=5;}else if(data.ty==='el'){ty=6;}else if(data.ty==='sr'){ty=7;}var shapeProperty=ShapePropertyFactory.getShapeProp(this,data,ty,this);var elementData=new SVGShapeData(ownTransformers,level,shapeProperty);this.shapes.push(elementData);this.addShapeToModifiers(elementData);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.addToAnimatedContents=function(data,element){var i=0,len=this.animatedContents.length;while(i<len){if(this.animatedContents[i].element===element){return;}i+=1;}this.animatedContents.push({fn:SVGElementsRenderer.createRenderFunction(data),element:element,data:data});};SVGShapeElement.prototype.setElementStyles=function(elementData){var arr=elementData.styles;var j,jLen=this.stylesList.length;for(j=0;j<jLen;j+=1){if(!this.stylesList[j].closed){arr.push(this.stylesList[j]);}}};SVGShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=true;var i,len=this.itemsData.length;for(i=0;i<len;i+=1){this.prevViewData[i]=this.itemsData[i];}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],true);this.filterUniqueShapes();len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();}this.renderModifiers();};SVGShapeElement.prototype.searchShapes=function(arr,itemsData,prevViewData,container,level,transformers,render){var ownTransformers=[].concat(transformers);var i,len=arr.length-1;var j,jLen;var ownStyles=[],ownModifiers=[],styleOb,currentTransform,modifier,processedPos;for(i=len;i>=0;i-=1){processedPos=this.searchProcessedElement(arr[i]);if(!processedPos){arr[i]._render=render;}else{itemsData[i]=prevViewData[processedPos-1];}if(arr[i].ty=='fl'||arr[i].ty=='st'||arr[i].ty=='gf'||arr[i].ty=='gs'){if(!processedPos){itemsData[i]=this.createStyleElement(arr[i],level);}else{itemsData[i].style.closed=false;}if(arr[i]._render){container.appendChild(itemsData[i].style.pElem);}ownStyles.push(itemsData[i].style);}else if(arr[i].ty=='gr'){if(!processedPos){itemsData[i]=this.createGroupElement(arr[i]);}else{jLen=itemsData[i].it.length;for(j=0;j<jLen;j+=1){itemsData[i].prevViewData[j]=itemsData[i].it[j];}}this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,level+1,ownTransformers,render);if(arr[i]._render){container.appendChild(itemsData[i].gr);}}else if(arr[i].ty=='tr'){if(!processedPos){itemsData[i]=this.createTransformElement(arr[i],container);}currentTransform=itemsData[i].transform;ownTransformers.push(currentTransform);}else if(arr[i].ty=='sh'||arr[i].ty=='rc'||arr[i].ty=='el'||arr[i].ty=='sr'){if(!processedPos){itemsData[i]=this.createShapeElement(arr[i],ownTransformers,level);}this.setElementStyles(itemsData[i]);}else if(arr[i].ty=='tm'||arr[i].ty=='rd'||arr[i].ty=='ms'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);modifier.init(this,arr[i]);itemsData[i]=modifier;this.shapeModifiers.push(modifier);}else{modifier=itemsData[i];modifier.closed=false;}ownModifiers.push(modifier);}else if(arr[i].ty=='rp'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);itemsData[i]=modifier;modifier.init(this,arr,i,itemsData);this.shapeModifiers.push(modifier);render=false;}else{modifier=itemsData[i];modifier.closed=true;}ownModifiers.push(modifier);}this.addProcessedElement(arr[i],i+1);}len=ownStyles.length;for(i=0;i<len;i+=1){ownStyles[i].closed=true;}len=ownModifiers.length;for(i=0;i<len;i+=1){ownModifiers[i].closed=true;}};SVGShapeElement.prototype.renderInnerContent=function(){this.renderModifiers();var i,len=this.stylesList.length;for(i=0;i<len;i+=1){this.stylesList[i].reset();}this.renderShape();for(i=0;i<len;i+=1){if(this.stylesList[i]._mdf||this._isFirstFrame){if(this.stylesList[i].msElem){this.stylesList[i].msElem.setAttribute('d',this.stylesList[i].d);//Adding M0 0 fixes same mask bug on all browsers
this.stylesList[i].d='M0 0'+this.stylesList[i].d;}this.stylesList[i].pElem.setAttribute('d',this.stylesList[i].d||'M0 0');}}};SVGShapeElement.prototype.renderShape=function(){var i,len=this.animatedContents.length;var animatedContent;for(i=0;i<len;i+=1){animatedContent=this.animatedContents[i];if((this._isFirstFrame||animatedContent.element._isAnimated)&&animatedContent.data!==true){animatedContent.fn(animatedContent.data,animatedContent.element,this._isFirstFrame);}}};SVGShapeElement.prototype.destroy=function(){this.destroyBaseElement();this.shapesData=null;this.itemsData=null;};function SVGTintFilter(filter,filterManager){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result','f1');filter.appendChild(feColorMatrix);feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result','f2');filter.appendChild(feColorMatrix);this.matrixFilter=feColorMatrix;if(filterManager.effectElements[2].p.v!==100||filterManager.effectElements[2].p.k){var feMerge=createNS('feMerge');filter.appendChild(feMerge);var feMergeNode;feMergeNode=createNS('feMergeNode');feMergeNode.setAttribute('in','SourceGraphic');feMerge.appendChild(feMergeNode);feMergeNode=createNS('feMergeNode');feMergeNode.setAttribute('in','f2');feMerge.appendChild(feMergeNode);}}SVGTintFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var colorBlack=this.filterManager.effectElements[0].p.v;var colorWhite=this.filterManager.effectElements[1].p.v;var opacity=this.filterManager.effectElements[2].p.v/100;this.matrixFilter.setAttribute('values',colorWhite[0]-colorBlack[0]+' 0 0 0 '+colorBlack[0]+' '+(colorWhite[1]-colorBlack[1])+' 0 0 0 '+colorBlack[1]+' '+(colorWhite[2]-colorBlack[2])+' 0 0 0 '+colorBlack[2]+' 0 0 0 '+opacity+' 0');}};function SVGFillFilter(filter,filterManager){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');filter.appendChild(feColorMatrix);this.matrixFilter=feColorMatrix;}SVGFillFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var color=this.filterManager.effectElements[2].p.v;var opacity=this.filterManager.effectElements[6].p.v;this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');}};function SVGGaussianBlurEffect(filter,filterManager){// Outset the filter region by 100% on all sides to accommodate blur expansion.
filter.setAttribute('x','-100%');filter.setAttribute('y','-100%');filter.setAttribute('width','300%');filter.setAttribute('height','300%');this.filterManager=filterManager;var feGaussianBlur=createNS('feGaussianBlur');filter.appendChild(feGaussianBlur);this.feGaussianBlur=feGaussianBlur;}SVGGaussianBlurEffect.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){// Empirical value, matching AE's blur appearance.
var kBlurrinessToSigma=0.3;var sigma=this.filterManager.effectElements[0].p.v*kBlurrinessToSigma;// Dimensions mapping:
//
//   1 -> horizontal & vertical
//   2 -> horizontal only
//   3 -> vertical only
//
var dimensions=this.filterManager.effectElements[1].p.v;var sigmaX=dimensions==3?0:sigma;var sigmaY=dimensions==2?0:sigma;this.feGaussianBlur.setAttribute('stdDeviation',sigmaX+" "+sigmaY);// Repeat edges mapping:
//
//   0 -> off -> duplicate
//   1 -> on  -> wrap
var edgeMode=this.filterManager.effectElements[2].p.v==1?'wrap':'duplicate';this.feGaussianBlur.setAttribute('edgeMode',edgeMode);}};function SVGStrokeEffect(elem,filterManager){this.initialized=false;this.filterManager=filterManager;this.elem=elem;this.paths=[];}SVGStrokeEffect.prototype.initialize=function(){var elemChildren=this.elem.layerElement.children||this.elem.layerElement.childNodes;var path,groupPath,i,len;if(this.filterManager.effectElements[1].p.v===1){len=this.elem.maskManager.masksProperties.length;i=0;}else{i=this.filterManager.effectElements[0].p.v-1;len=i+1;}groupPath=createNS('g');groupPath.setAttribute('fill','none');groupPath.setAttribute('stroke-linecap','round');groupPath.setAttribute('stroke-dashoffset',1);for(i;i<len;i+=1){path=createNS('path');groupPath.appendChild(path);this.paths.push({p:path,m:i});}if(this.filterManager.effectElements[10].p.v===3){var mask=createNS('mask');var id=createElementID();mask.setAttribute('id',id);mask.setAttribute('mask-type','alpha');mask.appendChild(groupPath);this.elem.globalData.defs.appendChild(mask);var g=createNS('g');g.setAttribute('mask','url('+locationHref+'#'+id+')');while(elemChildren[0]){g.appendChild(elemChildren[0]);}this.elem.layerElement.appendChild(g);this.masker=mask;groupPath.setAttribute('stroke','#fff');}else if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(this.filterManager.effectElements[10].p.v===2){elemChildren=this.elem.layerElement.children||this.elem.layerElement.childNodes;while(elemChildren.length){this.elem.layerElement.removeChild(elemChildren[0]);}}this.elem.layerElement.appendChild(groupPath);this.elem.layerElement.removeAttribute('mask');groupPath.setAttribute('stroke','#fff');}this.initialized=true;this.pathMasker=groupPath;};SVGStrokeEffect.prototype.renderFrame=function(forceRender){if(!this.initialized){this.initialize();}var i,len=this.paths.length;var mask,path;for(i=0;i<len;i+=1){if(this.paths[i].m===-1){continue;}mask=this.elem.maskManager.viewData[this.paths[i].m];path=this.paths[i].p;if(forceRender||this.filterManager._mdf||mask.prop._mdf){path.setAttribute('d',mask.lastPath);}if(forceRender||this.filterManager.effectElements[9].p._mdf||this.filterManager.effectElements[4].p._mdf||this.filterManager.effectElements[7].p._mdf||this.filterManager.effectElements[8].p._mdf||mask.prop._mdf){var dasharrayValue;if(this.filterManager.effectElements[7].p.v!==0||this.filterManager.effectElements[8].p.v!==100){var s=Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;var e=Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;var l=path.getTotalLength();dasharrayValue='0 0 0 '+l*s+' ';var lineLength=l*(e-s);var segment=1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;var units=Math.floor(lineLength/segment);var j;for(j=0;j<units;j+=1){dasharrayValue+='1 '+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100+' ';}dasharrayValue+='0 '+l*10+' 0 0';}else{dasharrayValue='1 '+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;}path.setAttribute('stroke-dasharray',dasharrayValue);}}if(forceRender||this.filterManager.effectElements[4].p._mdf){this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);}if(forceRender||this.filterManager.effectElements[6].p._mdf){this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);}if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(forceRender||this.filterManager.effectElements[3].p._mdf){var color=this.filterManager.effectElements[3].p.v;this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');}}};function SVGTritoneFilter(filter,filterManager){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result','f1');filter.appendChild(feColorMatrix);var feComponentTransfer=createNS('feComponentTransfer');feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');filter.appendChild(feComponentTransfer);this.matrixFilter=feComponentTransfer;var feFuncR=createNS('feFuncR');feFuncR.setAttribute('type','table');feComponentTransfer.appendChild(feFuncR);this.feFuncR=feFuncR;var feFuncG=createNS('feFuncG');feFuncG.setAttribute('type','table');feComponentTransfer.appendChild(feFuncG);this.feFuncG=feFuncG;var feFuncB=createNS('feFuncB');feFuncB.setAttribute('type','table');feComponentTransfer.appendChild(feFuncB);this.feFuncB=feFuncB;}SVGTritoneFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var color1=this.filterManager.effectElements[0].p.v;var color2=this.filterManager.effectElements[1].p.v;var color3=this.filterManager.effectElements[2].p.v;var tableR=color3[0]+' '+color2[0]+' '+color1[0];var tableG=color3[1]+' '+color2[1]+' '+color1[1];var tableB=color3[2]+' '+color2[2]+' '+color1[2];this.feFuncR.setAttribute('tableValues',tableR);this.feFuncG.setAttribute('tableValues',tableG);this.feFuncB.setAttribute('tableValues',tableB);//var opacity = this.filterManager.effectElements[2].p.v/100;
//this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
}};function SVGProLevelsFilter(filter,filterManager){this.filterManager=filterManager;var effectElements=this.filterManager.effectElements;var feComponentTransfer=createNS('feComponentTransfer');var feFuncR,feFuncG,feFuncB;if(effectElements[10].p.k||effectElements[10].p.v!==0||effectElements[11].p.k||effectElements[11].p.v!==1||effectElements[12].p.k||effectElements[12].p.v!==1||effectElements[13].p.k||effectElements[13].p.v!==0||effectElements[14].p.k||effectElements[14].p.v!==1){this.feFuncR=this.createFeFunc('feFuncR',feComponentTransfer);}if(effectElements[17].p.k||effectElements[17].p.v!==0||effectElements[18].p.k||effectElements[18].p.v!==1||effectElements[19].p.k||effectElements[19].p.v!==1||effectElements[20].p.k||effectElements[20].p.v!==0||effectElements[21].p.k||effectElements[21].p.v!==1){this.feFuncG=this.createFeFunc('feFuncG',feComponentTransfer);}if(effectElements[24].p.k||effectElements[24].p.v!==0||effectElements[25].p.k||effectElements[25].p.v!==1||effectElements[26].p.k||effectElements[26].p.v!==1||effectElements[27].p.k||effectElements[27].p.v!==0||effectElements[28].p.k||effectElements[28].p.v!==1){this.feFuncB=this.createFeFunc('feFuncB',feComponentTransfer);}if(effectElements[31].p.k||effectElements[31].p.v!==0||effectElements[32].p.k||effectElements[32].p.v!==1||effectElements[33].p.k||effectElements[33].p.v!==1||effectElements[34].p.k||effectElements[34].p.v!==0||effectElements[35].p.k||effectElements[35].p.v!==1){this.feFuncA=this.createFeFunc('feFuncA',feComponentTransfer);}if(this.feFuncR||this.feFuncG||this.feFuncB||this.feFuncA){feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');filter.appendChild(feComponentTransfer);feComponentTransfer=createNS('feComponentTransfer');}if(effectElements[3].p.k||effectElements[3].p.v!==0||effectElements[4].p.k||effectElements[4].p.v!==1||effectElements[5].p.k||effectElements[5].p.v!==1||effectElements[6].p.k||effectElements[6].p.v!==0||effectElements[7].p.k||effectElements[7].p.v!==1){feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');filter.appendChild(feComponentTransfer);this.feFuncRComposed=this.createFeFunc('feFuncR',feComponentTransfer);this.feFuncGComposed=this.createFeFunc('feFuncG',feComponentTransfer);this.feFuncBComposed=this.createFeFunc('feFuncB',feComponentTransfer);}}SVGProLevelsFilter.prototype.createFeFunc=function(type,feComponentTransfer){var feFunc=createNS(type);feFunc.setAttribute('type','table');feComponentTransfer.appendChild(feFunc);return feFunc;};SVGProLevelsFilter.prototype.getTableValue=function(inputBlack,inputWhite,gamma,outputBlack,outputWhite){var cnt=0;var segments=256;var perc;var min=Math.min(inputBlack,inputWhite);var max=Math.max(inputBlack,inputWhite);var table=Array.call(null,{length:segments});var colorValue;var pos=0;var outputDelta=outputWhite-outputBlack;var inputDelta=inputWhite-inputBlack;while(cnt<=256){perc=cnt/256;if(perc<=min){colorValue=inputDelta<0?outputWhite:outputBlack;}else if(perc>=max){colorValue=inputDelta<0?outputBlack:outputWhite;}else{colorValue=outputBlack+outputDelta*Math.pow((perc-inputBlack)/inputDelta,1/gamma);}table[pos++]=colorValue;cnt+=256/(segments-1);}return table.join(' ');};SVGProLevelsFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var val,cnt,perc,bezier;var effectElements=this.filterManager.effectElements;if(this.feFuncRComposed&&(forceRender||effectElements[3].p._mdf||effectElements[4].p._mdf||effectElements[5].p._mdf||effectElements[6].p._mdf||effectElements[7].p._mdf)){val=this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);this.feFuncRComposed.setAttribute('tableValues',val);this.feFuncGComposed.setAttribute('tableValues',val);this.feFuncBComposed.setAttribute('tableValues',val);}if(this.feFuncR&&(forceRender||effectElements[10].p._mdf||effectElements[11].p._mdf||effectElements[12].p._mdf||effectElements[13].p._mdf||effectElements[14].p._mdf)){val=this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);this.feFuncR.setAttribute('tableValues',val);}if(this.feFuncG&&(forceRender||effectElements[17].p._mdf||effectElements[18].p._mdf||effectElements[19].p._mdf||effectElements[20].p._mdf||effectElements[21].p._mdf)){val=this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);this.feFuncG.setAttribute('tableValues',val);}if(this.feFuncB&&(forceRender||effectElements[24].p._mdf||effectElements[25].p._mdf||effectElements[26].p._mdf||effectElements[27].p._mdf||effectElements[28].p._mdf)){val=this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);this.feFuncB.setAttribute('tableValues',val);}if(this.feFuncA&&(forceRender||effectElements[31].p._mdf||effectElements[32].p._mdf||effectElements[33].p._mdf||effectElements[34].p._mdf||effectElements[35].p._mdf)){val=this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);this.feFuncA.setAttribute('tableValues',val);}}};function SVGDropShadowEffect(filter,filterManager){filter.setAttribute('x','-100%');filter.setAttribute('y','-100%');filter.setAttribute('width','400%');filter.setAttribute('height','400%');this.filterManager=filterManager;var feGaussianBlur=createNS('feGaussianBlur');feGaussianBlur.setAttribute('in','SourceAlpha');feGaussianBlur.setAttribute('result','drop_shadow_1');feGaussianBlur.setAttribute('stdDeviation','0');this.feGaussianBlur=feGaussianBlur;filter.appendChild(feGaussianBlur);var feOffset=createNS('feOffset');feOffset.setAttribute('dx','25');feOffset.setAttribute('dy','0');feOffset.setAttribute('in','drop_shadow_1');feOffset.setAttribute('result','drop_shadow_2');this.feOffset=feOffset;filter.appendChild(feOffset);var feFlood=createNS('feFlood');feFlood.setAttribute('flood-color','#00ff00');feFlood.setAttribute('flood-opacity','1');feFlood.setAttribute('result','drop_shadow_3');this.feFlood=feFlood;filter.appendChild(feFlood);var feComposite=createNS('feComposite');feComposite.setAttribute('in','drop_shadow_3');feComposite.setAttribute('in2','drop_shadow_2');feComposite.setAttribute('operator','in');feComposite.setAttribute('result','drop_shadow_4');filter.appendChild(feComposite);var feMerge=createNS('feMerge');filter.appendChild(feMerge);var feMergeNode;feMergeNode=createNS('feMergeNode');feMerge.appendChild(feMergeNode);feMergeNode=createNS('feMergeNode');feMergeNode.setAttribute('in','SourceGraphic');this.feMergeNode=feMergeNode;this.feMerge=feMerge;this.originalNodeAdded=false;feMerge.appendChild(feMergeNode);}SVGDropShadowEffect.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){if(forceRender||this.filterManager.effectElements[4].p._mdf){this.feGaussianBlur.setAttribute('stdDeviation',this.filterManager.effectElements[4].p.v/4);}if(forceRender||this.filterManager.effectElements[0].p._mdf){var col=this.filterManager.effectElements[0].p.v;this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));}if(forceRender||this.filterManager.effectElements[1].p._mdf){this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);}if(forceRender||this.filterManager.effectElements[2].p._mdf||this.filterManager.effectElements[3].p._mdf){var distance=this.filterManager.effectElements[3].p.v;var angle=(this.filterManager.effectElements[2].p.v-90)*degToRads;var x=distance*Math.cos(angle);var y=distance*Math.sin(angle);this.feOffset.setAttribute('dx',x);this.feOffset.setAttribute('dy',y);}/*if(forceRender || this.filterManager.effectElements[5].p._mdf){
            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {
                this.feMerge.removeChild(this.feMergeNode);
                this.originalNodeAdded = false;
            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {
                this.feMerge.appendChild(this.feMergeNode);
                this.originalNodeAdded = true;
            }
        }*/}};var _svgMatteSymbols=[];function SVGMatte3Effect(filterElem,filterManager,elem){this.initialized=false;this.filterManager=filterManager;this.filterElem=filterElem;this.elem=elem;elem.matteElement=createNS('g');elem.matteElement.appendChild(elem.layerElement);elem.matteElement.appendChild(elem.transformedElement);elem.baseElement=elem.matteElement;}SVGMatte3Effect.prototype.findSymbol=function(mask){var i=0,len=_svgMatteSymbols.length;while(i<len){if(_svgMatteSymbols[i]===mask){return _svgMatteSymbols[i];}i+=1;}return null;};SVGMatte3Effect.prototype.replaceInParent=function(mask,symbolId){var parentNode=mask.layerElement.parentNode;if(!parentNode){return;}var children=parentNode.children;var i=0,len=children.length;while(i<len){if(children[i]===mask.layerElement){break;}i+=1;}var nextChild;if(i<=len-2){nextChild=children[i+1];}var useElem=createNS('use');useElem.setAttribute('href','#'+symbolId);if(nextChild){parentNode.insertBefore(useElem,nextChild);}else{parentNode.appendChild(useElem);}};SVGMatte3Effect.prototype.setElementAsMask=function(elem,mask){if(!this.findSymbol(mask)){var symbolId=createElementID();var masker=createNS('mask');masker.setAttribute('id',mask.layerId);masker.setAttribute('mask-type','alpha');_svgMatteSymbols.push(mask);var defs=elem.globalData.defs;defs.appendChild(masker);var symbol=createNS('symbol');symbol.setAttribute('id',symbolId);this.replaceInParent(mask,symbolId);symbol.appendChild(mask.layerElement);defs.appendChild(symbol);var useElem=createNS('use');useElem.setAttribute('href','#'+symbolId);masker.appendChild(useElem);mask.data.hd=false;mask.show();}elem.setMatte(mask.layerId);};SVGMatte3Effect.prototype.initialize=function(){var ind=this.filterManager.effectElements[0].p.v;var elements=this.elem.comp.elements;var i=0,len=elements.length;while(i<len){if(elements[i]&&elements[i].data.ind===ind){this.setElementAsMask(this.elem,elements[i]);}i+=1;}this.initialized=true;};SVGMatte3Effect.prototype.renderFrame=function(){if(!this.initialized){this.initialize();}};function SVGEffects(elem){var i,len=elem.data.ef?elem.data.ef.length:0;var filId=createElementID();var fil=filtersFactory.createFilter(filId);var count=0;this.filters=[];var filterManager;for(i=0;i<len;i+=1){filterManager=null;if(elem.data.ef[i].ty===20){count+=1;filterManager=new SVGTintFilter(fil,elem.effectsManager.effectElements[i]);}else if(elem.data.ef[i].ty===21){count+=1;filterManager=new SVGFillFilter(fil,elem.effectsManager.effectElements[i]);}else if(elem.data.ef[i].ty===22){filterManager=new SVGStrokeEffect(elem,elem.effectsManager.effectElements[i]);}else if(elem.data.ef[i].ty===23){count+=1;filterManager=new SVGTritoneFilter(fil,elem.effectsManager.effectElements[i]);}else if(elem.data.ef[i].ty===24){count+=1;filterManager=new SVGProLevelsFilter(fil,elem.effectsManager.effectElements[i]);}else if(elem.data.ef[i].ty===25){count+=1;filterManager=new SVGDropShadowEffect(fil,elem.effectsManager.effectElements[i]);}else if(elem.data.ef[i].ty===28){//count += 1;
filterManager=new SVGMatte3Effect(fil,elem.effectsManager.effectElements[i],elem);}else if(elem.data.ef[i].ty===29){count+=1;filterManager=new SVGGaussianBlurEffect(fil,elem.effectsManager.effectElements[i]);}if(filterManager){this.filters.push(filterManager);}}if(count){elem.globalData.defs.appendChild(fil);elem.layerElement.setAttribute('filter','url('+locationHref+'#'+filId+')');}if(this.filters.length){elem.addRenderableComponent(this);}}SVGEffects.prototype.renderFrame=function(_isFirstFrame){var i,len=this.filters.length;for(i=0;i<len;i+=1){this.filters[i].renderFrame(_isFirstFrame);}};function CVContextData(){this.saved=[];this.cArrPos=0;this.cTr=new Matrix();this.cO=1;var i,len=15;this.savedOp=createTypedArray('float32',len);for(i=0;i<len;i+=1){this.saved[i]=createTypedArray('float32',16);}this._length=len;}CVContextData.prototype.duplicate=function(){var newLength=this._length*2;var currentSavedOp=this.savedOp;this.savedOp=createTypedArray('float32',newLength);this.savedOp.set(currentSavedOp);var i=0;for(i=this._length;i<newLength;i+=1){this.saved[i]=createTypedArray('float32',16);}this._length=newLength;};CVContextData.prototype.reset=function(){this.cArrPos=0;this.cTr.reset();this.cO=1;};function CVBaseElement(){}CVBaseElement.prototype={createElements:function createElements(){},initRendererElement:function initRendererElement(){},createContainerElements:function createContainerElements(){this.canvasContext=this.globalData.canvasContext;this.renderableEffectsManager=new CVEffects(this);},createContent:function createContent(){},setBlendMode:function setBlendMode(){var globalData=this.globalData;if(globalData.blendMode!==this.data.bm){globalData.blendMode=this.data.bm;var blendModeValue=getBlendMode(this.data.bm);globalData.canvasContext.globalCompositeOperation=blendModeValue;}},createRenderableComponents:function createRenderableComponents(){this.maskManager=new CVMaskElement(this.data,this);},hideElement:function hideElement(){if(!this.hidden&&(!this.isInRange||this.isTransparent)){this.hidden=true;}},showElement:function showElement(){if(this.isInRange&&!this.isTransparent){this.hidden=false;this._isFirstFrame=true;this.maskManager._isFirstFrame=true;}},renderFrame:function renderFrame(){if(this.hidden||this.data.hd){return;}this.renderTransform();this.renderRenderable();this.setBlendMode();var forceRealStack=this.data.ty===0;this.globalData.renderer.save(forceRealStack);this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);this.renderInnerContent();this.globalData.renderer.restore(forceRealStack);if(this.maskManager.hasMasks){this.globalData.renderer.restore(true);}if(this._isFirstFrame){this._isFirstFrame=false;}},destroy:function destroy(){this.canvasContext=null;this.data=null;this.globalData=null;this.maskManager.destroy();},mHelper:new Matrix()};CVBaseElement.prototype.hide=CVBaseElement.prototype.hideElement;CVBaseElement.prototype.show=CVBaseElement.prototype.showElement;function CVImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.img=globalData.imageLoader.getImage(this.assetData);this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVImageElement);CVImageElement.prototype.initElement=SVGShapeElement.prototype.initElement;CVImageElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame;CVImageElement.prototype.createContent=function(){if(this.img.width&&(this.assetData.w!==this.img.width||this.assetData.h!==this.img.height)){var canvas=createTag('canvas');canvas.width=this.assetData.w;canvas.height=this.assetData.h;var ctx=canvas.getContext('2d');var imgW=this.img.width;var imgH=this.img.height;var imgRel=imgW/imgH;var canvasRel=this.assetData.w/this.assetData.h;var widthCrop,heightCrop;var par=this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio;if(imgRel>canvasRel&&par==='xMidYMid slice'||imgRel<canvasRel&&par!=='xMidYMid slice'){heightCrop=imgH;widthCrop=heightCrop*canvasRel;}else{widthCrop=imgW;heightCrop=widthCrop/canvasRel;}ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);this.img=canvas;}};CVImageElement.prototype.renderInnerContent=function(parentMatrix){this.canvasContext.drawImage(this.img,0,0);};CVImageElement.prototype.destroy=function(){this.img=null;};function CVCompElement(data,globalData,comp){this.completeLayers=false;this.layers=data.layers;this.pendingElements=[];this.elements=createSizedArray(this.layers.length);this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([CanvasRenderer,ICompElement,CVBaseElement],CVCompElement);CVCompElement.prototype.renderInnerContent=function(){var ctx=this.canvasContext;ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(this.data.w,0);ctx.lineTo(this.data.w,this.data.h);ctx.lineTo(0,this.data.h);ctx.lineTo(0,0);ctx.clip();var i,len=this.layers.length;for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}};CVCompElement.prototype.destroy=function(){var i,len=this.layers.length;for(i=len-1;i>=0;i-=1){if(this.elements[i]){this.elements[i].destroy();}}this.layers=null;this.elements=null;};function CVMaskElement(data,element){this.data=data;this.element=element;this.masksProperties=this.data.masksProperties||[];this.viewData=createSizedArray(this.masksProperties.length);var i,len=this.masksProperties.length,hasMasks=false;for(i=0;i<len;i++){if(this.masksProperties[i].mode!=='n'){hasMasks=true;}this.viewData[i]=ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);}this.hasMasks=hasMasks;if(hasMasks){this.element.addRenderableComponent(this);}}CVMaskElement.prototype.renderFrame=function(){if(!this.hasMasks){return;}var transform=this.element.finalTransform.mat;var ctx=this.element.canvasContext;var i,len=this.masksProperties.length;var pt,pts,data;ctx.beginPath();for(i=0;i<len;i++){if(this.masksProperties[i].mode!=='n'){if(this.masksProperties[i].inv){ctx.moveTo(0,0);ctx.lineTo(this.element.globalData.compSize.w,0);ctx.lineTo(this.element.globalData.compSize.w,this.element.globalData.compSize.h);ctx.lineTo(0,this.element.globalData.compSize.h);ctx.lineTo(0,0);}data=this.viewData[i].v;pt=transform.applyToPointArray(data.v[0][0],data.v[0][1],0);ctx.moveTo(pt[0],pt[1]);var j,jLen=data._length;for(j=1;j<jLen;j++){pts=transform.applyToTriplePoints(data.o[j-1],data.i[j],data.v[j]);ctx.bezierCurveTo(pts[0],pts[1],pts[2],pts[3],pts[4],pts[5]);}pts=transform.applyToTriplePoints(data.o[j-1],data.i[0],data.v[0]);ctx.bezierCurveTo(pts[0],pts[1],pts[2],pts[3],pts[4],pts[5]);}}this.element.globalData.renderer.save(true);ctx.clip();};CVMaskElement.prototype.getMaskProperty=MaskElement.prototype.getMaskProperty;CVMaskElement.prototype.destroy=function(){this.element=null;};function CVShapeElement(data,globalData,comp){this.shapes=[];this.shapesData=data.shapes;this.stylesList=[];this.itemsData=[];this.prevViewData=[];this.shapeModifiers=[];this.processedElements=[];this.transformsManager=new ShapeTransformManager();this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement],CVShapeElement);CVShapeElement.prototype.initElement=RenderableDOMElement.prototype.initElement;CVShapeElement.prototype.transformHelper={opacity:1,_opMdf:false};CVShapeElement.prototype.dashResetter=[];CVShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,true,[]);};CVShapeElement.prototype.createStyleElement=function(data,transforms){var styleElem={data:data,type:data.ty,preTransforms:this.transformsManager.addTransformSequence(transforms),transforms:[],elements:[],closed:data.hd===true};var elementData={};if(data.ty=='fl'||data.ty=='st'){elementData.c=PropertyFactory.getProp(this,data.c,1,255,this);if(!elementData.c.k){styleElem.co='rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';}}else if(data.ty==='gf'||data.ty==='gs'){elementData.s=PropertyFactory.getProp(this,data.s,1,null,this);elementData.e=PropertyFactory.getProp(this,data.e,1,null,this);elementData.h=PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);elementData.a=PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);elementData.g=new GradientProperty(this,data.g,this);}elementData.o=PropertyFactory.getProp(this,data.o,0,0.01,this);if(data.ty=='st'||data.ty=='gs'){styleElem.lc=this.lcEnum[data.lc]||'round';styleElem.lj=this.ljEnum[data.lj]||'round';if(data.lj==1){styleElem.ml=data.ml;}elementData.w=PropertyFactory.getProp(this,data.w,0,null,this);if(!elementData.w.k){styleElem.wi=elementData.w.v;}if(data.d){var d=new DashProperty(this,data.d,'canvas',this);elementData.d=d;if(!elementData.d.k){styleElem.da=elementData.d.dashArray;styleElem.do=elementData.d.dashoffset[0];}}}else{styleElem.r=data.r===2?'evenodd':'nonzero';}this.stylesList.push(styleElem);elementData.style=styleElem;return elementData;};CVShapeElement.prototype.createGroupElement=function(data){var elementData={it:[],prevViewData:[]};return elementData;};CVShapeElement.prototype.createTransformElement=function(data){var elementData={transform:{opacity:1,_opMdf:false,key:this.transformsManager.getNewKey(),op:PropertyFactory.getProp(this,data.o,0,0.01,this),mProps:TransformPropertyFactory.getTransformProperty(this,data,this)}};return elementData;};CVShapeElement.prototype.createShapeElement=function(data){var elementData=new CVShapeData(this,data,this.stylesList,this.transformsManager);this.shapes.push(elementData);this.addShapeToModifiers(elementData);return elementData;};CVShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=true;var i,len=this.itemsData.length;for(i=0;i<len;i+=1){this.prevViewData[i]=this.itemsData[i];}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,true,[]);len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();}this.renderModifiers();this.transformsManager.processSequences(this._isFirstFrame);};CVShapeElement.prototype.addTransformToStyleList=function(transform){var i,len=this.stylesList.length;for(i=0;i<len;i+=1){if(!this.stylesList[i].closed){this.stylesList[i].transforms.push(transform);}}};CVShapeElement.prototype.removeTransformFromStyleList=function(){var i,len=this.stylesList.length;for(i=0;i<len;i+=1){if(!this.stylesList[i].closed){this.stylesList[i].transforms.pop();}}};CVShapeElement.prototype.closeStyles=function(styles){var i,len=styles.length,j,jLen;for(i=0;i<len;i+=1){styles[i].closed=true;}};CVShapeElement.prototype.searchShapes=function(arr,itemsData,prevViewData,shouldRender,transforms){var i,len=arr.length-1;var j,jLen;var ownStyles=[],ownModifiers=[],processedPos,modifier,currentTransform;var ownTransforms=[].concat(transforms);for(i=len;i>=0;i-=1){processedPos=this.searchProcessedElement(arr[i]);if(!processedPos){arr[i]._shouldRender=shouldRender;}else{itemsData[i]=prevViewData[processedPos-1];}if(arr[i].ty=='fl'||arr[i].ty=='st'||arr[i].ty=='gf'||arr[i].ty=='gs'){if(!processedPos){itemsData[i]=this.createStyleElement(arr[i],ownTransforms);}else{itemsData[i].style.closed=false;}ownStyles.push(itemsData[i].style);}else if(arr[i].ty=='gr'){if(!processedPos){itemsData[i]=this.createGroupElement(arr[i]);}else{jLen=itemsData[i].it.length;for(j=0;j<jLen;j+=1){itemsData[i].prevViewData[j]=itemsData[i].it[j];}}this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,shouldRender,ownTransforms);}else if(arr[i].ty=='tr'){if(!processedPos){currentTransform=this.createTransformElement(arr[i]);itemsData[i]=currentTransform;}ownTransforms.push(itemsData[i]);this.addTransformToStyleList(itemsData[i]);}else if(arr[i].ty=='sh'||arr[i].ty=='rc'||arr[i].ty=='el'||arr[i].ty=='sr'){if(!processedPos){itemsData[i]=this.createShapeElement(arr[i]);}}else if(arr[i].ty=='tm'||arr[i].ty=='rd'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);modifier.init(this,arr[i]);itemsData[i]=modifier;this.shapeModifiers.push(modifier);}else{modifier=itemsData[i];modifier.closed=false;}ownModifiers.push(modifier);}else if(arr[i].ty=='rp'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);itemsData[i]=modifier;modifier.init(this,arr,i,itemsData);this.shapeModifiers.push(modifier);shouldRender=false;}else{modifier=itemsData[i];modifier.closed=true;}ownModifiers.push(modifier);}this.addProcessedElement(arr[i],i+1);}this.removeTransformFromStyleList();this.closeStyles(ownStyles);len=ownModifiers.length;for(i=0;i<len;i+=1){ownModifiers[i].closed=true;}};CVShapeElement.prototype.renderInnerContent=function(){this.transformHelper.opacity=1;this.transformHelper._opMdf=false;this.renderModifiers();this.transformsManager.processSequences(this._isFirstFrame);this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);};CVShapeElement.prototype.renderShapeTransform=function(parentTransform,groupTransform){var props,groupMatrix;if(parentTransform._opMdf||groupTransform.op._mdf||this._isFirstFrame){groupTransform.opacity=parentTransform.opacity;groupTransform.opacity*=groupTransform.op.v;groupTransform._opMdf=true;}};CVShapeElement.prototype.drawLayer=function(){var i,len=this.stylesList.length;var j,jLen,k,kLen,elems,nodes,renderer=this.globalData.renderer,ctx=this.globalData.canvasContext,type,currentStyle;for(i=0;i<len;i+=1){currentStyle=this.stylesList[i];type=currentStyle.type;//Skipping style when
//Stroke width equals 0
//style should not be rendered (extra unused repeaters)
//current opacity equals 0
//global opacity equals 0
if((type==='st'||type==='gs')&&currentStyle.wi===0||!currentStyle.data._shouldRender||currentStyle.coOp===0||this.globalData.currentGlobalAlpha===0){continue;}renderer.save();elems=currentStyle.elements;if(type==='st'||type==='gs'){ctx.strokeStyle=type==='st'?currentStyle.co:currentStyle.grd;ctx.lineWidth=currentStyle.wi;ctx.lineCap=currentStyle.lc;ctx.lineJoin=currentStyle.lj;ctx.miterLimit=currentStyle.ml||0;}else{ctx.fillStyle=type==='fl'?currentStyle.co:currentStyle.grd;}renderer.ctxOpacity(currentStyle.coOp);if(type!=='st'&&type!=='gs'){ctx.beginPath();}renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);jLen=elems.length;for(j=0;j<jLen;j+=1){if(type==='st'||type==='gs'){ctx.beginPath();if(currentStyle.da){ctx.setLineDash(currentStyle.da);ctx.lineDashOffset=currentStyle.do;}}nodes=elems[j].trNodes;kLen=nodes.length;for(k=0;k<kLen;k+=1){if(nodes[k].t=='m'){ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);}else if(nodes[k].t=='c'){ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);}else{ctx.closePath();}}if(type==='st'||type==='gs'){ctx.stroke();if(currentStyle.da){ctx.setLineDash(this.dashResetter);}}}if(type!=='st'&&type!=='gs'){ctx.fill(currentStyle.r);}renderer.restore();}};CVShapeElement.prototype.renderShape=function(parentTransform,items,data,isMain){var i,len=items.length-1;var groupTransform;groupTransform=parentTransform;for(i=len;i>=0;i-=1){if(items[i].ty=='tr'){groupTransform=data[i].transform;this.renderShapeTransform(parentTransform,groupTransform);}else if(items[i].ty=='sh'||items[i].ty=='el'||items[i].ty=='rc'||items[i].ty=='sr'){this.renderPath(items[i],data[i]);}else if(items[i].ty=='fl'){this.renderFill(items[i],data[i],groupTransform);}else if(items[i].ty=='st'){this.renderStroke(items[i],data[i],groupTransform);}else if(items[i].ty=='gf'||items[i].ty=='gs'){this.renderGradientFill(items[i],data[i],groupTransform);}else if(items[i].ty=='gr'){this.renderShape(groupTransform,items[i].it,data[i].it);}else if(items[i].ty=='tm'){//
}}if(isMain){this.drawLayer();}};CVShapeElement.prototype.renderStyledShape=function(styledShape,shape){if(this._isFirstFrame||shape._mdf||styledShape.transforms._mdf){var shapeNodes=styledShape.trNodes;var paths=shape.paths;var i,len,j,jLen=paths._length;shapeNodes.length=0;var groupTransformMat=styledShape.transforms.finalTransform;for(j=0;j<jLen;j+=1){var pathNodes=paths.shapes[j];if(pathNodes&&pathNodes.v){len=pathNodes._length;for(i=1;i<len;i+=1){if(i===1){shapeNodes.push({t:'m',p:groupTransformMat.applyToPointArray(pathNodes.v[0][0],pathNodes.v[0][1],0)});}shapeNodes.push({t:'c',pts:groupTransformMat.applyToTriplePoints(pathNodes.o[i-1],pathNodes.i[i],pathNodes.v[i])});}if(len===1){shapeNodes.push({t:'m',p:groupTransformMat.applyToPointArray(pathNodes.v[0][0],pathNodes.v[0][1],0)});}if(pathNodes.c&&len){shapeNodes.push({t:'c',pts:groupTransformMat.applyToTriplePoints(pathNodes.o[i-1],pathNodes.i[0],pathNodes.v[0])});shapeNodes.push({t:'z'});}}}styledShape.trNodes=shapeNodes;}};CVShapeElement.prototype.renderPath=function(pathData,itemData){if(pathData.hd!==true&&pathData._shouldRender){var i,len=itemData.styledShapes.length;for(i=0;i<len;i+=1){this.renderStyledShape(itemData.styledShapes[i],itemData.sh);}}};CVShapeElement.prototype.renderFill=function(styleData,itemData,groupTransform){var styleElem=itemData.style;if(itemData.c._mdf||this._isFirstFrame){styleElem.co='rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';}if(itemData.o._mdf||groupTransform._opMdf||this._isFirstFrame){styleElem.coOp=itemData.o.v*groupTransform.opacity;}};CVShapeElement.prototype.renderGradientFill=function(styleData,itemData,groupTransform){var styleElem=itemData.style;if(!styleElem.grd||itemData.g._mdf||itemData.s._mdf||itemData.e._mdf||styleData.t!==1&&(itemData.h._mdf||itemData.a._mdf)){var ctx=this.globalData.canvasContext;var grd;var pt1=itemData.s.v,pt2=itemData.e.v;if(styleData.t===1){grd=ctx.createLinearGradient(pt1[0],pt1[1],pt2[0],pt2[1]);}else{var rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));var ang=Math.atan2(pt2[1]-pt1[1],pt2[0]-pt1[0]);var percent=itemData.h.v>=1?0.99:itemData.h.v<=-1?-0.99:itemData.h.v;var dist=rad*percent;var x=Math.cos(ang+itemData.a.v)*dist+pt1[0];var y=Math.sin(ang+itemData.a.v)*dist+pt1[1];var grd=ctx.createRadialGradient(x,y,0,pt1[0],pt1[1],rad);}var i,len=styleData.g.p;var cValues=itemData.g.c;var opacity=1;for(i=0;i<len;i+=1){if(itemData.g._hasOpacity&&itemData.g._collapsable){opacity=itemData.g.o[i*2+1];}grd.addColorStop(cValues[i*4]/100,'rgba('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+','+opacity+')');}styleElem.grd=grd;}styleElem.coOp=itemData.o.v*groupTransform.opacity;};CVShapeElement.prototype.renderStroke=function(styleData,itemData,groupTransform){var styleElem=itemData.style;var d=itemData.d;if(d&&(d._mdf||this._isFirstFrame)){styleElem.da=d.dashArray;styleElem.do=d.dashoffset[0];}if(itemData.c._mdf||this._isFirstFrame){styleElem.co='rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';}if(itemData.o._mdf||groupTransform._opMdf||this._isFirstFrame){styleElem.coOp=itemData.o.v*groupTransform.opacity;}if(itemData.w._mdf||this._isFirstFrame){styleElem.wi=itemData.w.v;}};CVShapeElement.prototype.destroy=function(){this.shapesData=null;this.globalData=null;this.canvasContext=null;this.stylesList.length=0;this.itemsData.length=0;};function CVSolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVSolidElement);CVSolidElement.prototype.initElement=SVGShapeElement.prototype.initElement;CVSolidElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame;CVSolidElement.prototype.renderInnerContent=function(){var ctx=this.canvasContext;ctx.fillStyle=this.data.sc;ctx.fillRect(0,0,this.data.sw,this.data.sh);//
};function CVTextElement(data,globalData,comp){this.textSpans=[];this.yOffset=0;this.fillColorAnim=false;this.strokeColorAnim=false;this.strokeWidthAnim=false;this.stroke=false;this.fill=false;this.justifyOffset=0;this.currentRender=null;this.renderType='canvas';this.values={fill:'rgba(0,0,0,0)',stroke:'rgba(0,0,0,0)',sWidth:0,fValue:''};this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement],CVTextElement);CVTextElement.prototype.tHelper=createTag('canvas').getContext('2d');CVTextElement.prototype.buildNewText=function(){var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData.l?documentData.l.length:0);var hasFill=false;if(documentData.fc){hasFill=true;this.values.fill=this.buildColor(documentData.fc);}else{this.values.fill='rgba(0,0,0,0)';}this.fill=hasFill;var hasStroke=false;if(documentData.sc){hasStroke=true;this.values.stroke=this.buildColor(documentData.sc);this.values.sWidth=documentData.sw;}var fontData=this.globalData.fontManager.getFontByName(documentData.f);var i,len;var letters=documentData.l;var matrixHelper=this.mHelper;this.stroke=hasStroke;this.values.fValue=documentData.finalSize+'px '+this.globalData.fontManager.getFontByName(documentData.f).fFamily;len=documentData.finalText.length;//this.tHelper.font = this.values.fValue;
var charData,shapeData,k,kLen,shapes,j,jLen,pathNodes,commands,pathArr,singleShape=this.data.singleShape;var trackingOffset=documentData.tr/1000*documentData.finalSize;var xPos=0,yPos=0,firstLine=true;var cnt=0;for(i=0;i<len;i+=1){charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);shapeData=charData&&charData.data||{};matrixHelper.reset();if(singleShape&&letters[i].n){xPos=-trackingOffset;yPos+=documentData.yOffset;yPos+=firstLine?1:0;firstLine=false;}shapes=shapeData.shapes?shapeData.shapes[0].it:[];jLen=shapes.length;matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);if(singleShape){this.applyTextPropertiesToMatrix(documentData,matrixHelper,letters[i].line,xPos,yPos);}commands=createSizedArray(jLen);for(j=0;j<jLen;j+=1){kLen=shapes[j].ks.k.i.length;pathNodes=shapes[j].ks.k;pathArr=[];for(k=1;k<kLen;k+=1){if(k==1){pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));}pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));}pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));commands[j]=pathArr;}if(singleShape){xPos+=letters[i].l;xPos+=trackingOffset;}if(this.textSpans[cnt]){this.textSpans[cnt].elem=commands;}else{this.textSpans[cnt]={elem:commands};}cnt+=1;}};CVTextElement.prototype.renderInnerContent=function(){var ctx=this.canvasContext;var finalMat=this.finalTransform.mat.props;ctx.font=this.values.fValue;ctx.lineCap='butt';ctx.lineJoin='miter';ctx.miterLimit=4;if(!this.data.singleShape){this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);}var i,len,j,jLen,k,kLen;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var lastFill=null,lastStroke=null,lastStrokeW=null,commands,pathArr;for(i=0;i<len;i+=1){if(letters[i].n){continue;}renderedLetter=renderedLetters[i];if(renderedLetter){this.globalData.renderer.save();this.globalData.renderer.ctxTransform(renderedLetter.p);this.globalData.renderer.ctxOpacity(renderedLetter.o);}if(this.fill){if(renderedLetter&&renderedLetter.fc){if(lastFill!==renderedLetter.fc){lastFill=renderedLetter.fc;ctx.fillStyle=renderedLetter.fc;}}else if(lastFill!==this.values.fill){lastFill=this.values.fill;ctx.fillStyle=this.values.fill;}commands=this.textSpans[i].elem;jLen=commands.length;this.globalData.canvasContext.beginPath();for(j=0;j<jLen;j+=1){pathArr=commands[j];kLen=pathArr.length;this.globalData.canvasContext.moveTo(pathArr[0],pathArr[1]);for(k=2;k<kLen;k+=6){this.globalData.canvasContext.bezierCurveTo(pathArr[k],pathArr[k+1],pathArr[k+2],pathArr[k+3],pathArr[k+4],pathArr[k+5]);}}this.globalData.canvasContext.closePath();this.globalData.canvasContext.fill();///ctx.fillText(this.textSpans[i].val,0,0);
}if(this.stroke){if(renderedLetter&&renderedLetter.sw){if(lastStrokeW!==renderedLetter.sw){lastStrokeW=renderedLetter.sw;ctx.lineWidth=renderedLetter.sw;}}else if(lastStrokeW!==this.values.sWidth){lastStrokeW=this.values.sWidth;ctx.lineWidth=this.values.sWidth;}if(renderedLetter&&renderedLetter.sc){if(lastStroke!==renderedLetter.sc){lastStroke=renderedLetter.sc;ctx.strokeStyle=renderedLetter.sc;}}else if(lastStroke!==this.values.stroke){lastStroke=this.values.stroke;ctx.strokeStyle=this.values.stroke;}commands=this.textSpans[i].elem;jLen=commands.length;this.globalData.canvasContext.beginPath();for(j=0;j<jLen;j+=1){pathArr=commands[j];kLen=pathArr.length;this.globalData.canvasContext.moveTo(pathArr[0],pathArr[1]);for(k=2;k<kLen;k+=6){this.globalData.canvasContext.bezierCurveTo(pathArr[k],pathArr[k+1],pathArr[k+2],pathArr[k+3],pathArr[k+4],pathArr[k+5]);}}this.globalData.canvasContext.closePath();this.globalData.canvasContext.stroke();///ctx.strokeText(letters[i].val,0,0);
}if(renderedLetter){this.globalData.renderer.restore();}}};function CVEffects(){}CVEffects.prototype.renderFrame=function(){};function HBaseElement(data,globalData,comp){}HBaseElement.prototype={checkBlendMode:function checkBlendMode(){},initRendererElement:function initRendererElement(){this.baseElement=createTag(this.data.tg||'div');if(this.data.hasMask){this.svgElement=createNS('svg');this.layerElement=createNS('g');this.maskedElement=this.layerElement;this.svgElement.appendChild(this.layerElement);this.baseElement.appendChild(this.svgElement);}else{this.layerElement=this.baseElement;}styleDiv(this.baseElement);},createContainerElements:function createContainerElements(){this.renderableEffectsManager=new CVEffects(this);this.transformedElement=this.baseElement;this.maskedElement=this.layerElement;if(this.data.ln){this.layerElement.setAttribute('id',this.data.ln);}if(this.data.cl){this.layerElement.setAttribute('class',this.data.cl);}if(this.data.bm!==0){this.setBlendMode();}},renderElement:function renderElement(){if(this.finalTransform._matMdf){this.transformedElement.style.transform=this.transformedElement.style.webkitTransform=this.finalTransform.mat.toCSS();}if(this.finalTransform._opMdf){this.transformedElement.style.opacity=this.finalTransform.mProp.o.v;}},renderFrame:function renderFrame(){//If it is exported as hidden (data.hd === true) no need to render
//If it is not visible no need to render
if(this.data.hd||this.hidden){return;}this.renderTransform();this.renderRenderable();this.renderElement();this.renderInnerContent();if(this._isFirstFrame){this._isFirstFrame=false;}},destroy:function destroy(){this.layerElement=null;this.transformedElement=null;if(this.matteElement){this.matteElement=null;}if(this.maskManager){this.maskManager.destroy();this.maskManager=null;}},createRenderableComponents:function createRenderableComponents(){this.maskManager=new MaskElement(this.data,this,this.globalData);},addEffects:function addEffects(){},setMatte:function setMatte(){}};HBaseElement.prototype.getBaseElement=SVGBaseElement.prototype.getBaseElement;HBaseElement.prototype.destroyBaseElement=HBaseElement.prototype.destroy;HBaseElement.prototype.buildElementParenting=HybridRenderer.prototype.buildElementParenting;function HSolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],HSolidElement);HSolidElement.prototype.createContent=function(){var rect;if(this.data.hasMask){rect=createNS('rect');rect.setAttribute('width',this.data.sw);rect.setAttribute('height',this.data.sh);rect.setAttribute('fill',this.data.sc);this.svgElement.setAttribute('width',this.data.sw);this.svgElement.setAttribute('height',this.data.sh);}else{rect=createTag('div');rect.style.width=this.data.sw+'px';rect.style.height=this.data.sh+'px';rect.style.backgroundColor=this.data.sc;}this.layerElement.appendChild(rect);};function HCompElement(data,globalData,comp){this.layers=data.layers;this.supports3d=!data.hasMask;this.completeLayers=false;this.pendingElements=[];this.elements=this.layers?createSizedArray(this.layers.length):[];this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([HybridRenderer,ICompElement,HBaseElement],HCompElement);HCompElement.prototype._createBaseContainerElements=HCompElement.prototype.createContainerElements;HCompElement.prototype.createContainerElements=function(){this._createBaseContainerElements();//divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
if(this.data.hasMask){this.svgElement.setAttribute('width',this.data.w);this.svgElement.setAttribute('height',this.data.h);this.transformedElement=this.baseElement;}else{this.transformedElement=this.layerElement;}};HCompElement.prototype.addTo3dContainer=function(elem,pos){var j=0;var nextElement;while(j<pos){if(this.elements[j]&&this.elements[j].getBaseElement){nextElement=this.elements[j].getBaseElement();}j+=1;}if(nextElement){this.layerElement.insertBefore(elem,nextElement);}else{this.layerElement.appendChild(elem);}};function HShapeElement(data,globalData,comp){//List of drawable elements
this.shapes=[];// Full shape data
this.shapesData=data.shapes;//List of styles that will be applied to shapes
this.stylesList=[];//List of modifiers that will be applied to shapes
this.shapeModifiers=[];//List of items in shape tree
this.itemsData=[];//List of items in previous shape tree
this.processedElements=[];// List of animated components
this.animatedContents=[];this.shapesContainer=createNS('g');this.initElement(data,globalData,comp);//Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
// List of elements that have been created
this.prevViewData=[];this.currentBBox={x:999999,y:-999999,h:0,w:0};}extendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement],HShapeElement);HShapeElement.prototype._renderShapeFrame=HShapeElement.prototype.renderInnerContent;HShapeElement.prototype.createContent=function(){var cont;this.baseElement.style.fontSize=0;if(this.data.hasMask){this.layerElement.appendChild(this.shapesContainer);cont=this.svgElement;}else{cont=createNS('svg');var size=this.comp.data?this.comp.data:this.globalData.compSize;cont.setAttribute('width',size.w);cont.setAttribute('height',size.h);cont.appendChild(this.shapesContainer);this.layerElement.appendChild(cont);}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0,[],true);this.filterUniqueShapes();this.shapeCont=cont;};HShapeElement.prototype.getTransformedPoint=function(transformers,point){var i,len=transformers.length;for(i=0;i<len;i+=1){point=transformers[i].mProps.v.applyToPointArray(point[0],point[1],0);}return point;};HShapeElement.prototype.calculateShapeBoundingBox=function(item,boundingBox){var shape=item.sh.v;var transformers=item.transformers;var i,len=shape._length,vPoint,oPoint,nextIPoint,nextVPoint,bounds;if(len<=1){return;}for(i=0;i<len-1;i+=1){vPoint=this.getTransformedPoint(transformers,shape.v[i]);oPoint=this.getTransformedPoint(transformers,shape.o[i]);nextIPoint=this.getTransformedPoint(transformers,shape.i[i+1]);nextVPoint=this.getTransformedPoint(transformers,shape.v[i+1]);this.checkBounds(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox);}if(shape.c){vPoint=this.getTransformedPoint(transformers,shape.v[i]);oPoint=this.getTransformedPoint(transformers,shape.o[i]);nextIPoint=this.getTransformedPoint(transformers,shape.i[0]);nextVPoint=this.getTransformedPoint(transformers,shape.v[0]);this.checkBounds(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox);}};HShapeElement.prototype.checkBounds=function(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox){this.getBoundsOfCurve(vPoint,oPoint,nextIPoint,nextVPoint);var bounds=this.shapeBoundingBox;boundingBox.x=bm_min(bounds.left,boundingBox.x);boundingBox.xMax=bm_max(bounds.right,boundingBox.xMax);boundingBox.y=bm_min(bounds.top,boundingBox.y);boundingBox.yMax=bm_max(bounds.bottom,boundingBox.yMax);};HShapeElement.prototype.shapeBoundingBox={left:0,right:0,top:0,bottom:0};HShapeElement.prototype.tempBoundingBox={x:0,xMax:0,y:0,yMax:0,width:0,height:0};HShapeElement.prototype.getBoundsOfCurve=function(p0,p1,p2,p3){var bounds=[[p0[0],p3[0]],[p0[1],p3[1]]];for(var a,b,c,t,b2ac,t1,t2,i=0;i<2;++i){b=6*p0[i]-12*p1[i]+6*p2[i];a=-3*p0[i]+9*p1[i]-9*p2[i]+3*p3[i];c=3*p1[i]-3*p0[i];b=b|0;a=a|0;c=c|0;if(a===0){if(b===0){continue;}t=-c/b;if(0<t&&t<1){bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));}continue;}b2ac=b*b-4*c*a;if(b2ac<0){continue;}t1=(-b+bm_sqrt(b2ac))/(2*a);if(0<t1&&t1<1)bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));t2=(-b-bm_sqrt(b2ac))/(2*a);if(0<t2&&t2<1)bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));}this.shapeBoundingBox.left=bm_min.apply(null,bounds[0]);this.shapeBoundingBox.top=bm_min.apply(null,bounds[1]);this.shapeBoundingBox.right=bm_max.apply(null,bounds[0]);this.shapeBoundingBox.bottom=bm_max.apply(null,bounds[1]);};HShapeElement.prototype.calculateF=function(t,p0,p1,p2,p3,i){return bm_pow(1-t,3)*p0[i]+3*bm_pow(1-t,2)*t*p1[i]+3*(1-t)*bm_pow(t,2)*p2[i]+bm_pow(t,3)*p3[i];};HShapeElement.prototype.calculateBoundingBox=function(itemsData,boundingBox){var i,len=itemsData.length,path;for(i=0;i<len;i+=1){if(itemsData[i]&&itemsData[i].sh){this.calculateShapeBoundingBox(itemsData[i],boundingBox);}else if(itemsData[i]&&itemsData[i].it){this.calculateBoundingBox(itemsData[i].it,boundingBox);}}};HShapeElement.prototype.currentBoxContains=function(box){return this.currentBBox.x<=box.x&&this.currentBBox.y<=box.y&&this.currentBBox.width+this.currentBBox.x>=box.x+box.width&&this.currentBBox.height+this.currentBBox.y>=box.y+box.height;};HShapeElement.prototype.renderInnerContent=function(){this._renderShapeFrame();if(!this.hidden&&(this._isFirstFrame||this._mdf)){var tempBoundingBox=this.tempBoundingBox;var max=999999;tempBoundingBox.x=max;tempBoundingBox.xMax=-max;tempBoundingBox.y=max;tempBoundingBox.yMax=-max;this.calculateBoundingBox(this.itemsData,tempBoundingBox);tempBoundingBox.width=tempBoundingBox.xMax<tempBoundingBox.x?0:tempBoundingBox.xMax-tempBoundingBox.x;tempBoundingBox.height=tempBoundingBox.yMax<tempBoundingBox.y?0:tempBoundingBox.yMax-tempBoundingBox.y;//var tempBoundingBox = this.shapeCont.getBBox();
if(this.currentBoxContains(tempBoundingBox)){return;}var changed=false;if(this.currentBBox.w!==tempBoundingBox.width){this.currentBBox.w=tempBoundingBox.width;this.shapeCont.setAttribute('width',tempBoundingBox.width);changed=true;}if(this.currentBBox.h!==tempBoundingBox.height){this.currentBBox.h=tempBoundingBox.height;this.shapeCont.setAttribute('height',tempBoundingBox.height);changed=true;}if(changed||this.currentBBox.x!==tempBoundingBox.x||this.currentBBox.y!==tempBoundingBox.y){this.currentBBox.w=tempBoundingBox.width;this.currentBBox.h=tempBoundingBox.height;this.currentBBox.x=tempBoundingBox.x;this.currentBBox.y=tempBoundingBox.y;this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);this.shapeCont.style.transform=this.shapeCont.style.webkitTransform='translate('+this.currentBBox.x+'px,'+this.currentBBox.y+'px)';}}};function HTextElement(data,globalData,comp){this.textSpans=[];this.textPaths=[];this.currentBBox={x:999999,y:-999999,h:0,w:0};this.renderType='svg';this.isMasked=false;this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],HTextElement);HTextElement.prototype.createContent=function(){this.isMasked=this.checkMasks();if(this.isMasked){this.renderType='svg';this.compW=this.comp.data.w;this.compH=this.comp.data.h;this.svgElement.setAttribute('width',this.compW);this.svgElement.setAttribute('height',this.compH);var g=createNS('g');this.maskedElement.appendChild(g);this.innerElem=g;}else{this.renderType='html';this.innerElem=this.layerElement;}this.checkParenting();};HTextElement.prototype.buildNewText=function(){var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData.l?documentData.l.length:0);var innerElemStyle=this.innerElem.style;innerElemStyle.color=innerElemStyle.fill=documentData.fc?this.buildColor(documentData.fc):'rgba(0,0,0,0)';if(documentData.sc){innerElemStyle.stroke=this.buildColor(documentData.sc);innerElemStyle.strokeWidth=documentData.sw+'px';}var fontData=this.globalData.fontManager.getFontByName(documentData.f);if(!this.globalData.fontManager.chars){innerElemStyle.fontSize=documentData.finalSize+'px';innerElemStyle.lineHeight=documentData.finalSize+'px';if(fontData.fClass){this.innerElem.className=fontData.fClass;}else{innerElemStyle.fontFamily=fontData.fFamily;var fWeight=documentData.fWeight,fStyle=documentData.fStyle;innerElemStyle.fontStyle=fStyle;innerElemStyle.fontWeight=fWeight;}}var i,len;var letters=documentData.l;len=letters.length;var tSpan,tParent,tCont;var matrixHelper=this.mHelper;var shapes,shapeStr='';var cnt=0;for(i=0;i<len;i+=1){if(this.globalData.fontManager.chars){if(!this.textPaths[cnt]){tSpan=createNS('path');tSpan.setAttribute('stroke-linecap','butt');tSpan.setAttribute('stroke-linejoin','round');tSpan.setAttribute('stroke-miterlimit','4');}else{tSpan=this.textPaths[cnt];}if(!this.isMasked){if(this.textSpans[cnt]){tParent=this.textSpans[cnt];tCont=tParent.children[0];}else{tParent=createTag('div');tParent.style.lineHeight=0;tCont=createNS('svg');tCont.appendChild(tSpan);styleDiv(tParent);}}}else{if(!this.isMasked){if(this.textSpans[cnt]){tParent=this.textSpans[cnt];tSpan=this.textPaths[cnt];}else{tParent=createTag('span');styleDiv(tParent);tSpan=createTag('span');styleDiv(tSpan);tParent.appendChild(tSpan);}}else{tSpan=this.textPaths[cnt]?this.textPaths[cnt]:createNS('text');}}//tSpan.setAttribute('visibility', 'hidden');
if(this.globalData.fontManager.chars){var charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);var shapeData;if(charData){shapeData=charData.data;}else{shapeData=null;}matrixHelper.reset();if(shapeData&&shapeData.shapes){shapes=shapeData.shapes[0].it;matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);shapeStr=this.createPathShape(matrixHelper,shapes);tSpan.setAttribute('d',shapeStr);}if(!this.isMasked){this.innerElem.appendChild(tParent);if(shapeData&&shapeData.shapes){//document.body.appendChild is needed to get exact measure of shape
document.body.appendChild(tCont);var boundingBox=tCont.getBBox();tCont.setAttribute('width',boundingBox.width+2);tCont.setAttribute('height',boundingBox.height+2);tCont.setAttribute('viewBox',boundingBox.x-1+' '+(boundingBox.y-1)+' '+(boundingBox.width+2)+' '+(boundingBox.height+2));tCont.style.transform=tCont.style.webkitTransform='translate('+(boundingBox.x-1)+'px,'+(boundingBox.y-1)+'px)';letters[i].yOffset=boundingBox.y-1;}else{tCont.setAttribute('width',1);tCont.setAttribute('height',1);}tParent.appendChild(tCont);}else{this.innerElem.appendChild(tSpan);}}else{tSpan.textContent=letters[i].val;tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve");if(!this.isMasked){this.innerElem.appendChild(tParent);//
tSpan.style.transform=tSpan.style.webkitTransform='translate3d(0,'+-documentData.finalSize/1.2+'px,0)';}else{this.innerElem.appendChild(tSpan);}}//
if(!this.isMasked){this.textSpans[cnt]=tParent;}else{this.textSpans[cnt]=tSpan;}this.textSpans[cnt].style.display='block';this.textPaths[cnt]=tSpan;cnt+=1;}while(cnt<this.textSpans.length){this.textSpans[cnt].style.display='none';cnt+=1;}};HTextElement.prototype.renderInnerContent=function(){if(this.data.singleShape){if(!this._isFirstFrame&&!this.lettersChangedFlag){return;}else{// Todo Benchmark if using this is better than getBBox
if(this.isMasked&&this.finalTransform._matMdf){this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+-this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);this.svgElement.style.transform=this.svgElement.style.webkitTransform='translate('+-this.finalTransform.mProp.p.v[0]+'px,'+-this.finalTransform.mProp.p.v[1]+'px)';}}}this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);if(!this.lettersChangedFlag&&!this.textAnimator.lettersChangedFlag){return;}var i,len,count=0;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter,textSpan,textPath;for(i=0;i<len;i+=1){if(letters[i].n){count+=1;continue;}textSpan=this.textSpans[i];textPath=this.textPaths[i];renderedLetter=renderedLetters[count];count+=1;if(renderedLetter._mdf.m){if(!this.isMasked){textSpan.style.transform=textSpan.style.webkitTransform=renderedLetter.m;}else{textSpan.setAttribute('transform',renderedLetter.m);}}////textSpan.setAttribute('opacity',renderedLetter.o);
textSpan.style.opacity=renderedLetter.o;if(renderedLetter.sw&&renderedLetter._mdf.sw){textPath.setAttribute('stroke-width',renderedLetter.sw);}if(renderedLetter.sc&&renderedLetter._mdf.sc){textPath.setAttribute('stroke',renderedLetter.sc);}if(renderedLetter.fc&&renderedLetter._mdf.fc){textPath.setAttribute('fill',renderedLetter.fc);textPath.style.color=renderedLetter.fc;}}if(this.innerElem.getBBox&&!this.hidden&&(this._isFirstFrame||this._mdf)){var boundingBox=this.innerElem.getBBox();if(this.currentBBox.w!==boundingBox.width){this.currentBBox.w=boundingBox.width;this.svgElement.setAttribute('width',boundingBox.width);}if(this.currentBBox.h!==boundingBox.height){this.currentBBox.h=boundingBox.height;this.svgElement.setAttribute('height',boundingBox.height);}var margin=1;if(this.currentBBox.w!==boundingBox.width+margin*2||this.currentBBox.h!==boundingBox.height+margin*2||this.currentBBox.x!==boundingBox.x-margin||this.currentBBox.y!==boundingBox.y-margin){this.currentBBox.w=boundingBox.width+margin*2;this.currentBBox.h=boundingBox.height+margin*2;this.currentBBox.x=boundingBox.x-margin;this.currentBBox.y=boundingBox.y-margin;this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);this.svgElement.style.transform=this.svgElement.style.webkitTransform='translate('+this.currentBBox.x+'px,'+this.currentBBox.y+'px)';}}};function HImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement],HImageElement);HImageElement.prototype.createContent=function(){var assetPath=this.globalData.getAssetsPath(this.assetData);var img=new Image();if(this.data.hasMask){this.imageElem=createNS('image');this.imageElem.setAttribute('width',this.assetData.w+"px");this.imageElem.setAttribute('height',this.assetData.h+"px");this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);this.layerElement.appendChild(this.imageElem);this.baseElement.setAttribute('width',this.assetData.w);this.baseElement.setAttribute('height',this.assetData.h);}else{this.layerElement.appendChild(img);}img.src=assetPath;if(this.data.ln){this.baseElement.setAttribute('id',this.data.ln);}};function HCameraElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initHierarchy();var getProp=PropertyFactory.getProp;this.pe=getProp(this,data.pe,0,0,this);if(data.ks.p.s){this.px=getProp(this,data.ks.p.x,1,0,this);this.py=getProp(this,data.ks.p.y,1,0,this);this.pz=getProp(this,data.ks.p.z,1,0,this);}else{this.p=getProp(this,data.ks.p,1,0,this);}if(data.ks.a){this.a=getProp(this,data.ks.a,1,0,this);}if(data.ks.or.k.length&&data.ks.or.k[0].to){var i,len=data.ks.or.k.length;for(i=0;i<len;i+=1){data.ks.or.k[i].to=null;data.ks.or.k[i].ti=null;}}this.or=getProp(this,data.ks.or,1,degToRads,this);this.or.sh=true;this.rx=getProp(this,data.ks.rx,0,degToRads,this);this.ry=getProp(this,data.ks.ry,0,degToRads,this);this.rz=getProp(this,data.ks.rz,0,degToRads,this);this.mat=new Matrix();this._prevMat=new Matrix();this._isFirstFrame=true;// TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
this.finalTransform={mProp:this};}extendPrototype([BaseElement,FrameElement,HierarchyElement],HCameraElement);HCameraElement.prototype.setup=function(){var i,len=this.comp.threeDElements.length,comp;for(i=0;i<len;i+=1){//[perspectiveElem,container]
comp=this.comp.threeDElements[i];if(comp.type==='3d'){comp.perspectiveElem.style.perspective=comp.perspectiveElem.style.webkitPerspective=this.pe.v+'px';comp.container.style.transformOrigin=comp.container.style.mozTransformOrigin=comp.container.style.webkitTransformOrigin="0px 0px 0px";comp.perspectiveElem.style.transform=comp.perspectiveElem.style.webkitTransform='matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';}}};HCameraElement.prototype.createElements=function(){};HCameraElement.prototype.hide=function(){};HCameraElement.prototype.renderFrame=function(){var _mdf=this._isFirstFrame;var i,len;if(this.hierarchy){len=this.hierarchy.length;for(i=0;i<len;i+=1){_mdf=this.hierarchy[i].finalTransform.mProp._mdf||_mdf;}}if(_mdf||this.pe._mdf||this.p&&this.p._mdf||this.px&&(this.px._mdf||this.py._mdf||this.pz._mdf)||this.rx._mdf||this.ry._mdf||this.rz._mdf||this.or._mdf||this.a&&this.a._mdf){this.mat.reset();if(this.hierarchy){var mat;len=this.hierarchy.length-1;for(i=len;i>=0;i-=1){var mTransf=this.hierarchy[i].finalTransform.mProp;this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);}}if(this.p){this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);}else{this.mat.translate(-this.px.v,-this.py.v,this.pz.v);}if(this.a){var diffVector;if(this.p){diffVector=[this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];}else{diffVector=[this.px.v-this.a.v[0],this.py.v-this.a.v[1],this.pz.v-this.a.v[2]];}var mag=Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));//var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
var lookDir=[diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];var lookLengthOnXZ=Math.sqrt(lookDir[2]*lookDir[2]+lookDir[0]*lookDir[0]);var m_rotationX=Math.atan2(lookDir[1],lookLengthOnXZ);var m_rotationY=Math.atan2(lookDir[0],-lookDir[2]);this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);}this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);this.mat.translate(0,0,this.pe.v);var hasMatrixChanged=!this._prevMat.equals(this.mat);if((hasMatrixChanged||this.pe._mdf)&&this.comp.threeDElements){len=this.comp.threeDElements.length;var comp;for(i=0;i<len;i+=1){comp=this.comp.threeDElements[i];if(comp.type==='3d'){if(hasMatrixChanged){comp.container.style.transform=comp.container.style.webkitTransform=this.mat.toCSS();}if(this.pe._mdf){comp.perspectiveElem.style.perspective=comp.perspectiveElem.style.webkitPerspective=this.pe.v+'px';}}}this.mat.clone(this._prevMat);}}this._isFirstFrame=false;};HCameraElement.prototype.prepareFrame=function(num){this.prepareProperties(num,true);};HCameraElement.prototype.destroy=function(){};HCameraElement.prototype.getBaseElement=function(){return null;};function HEffects(){}HEffects.prototype.renderFrame=function(){};var animationManager=function(){var moduleOb={};var registeredAnimations=[];var initTime=0;var len=0;var playingAnimationsNum=0;var _stopped=true;var _isFrozen=false;function removeElement(ev){var i=0;var animItem=ev.target;while(i<len){if(registeredAnimations[i].animation===animItem){registeredAnimations.splice(i,1);i-=1;len-=1;if(!animItem.isPaused){subtractPlayingCount();}}i+=1;}}function registerAnimation(element,animationData){if(!element){return null;}var i=0;while(i<len){if(registeredAnimations[i].elem==element&&registeredAnimations[i].elem!==null){return registeredAnimations[i].animation;}i+=1;}var animItem=new AnimationItem();setupAnimation(animItem,element);animItem.setData(element,animationData);return animItem;}function getRegisteredAnimations(){var i,len=registeredAnimations.length;var animations=[];for(i=0;i<len;i+=1){animations.push(registeredAnimations[i].animation);}return animations;}function addPlayingCount(){playingAnimationsNum+=1;activate();}function subtractPlayingCount(){playingAnimationsNum-=1;}function setupAnimation(animItem,element){animItem.addEventListener('destroy',removeElement);animItem.addEventListener('_active',addPlayingCount);animItem.addEventListener('_idle',subtractPlayingCount);registeredAnimations.push({elem:element,animation:animItem});len+=1;}function loadAnimation(params){var animItem=new AnimationItem();setupAnimation(animItem,null);animItem.setParams(params);return animItem;}function setSpeed(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setSpeed(val,animation);}}function setDirection(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setDirection(val,animation);}}function play(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.play(animation);}}function resume(nowTime){var elapsedTime=nowTime-initTime;var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.advanceTime(elapsedTime);}initTime=nowTime;if(playingAnimationsNum&&!_isFrozen){window.requestAnimationFrame(resume);}else{_stopped=true;}}function first(nowTime){initTime=nowTime;window.requestAnimationFrame(resume);}function pause(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.pause(animation);}}function goToAndStop(value,isFrame,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);}}function stop(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.stop(animation);}}function togglePause(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.togglePause(animation);}}function destroy(animation){var i;for(i=len-1;i>=0;i-=1){registeredAnimations[i].animation.destroy(animation);}}function searchAnimations(animationData,standalone,renderer){var animElements=[].concat([].slice.call(document.getElementsByClassName('lottie')),[].slice.call(document.getElementsByClassName('bodymovin')));var i,len=animElements.length;for(i=0;i<len;i+=1){if(renderer){animElements[i].setAttribute('data-bm-type',renderer);}registerAnimation(animElements[i],animationData);}if(standalone&&len===0){if(!renderer){renderer='svg';}var body=document.getElementsByTagName('body')[0];body.innerHTML='';var div=createTag('div');div.style.width='100%';div.style.height='100%';div.setAttribute('data-bm-type',renderer);body.appendChild(div);registerAnimation(div,animationData);}}function resize(){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.resize();}}function activate(){if(!_isFrozen&&playingAnimationsNum){if(_stopped){window.requestAnimationFrame(first);_stopped=false;}}}function freeze(){_isFrozen=true;}function unfreeze(){_isFrozen=false;activate();}moduleOb.registerAnimation=registerAnimation;moduleOb.loadAnimation=loadAnimation;moduleOb.setSpeed=setSpeed;moduleOb.setDirection=setDirection;moduleOb.play=play;moduleOb.pause=pause;moduleOb.stop=stop;moduleOb.togglePause=togglePause;moduleOb.searchAnimations=searchAnimations;moduleOb.resize=resize;//moduleOb.start = start;
moduleOb.goToAndStop=goToAndStop;moduleOb.destroy=destroy;moduleOb.freeze=freeze;moduleOb.unfreeze=unfreeze;moduleOb.getRegisteredAnimations=getRegisteredAnimations;return moduleOb;}();var AnimationItem=function AnimationItem(){this._cbs=[];this.name='';this.path='';this.isLoaded=false;this.currentFrame=0;this.currentRawFrame=0;this.totalFrames=0;this.frameRate=0;this.frameMult=0;this.playSpeed=1;this.playDirection=1;this.playCount=0;this.animationData={};this.assets=[];this.isPaused=true;this.autoplay=false;this.loop=true;this.renderer=null;this.animationID=createElementID();this.assetsPath='';this.timeCompleted=0;this.segmentPos=0;this.subframeEnabled=subframeEnabled;this.segments=[];this._idle=true;this._completedLoop=false;this.projectInterface=ProjectInterface();this.imagePreloader=new ImagePreloader();};extendPrototype([BaseEvent],AnimationItem);AnimationItem.prototype.setParams=function(params){if(params.context){this.context=params.context;}if(params.wrapper||params.container){this.wrapper=params.wrapper||params.container;}var animType=params.animType?params.animType:params.renderer?params.renderer:'svg';switch(animType){case'canvas':this.renderer=new CanvasRenderer(this,params.rendererSettings);break;case'svg':this.renderer=new SVGRenderer(this,params.rendererSettings);break;default:this.renderer=new HybridRenderer(this,params.rendererSettings);break;}this.renderer.setProjectInterface(this.projectInterface);this.animType=animType;if(params.loop===''||params.loop===null){}else if(params.loop===false){this.loop=false;}else if(params.loop===true){this.loop=true;}else{this.loop=parseInt(params.loop);}this.autoplay='autoplay'in params?params.autoplay:true;this.name=params.name?params.name:'';this.autoloadSegments=params.hasOwnProperty('autoloadSegments')?params.autoloadSegments:true;this.assetsPath=params.assetsPath;if(params.animationData){this.configAnimation(params.animationData);}else if(params.path){if(params.path.lastIndexOf('\\')!==-1){this.path=params.path.substr(0,params.path.lastIndexOf('\\')+1);}else{this.path=params.path.substr(0,params.path.lastIndexOf('/')+1);}this.fileName=params.path.substr(params.path.lastIndexOf('/')+1);this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf('.json'));assetLoader.load(params.path,this.configAnimation.bind(this),function(){this.trigger('data_failed');}.bind(this));}};AnimationItem.prototype.setData=function(wrapper,animationData){var params={wrapper:wrapper,animationData:animationData?typeof animationData==="object"?animationData:JSON.parse(animationData):null};var wrapperAttributes=wrapper.attributes;params.path=wrapperAttributes.getNamedItem('data-animation-path')?wrapperAttributes.getNamedItem('data-animation-path').value:wrapperAttributes.getNamedItem('data-bm-path')?wrapperAttributes.getNamedItem('data-bm-path').value:wrapperAttributes.getNamedItem('bm-path')?wrapperAttributes.getNamedItem('bm-path').value:'';params.animType=wrapperAttributes.getNamedItem('data-anim-type')?wrapperAttributes.getNamedItem('data-anim-type').value:wrapperAttributes.getNamedItem('data-bm-type')?wrapperAttributes.getNamedItem('data-bm-type').value:wrapperAttributes.getNamedItem('bm-type')?wrapperAttributes.getNamedItem('bm-type').value:wrapperAttributes.getNamedItem('data-bm-renderer')?wrapperAttributes.getNamedItem('data-bm-renderer').value:wrapperAttributes.getNamedItem('bm-renderer')?wrapperAttributes.getNamedItem('bm-renderer').value:'canvas';var loop=wrapperAttributes.getNamedItem('data-anim-loop')?wrapperAttributes.getNamedItem('data-anim-loop').value:wrapperAttributes.getNamedItem('data-bm-loop')?wrapperAttributes.getNamedItem('data-bm-loop').value:wrapperAttributes.getNamedItem('bm-loop')?wrapperAttributes.getNamedItem('bm-loop').value:'';if(loop===''){}else if(loop==='false'){params.loop=false;}else if(loop==='true'){params.loop=true;}else{params.loop=parseInt(loop);}var autoplay=wrapperAttributes.getNamedItem('data-anim-autoplay')?wrapperAttributes.getNamedItem('data-anim-autoplay').value:wrapperAttributes.getNamedItem('data-bm-autoplay')?wrapperAttributes.getNamedItem('data-bm-autoplay').value:wrapperAttributes.getNamedItem('bm-autoplay')?wrapperAttributes.getNamedItem('bm-autoplay').value:true;params.autoplay=autoplay!=="false";params.name=wrapperAttributes.getNamedItem('data-name')?wrapperAttributes.getNamedItem('data-name').value:wrapperAttributes.getNamedItem('data-bm-name')?wrapperAttributes.getNamedItem('data-bm-name').value:wrapperAttributes.getNamedItem('bm-name')?wrapperAttributes.getNamedItem('bm-name').value:'';var prerender=wrapperAttributes.getNamedItem('data-anim-prerender')?wrapperAttributes.getNamedItem('data-anim-prerender').value:wrapperAttributes.getNamedItem('data-bm-prerender')?wrapperAttributes.getNamedItem('data-bm-prerender').value:wrapperAttributes.getNamedItem('bm-prerender')?wrapperAttributes.getNamedItem('bm-prerender').value:'';if(prerender==='false'){params.prerender=false;}this.setParams(params);};AnimationItem.prototype.includeLayers=function(data){if(data.op>this.animationData.op){this.animationData.op=data.op;this.totalFrames=Math.floor(data.op-this.animationData.ip);}var layers=this.animationData.layers;var i,len=layers.length;var newLayers=data.layers;var j,jLen=newLayers.length;for(j=0;j<jLen;j+=1){i=0;while(i<len){if(layers[i].id==newLayers[j].id){layers[i]=newLayers[j];break;}i+=1;}}if(data.chars||data.fonts){this.renderer.globalData.fontManager.addChars(data.chars);this.renderer.globalData.fontManager.addFonts(data.fonts,this.renderer.globalData.defs);}if(data.assets){len=data.assets.length;for(i=0;i<len;i+=1){this.animationData.assets.push(data.assets[i]);}}this.animationData.__complete=false;dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);this.renderer.includeLayers(data.layers);if(expressionsPlugin){expressionsPlugin.initExpressions(this);}this.loadNextSegment();};AnimationItem.prototype.loadNextSegment=function(){var segments=this.animationData.segments;if(!segments||segments.length===0||!this.autoloadSegments){this.trigger('data_ready');this.timeCompleted=this.totalFrames;return;}var segment=segments.shift();this.timeCompleted=segment.time*this.frameRate;var segmentPath=this.path+this.fileName+'_'+this.segmentPos+'.json';this.segmentPos+=1;assetLoader.load(segmentPath,this.includeLayers.bind(this),function(){this.trigger('data_failed');}.bind(this));};AnimationItem.prototype.loadSegments=function(){var segments=this.animationData.segments;if(!segments){this.timeCompleted=this.totalFrames;}this.loadNextSegment();};AnimationItem.prototype.imagesLoaded=function(){this.trigger('loaded_images');this.checkLoaded();};AnimationItem.prototype.preloadImages=function(){this.imagePreloader.setAssetsPath(this.assetsPath);this.imagePreloader.setPath(this.path);this.imagePreloader.loadAssets(this.animationData.assets,this.imagesLoaded.bind(this));};AnimationItem.prototype.configAnimation=function(animData){if(!this.renderer){return;}try{this.animationData=animData;this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip);this.renderer.configAnimation(animData);if(!animData.assets){animData.assets=[];}this.assets=this.animationData.assets;this.frameRate=this.animationData.fr;this.firstFrame=Math.round(this.animationData.ip);this.frameMult=this.animationData.fr/1000;this.renderer.searchExtraCompositions(animData.assets);this.trigger('config_ready');this.preloadImages();this.loadSegments();this.updaFrameModifier();this.waitForFontsLoaded();}catch(error){this.triggerConfigError(error);}};AnimationItem.prototype.waitForFontsLoaded=function(){if(!this.renderer){return;}if(this.renderer.globalData.fontManager.loaded()){this.checkLoaded();}else{setTimeout(this.waitForFontsLoaded.bind(this),20);}};AnimationItem.prototype.checkLoaded=function(){if(!this.isLoaded&&this.renderer.globalData.fontManager.loaded()&&(this.imagePreloader.loaded()||this.renderer.rendererType!=='canvas')){this.isLoaded=true;dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);if(expressionsPlugin){expressionsPlugin.initExpressions(this);}this.renderer.initItems();setTimeout(function(){this.trigger('DOMLoaded');}.bind(this),0);this.gotoFrame();if(this.autoplay){this.play();}}};AnimationItem.prototype.resize=function(){this.renderer.updateContainerSize();};AnimationItem.prototype.setSubframe=function(flag){this.subframeEnabled=flag?true:false;};AnimationItem.prototype.gotoFrame=function(){this.currentFrame=this.subframeEnabled?this.currentRawFrame:~~this.currentRawFrame;if(this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted){this.currentFrame=this.timeCompleted;}this.trigger('enterFrame');this.renderFrame();};AnimationItem.prototype.renderFrame=function(){if(this.isLoaded===false){return;}try{this.renderer.renderFrame(this.currentFrame+this.firstFrame);}catch(error){this.triggerRenderFrameError(error);}};AnimationItem.prototype.play=function(name){if(name&&this.name!=name){return;}if(this.isPaused===true){this.isPaused=false;if(this._idle){this._idle=false;this.trigger('_active');}}};AnimationItem.prototype.pause=function(name){if(name&&this.name!=name){return;}if(this.isPaused===false){this.isPaused=true;this._idle=true;this.trigger('_idle');}};AnimationItem.prototype.togglePause=function(name){if(name&&this.name!=name){return;}if(this.isPaused===true){this.play();}else{this.pause();}};AnimationItem.prototype.stop=function(name){if(name&&this.name!=name){return;}this.pause();this.playCount=0;this._completedLoop=false;this.setCurrentRawFrameValue(0);};AnimationItem.prototype.goToAndStop=function(value,isFrame,name){if(name&&this.name!=name){return;}if(isFrame){this.setCurrentRawFrameValue(value);}else{this.setCurrentRawFrameValue(value*this.frameModifier);}this.pause();};AnimationItem.prototype.goToAndPlay=function(value,isFrame,name){this.goToAndStop(value,isFrame,name);this.play();};AnimationItem.prototype.advanceTime=function(value){if(this.isPaused===true||this.isLoaded===false){return;}var nextValue=this.currentRawFrame+value*this.frameModifier;var _isComplete=false;// Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
// If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
if(nextValue>=this.totalFrames-1&&this.frameModifier>0){if(!this.loop||this.playCount===this.loop){if(!this.checkSegments(nextValue>this.totalFrames?nextValue%this.totalFrames:0)){_isComplete=true;nextValue=this.totalFrames-1;}}else if(nextValue>=this.totalFrames){this.playCount+=1;if(!this.checkSegments(nextValue%this.totalFrames)){this.setCurrentRawFrameValue(nextValue%this.totalFrames);this._completedLoop=true;this.trigger('loopComplete');}}else{this.setCurrentRawFrameValue(nextValue);}}else if(nextValue<0){if(!this.checkSegments(nextValue%this.totalFrames)){if(this.loop&&!(this.playCount--<=0&&this.loop!==true)){this.setCurrentRawFrameValue(this.totalFrames+nextValue%this.totalFrames);if(!this._completedLoop){this._completedLoop=true;}else{this.trigger('loopComplete');}}else{_isComplete=true;nextValue=0;}}}else{this.setCurrentRawFrameValue(nextValue);}if(_isComplete){this.setCurrentRawFrameValue(nextValue);this.pause();this.trigger('complete');}};AnimationItem.prototype.adjustSegment=function(arr,offset){this.playCount=0;if(arr[1]<arr[0]){if(this.frameModifier>0){if(this.playSpeed<0){this.setSpeed(-this.playSpeed);}else{this.setDirection(-1);}}this.timeCompleted=this.totalFrames=arr[0]-arr[1];this.firstFrame=arr[1];this.setCurrentRawFrameValue(this.totalFrames-0.001-offset);}else if(arr[1]>arr[0]){if(this.frameModifier<0){if(this.playSpeed<0){this.setSpeed(-this.playSpeed);}else{this.setDirection(1);}}this.timeCompleted=this.totalFrames=arr[1]-arr[0];this.firstFrame=arr[0];this.setCurrentRawFrameValue(0.001+offset);}this.trigger('segmentStart');};AnimationItem.prototype.setSegment=function(init,end){var pendingFrame=-1;if(this.isPaused){if(this.currentRawFrame+this.firstFrame<init){pendingFrame=init;}else if(this.currentRawFrame+this.firstFrame>end){pendingFrame=end-init;}}this.firstFrame=init;this.timeCompleted=this.totalFrames=end-init;if(pendingFrame!==-1){this.goToAndStop(pendingFrame,true);}};AnimationItem.prototype.playSegments=function(arr,forceFlag){if(forceFlag){this.segments.length=0;}if(typeof arr[0]==='object'){var i,len=arr.length;for(i=0;i<len;i+=1){this.segments.push(arr[i]);}}else{this.segments.push(arr);}if(this.segments.length&&forceFlag){this.adjustSegment(this.segments.shift(),0);}if(this.isPaused){this.play();}};AnimationItem.prototype.resetSegments=function(forceFlag){this.segments.length=0;this.segments.push([this.animationData.ip,this.animationData.op]);//this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);
if(forceFlag){this.checkSegments(0);}};AnimationItem.prototype.checkSegments=function(offset){if(this.segments.length){this.adjustSegment(this.segments.shift(),offset);return true;}return false;};AnimationItem.prototype.destroy=function(name){if(name&&this.name!=name||!this.renderer){return;}this.renderer.destroy();this.imagePreloader.destroy();this.trigger('destroy');this._cbs=null;this.onEnterFrame=this.onLoopComplete=this.onComplete=this.onSegmentStart=this.onDestroy=null;this.renderer=null;};AnimationItem.prototype.setCurrentRawFrameValue=function(value){this.currentRawFrame=value;this.gotoFrame();};AnimationItem.prototype.setSpeed=function(val){this.playSpeed=val;this.updaFrameModifier();};AnimationItem.prototype.setDirection=function(val){this.playDirection=val<0?-1:1;this.updaFrameModifier();};AnimationItem.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection;};AnimationItem.prototype.getPath=function(){return this.path;};AnimationItem.prototype.getAssetsPath=function(assetData){var path='';if(assetData.e){path=assetData.p;}else if(this.assetsPath){var imagePath=assetData.p;if(imagePath.indexOf('images/')!==-1){imagePath=imagePath.split('/')[1];}path=this.assetsPath+imagePath;}else{path=this.path;path+=assetData.u?assetData.u:'';path+=assetData.p;}return path;};AnimationItem.prototype.getAssetData=function(id){var i=0,len=this.assets.length;while(i<len){if(id==this.assets[i].id){return this.assets[i];}i+=1;}};AnimationItem.prototype.hide=function(){this.renderer.hide();};AnimationItem.prototype.show=function(){this.renderer.show();};AnimationItem.prototype.getDuration=function(isFrame){return isFrame?this.totalFrames:this.totalFrames/this.frameRate;};AnimationItem.prototype.trigger=function(name){if(this._cbs&&this._cbs[name]){switch(name){case'enterFrame':this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));break;case'loopComplete':this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));break;case'complete':this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));break;case'segmentStart':this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));break;case'destroy':this.triggerEvent(name,new BMDestroyEvent(name,this));break;default:this.triggerEvent(name);}}if(name==='enterFrame'&&this.onEnterFrame){this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));}if(name==='loopComplete'&&this.onLoopComplete){this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));}if(name==='complete'&&this.onComplete){this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));}if(name==='segmentStart'&&this.onSegmentStart){this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));}if(name==='destroy'&&this.onDestroy){this.onDestroy.call(this,new BMDestroyEvent(name,this));}};AnimationItem.prototype.triggerRenderFrameError=function(nativeError){var error=new BMRenderFrameErrorEvent(nativeError,this.currentFrame);this.triggerEvent('error',error);if(this.onError){this.onError.call(this,error);}};AnimationItem.prototype.triggerConfigError=function(nativeError){var error=new BMConfigErrorEvent(nativeError,this.currentFrame);this.triggerEvent('error',error);if(this.onError){this.onError.call(this,error);}};var Expressions=function(){var ob={};ob.initExpressions=initExpressions;function initExpressions(animation){var stackCount=0;var registers=[];function pushExpression(){stackCount+=1;}function popExpression(){stackCount-=1;if(stackCount===0){releaseInstances();}}function registerExpressionProperty(expression){if(registers.indexOf(expression)===-1){registers.push(expression);}}function releaseInstances(){var i,len=registers.length;for(i=0;i<len;i+=1){registers[i].release();}registers.length=0;}animation.renderer.compInterface=CompExpressionInterface(animation.renderer);animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);animation.renderer.globalData.pushExpression=pushExpression;animation.renderer.globalData.popExpression=popExpression;animation.renderer.globalData.registerExpressionProperty=registerExpressionProperty;}return ob;}();expressionsPlugin=Expressions;var ExpressionManager=function(){'use strict';var ob={};var Math=BMMath;var window=null;var document=null;function $bm_isInstanceOfArray(arr){return arr.constructor===Array||arr.constructor===Float32Array;}function isNumerable(tOfV,v){return tOfV==='number'||tOfV==='boolean'||tOfV==='string'||v instanceof Number;}function $bm_neg(a){var tOfA=typeof a;if(tOfA==='number'||tOfA==='boolean'||a instanceof Number){return-a;}if($bm_isInstanceOfArray(a)){var i,lenA=a.length;var retArr=[];for(i=0;i<lenA;i+=1){retArr[i]=-a[i];}return retArr;}if(a.propType){return a.v;}}var easeInBez=BezierFactory.getBezierEasing(0.333,0,.833,.833,'easeIn').get;var easeOutBez=BezierFactory.getBezierEasing(0.167,0.167,.667,1,'easeOut').get;var easeInOutBez=BezierFactory.getBezierEasing(.33,0,.667,1,'easeInOut').get;function sum(a,b){var tOfA=typeof a;var tOfB=typeof b;if(tOfA==='string'||tOfB==='string'){return a+b;}if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a+b;}if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){a=a.slice(0);a[0]=a[0]+b;return a;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){b=b.slice(0);b[0]=a+b[0];return b;}if($bm_isInstanceOfArray(a)&&$bm_isInstanceOfArray(b)){var i=0,lenA=a.length,lenB=b.length;var retArr=[];while(i<lenA||i<lenB){if((typeof a[i]==='number'||a[i]instanceof Number)&&(typeof b[i]==='number'||b[i]instanceof Number)){retArr[i]=a[i]+b[i];}else{retArr[i]=b[i]===undefined?a[i]:a[i]||b[i];}i+=1;}return retArr;}return 0;}var add=sum;function sub(a,b){var tOfA=typeof a;var tOfB=typeof b;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){if(tOfA==='string'){a=parseInt(a);}if(tOfB==='string'){b=parseInt(b);}return a-b;}if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){a=a.slice(0);a[0]=a[0]-b;return a;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){b=b.slice(0);b[0]=a-b[0];return b;}if($bm_isInstanceOfArray(a)&&$bm_isInstanceOfArray(b)){var i=0,lenA=a.length,lenB=b.length;var retArr=[];while(i<lenA||i<lenB){if((typeof a[i]==='number'||a[i]instanceof Number)&&(typeof b[i]==='number'||b[i]instanceof Number)){retArr[i]=a[i]-b[i];}else{retArr[i]=b[i]===undefined?a[i]:a[i]||b[i];}i+=1;}return retArr;}return 0;}function mul(a,b){var tOfA=typeof a;var tOfB=typeof b;var arr;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a*b;}var i,len;if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){len=a.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a[i]*b;}return arr;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){len=b.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a*b[i];}return arr;}return 0;}function div(a,b){var tOfA=typeof a;var tOfB=typeof b;var arr;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a/b;}var i,len;if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){len=a.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a[i]/b;}return arr;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){len=b.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a/b[i];}return arr;}return 0;}function mod(a,b){if(typeof a==='string'){a=parseInt(a);}if(typeof b==='string'){b=parseInt(b);}return a%b;}var $bm_sum=sum;var $bm_sub=sub;var $bm_mul=mul;var $bm_div=div;var $bm_mod=mod;function clamp(num,min,max){if(min>max){var mm=max;max=min;min=mm;}return Math.min(Math.max(num,min),max);}function radiansToDegrees(val){return val/degToRads;}var radians_to_degrees=radiansToDegrees;function degreesToRadians(val){return val*degToRads;}var degrees_to_radians=radiansToDegrees;var helperLengthArray=[0,0,0,0,0,0];function length(arr1,arr2){if(typeof arr1==='number'||arr1 instanceof Number){arr2=arr2||0;return Math.abs(arr1-arr2);}if(!arr2){arr2=helperLengthArray;}var i,len=Math.min(arr1.length,arr2.length);var addedLength=0;for(i=0;i<len;i+=1){addedLength+=Math.pow(arr2[i]-arr1[i],2);}return Math.sqrt(addedLength);}function normalize(vec){return div(vec,length(vec));}function rgbToHsl(val){var r=val[0];var g=val[1];var b=val[2];var max=Math.max(r,g,b),min=Math.min(r,g,b);var h,s,l=(max+min)/2;if(max==min){h=s=0;// achromatic
}else{var d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;}h/=6;}return[h,s,l,val[3]];}function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;}function hslToRgb(val){var h=val[0];var s=val[1];var l=val[2];var r,g,b;if(s===0){r=g=b=l;// achromatic
}else{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3);}return[r,g,b,val[3]];}function linear(t,tMin,tMax,value1,value2){if(value1===undefined||value2===undefined){value1=tMin;value2=tMax;tMin=0;tMax=1;}if(tMax<tMin){var _tMin=tMax;tMax=tMin;tMin=_tMin;}if(t<=tMin){return value1;}else if(t>=tMax){return value2;}var perc=tMax===tMin?0:(t-tMin)/(tMax-tMin);if(!value1.length){return value1+(value2-value1)*perc;}var i,len=value1.length;var arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=value1[i]+(value2[i]-value1[i])*perc;}return arr;}function random(min,max){if(max===undefined){if(min===undefined){min=0;max=1;}else{max=min;min=undefined;}}if(max.length){var i,len=max.length;if(!min){min=createTypedArray('float32',len);}var arr=createTypedArray('float32',len);var rnd=BMMath.random();for(i=0;i<len;i+=1){arr[i]=min[i]+rnd*(max[i]-min[i]);}return arr;}if(min===undefined){min=0;}var rndm=BMMath.random();return min+rndm*(max-min);}function createPath(points,inTangents,outTangents,closed){var i,len=points.length;var path=shape_pool.newElement();path.setPathData(!!closed,len);var arrPlaceholder=[0,0],inVertexPoint,outVertexPoint;for(i=0;i<len;i+=1){inVertexPoint=inTangents&&inTangents[i]?inTangents[i]:arrPlaceholder;outVertexPoint=outTangents&&outTangents[i]?outTangents[i]:arrPlaceholder;path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0]+points[i][0],outVertexPoint[1]+points[i][1],inVertexPoint[0]+points[i][0],inVertexPoint[1]+points[i][1],i,true);}return path;}function initiateExpression(elem,data,property){var val=data.x;var needsVelocity=/velocity(?![\w\d])/.test(val);var _needsRandom=val.indexOf('random')!==-1;var elemType=elem.data.ty;var transform,$bm_transform,content,effect;var thisProperty=property;thisProperty.valueAtTime=thisProperty.getValueAtTime;Object.defineProperty(thisProperty,'value',{get:function get(){return thisProperty.v;}});elem.comp.frameDuration=1/elem.comp.globalData.frameRate;elem.comp.displayStartTime=0;var inPoint=elem.data.ip/elem.comp.globalData.frameRate;var outPoint=elem.data.op/elem.comp.globalData.frameRate;var width=elem.data.sw?elem.data.sw:0;var height=elem.data.sh?elem.data.sh:0;var name=elem.data.nm;var loopIn,loop_in,loopOut,loop_out,smooth;var toWorld,fromWorld,fromComp,toComp,fromCompToSurface,position,rotation,anchorPoint,scale,thisLayer,thisComp,mask,valueAtTime,velocityAtTime;var __expression_functions=[];if(data.xf){var i,len=data.xf.length;for(i=0;i<len;i+=1){__expression_functions[i]=eval('(function(){ return '+data.xf[i]+'}())');}}var scoped_bm_rt;var expression_function=eval('[function _expression_function(){'+val+';scoped_bm_rt=$bm_rt}'+']')[0];var numKeys=property.kf?data.k.length:0;var active=!this.data||this.data.hd!==true;var wiggle=function wiggle(freq,amp){var i,j,len=this.pv.length?this.pv.length:1;var addedAmps=createTypedArray('float32',len);freq=5;var iterations=Math.floor(time*freq);i=0;j=0;while(i<iterations){//var rnd = BMMath.random();
for(j=0;j<len;j+=1){addedAmps[j]+=-amp+amp*2*BMMath.random();//addedAmps[j] += -amp + amp*2*rnd;
}i+=1;}//var rnd2 = BMMath.random();
var periods=time*freq;var perc=periods-Math.floor(periods);var arr=createTypedArray('float32',len);if(len>1){for(j=0;j<len;j+=1){arr[j]=this.pv[j]+addedAmps[j]+(-amp+amp*2*BMMath.random())*perc;//arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
//arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
}return arr;}else{return this.pv+addedAmps[0]+(-amp+amp*2*BMMath.random())*perc;}}.bind(this);if(thisProperty.loopIn){loopIn=thisProperty.loopIn.bind(thisProperty);loop_in=loopIn;}if(thisProperty.loopOut){loopOut=thisProperty.loopOut.bind(thisProperty);loop_out=loopOut;}if(thisProperty.smooth){smooth=thisProperty.smooth.bind(thisProperty);}function loopInDuration(type,duration){return loopIn(type,duration,true);}function loopOutDuration(type,duration){return loopOut(type,duration,true);}if(this.getValueAtTime){valueAtTime=this.getValueAtTime.bind(this);}if(this.getVelocityAtTime){velocityAtTime=this.getVelocityAtTime.bind(this);}var comp=elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);function lookAt(elem1,elem2){var fVec=[elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];var pitch=Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;var yaw=-Math.atan2(fVec[1],fVec[2])/degToRads;return[yaw,pitch,0];}function easeOut(t,tMin,tMax,val1,val2){return applyEase(easeOutBez,t,tMin,tMax,val1,val2);}function easeIn(t,tMin,tMax,val1,val2){return applyEase(easeInBez,t,tMin,tMax,val1,val2);}function ease(t,tMin,tMax,val1,val2){return applyEase(easeInOutBez,t,tMin,tMax,val1,val2);}function applyEase(fn,t,tMin,tMax,val1,val2){if(val1===undefined){val1=tMin;val2=tMax;}else{t=(t-tMin)/(tMax-tMin);}t=t>1?1:t<0?0:t;var mult=fn(t);if($bm_isInstanceOfArray(val1)){var i,len=val1.length;var arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=(val2[i]-val1[i])*mult+val1[i];}return arr;}else{return(val2-val1)*mult+val1;}}function nearestKey(time){var i,len=data.k.length,index,keyTime;if(!data.k.length||typeof data.k[0]==='number'){index=0;keyTime=0;}else{index=-1;time*=elem.comp.globalData.frameRate;if(time<data.k[0].t){index=1;keyTime=data.k[0].t;}else{for(i=0;i<len-1;i+=1){if(time===data.k[i].t){index=i+1;keyTime=data.k[i].t;break;}else if(time>data.k[i].t&&time<data.k[i+1].t){if(time-data.k[i].t>data.k[i+1].t-time){index=i+2;keyTime=data.k[i+1].t;}else{index=i+1;keyTime=data.k[i].t;}break;}}if(index===-1){index=i+1;keyTime=data.k[i].t;}}}var ob={};ob.index=index;ob.time=keyTime/elem.comp.globalData.frameRate;return ob;}function key(ind){var ob,i,len;if(!data.k.length||typeof data.k[0]==='number'){throw new Error('The property has no keyframe at index '+ind);}ind-=1;ob={time:data.k[ind].t/elem.comp.globalData.frameRate,value:[]};var arr=data.k[ind].hasOwnProperty('s')?data.k[ind].s:data.k[ind-1].e;len=arr.length;for(i=0;i<len;i+=1){ob[i]=arr[i];ob.value[i]=arr[i];}return ob;}function framesToTime(frames,fps){if(!fps){fps=elem.comp.globalData.frameRate;}return frames/fps;}function timeToFrames(t,fps){if(!t&&t!==0){t=time;}if(!fps){fps=elem.comp.globalData.frameRate;}return t*fps;}function seedRandom(seed){BMMath.seedrandom(randSeed+seed);}function sourceRectAtTime(){return elem.sourceRectAtTime();}function substring(init,end){if(typeof value==='string'){if(end===undefined){return value.substring(init);}return value.substring(init,end);}return'';}function substr(init,end){if(typeof value==='string'){if(end===undefined){return value.substr(init);}return value.substr(init,end);}return'';}function posterizeTime(framesPerSecond){time=framesPerSecond===0?0:Math.floor(time*framesPerSecond)/framesPerSecond;value=valueAtTime(time);}var time,velocity,value,text,textIndex,textTotal,selectorValue;var index=elem.data.ind;var hasParent=!!(elem.hierarchy&&elem.hierarchy.length);var parent;var randSeed=Math.floor(Math.random()*1000000);var globalData=elem.globalData;function executeExpression(_value){// globalData.pushExpression();
value=_value;if(_needsRandom){seedRandom(randSeed);}if(this.frameExpressionId===elem.globalData.frameId&&this.propType!=='textSelector'){return value;}if(this.propType==='textSelector'){textIndex=this.textIndex;textTotal=this.textTotal;selectorValue=this.selectorValue;}if(!thisLayer){text=elem.layerInterface.text;thisLayer=elem.layerInterface;thisComp=elem.comp.compInterface;toWorld=thisLayer.toWorld.bind(thisLayer);fromWorld=thisLayer.fromWorld.bind(thisLayer);fromComp=thisLayer.fromComp.bind(thisLayer);toComp=thisLayer.toComp.bind(thisLayer);mask=thisLayer.mask?thisLayer.mask.bind(thisLayer):null;fromCompToSurface=fromComp;}if(!transform){transform=elem.layerInterface("ADBE Transform Group");$bm_transform=transform;if(transform){anchorPoint=transform.anchorPoint;/*position = transform.position;
                    rotation = transform.rotation;
                    scale = transform.scale;*/}}if(elemType===4&&!content){content=thisLayer("ADBE Root Vectors Group");}if(!effect){effect=thisLayer(4);}hasParent=!!(elem.hierarchy&&elem.hierarchy.length);if(hasParent&&!parent){parent=elem.hierarchy[0].layerInterface;}time=this.comp.renderedFrame/this.comp.globalData.frameRate;if(needsVelocity){velocity=velocityAtTime(time);}expression_function();this.frameExpressionId=elem.globalData.frameId;//TODO: Check if it's possible to return on ShapeInterface the .v value
if(scoped_bm_rt.propType==="shape"){scoped_bm_rt=scoped_bm_rt.v;}// globalData.popExpression();
return scoped_bm_rt;}return executeExpression;}ob.initiateExpression=initiateExpression;return ob;}();var expressionHelpers=function(){function searchExpressions(elem,data,prop){if(data.x){prop.k=true;prop.x=true;prop.initiateExpression=ExpressionManager.initiateExpression;prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));}}function getValueAtTime(frameNum){frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastFrame){this._cachingAtTime.lastIndex=this._cachingAtTime.lastFrame<frameNum?this._cachingAtTime.lastIndex:0;this._cachingAtTime.value=this.interpolateValue(frameNum,this._cachingAtTime);this._cachingAtTime.lastFrame=frameNum;}return this._cachingAtTime.value;}function getSpeedAtTime(frameNum){var delta=-0.01;var v1=this.getValueAtTime(frameNum);var v2=this.getValueAtTime(frameNum+delta);var speed=0;if(v1.length){var i;for(i=0;i<v1.length;i+=1){speed+=Math.pow(v2[i]-v1[i],2);}speed=Math.sqrt(speed)*100;}else{speed=0;}return speed;}function getVelocityAtTime(frameNum){if(this.vel!==undefined){return this.vel;}var delta=-0.001;//frameNum += this.elem.data.st;
var v1=this.getValueAtTime(frameNum);var v2=this.getValueAtTime(frameNum+delta);var velocity;if(v1.length){velocity=createTypedArray('float32',v1.length);var i;for(i=0;i<v1.length;i+=1){//removing frameRate
//if needed, don't add it here
//velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
velocity[i]=(v2[i]-v1[i])/delta;}}else{velocity=(v2-v1)/delta;}return velocity;}function getStaticValueAtTime(){return this.pv;}function setGroupProperty(propertyGroup){this.propertyGroup=propertyGroup;}return{searchExpressions:searchExpressions,getSpeedAtTime:getSpeedAtTime,getVelocityAtTime:getVelocityAtTime,getValueAtTime:getValueAtTime,getStaticValueAtTime:getStaticValueAtTime,setGroupProperty:setGroupProperty};}();(function addPropertyDecorator(){function loopOut(type,duration,durationFlag){if(!this.k||!this.keyframes){return this.pv;}type=type?type.toLowerCase():'';var currentFrame=this.comp.renderedFrame;var keyframes=this.keyframes;var lastKeyFrame=keyframes[keyframes.length-1].t;if(currentFrame<=lastKeyFrame){return this.pv;}else{var cycleDuration,firstKeyFrame;if(!durationFlag){if(!duration||duration>keyframes.length-1){duration=keyframes.length-1;}firstKeyFrame=keyframes[keyframes.length-1-duration].t;cycleDuration=lastKeyFrame-firstKeyFrame;}else{if(!duration){cycleDuration=Math.max(0,lastKeyFrame-this.elem.data.ip);}else{cycleDuration=Math.abs(lastKeyFrame-elem.comp.globalData.frameRate*duration);}firstKeyFrame=lastKeyFrame-cycleDuration;}var i,len,ret;if(type==='pingpong'){var iterations=Math.floor((currentFrame-firstKeyFrame)/cycleDuration);if(iterations%2!==0){return this.getValueAtTime((cycleDuration-(currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);}}else if(type==='offset'){var initV=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var endV=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var current=this.getValueAtTime(((currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);var repeats=Math.floor((currentFrame-firstKeyFrame)/cycleDuration);if(this.pv.length){ret=new Array(initV.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=(endV[i]-initV[i])*repeats+current[i];}return ret;}return(endV-initV)*repeats+current;}else if(type==='continue'){var lastValue=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var nextLastValue=this.getValueAtTime((lastKeyFrame-0.001)/this.comp.globalData.frameRate,0);if(this.pv.length){ret=new Array(lastValue.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=lastValue[i]+(lastValue[i]-nextLastValue[i])*((currentFrame-lastKeyFrame)/this.comp.globalData.frameRate)/0.0005;}return ret;}return lastValue+(lastValue-nextLastValue)*((currentFrame-lastKeyFrame)/0.001);}return this.getValueAtTime(((currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);}}function loopIn(type,duration,durationFlag){if(!this.k){return this.pv;}type=type?type.toLowerCase():'';var currentFrame=this.comp.renderedFrame;var keyframes=this.keyframes;var firstKeyFrame=keyframes[0].t;if(currentFrame>=firstKeyFrame){return this.pv;}else{var cycleDuration,lastKeyFrame;if(!durationFlag){if(!duration||duration>keyframes.length-1){duration=keyframes.length-1;}lastKeyFrame=keyframes[duration].t;cycleDuration=lastKeyFrame-firstKeyFrame;}else{if(!duration){cycleDuration=Math.max(0,this.elem.data.op-firstKeyFrame);}else{cycleDuration=Math.abs(elem.comp.globalData.frameRate*duration);}lastKeyFrame=firstKeyFrame+cycleDuration;}var i,len,ret;if(type==='pingpong'){var iterations=Math.floor((firstKeyFrame-currentFrame)/cycleDuration);if(iterations%2===0){return this.getValueAtTime(((firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);}}else if(type==='offset'){var initV=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var endV=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var current=this.getValueAtTime((cycleDuration-(firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);var repeats=Math.floor((firstKeyFrame-currentFrame)/cycleDuration)+1;if(this.pv.length){ret=new Array(initV.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=current[i]-(endV[i]-initV[i])*repeats;}return ret;}return current-(endV-initV)*repeats;}else if(type==='continue'){var firstValue=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var nextFirstValue=this.getValueAtTime((firstKeyFrame+0.001)/this.comp.globalData.frameRate,0);if(this.pv.length){ret=new Array(firstValue.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=firstValue[i]+(firstValue[i]-nextFirstValue[i])*(firstKeyFrame-currentFrame)/0.001;}return ret;}return firstValue+(firstValue-nextFirstValue)*(firstKeyFrame-currentFrame)/0.001;}return this.getValueAtTime((cycleDuration-(firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);}}function smooth(width,samples){if(!this.k){return this.pv;}width=(width||0.4)*0.5;samples=Math.floor(samples||5);if(samples<=1){return this.pv;}var currentTime=this.comp.renderedFrame/this.comp.globalData.frameRate;var initFrame=currentTime-width;var endFrame=currentTime+width;var sampleFrequency=samples>1?(endFrame-initFrame)/(samples-1):1;var i=0,j=0;var value;if(this.pv.length){value=createTypedArray('float32',this.pv.length);}else{value=0;}var sampleValue;while(i<samples){sampleValue=this.getValueAtTime(initFrame+i*sampleFrequency);if(this.pv.length){for(j=0;j<this.pv.length;j+=1){value[j]+=sampleValue[j];}}else{value+=sampleValue;}i+=1;}if(this.pv.length){for(j=0;j<this.pv.length;j+=1){value[j]/=samples;}}else{value/=samples;}return value;}function getValueAtTime(frameNum){frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastFrame){this._cachingAtTime.lastIndex=this._cachingAtTime.lastFrame<frameNum?this._cachingAtTime.lastIndex:0;this._cachingAtTime.value=this.interpolateValue(frameNum,this._cachingAtTime);this._cachingAtTime.lastFrame=frameNum;}return this._cachingAtTime.value;}function getTransformValueAtTime(time){console.warn('Transform at time not supported');}function getTransformStaticValueAtTime(time){}var getTransformProperty=TransformPropertyFactory.getTransformProperty;TransformPropertyFactory.getTransformProperty=function(elem,data,container){var prop=getTransformProperty(elem,data,container);if(prop.dynamicProperties.length){prop.getValueAtTime=getTransformValueAtTime.bind(prop);}else{prop.getValueAtTime=getTransformStaticValueAtTime.bind(prop);}prop.setGroupProperty=expressionHelpers.setGroupProperty;return prop;};var propertyGetProp=PropertyFactory.getProp;PropertyFactory.getProp=function(elem,data,type,mult,container){var prop=propertyGetProp(elem,data,type,mult,container);//prop.getVelocityAtTime = getVelocityAtTime;
//prop.loopOut = loopOut;
//prop.loopIn = loopIn;
if(prop.kf){prop.getValueAtTime=expressionHelpers.getValueAtTime.bind(prop);}else{prop.getValueAtTime=expressionHelpers.getStaticValueAtTime.bind(prop);}prop.setGroupProperty=expressionHelpers.setGroupProperty;prop.loopOut=loopOut;prop.loopIn=loopIn;prop.smooth=smooth;prop.getVelocityAtTime=expressionHelpers.getVelocityAtTime.bind(prop);prop.getSpeedAtTime=expressionHelpers.getSpeedAtTime.bind(prop);prop.numKeys=data.a===1?data.k.length:0;prop.propertyIndex=data.ix;var value=0;if(type!==0){value=createTypedArray('float32',data.a===1?data.k[0].s.length:data.k.length);}prop._cachingAtTime={lastFrame:initialDefaultFrame,lastIndex:0,value:value};expressionHelpers.searchExpressions(elem,data,prop);if(prop.k){container.addDynamicProperty(prop);}return prop;};function getShapeValueAtTime(frameNum){//For now this caching object is created only when needed instead of creating it when the shape is initialized.
if(!this._cachingAtTime){this._cachingAtTime={shapeValue:shape_pool.clone(this.pv),lastIndex:0,lastTime:initialDefaultFrame};}frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastTime){this._cachingAtTime.lastIndex=this._cachingAtTime.lastTime<frameNum?this._caching.lastIndex:0;this._cachingAtTime.lastTime=frameNum;this.interpolateShape(frameNum,this._cachingAtTime.shapeValue,this._cachingAtTime);}return this._cachingAtTime.shapeValue;}var ShapePropertyConstructorFunction=ShapePropertyFactory.getConstructorFunction();var KeyframedShapePropertyConstructorFunction=ShapePropertyFactory.getKeyframedConstructorFunction();function ShapeExpressions(){}ShapeExpressions.prototype={vertices:function vertices(prop,time){if(this.k){this.getValue();}var shapePath=this.v;if(time!==undefined){shapePath=this.getValueAtTime(time,0);}var i,len=shapePath._length;var vertices=shapePath[prop];var points=shapePath.v;var arr=createSizedArray(len);for(i=0;i<len;i+=1){if(prop==='i'||prop==='o'){arr[i]=[vertices[i][0]-points[i][0],vertices[i][1]-points[i][1]];}else{arr[i]=[vertices[i][0],vertices[i][1]];}}return arr;},points:function points(time){return this.vertices('v',time);},inTangents:function inTangents(time){return this.vertices('i',time);},outTangents:function outTangents(time){return this.vertices('o',time);},isClosed:function isClosed(){return this.v.c;},pointOnPath:function pointOnPath(perc,time){var shapePath=this.v;if(time!==undefined){shapePath=this.getValueAtTime(time,0);}if(!this._segmentsLength){this._segmentsLength=bez.getSegmentsLength(shapePath);}var segmentsLength=this._segmentsLength;var lengths=segmentsLength.lengths;var lengthPos=segmentsLength.totalLength*perc;var i=0,len=lengths.length;var j=0,jLen;var accumulatedLength=0,pt;while(i<len){if(accumulatedLength+lengths[i].addedLength>lengthPos){var initIndex=i;var endIndex=shapePath.c&&i===len-1?0:i+1;var segmentPerc=(lengthPos-accumulatedLength)/lengths[i].addedLength;pt=bez.getPointInSegment(shapePath.v[initIndex],shapePath.v[endIndex],shapePath.o[initIndex],shapePath.i[endIndex],segmentPerc,lengths[i]);break;}else{accumulatedLength+=lengths[i].addedLength;}i+=1;}if(!pt){pt=shapePath.c?[shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];}return pt;},vectorOnPath:function vectorOnPath(perc,time,vectorType){//perc doesn't use triple equality because it can be a Number object as well as a primitive.
perc=perc==1?this.v.c?0:0.999:perc;var pt1=this.pointOnPath(perc,time);var pt2=this.pointOnPath(perc+0.001,time);var xLength=pt2[0]-pt1[0];var yLength=pt2[1]-pt1[1];var magnitude=Math.sqrt(Math.pow(xLength,2)+Math.pow(yLength,2));if(magnitude===0){return[0,0];}var unitVector=vectorType==='tangent'?[xLength/magnitude,yLength/magnitude]:[-yLength/magnitude,xLength/magnitude];return unitVector;},tangentOnPath:function tangentOnPath(perc,time){return this.vectorOnPath(perc,time,'tangent');},normalOnPath:function normalOnPath(perc,time){return this.vectorOnPath(perc,time,'normal');},setGroupProperty:expressionHelpers.setGroupProperty,getValueAtTime:expressionHelpers.getStaticValueAtTime};extendPrototype([ShapeExpressions],ShapePropertyConstructorFunction);extendPrototype([ShapeExpressions],KeyframedShapePropertyConstructorFunction);KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime=getShapeValueAtTime;KeyframedShapePropertyConstructorFunction.prototype.initiateExpression=ExpressionManager.initiateExpression;var propertyGetShapeProp=ShapePropertyFactory.getShapeProp;ShapePropertyFactory.getShapeProp=function(elem,data,type,arr,trims){var prop=propertyGetShapeProp(elem,data,type,arr,trims);prop.propertyIndex=data.ix;prop.lock=false;if(type===3){expressionHelpers.searchExpressions(elem,data.pt,prop);}else if(type===4){expressionHelpers.searchExpressions(elem,data.ks,prop);}if(prop.k){elem.addDynamicProperty(prop);}return prop;};})();(function addDecorator(){function searchExpressions(){if(this.data.d.x){this.calculateExpression=ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);this.addEffect(this.getExpressionValue.bind(this));return true;}}TextProperty.prototype.getExpressionValue=function(currentValue,text){var newValue=this.calculateExpression(text);if(currentValue.t!==newValue){var newData={};this.copyData(newData,currentValue);newData.t=newValue.toString();newData.__complete=false;return newData;}return currentValue;};TextProperty.prototype.searchProperty=function(){var isKeyframed=this.searchKeyframes();var hasExpressions=this.searchExpressions();this.kf=isKeyframed||hasExpressions;return this.kf;};TextProperty.prototype.searchExpressions=searchExpressions;})();var ShapeExpressionInterface=function(){function iterateElements(shapes,view,propertyGroup){var arr=[];var i,len=shapes?shapes.length:0;for(i=0;i<len;i+=1){if(shapes[i].ty=='gr'){arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='fl'){arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='st'){arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='tm'){arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='tr'){//arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));
}else if(shapes[i].ty=='el'){arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='sr'){arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='sh'){arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='rc'){arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='rd'){arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty=='rp'){arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));}}return arr;}function contentsInterfaceFactory(shape,view,propertyGroup){var interfaces;var interfaceFunction=function _interfaceFunction(value){var i=0,len=interfaces.length;while(i<len){if(interfaces[i]._name===value||interfaces[i].mn===value||interfaces[i].propertyIndex===value||interfaces[i].ix===value||interfaces[i].ind===value){return interfaces[i];}i+=1;}if(typeof value==='number'){return interfaces[value-1];}};interfaceFunction.propertyGroup=function(val){if(val===1){return interfaceFunction;}else{return propertyGroup(val-1);}};interfaces=iterateElements(shape.it,view.it,interfaceFunction.propertyGroup);interfaceFunction.numProperties=interfaces.length;interfaceFunction.propertyIndex=shape.cix;interfaceFunction._name=shape.nm;return interfaceFunction;}function groupInterfaceFactory(shape,view,propertyGroup){var interfaceFunction=function _interfaceFunction(value){switch(value){case'ADBE Vectors Group':case'Contents':case 2:return interfaceFunction.content;//Not necessary for now. Keeping them here in case a new case appears
//case 'ADBE Vector Transform Group':
//case 3:
default:return interfaceFunction.transform;}};interfaceFunction.propertyGroup=function(val){if(val===1){return interfaceFunction;}else{return propertyGroup(val-1);}};var content=contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);var transformInterface=transformInterfaceFactory(shape.it[shape.it.length-1],view.it[view.it.length-1],interfaceFunction.propertyGroup);interfaceFunction.content=content;interfaceFunction.transform=transformInterface;Object.defineProperty(interfaceFunction,'_name',{get:function get(){return shape.nm;}});//interfaceFunction.content = interfaceFunction;
interfaceFunction.numProperties=shape.np;interfaceFunction.propertyIndex=shape.ix;interfaceFunction.nm=shape.nm;interfaceFunction.mn=shape.mn;return interfaceFunction;}function fillInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val==='Color'||val==='color'){return interfaceFunction.color;}else if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}}Object.defineProperties(interfaceFunction,{'color':{get:ExpressionPropertyInterface(view.c)},'opacity':{get:ExpressionPropertyInterface(view.o)},'_name':{value:shape.nm},'mn':{value:shape.mn}});view.c.setGroupProperty(propertyGroup);view.o.setGroupProperty(propertyGroup);return interfaceFunction;}function strokeInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val===1){return ob;}else{return propertyGroup(val-1);}}function _dashPropertyGroup(val){if(val===1){return dashOb;}else{return _propertyGroup(val-1);}}function addPropertyToDashOb(i){Object.defineProperty(dashOb,shape.d[i].nm,{get:ExpressionPropertyInterface(view.d.dataProps[i].p)});}var i,len=shape.d?shape.d.length:0;var dashOb={};for(i=0;i<len;i+=1){addPropertyToDashOb(i);view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);}function interfaceFunction(val){if(val==='Color'||val==='color'){return interfaceFunction.color;}else if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}else if(val==='Stroke Width'||val==='stroke width'){return interfaceFunction.strokeWidth;}}Object.defineProperties(interfaceFunction,{'color':{get:ExpressionPropertyInterface(view.c)},'opacity':{get:ExpressionPropertyInterface(view.o)},'strokeWidth':{get:ExpressionPropertyInterface(view.w)},'dash':{get:function get(){return dashOb;}},'_name':{value:shape.nm},'mn':{value:shape.mn}});view.c.setGroupProperty(_propertyGroup);view.o.setGroupProperty(_propertyGroup);view.w.setGroupProperty(_propertyGroup);return interfaceFunction;}function trimInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}interfaceFunction.propertyIndex=shape.ix;view.s.setGroupProperty(_propertyGroup);view.e.setGroupProperty(_propertyGroup);view.o.setGroupProperty(_propertyGroup);function interfaceFunction(val){if(val===shape.e.ix||val==='End'||val==='end'){return interfaceFunction.end;}if(val===shape.s.ix){return interfaceFunction.start;}if(val===shape.o.ix){return interfaceFunction.offset;}}interfaceFunction.propertyIndex=shape.ix;interfaceFunction.propertyGroup=propertyGroup;Object.defineProperties(interfaceFunction,{'start':{get:ExpressionPropertyInterface(view.s)},'end':{get:ExpressionPropertyInterface(view.e)},'offset':{get:ExpressionPropertyInterface(view.o)},'_name':{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function transformInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}view.transform.mProps.o.setGroupProperty(_propertyGroup);view.transform.mProps.p.setGroupProperty(_propertyGroup);view.transform.mProps.a.setGroupProperty(_propertyGroup);view.transform.mProps.s.setGroupProperty(_propertyGroup);view.transform.mProps.r.setGroupProperty(_propertyGroup);if(view.transform.mProps.sk){view.transform.mProps.sk.setGroupProperty(_propertyGroup);view.transform.mProps.sa.setGroupProperty(_propertyGroup);}view.transform.op.setGroupProperty(_propertyGroup);function interfaceFunction(value){if(shape.a.ix===value||value==='Anchor Point'){return interfaceFunction.anchorPoint;}if(shape.o.ix===value||value==='Opacity'){return interfaceFunction.opacity;}if(shape.p.ix===value||value==='Position'){return interfaceFunction.position;}if(shape.r.ix===value||value==='Rotation'||value==='ADBE Vector Rotation'){return interfaceFunction.rotation;}if(shape.s.ix===value||value==='Scale'){return interfaceFunction.scale;}if(shape.sk&&shape.sk.ix===value||value==='Skew'){return interfaceFunction.skew;}if(shape.sa&&shape.sa.ix===value||value==='Skew Axis'){return interfaceFunction.skewAxis;}}Object.defineProperties(interfaceFunction,{'opacity':{get:ExpressionPropertyInterface(view.transform.mProps.o)},'position':{get:ExpressionPropertyInterface(view.transform.mProps.p)},'anchorPoint':{get:ExpressionPropertyInterface(view.transform.mProps.a)},'scale':{get:ExpressionPropertyInterface(view.transform.mProps.s)},'rotation':{get:ExpressionPropertyInterface(view.transform.mProps.r)},'skew':{get:ExpressionPropertyInterface(view.transform.mProps.sk)},'skewAxis':{get:ExpressionPropertyInterface(view.transform.mProps.sa)},'_name':{value:shape.nm}});interfaceFunction.ty='tr';interfaceFunction.mn=shape.mn;interfaceFunction.propertyGroup=propertyGroup;return interfaceFunction;}function ellipseInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}interfaceFunction.propertyIndex=shape.ix;var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;prop.s.setGroupProperty(_propertyGroup);prop.p.setGroupProperty(_propertyGroup);function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.s.ix===value){return interfaceFunction.size;}}Object.defineProperties(interfaceFunction,{'size':{get:ExpressionPropertyInterface(prop.s)},'position':{get:ExpressionPropertyInterface(prop.p)},'_name':{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function starInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;interfaceFunction.propertyIndex=shape.ix;prop.or.setGroupProperty(_propertyGroup);prop.os.setGroupProperty(_propertyGroup);prop.pt.setGroupProperty(_propertyGroup);prop.p.setGroupProperty(_propertyGroup);prop.r.setGroupProperty(_propertyGroup);if(shape.ir){prop.ir.setGroupProperty(_propertyGroup);prop.is.setGroupProperty(_propertyGroup);}function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.r.ix===value){return interfaceFunction.rotation;}if(shape.pt.ix===value){return interfaceFunction.points;}if(shape.or.ix===value||'ADBE Vector Star Outer Radius'===value){return interfaceFunction.outerRadius;}if(shape.os.ix===value){return interfaceFunction.outerRoundness;}if(shape.ir&&(shape.ir.ix===value||'ADBE Vector Star Inner Radius'===value)){return interfaceFunction.innerRadius;}if(shape.is&&shape.is.ix===value){return interfaceFunction.innerRoundness;}}Object.defineProperties(interfaceFunction,{'position':{get:ExpressionPropertyInterface(prop.p)},'rotation':{get:ExpressionPropertyInterface(prop.r)},'points':{get:ExpressionPropertyInterface(prop.pt)},'outerRadius':{get:ExpressionPropertyInterface(prop.or)},'outerRoundness':{get:ExpressionPropertyInterface(prop.os)},'innerRadius':{get:ExpressionPropertyInterface(prop.ir)},'innerRoundness':{get:ExpressionPropertyInterface(prop.is)},'_name':{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function rectInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;interfaceFunction.propertyIndex=shape.ix;prop.p.setGroupProperty(_propertyGroup);prop.s.setGroupProperty(_propertyGroup);prop.r.setGroupProperty(_propertyGroup);function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.r.ix===value){return interfaceFunction.roundness;}if(shape.s.ix===value||value==='Size'||value==='ADBE Vector Rect Size'){return interfaceFunction.size;}}Object.defineProperties(interfaceFunction,{'position':{get:ExpressionPropertyInterface(prop.p)},'roundness':{get:ExpressionPropertyInterface(prop.r)},'size':{get:ExpressionPropertyInterface(prop.s)},'_name':{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function roundedInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}var prop=view;interfaceFunction.propertyIndex=shape.ix;prop.rd.setGroupProperty(_propertyGroup);function interfaceFunction(value){if(shape.r.ix===value||'Round Corners 1'===value){return interfaceFunction.radius;}}Object.defineProperties(interfaceFunction,{'radius':{get:ExpressionPropertyInterface(prop.rd)},'_name':{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function repeaterInterfaceFactory(shape,view,propertyGroup){function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}var prop=view;interfaceFunction.propertyIndex=shape.ix;prop.c.setGroupProperty(_propertyGroup);prop.o.setGroupProperty(_propertyGroup);function interfaceFunction(value){if(shape.c.ix===value||'Copies'===value){return interfaceFunction.copies;}else if(shape.o.ix===value||'Offset'===value){return interfaceFunction.offset;}}Object.defineProperties(interfaceFunction,{'copies':{get:ExpressionPropertyInterface(prop.c)},'offset':{get:ExpressionPropertyInterface(prop.o)},'_name':{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function pathInterfaceFactory(shape,view,propertyGroup){var prop=view.sh;function _propertyGroup(val){if(val==1){return interfaceFunction;}else{return propertyGroup(--val);}}prop.setGroupProperty(_propertyGroup);function interfaceFunction(val){if(val==='Shape'||val==='shape'||val==='Path'||val==='path'||val==='ADBE Vector Shape'||val===2){return interfaceFunction.path;}}Object.defineProperties(interfaceFunction,{'path':{get:function get(){if(prop.k){prop.getValue();}return prop;}},'shape':{get:function get(){if(prop.k){prop.getValue();}return prop;}},'_name':{value:shape.nm},'ix':{value:shape.ix},'propertyIndex':{value:shape.ix},'mn':{value:shape.mn}});return interfaceFunction;}return function(shapes,view,propertyGroup){var interfaces;function _interfaceFunction(value){if(typeof value==='number'){return interfaces[value-1];}else{var i=0,len=interfaces.length;while(i<len){if(interfaces[i]._name===value){return interfaces[i];}i+=1;}}}_interfaceFunction.propertyGroup=propertyGroup;interfaces=iterateElements(shapes,view,_interfaceFunction);_interfaceFunction.numProperties=interfaces.length;return _interfaceFunction;};}();var TextExpressionInterface=function(){return function(elem){var _prevValue,_sourceText;function _thisLayerFunction(){}Object.defineProperty(_thisLayerFunction,"sourceText",{get:function get(){elem.textProperty.getValue();var stringValue=elem.textProperty.currentData.t;if(stringValue!==_prevValue){elem.textProperty.currentData.t=_prevValue;_sourceText=new String(stringValue);//If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive
_sourceText.value=stringValue?stringValue:new String(stringValue);}return _sourceText;}});return _thisLayerFunction;};}();var LayerExpressionInterface=function(){function toWorld(arr,time){var toWorldMat=new Matrix();toWorldMat.reset();var transformMat;if(time){//Todo implement value at time on transform properties
//transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);
transformMat=this._elem.finalTransform.mProp;}else{transformMat=this._elem.finalTransform.mProp;}transformMat.applyToMatrix(toWorldMat);if(this._elem.hierarchy&&this._elem.hierarchy.length){var i,len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);}return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);}return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);}function fromWorld(arr,time){var toWorldMat=new Matrix();toWorldMat.reset();var transformMat;if(time){//Todo implement value at time on transform properties
//transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);
transformMat=this._elem.finalTransform.mProp;}else{transformMat=this._elem.finalTransform.mProp;}transformMat.applyToMatrix(toWorldMat);if(this._elem.hierarchy&&this._elem.hierarchy.length){var i,len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);}return toWorldMat.inversePoint(arr);}return toWorldMat.inversePoint(arr);}function fromComp(arr){var toWorldMat=new Matrix();toWorldMat.reset();this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);if(this._elem.hierarchy&&this._elem.hierarchy.length){var i,len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);}return toWorldMat.inversePoint(arr);}return toWorldMat.inversePoint(arr);}function sampleImage(){return[1,1,1,1];}return function(elem){var transformInterface;function _registerMaskInterface(maskManager){_thisLayerFunction.mask=new MaskManagerInterface(maskManager,elem);}function _registerEffectsInterface(effects){_thisLayerFunction.effect=effects;}function _thisLayerFunction(name){switch(name){case"ADBE Root Vectors Group":case"Contents":case 2:return _thisLayerFunction.shapeInterface;case 1:case 6:case"Transform":case"transform":case"ADBE Transform Group":return transformInterface;case 4:case"ADBE Effect Parade":case"effects":case"Effects":return _thisLayerFunction.effect;}}_thisLayerFunction.toWorld=toWorld;_thisLayerFunction.fromWorld=fromWorld;_thisLayerFunction.toComp=toWorld;_thisLayerFunction.fromComp=fromComp;_thisLayerFunction.sampleImage=sampleImage;_thisLayerFunction.sourceRectAtTime=elem.sourceRectAtTime.bind(elem);_thisLayerFunction._elem=elem;transformInterface=TransformExpressionInterface(elem.finalTransform.mProp);var anchorPointDescriptor=getDescriptor(transformInterface,'anchorPoint');Object.defineProperties(_thisLayerFunction,{hasParent:{get:function get(){return elem.hierarchy.length;}},parent:{get:function get(){return elem.hierarchy[0].layerInterface;}},rotation:getDescriptor(transformInterface,'rotation'),scale:getDescriptor(transformInterface,'scale'),position:getDescriptor(transformInterface,'position'),opacity:getDescriptor(transformInterface,'opacity'),anchorPoint:anchorPointDescriptor,anchor_point:anchorPointDescriptor,transform:{get:function get(){return transformInterface;}},active:{get:function get(){return elem.isInRange;}}});_thisLayerFunction.startTime=elem.data.st;_thisLayerFunction.index=elem.data.ind;_thisLayerFunction.source=elem.data.refId;_thisLayerFunction.height=elem.data.ty===0?elem.data.h:100;_thisLayerFunction.width=elem.data.ty===0?elem.data.w:100;_thisLayerFunction.inPoint=elem.data.ip/elem.comp.globalData.frameRate;_thisLayerFunction.outPoint=elem.data.op/elem.comp.globalData.frameRate;_thisLayerFunction._name=elem.data.nm;_thisLayerFunction.registerMaskInterface=_registerMaskInterface;_thisLayerFunction.registerEffectsInterface=_registerEffectsInterface;return _thisLayerFunction;};}();var CompExpressionInterface=function(){return function(comp){function _thisLayerFunction(name){var i=0,len=comp.layers.length;while(i<len){if(comp.layers[i].nm===name||comp.layers[i].ind===name){return comp.elements[i].layerInterface;}i+=1;}return null;//return {active:false};
}Object.defineProperty(_thisLayerFunction,"_name",{value:comp.data.nm});_thisLayerFunction.layer=_thisLayerFunction;_thisLayerFunction.pixelAspect=1;_thisLayerFunction.height=comp.data.h||comp.globalData.compSize.h;_thisLayerFunction.width=comp.data.w||comp.globalData.compSize.w;_thisLayerFunction.pixelAspect=1;_thisLayerFunction.frameDuration=1/comp.globalData.frameRate;_thisLayerFunction.displayStartTime=0;_thisLayerFunction.numLayers=comp.layers.length;return _thisLayerFunction;};}();var TransformExpressionInterface=function(){return function(transform){function _thisFunction(name){switch(name){case"scale":case"Scale":case"ADBE Scale":case 6:return _thisFunction.scale;case"rotation":case"Rotation":case"ADBE Rotation":case"ADBE Rotate Z":case 10:return _thisFunction.rotation;case"ADBE Rotate X":return _thisFunction.xRotation;case"ADBE Rotate Y":return _thisFunction.yRotation;case"position":case"Position":case"ADBE Position":case 2:return _thisFunction.position;case'ADBE Position_0':return _thisFunction.xPosition;case'ADBE Position_1':return _thisFunction.yPosition;case'ADBE Position_2':return _thisFunction.zPosition;case"anchorPoint":case"AnchorPoint":case"Anchor Point":case"ADBE AnchorPoint":case 1:return _thisFunction.anchorPoint;case"opacity":case"Opacity":case 11:return _thisFunction.opacity;}}Object.defineProperty(_thisFunction,"rotation",{get:ExpressionPropertyInterface(transform.r||transform.rz)});Object.defineProperty(_thisFunction,"zRotation",{get:ExpressionPropertyInterface(transform.rz||transform.r)});Object.defineProperty(_thisFunction,"xRotation",{get:ExpressionPropertyInterface(transform.rx)});Object.defineProperty(_thisFunction,"yRotation",{get:ExpressionPropertyInterface(transform.ry)});Object.defineProperty(_thisFunction,"scale",{get:ExpressionPropertyInterface(transform.s)});if(transform.p){var _transformFactory=ExpressionPropertyInterface(transform.p);}Object.defineProperty(_thisFunction,"position",{get:function get(){if(transform.p){return _transformFactory();}else{return[transform.px.v,transform.py.v,transform.pz?transform.pz.v:0];}}});Object.defineProperty(_thisFunction,"xPosition",{get:ExpressionPropertyInterface(transform.px)});Object.defineProperty(_thisFunction,"yPosition",{get:ExpressionPropertyInterface(transform.py)});Object.defineProperty(_thisFunction,"zPosition",{get:ExpressionPropertyInterface(transform.pz)});Object.defineProperty(_thisFunction,"anchorPoint",{get:ExpressionPropertyInterface(transform.a)});Object.defineProperty(_thisFunction,"opacity",{get:ExpressionPropertyInterface(transform.o)});Object.defineProperty(_thisFunction,"skew",{get:ExpressionPropertyInterface(transform.sk)});Object.defineProperty(_thisFunction,"skewAxis",{get:ExpressionPropertyInterface(transform.sa)});Object.defineProperty(_thisFunction,"orientation",{get:ExpressionPropertyInterface(transform.or)});return _thisFunction;};}();var ProjectInterface=function(){function registerComposition(comp){this.compositions.push(comp);}return function(){function _thisProjectFunction(name){var i=0,len=this.compositions.length;while(i<len){if(this.compositions[i].data&&this.compositions[i].data.nm===name){if(this.compositions[i].prepareFrame&&this.compositions[i].data.xt){this.compositions[i].prepareFrame(this.currentFrame);}return this.compositions[i].compInterface;}i+=1;}}_thisProjectFunction.compositions=[];_thisProjectFunction.currentFrame=0;_thisProjectFunction.registerComposition=registerComposition;return _thisProjectFunction;};}();var EffectsExpressionInterface=function(){var ob={createEffectsInterface:createEffectsInterface};function createEffectsInterface(elem,propertyGroup){if(elem.effectsManager){var effectElements=[];var effectsData=elem.data.ef;var i,len=elem.effectsManager.effectElements.length;for(i=0;i<len;i+=1){effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));}return function(name){var effects=elem.data.ef||[],i=0,len=effects.length;while(i<len){if(name===effects[i].nm||name===effects[i].mn||name===effects[i].ix){return effectElements[i];}i+=1;}};}}function createGroupInterface(data,elements,propertyGroup,elem){var effectElements=[];var i,len=data.ef.length;for(i=0;i<len;i+=1){if(data.ef[i].ty===5){effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup,elem));}else{effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty,elem,_propertyGroup));}}function _propertyGroup(val){if(val===1){return groupInterface;}else{return propertyGroup(val-1);}}var groupInterface=function groupInterface(name){var effects=data.ef,i=0,len=effects.length;while(i<len){if(name===effects[i].nm||name===effects[i].mn||name===effects[i].ix){if(effects[i].ty===5){return effectElements[i];}else{return effectElements[i]();}}i+=1;}return effectElements[0]();};groupInterface.propertyGroup=_propertyGroup;if(data.mn==='ADBE Color Control'){Object.defineProperty(groupInterface,'color',{get:function get(){return effectElements[0]();}});}Object.defineProperty(groupInterface,'numProperties',{get:function get(){return data.np;}});groupInterface.active=groupInterface.enabled=data.en!==0;return groupInterface;}function createValueInterface(element,type,elem,propertyGroup){var expressionProperty=ExpressionPropertyInterface(element.p);function interfaceFunction(){if(type===10){return elem.comp.compInterface(element.p.v);}return expressionProperty();}if(element.p.setGroupProperty){element.p.setGroupProperty(propertyGroup);}return interfaceFunction;}return ob;}();var MaskManagerInterface=function(){function MaskInterface(mask,data){this._mask=mask;this._data=data;}Object.defineProperty(MaskInterface.prototype,'maskPath',{get:function get(){if(this._mask.prop.k){this._mask.prop.getValue();}return this._mask.prop;}});Object.defineProperty(MaskInterface.prototype,'maskOpacity',{get:function get(){if(this._mask.op.k){this._mask.op.getValue();}return this._mask.op.v*100;}});var MaskManager=function MaskManager(maskManager,elem){var _maskManager=maskManager;var _elem=elem;var _masksInterfaces=createSizedArray(maskManager.viewData.length);var i,len=maskManager.viewData.length;for(i=0;i<len;i+=1){_masksInterfaces[i]=new MaskInterface(maskManager.viewData[i],maskManager.masksProperties[i]);}var maskFunction=function maskFunction(name){i=0;while(i<len){if(maskManager.masksProperties[i].nm===name){return _masksInterfaces[i];}i+=1;}};return maskFunction;};return MaskManager;}();var ExpressionPropertyInterface=function(){var defaultUnidimensionalValue={pv:0,v:0,mult:1};var defaultMultidimensionalValue={pv:[0,0,0],v:[0,0,0],mult:1};function completeProperty(expressionValue,property,type){Object.defineProperty(expressionValue,'velocity',{get:function get(){return property.getVelocityAtTime(property.comp.currentFrame);}});expressionValue.numKeys=property.keyframes?property.keyframes.length:0;expressionValue.key=function(pos){if(!expressionValue.numKeys){return 0;}else{var value='';if('s'in property.keyframes[pos-1]){value=property.keyframes[pos-1].s;}else if('e'in property.keyframes[pos-2]){value=property.keyframes[pos-2].e;}else{value=property.keyframes[pos-2].s;}var valueProp=type==='unidimensional'?new Number(value):Object.assign({},value);valueProp.time=property.keyframes[pos-1].t/property.elem.comp.globalData.frameRate;return valueProp;}};expressionValue.valueAtTime=property.getValueAtTime;expressionValue.speedAtTime=property.getSpeedAtTime;expressionValue.velocityAtTime=property.getVelocityAtTime;expressionValue.propertyGroup=property.propertyGroup;}function UnidimensionalPropertyInterface(property){if(!property||!('pv'in property)){property=defaultUnidimensionalValue;}var mult=1/property.mult;var val=property.pv*mult;var expressionValue=new Number(val);expressionValue.value=val;completeProperty(expressionValue,property,'unidimensional');return function(){if(property.k){property.getValue();}val=property.v*mult;if(expressionValue.value!==val){expressionValue=new Number(val);expressionValue.value=val;completeProperty(expressionValue,property,'unidimensional');}return expressionValue;};}function MultidimensionalPropertyInterface(property){if(!property||!('pv'in property)){property=defaultMultidimensionalValue;}var mult=1/property.mult;var len=property.pv.length;var expressionValue=createTypedArray('float32',len);var arrValue=createTypedArray('float32',len);expressionValue.value=arrValue;completeProperty(expressionValue,property,'multidimensional');return function(){if(property.k){property.getValue();}for(var i=0;i<len;i+=1){expressionValue[i]=arrValue[i]=property.v[i]*mult;}return expressionValue;};}//TODO: try to avoid using this getter
function defaultGetter(){return defaultUnidimensionalValue;}return function(property){if(!property){return defaultGetter;}else if(property.propType==='unidimensional'){return UnidimensionalPropertyInterface(property);}else{return MultidimensionalPropertyInterface(property);}};}();(function(){var TextExpressionSelectorProp=function(){function getValueProxy(index,total){this.textIndex=index+1;this.textTotal=total;this.v=this.getValue()*this.mult;return this.v;}return function TextExpressionSelectorProp(elem,data){this.pv=1;this.comp=elem.comp;this.elem=elem;this.mult=0.01;this.propType='textSelector';this.textTotal=data.totalChars;this.selectorValue=100;this.lastValue=[1,1,1];this.k=true;this.x=true;this.getValue=ExpressionManager.initiateExpression.bind(this)(elem,data,this);this.getMult=getValueProxy;this.getVelocityAtTime=expressionHelpers.getVelocityAtTime;if(this.kf){this.getValueAtTime=expressionHelpers.getValueAtTime.bind(this);}else{this.getValueAtTime=expressionHelpers.getStaticValueAtTime.bind(this);}this.setGroupProperty=expressionHelpers.setGroupProperty;};}();var propertyGetTextProp=TextSelectorProp.getTextSelectorProp;TextSelectorProp.getTextSelectorProp=function(elem,data,arr){if(data.t===1){return new TextExpressionSelectorProp(elem,data,arr);}else{return propertyGetTextProp(elem,data,arr);}};})();function SliderEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function AngleEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function ColorEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,1,0,container);}function PointEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,1,0,container);}function LayerIndexEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function MaskIndexEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function CheckboxEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function NoValueEffect(){this.p={};}function EffectsManager(){}function EffectsManager(data,element){var effects=data.ef||[];this.effectElements=[];var i,len=effects.length;var effectItem;for(i=0;i<len;i++){effectItem=new GroupEffect(effects[i],element);this.effectElements.push(effectItem);}}function GroupEffect(data,element){this.init(data,element);}extendPrototype([DynamicPropertyContainer],GroupEffect);GroupEffect.prototype.getValue=GroupEffect.prototype.iterateDynamicProperties;GroupEffect.prototype.init=function(data,element){this.data=data;this.effectElements=[];this.initDynamicPropertyContainer(element);var i,len=this.data.ef.length;var eff,effects=this.data.ef;for(i=0;i<len;i+=1){eff=null;switch(effects[i].ty){case 0:eff=new SliderEffect(effects[i],element,this);break;case 1:eff=new AngleEffect(effects[i],element,this);break;case 2:eff=new ColorEffect(effects[i],element,this);break;case 3:eff=new PointEffect(effects[i],element,this);break;case 4:case 7:eff=new CheckboxEffect(effects[i],element,this);break;case 10:eff=new LayerIndexEffect(effects[i],element,this);break;case 11:eff=new MaskIndexEffect(effects[i],element,this);break;case 5:eff=new EffectsManager(effects[i],element,this);break;//case 6:
default:eff=new NoValueEffect(effects[i],element,this);break;}if(eff){this.effectElements.push(eff);}}};var lottiejs={};var _isFrozen=false;function setLocationHref(href){locationHref=href;}function searchAnimations(){if(standalone===true){animationManager.searchAnimations(animationData,standalone,renderer);}else{animationManager.searchAnimations();}}function setSubframeRendering(flag){subframeEnabled=flag;}function loadAnimation(params){if(standalone===true){params.animationData=JSON.parse(animationData);}return animationManager.loadAnimation(params);}function setQuality(value){if(typeof value==='string'){switch(value){case'high':defaultCurveSegments=200;break;case'medium':defaultCurveSegments=50;break;case'low':defaultCurveSegments=10;break;}}else if(!isNaN(value)&&value>1){defaultCurveSegments=value;}if(defaultCurveSegments>=50){roundValues(false);}else{roundValues(true);}}function inBrowser(){return typeof navigator!=='undefined';}function installPlugin(type,plugin){if(type==='expressions'){expressionsPlugin=plugin;}}function getFactory(name){switch(name){case"propertyFactory":return PropertyFactory;case"shapePropertyFactory":return ShapePropertyFactory;case"matrix":return Matrix;}}lottiejs.play=animationManager.play;lottiejs.pause=animationManager.pause;lottiejs.setLocationHref=setLocationHref;lottiejs.togglePause=animationManager.togglePause;lottiejs.setSpeed=animationManager.setSpeed;lottiejs.setDirection=animationManager.setDirection;lottiejs.stop=animationManager.stop;lottiejs.searchAnimations=searchAnimations;lottiejs.registerAnimation=animationManager.registerAnimation;lottiejs.loadAnimation=loadAnimation;lottiejs.setSubframeRendering=setSubframeRendering;lottiejs.resize=animationManager.resize;//lottiejs.start = start;
lottiejs.goToAndStop=animationManager.goToAndStop;lottiejs.destroy=animationManager.destroy;lottiejs.setQuality=setQuality;lottiejs.inBrowser=inBrowser;lottiejs.installPlugin=installPlugin;lottiejs.freeze=animationManager.freeze;lottiejs.unfreeze=animationManager.unfreeze;lottiejs.getRegisteredAnimations=animationManager.getRegisteredAnimations;lottiejs.__getFactory=getFactory;lottiejs.version='5.5.10';function checkReady(){if(document.readyState==="complete"){clearInterval(readyStateCheckInterval);searchAnimations();}}function getQueryVariable(variable){var vars=queryString.split('&');for(var i=0;i<vars.length;i++){var pair=vars[i].split('=');if(decodeURIComponent(pair[0])==variable){return decodeURIComponent(pair[1]);}}}var standalone='__[STANDALONE]__';var animationData='__[ANIMATIONDATA]__';var renderer='';if(standalone){var scripts=document.getElementsByTagName('script');var index=scripts.length-1;var myScript=scripts[index]||{src:''};var queryString=myScript.src.replace(/^[^\?]+\??/,'');renderer=getQueryVariable('renderer');}var readyStateCheckInterval=setInterval(checkReady,100);return lottiejs;});

/***/ }),
/* 140 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Spinner; });
var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var defaults = {
  lines: 12,
  length: 7,
  width: 5,
  radius: 10,
  scale: 1.0,
  corners: 1,
  color: '#000',
  fadeColor: 'transparent',
  animation: 'spinner-line-fade-default',
  rotate: 0,
  direction: 1,
  speed: 1,
  zIndex: 2e9,
  className: 'spinner',
  top: '50%',
  left: '50%',
  shadow: '0 0 1px transparent',
  position: 'absolute'
};

var Spinner =
/** @class */
function () {
  function Spinner(opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.opts = __assign(__assign({}, defaults), opts);
  }
  /**
   * Adds the spinner to the given target element. If this instance is already
   * spinning, it is automatically removed from its previous target by calling
   * stop() internally.
   */


  Spinner.prototype.spin = function (target) {
    this.stop();
    this.el = document.createElement('div');
    this.el.className = this.opts.className;
    this.el.setAttribute('role', 'progressbar');
    css(this.el, {
      position: this.opts.position,
      width: 0,
      zIndex: this.opts.zIndex,
      left: this.opts.left,
      top: this.opts.top,
      transform: "scale(" + this.opts.scale + ")"
    });

    if (target) {
      target.insertBefore(this.el, target.firstChild || null);
    }

    drawLines(this.el, this.opts);
    return this;
  };
  /**
   * Stops and removes the Spinner.
   * Stopped spinners may be reused by calling spin() again.
   */


  Spinner.prototype.stop = function () {
    if (this.el) {
      if (typeof requestAnimationFrame !== 'undefined') {
        cancelAnimationFrame(this.animateId);
      } else {
        clearTimeout(this.animateId);
      }

      if (this.el.parentNode) {
        this.el.parentNode.removeChild(this.el);
      }

      this.el = undefined;
    }

    return this;
  };

  return Spinner;
}();


/**
 * Sets multiple style properties at once.
 */

function css(el, props) {
  for (var prop in props) {
    el.style[prop] = props[prop];
  }

  return el;
}
/**
 * Returns the line color from the given string or array.
 */


function getColor(color, idx) {
  return typeof color == 'string' ? color : color[idx % color.length];
}
/**
 * Internal method that draws the individual lines.
 */


function drawLines(el, opts) {
  var borderRadius = Math.round(opts.corners * opts.width * 500) / 1000 + 'px';
  var shadow = 'none';

  if (opts.shadow === true) {
    shadow = '0 2px 4px #000'; // default shadow
  } else if (typeof opts.shadow === 'string') {
    shadow = opts.shadow;
  }

  var shadows = parseBoxShadow(shadow);

  for (var i = 0; i < opts.lines; i++) {
    var degrees = ~~(360 / opts.lines * i + opts.rotate);
    var backgroundLine = css(document.createElement('div'), {
      position: 'absolute',
      top: -opts.width / 2 + "px",
      width: opts.length + opts.width + 'px',
      height: opts.width + 'px',
      background: getColor(opts.fadeColor, i),
      borderRadius: borderRadius,
      transformOrigin: 'left',
      transform: "rotate(" + degrees + "deg) translateX(" + opts.radius + "px)"
    });
    var delay = i * opts.direction / opts.lines / opts.speed;
    delay -= 1 / opts.speed; // so initial animation state will include trail

    var line = css(document.createElement('div'), {
      width: '100%',
      height: '100%',
      background: getColor(opts.color, i),
      borderRadius: borderRadius,
      boxShadow: normalizeShadow(shadows, degrees),
      animation: 1 / opts.speed + "s linear " + delay + "s infinite " + opts.animation
    });
    backgroundLine.appendChild(line);
    el.appendChild(backgroundLine);
  }
}

function parseBoxShadow(boxShadow) {
  var regex = /^\s*([a-zA-Z]+\s+)?(-?\d+(\.\d+)?)([a-zA-Z]*)\s+(-?\d+(\.\d+)?)([a-zA-Z]*)(.*)$/;
  var shadows = [];

  for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {
    var shadow = _a[_i];
    var matches = shadow.match(regex);

    if (matches === null) {
      continue; // invalid syntax
    }

    var x = +matches[2];
    var y = +matches[5];
    var xUnits = matches[4];
    var yUnits = matches[7];

    if (x === 0 && !xUnits) {
      xUnits = yUnits;
    }

    if (y === 0 && !yUnits) {
      yUnits = xUnits;
    }

    if (xUnits !== yUnits) {
      continue; // units must match to use as coordinates
    }

    shadows.push({
      prefix: matches[1] || '',
      x: x,
      y: y,
      xUnits: xUnits,
      yUnits: yUnits,
      end: matches[8]
    });
  }

  return shadows;
}
/**
 * Modify box-shadow x/y offsets to counteract rotation
 */


function normalizeShadow(shadows, degrees) {
  var normalized = [];

  for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {
    var shadow = shadows_1[_i];
    var xy = convertOffset(shadow.x, shadow.y, degrees);
    normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);
  }

  return normalized.join(', ');
}

function convertOffset(x, y, degrees) {
  var radians = degrees * Math.PI / 180;
  var sin = Math.sin(radians);
  var cos = Math.cos(radians);
  return [Math.round((x * cos + y * sin) * 1000) / 1000, Math.round((-x * sin + y * cos) * 1000) / 1000];
}

/***/ }),
/* 142 */
/***/ (function(module, exports) {

/*!
 * verge 1.10.2+201705300050
 * http://npm.im/verge
 * MIT Ryan Van Etten
 */
!function (root, name, make) {
  if (typeof module != 'undefined' && module['exports']) module['exports'] = make();else root[name] = make();
}(this, 'verge', function () {
  var xports = {},
      win = typeof window != 'undefined' && window,
      doc = typeof document != 'undefined' && document,
      docElem = doc && doc.documentElement,
      matchMedia = win['matchMedia'] || win['msMatchMedia'],
      mq = matchMedia ? function (q) {
    return !!matchMedia.call(win, q).matches;
  } : function () {
    return false;
  },
      viewportW = xports['viewportW'] = function () {
    var a = docElem['clientWidth'],
        b = win['innerWidth'];
    return a < b ? b : a;
  },
      viewportH = xports['viewportH'] = function () {
    var a = docElem['clientHeight'],
        b = win['innerHeight'];
    return a < b ? b : a;
  };
  /**
   * Test if a media query is active. Like Modernizr.mq
   * @since 1.6.0
   * @return {boolean}
   */


  xports['mq'] = mq;
  /**
   * Normalized matchMedia
   * @since 1.6.0
   * @return {MediaQueryList|Object}
   */

  xports['matchMedia'] = matchMedia ? function () {
    // matchMedia must be binded to window
    return matchMedia.apply(win, arguments);
  } : function () {
    // Gracefully degrade to plain object
    return {};
  };
  /**
   * @since 1.8.0
   * @return {{width:number, height:number}}
   */

  function viewport() {
    return {
      'width': viewportW(),
      'height': viewportH()
    };
  }

  xports['viewport'] = viewport;
  /**
   * Cross-browser window.scrollX
   * @since 1.0.0
   * @return {number}
   */

  xports['scrollX'] = function () {
    return win.pageXOffset || docElem.scrollLeft;
  };
  /**
   * Cross-browser window.scrollY
   * @since 1.0.0
   * @return {number}
   */


  xports['scrollY'] = function () {
    return win.pageYOffset || docElem.scrollTop;
  };
  /**
   * @param {{top:number, right:number, bottom:number, left:number}} coords
   * @param {number=} cushion adjustment
   * @return {Object}
   */


  function calibrate(coords, cushion) {
    var o = {};
    cushion = +cushion || 0;
    o['width'] = (o['right'] = coords['right'] + cushion) - (o['left'] = coords['left'] - cushion);
    o['height'] = (o['bottom'] = coords['bottom'] + cushion) - (o['top'] = coords['top'] - cushion);
    return o;
  }
  /**
   * Cross-browser element.getBoundingClientRect plus optional cushion.
   * Coords are relative to the top-left corner of the viewport.
   * @since 1.0.0
   * @param {Element|Object} el element or stack (uses first item)
   * @param {number=} cushion +/- pixel adjustment amount
   * @return {Object|boolean}
   */


  function rectangle(el, cushion) {
    el = el && !el.nodeType ? el[0] : el;
    if (!el || 1 !== el.nodeType) return false;
    return calibrate(el.getBoundingClientRect(), cushion);
  }

  xports['rectangle'] = rectangle;
  /**
   * Get the viewport aspect ratio (or the aspect ratio of an object or element)
   * @since 1.7.0
   * @param {(Element|Object)=} o optional object with width/height props or methods
   * @return {number}
   * @link http://w3.org/TR/css3-mediaqueries/#orientation
   */

  function aspect(o) {
    o = null == o ? viewport() : 1 === o.nodeType ? rectangle(o) : o;
    var h = o['height'],
        w = o['width'];
    h = typeof h == 'function' ? h.call(o) : h;
    w = typeof w == 'function' ? w.call(o) : w;
    return w / h;
  }

  xports['aspect'] = aspect;
  /**
   * Test if an element is in the same x-axis section as the viewport.
   * @since 1.0.0
   * @param {Element|Object} el
   * @param {number=} cushion
   * @return {boolean}
   */

  xports['inX'] = function (el, cushion) {
    var r = rectangle(el, cushion);
    return !!r && r.right >= 0 && r.left <= viewportW();
  };
  /**
   * Test if an element is in the same y-axis section as the viewport.
   * @since 1.0.0
   * @param {Element|Object} el
   * @param {number=} cushion
   * @return {boolean}
   */


  xports['inY'] = function (el, cushion) {
    var r = rectangle(el, cushion);
    return !!r && r.bottom >= 0 && r.top <= viewportH();
  };
  /**
   * Test if an element is in the viewport.
   * @since 1.0.0
   * @param {Element|Object} el
   * @param {number=} cushion
   * @return {boolean}
   */


  xports['inViewport'] = function (el, cushion) {
    // Equiv to `inX(el, cushion) && inY(el, cushion)` but just manually do both
    // to avoid calling rectangle() twice. It gzips just as small like this.
    var r = rectangle(el, cushion);
    return !!r && r.bottom >= 0 && r.right >= 0 && r.top <= viewportH() && r.left <= viewportW();
  };

  return xports;
});

/***/ }),
/* 143 */
/***/ (function(module, exports) {

module.exports = function (originalModule) {
  if (!originalModule.webpackPolyfill) {
    var module = Object.create(originalModule); // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    Object.defineProperty(module, "exports", {
      enumerable: true
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

/* harmony default export */ __webpack_exports__["default"] = (class extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const subscriber = this.subscribe('menu-trigger');
    subscriber.on('menu:open', this.open);
    subscriber.on('menu:close', this.close);
    this.delegateClick = 'a';
  }

  open() {
    this.$el.classList.add('is-open');
  }

  close() {
    this.$el.classList.remove('is-open');
  }

});

/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

/* harmony default export */ __webpack_exports__["default"] = (class extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const subscriber = this.subscribe('menu-trigger');
    const overlay = this.$el.querySelector('.menu__overlay');
    subscriber.on('menu:open', this.open);
    subscriber.on('menu:close', this.close);
    this.delegateClick = 'a'; // Close menu if click on overlay

    overlay.addEventListener('click', () => {
      this.onOverlayClick();
    });
  }

  open() {
    this.$el.classList.add('is-open');
  }

  close() {
    this.$el.classList.remove('is-open');
  }

  onOverlayClick() {
    this.emit('overlay:close');
    this.close();
  }

  onClick() {
    this.emit('link:close');
    this.close();
  }

});

/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

/* harmony default export */ __webpack_exports__["default"] = (class extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const subscriber = this.subscribe('menu');
    subscriber.on('overlay:close', this.close);
    subscriber.on('link:close', this.close);
  }

  onClick(e) {
    e.preventDefault();

    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  }

  open() {
    this.$el.classList.add('is-open');
    document.body.classList.add('prevent-scroll');
    this.emit('menu:open');
  }

  close() {
    this.$el.classList.remove('is-open');
    document.body.classList.remove('prevent-scroll');
    this.emit('menu:close');
  }

  isOpen() {
    return this.$el.classList.contains('is-open');
  }

});

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

class DocsNav extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const subscriber = this.subscribe('docs-nav-lateral');
    subscriber.on('docs-nav:open', this.open.bind(this));
    subscriber.on('docs-nav:close', this.close.bind(this));
    this.delegateClick = 'a';
  }

  open() {
    this.$el.classList.add('is-open');
  }

  close() {
    this.$el.classList.remove('is-open');
  }

  onOverlayClick() {
    this.emit('overlay:close');
    this.close();
  }

  onClick() {
    this.emit('link:close');
    this.close();
  }

}
/* harmony export (immutable) */ __webpack_exports__["default"] = DocsNav;


/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

class DocsNavLateral extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const subscriber = this.subscribe('docs-nav');
    subscriber.on('link:close', this.close);
    this.delegateClick = 'button';
    const navLateralLinks = this.$el.querySelectorAll('.docs__nav__lateral__link');
    navLateralLinks.forEach(link => {
      link.addEventListener('click', () => {
        this.close();
      });
    });
  }

  onClick(e) {
    e.preventDefault();

    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  }

  open() {
    this.$el.classList.add('is-open');
    document.body.classList.add('prevent-scroll');
    this.emit('docs-nav:open');
  }

  close() {
    this.$el.classList.remove('is-open');
    document.body.classList.remove('prevent-scroll');
    this.emit('docs-nav:close');
  }

  isOpen() {
    return this.$el.classList.contains('is-open');
  }

}
/* harmony export (immutable) */ __webpack_exports__["default"] = DocsNavLateral;


/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lottie_web__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lottie_web___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lottie_web__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lottie_animation_feature0_json__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lottie_animation_feature0_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__lottie_animation_feature0_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lottie_animation_feature1_json__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lottie_animation_feature1_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__lottie_animation_feature1_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lottie_animation_feature2_json__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lottie_animation_feature2_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__lottie_animation_feature2_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lottie_animation_feature3_json__ = __webpack_require__(169);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lottie_animation_feature3_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__lottie_animation_feature3_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lottie_animation_feature4_json__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lottie_animation_feature4_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__lottie_animation_feature4_json__);

 // Bodymovin JSON files






const bodymovins = [{
  data: __WEBPACK_IMPORTED_MODULE_2__lottie_animation_feature0_json___default.a,
  step: 158
}, {
  data: __WEBPACK_IMPORTED_MODULE_3__lottie_animation_feature1_json___default.a,
  step: 140
}, {
  data: __WEBPACK_IMPORTED_MODULE_4__lottie_animation_feature2_json___default.a,
  step: 100
}, {
  data: __WEBPACK_IMPORTED_MODULE_5__lottie_animation_feature3_json___default.a,
  step: 140
}, {
  data: __WEBPACK_IMPORTED_MODULE_6__lottie_animation_feature4_json___default.a,
  step: 110
}];
/* harmony default export */ __webpack_exports__["default"] = (class extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const featureOrder = this.data.get('order');
    this.bodymovin = bodymovins[featureOrder];

    if (!this.bodymovin) {
      return;
    }

    this.animation = __WEBPACK_IMPORTED_MODULE_1_lottie_web___default.a.loadAnimation({
      container: this.$refs.bodymovin,
      renderer: 'svg',
      loop: false,
      autoplay: false,
      animationData: this.bodymovin.data
    });
    this.animation.setSpeed(1.25);
  }

  animateOut() {
    return new Promise(resolve => {
      this.animation.playSegments([this.bodymovin.step, this.animation.animationData.op], true);
      setTimeout(() => {
        resolve();
      }, 1500); // this.animation.onComplete = () => {
      //   resolve();
      // };
    });
  }

  animateIn() {
    return new Promise(resolve => {
      console.log('animateInStart');

      if (this.animation) {
        this.animation.playSegments([0, this.bodymovin.step], true);
        setTimeout(() => {
          console.log('animateInEnd');
          resolve();
        }, 1000);
      }
    });
  }

});

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__barba_core__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__barba_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__barba_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_kapla__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_gsap_all__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__ = __webpack_require__(45);




/* harmony default export */ __webpack_exports__["default"] = (class extends __WEBPACK_IMPORTED_MODULE_1_kapla__["Component"] {
  load() {
    this.$logoContainer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.logo-container', this.$el);
    this.$logoHover = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.logo.only-big', this.$el);
    this.$logo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.home-logo.logo svg', this.$el);
    this.$links = [...__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["b" /* qsa */])('.home-logo.logo .links a', this.$el)];
    this.$texts = [...__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["b" /* qsa */])('.intro__list li', this.$el)];
    this.$items = [...__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["b" /* qsa */])('.only-big .hover .item', this.$el)];
    this.$list = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.intro__list', this.$el);
    this.mouseEnter = this.mouseEnter.bind(this);
    this.mouseLeave = this.mouseLeave.bind(this);
    this.$links.forEach((link, index) => {
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["c" /* $on */])(link, 'mouseenter', () => this.mouseEnter(index));
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["c" /* $on */])(link, 'mouseleave', () => this.mouseLeave(index));
    }); // Play onboarding if it's the first page

    if (!__WEBPACK_IMPORTED_MODULE_0__barba_core___default.a.history.previous) {
      this.boarding();
    } // this.onResize();

  }

  boarding() {
    const logo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.logo.home-logo', this.$el);
    const logoItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["b" /* qsa */])('.logo.home-logo .base-item', this.$el);
    const title = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["b" /* qsa */])('h1 span', this.$el);
    const buttons = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["b" /* qsa */])('.intro__buttons a', this.$el);
    const chrome = [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.header__infos'), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.header__external-links'), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__source_js_utils_dom__["a" /* qs */])('.site-footer')];
    document.documentElement.classList.add('transitioning');
    const tl = new __WEBPACK_IMPORTED_MODULE_2_gsap_all__["a" /* TimelineMax */]({
      delay: 0.5,
      onComplete: () => {
        document.documentElement.classList.remove('transitioning');
      }
    });
    tl.from(logo, 0.5, {
      y: 100,
      scale: 1.1,
      ease: 'Power4.easeInOut'
    }, 0); // tl.staggerFrom(logoItems, 1, {
    //   y: 100,
    //   scale: 1.1,
    //   ease: 'Power4.easeInOut'
    // }, 0.02, 0);

    tl.staggerFrom(title, 1, {
      yPercent: 100,
      scale: 1,
      ease: 'Power4.easeOut'
    }, 0.05, 0.6);
    tl.staggerFrom(buttons, 1, {
      y: 40,
      opacity: 0,
      ease: 'Power4.easeOut'
    }, 0.05, 1.2);
    tl.staggerFrom(chrome, 0.3, {
      scale: 0,
      ease: 'Power4.easeOut'
    }, 0.2, 1.5);
  } // destroy() {
  //   $on(this.$logoSvg, 'mouseenter', this.mouseEnter);
  //   $on(this.$logoSvg, 'mouseleave', this.mouseLeave);
  // }


  mouseEnter(index) {
    this.$logo.classList.add('gray');
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].killTweensOf(this.$texts[index]);
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].killTweensOf(this.$items[index]);
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].to(this.$items[index], 0.4, {
      opacity: 1
    });
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].to(this.$texts[index], 0.2, {
      opacity: 1,
      scale: 1
    });
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].to(this.$list, 0.4, {
      yPercent: -(index * 100),
      ease: 'Power4.easeOut'
    });
  }

  mouseLeave(index) {
    if (__WEBPACK_IMPORTED_MODULE_0__barba_core___default.a.transitions.isRunning) {
      return;
    }

    this.$logo.classList.remove('gray');
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].killTweensOf(this.$texts[index]);
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].killTweensOf(this.$items[index]);
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].to(this.$items[index], 0.4, {
      opacity: 0
    });
    __WEBPACK_IMPORTED_MODULE_2_gsap_all__["b" /* TweenMax */].to(this.$texts[index], 0.2, {
      opacity: 0,
      scale: 0.9
    });
  } // onResize() {
  //   const bounds = this.$logo.getBoundingClientRect();
  //   this.$logoHover.style.top = `${bounds.top}px`;
  //   this.$logoHover.style.left = `${bounds.left}px`;
  //   this.$logoHover.style.right = `${bounds.right}px`;
  //   this.$logoHover.style.bottom = `${bounds.bottom}px`;
  // }


}); // import {
//   Component
// } from 'kapla';
// import anime from 'animejs';
// import {
//   $on,
//   qsa,
//   qs
// } from '../../../source/js/utils/dom';
// class Letter {
//   constructor(base, hover, big) {
//     this.base = base;
//     this.hover = hover;
//     this.big = big;
//   }
// }
// export default class extends Component {
//   load() {
//     this.$logoSvg = qs('svg', this.$el);
//     this.$logoLinks = [...qsa('.hover a', this.$el)];
//     this.$names = [...qsa('.name__list', this.$el)];
//     this.onEnterLogo = this.onEnterLogo.bind(this);
//     this.onLeaveLogo = this.onLeaveLogo.bind(this);
//     $on(this.$logoSvg, 'mouseenter', this.onEnterLogo);
//     $on(this.$logoSvg, 'mouseleave', this.onLeaveLogo);
//     function animate() {
//       const tl = anime.timeline({
//         loop: false,
//         easing: 'easeInOutQuart',
//       });
//       const vwidth = 568;
//       const vheight = 134;
//       const jsRound = 83;
//       const $js = document.querySelector('.base .js');
//       const $jsRect = document.querySelectorAll('.base .js__rect, .base .js__rect__alternate');
//       const $jsCircle = document.querySelector('.base .js__circle');
//       const $jsLetter = document.querySelector('.base .js__letter');
//       const $letters = document.querySelector('.base .letters');
//       const $chars = document.querySelectorAll('.base .letters rect, .base .letters circle, .base .letters path');
//       tl.add({
//         targets: $js,
//         transformOrigin: [`${jsRound / 2}px 67px 0px`, `${jsRound / 2}px 67px 0px`],
//         translateX: [(vwidth / 2) - (jsRound / 2), (vwidth / 2) - (jsRound / 2)],
//         translateY: [0, 0],
//         scale: {
//           value: [0, 1],
//           duration: 800,
//         },
//       });
//       tl.add({
//         targets: $jsRect,
//         height: [0, 128],
//         y: [0, -89],
//         opacity: {
//           value: [0, 1],
//           duration: 400,
//         },
//         duration: 800,
//       }, 400);
//       tl.add({
//         targets: $jsRect,
//         x: 41,
//         duration: 400,
//       });
//       tl.add({
//         targets: $jsRect,
//         y: -38,
//         height: 77,
//         duration: 400,
//       });
//       tl.add({
//         targets: $jsRect,
//         x: 0,
//         duration: 400,
//       });
//       tl.add({
//         targets: $jsCircle,
//         d: 'M0 0 C 0 -52 79 -52 79 0 C 79 0 0 0 0 0Z',
//         duration: 600,
//       });
//       var obj = {
//         rotation: 0
//       };
//       $jsCircle.style.transformOrigin = '40px 0px 0px';
//       tl.add({
//         targets: obj,
//         rotation: 360,
//         update: function (anim) {
//           $jsCircle.style.transform = `rotate(${obj.rotation}deg)`;
//           if (obj.rotation > 90) {
//             $js.classList.add('front');
//           }
//         },
//         duration: 800,
//       });
//       var obj2 = {
//         rotation: 0
//       };
//       tl.add({
//         targets: obj2,
//         rotation: 360,
//         update: function (anim) {
//           $jsCircle.style.transform = `rotate(${obj2.rotation}deg)`;
//           if (obj2.rotation > 90) {
//             $js.classList.remove('front');
//           }
//         },
//         duration: 800,
//       });
//       tl.add({
//         targets: $jsCircle,
//         d: 'M0 0 C 0 -52 79 -52 79 0 C 79 52 0 52 0 0Z',
//         duration: 600,
//       });
//       tl.add({
//         targets: $jsRect,
//         y: -89,
//         height: 128,
//         duration: 600,
//       });
//       tl.add({
//         targets: $jsRect,
//         x: 41,
//         duration: 400,
//       });
//       tl.add({
//         targets: $jsRect,
//         y: -38,
//         height: 77,
//         duration: 400,
//       });
//       tl.add({
//         targets: $jsRect,
//         y: 0,
//         height: 0,
//         duration: 400,
//       });
//       tl.add({
//         targets: $jsLetter,
//         // opacity: [0, 0],
//         translateX: [-1, -1],
//         translateY: [50, 50],
//         scale: [0, 1],
//         transformOrigin: ['40px 40px 0px', '40px 40px 0px'],
//         //   transform: translate(-1px, 50px) scale(0.9);
//         // transform-origin: 40px 40px;
//       });
//       tl.add({
//         targets: $js,
//         translateX: 486,
//         duration: 800,
//       });
//       tl.add({
//         targets: $chars,
//         delay: anime.stagger(40),
//         opacity: {
//           value: [0, 1],
//           duration: 200,
//         },
//         scale: {
//           value: [0.4, 1],
//           duration: 800,
//         },
//         rotate: {
//           value: ['120deg', '0deg'],
//           duration: 400,
//         },
//         translateX: {
//           value: [200, 0],
//           duration: 300,
//         },
//         translateY: {
//           value: [30, 0],
//           duration: 100,
//         },
//       }, '-=800')
//       tl.add({
//         targets: '.hover a',
//         delay: anime.stagger(40),
//         opacity: 0,
//       }, 1)
//     }
//     function hover() {
//       const $a = document.querySelectorAll('.hover a');
//       const $base = document.querySelector('.base');
//       const $names = [...document.querySelectorAll('.intro__list li')];
//       [...$a].forEach((link, index) => {
//         link.addEventListener('mouseenter', () => onMouseEnter(link, index));
//         link.addEventListener('mouseleave', () => onMouseLeave(link, index));
//       });
//       function onMouseEnter(link, index) {
//         anime.remove(link);
//         anime.remove($base);
//         // anime({
//         //   targets: $names,
//         //   opacity: 0,
//         //   translateY: -30,
//         //   easing: 'easeOutExpo',
//         //   duration: 400,
//         // })
//         anime.remove($names[index]);
//         anime({
//           targets: $names[index],
//           opacity: [0, 1],
//           translateY: [30, 0],
//           easing: 'easeOutExpo',
//           duration: 400,
//         })
//         anime({
//           targets: link,
//           opacity: 1,
//           easing: 'easeOutExpo',
//           duration: 400,
//         });
//         anime({
//           targets: $base,
//           stroke: '#E3E3E3',
//           easing: 'easeOutExpo',
//           duration: 400,
//         });
//       }
//       function onMouseLeave(e) {
//         anime.remove($a);
//         anime.remove($base);
//         anime({
//           targets: $names,
//           opacity: 0,
//           translateY: -30,
//           easing: 'easeOutExpo',
//           duration: 400,
//         })
//         anime({
//           targets: $a,
//           opacity: 0,
//           easing: 'easeOutExpo',
//           duration: 400,
//         });
//         anime({
//           targets: $base,
//           stroke: '#2E5BDC',
//           easing: 'easeOutExpo',
//           duration: 400,
//         });
//       }
//     }
//     hover();
//     // animate();
//   }
//   destroy() {
//     $on(this.$logoSvg, 'mouseenter', this.onEnterLogo);
//     $on(this.$logoSvg, 'mouseleave', this.onLeaveLogo);
//   }
//   onEnterLogo() {
//     this.$logoSvg.classList.add('gray');
//   }
//   onLeaveLogo() {
//     this.$logoSvg.classList.remove('gray');
//   }
// }

/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__source_js_connectionDB__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_firebase_app__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_firebase_app__);



class Form extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    const dragEvents = ['dragenter', 'dragover', 'dragleave', 'drop'];
    this.url = 'https://hooks.slack.com/services/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';
    this.file = [];
    dragEvents.forEach(e => {
      this.$refs.dropArea.addEventListener(e, this.preventDefaults.bind(this), false);
    });
    ['dragenter', 'dragover', 'drop'].forEach(e => {
      this.$refs.dropArea.addEventListener(e, this.highlight.bind(this), false);
    });
    ['dragleave'].forEach(e => {
      this.$refs.dropArea.addEventListener(e, this.unhighlight.bind(this), false);
    });
    this.$refs.dropArea.addEventListener('drop', this.handleDrop.bind(this), false);
    this.$refs.dropArea.addEventListener('click', () => {
      this.onDropAreaClick();
    });
    this.$refs.pictureFile.addEventListener('input', () => {
      this.file = this.$refs.pictureFile.files[0]; // eslint-disable-line prefer-destructuring

      this.$refs.pictureName.innerHTML = this.file.name;
      this.highlight();
    });
    Array.prototype.forEach.call(this.$el.elements, input => {
      input.addEventListener('input', () => {
        this.checkInputs();
      });
    });
  }

  onClick() {
    // eslint-disable-line class-methods-use-this
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('modal:focused');
  }

  onSubmit(e) {
    e.preventDefault();

    if (this.formValidation()) {
      // Check if the form has been completed correctly
      this.$refs.inputs.classList.add('is-hidden');
      __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('spinner:start');
      this.unhighlight();
      Form.uploadFile(this.file) // Store the picture in Firebase Cloud and the info in Firestore
      .then(downloadURL => {
        this.createShowcase(downloadURL);
      }) // Loader to wait the response
      .then(() => {
        __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('spinner:stop');
      }) // Handle success with feedback
      .then(() => {
        this.$refs.succeed.classList.add('is-active');
        setTimeout(() => {
          this.$refs.succeed.classList.remove('is-active');
          this.resetValues();
          __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('modal:close');
          this.$refs.inputs.classList.remove('is-hidden');
        }, 2000);
      }) // Handle error with feedback
      .catch(err => {
        console.error(err);
        __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('spinner:stop');
        this.$refs.failed.classList.add('is-active');
        this.$refs.failed.innerHTML = err.message;
        setTimeout(() => {
          this.$refs.failed.classList.remove('is-active');
          __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('modal:close');
          this.$refs.inputs.classList.remove('is-hidden');
        }, 5000);
      });
    }
  }

  static uploadFile(file) {
    return new Promise((resolve, reject) => {
      const storageRef = __WEBPACK_IMPORTED_MODULE_2_firebase_app___default.a.storage().ref().child("showcases/".concat(file.name));
      const uploadTask = storageRef.put(file);
      uploadTask.on('state_changed', snapshot => {
        // Observe state change events such as progress, pause, and resume
        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
        // var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        // console.log('Upload is ' + progress + '% done');
        switch (snapshot.state) {
          case __WEBPACK_IMPORTED_MODULE_2_firebase_app___default.a.storage.TaskState.PAUSED:
            // Or 'paused'
            console.log('Upload is paused');
            break;

          case __WEBPACK_IMPORTED_MODULE_2_firebase_app___default.a.storage.TaskState.RUNNING:
            // Or 'running'
            console.log('Upload is running');
            break;

          default:
        }
      }, error => {
        // Handle unsuccessful uploads
        console.error(error);
        reject(error);
      }, () => {
        // Handle successful uploads on complete
        // For instance, get the download URL: https://firebasestorage.googleapis.com/...
        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {
          console.log('File available at', downloadURL);
          resolve(downloadURL);
        });
      });
    });
  }

  createShowcase(downloadURL) {
    return __WEBPACK_IMPORTED_MODULE_1__source_js_connectionDB__["a" /* default */].collection('showcases').add({
      authorName: this.$refs.authorName.value,
      authorUrl: this.$refs.authorUrl.value,
      isValidated: false,
      pictureUrl: downloadURL,
      siteName: this.$refs.siteName.value,
      siteUrl: this.$refs.siteUrl.value,
      dateCreation: new __WEBPACK_IMPORTED_MODULE_2_firebase_app___default.a.firestore.Timestamp.now() // eslint-disable-line new-cap

    });
  }

  resetValues() {
    this.$refs.authorName.value = '';
    this.$refs.authorUrl.value = '';
    this.$refs.dropArea.value = '';
    this.$refs.pictureFile.value = '';
    this.$refs.pictureName.innerHTML = 'No file submitted';
    this.$refs.siteName.value = '';
    this.$refs.siteUrl.value = '';
    this.file = [];
  }

  preventDefaults(e) {
    // eslint-disable-line class-methods-use-this
    e.preventDefault();
    e.stopPropagation();
  }

  highlight() {
    this.$refs.dropArea.classList.add('highlight');
  }

  unhighlight() {
    this.$refs.dropArea.classList.remove('highlight');
  }

  handleDrop(e) {
    const dt = e.dataTransfer;
    this.file = dt.files[0]; // eslint-disable-line prefer-destructuring

    this.checkInputs();
    this.$refs.pictureName.innerHTML = this.file.name;
  }

  onDropAreaClick() {
    this.$refs.pictureFile.click();
  }

  checkInputs() {
    if (this.$refs.authorName.value && this.$refs.siteName.value && this.$refs.siteUrl.value && this.file.length !== 0) {
      this.$el.classList.remove('is-invalid');
      return true;
    }

    this.$el.classList.add('is-invalid');
    return false;
  }

  formValidation() {
    const urlPattern = /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/; // Picture

    if (this.file.length === 0 || this.file.size > 2100000 || this.file.type !== 'image/jpeg' && this.file.type !== 'image/png' && this.file.type !== 'image/gif') {
      console.error('Invalid image, please respect indications');
      return false;
    } else if ( // Site Name
    typeof this.$refs.siteName.value !== 'string' && this.$refs.siteName.value.length < 2 && this.$refs.siteName.value.length > 64) {
      console.error('Invalid site name, it should be between 2 and 64 characters');
      return false;
    } else if ( // Site Url
    urlPattern.test(this.$refs.siteUrl.value) === false) {
      console.error('Invalid site url');
      return false;
    } else if ( // Author Name
    typeof this.$refs.authorName.value !== 'string' && this.$refs.authorName.value.length < 2 && this.$refs.authorName.value.length > 64) {
      console.error('Invalid author name, it should be between 2 and 64 characters');
      return false;
    } else if ( // Author Url
    this.$refs.authorUrl.value && urlPattern.test(this.$refs.authorUrl.value) === false) {
      console.error('Invalid author url');
      return false;
    }

    return true;
  }

}
/* harmony export (immutable) */ __webpack_exports__["default"] = Form;


/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

class Modal extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    this.delegateClick = [this.$refs.overlay, this.$refs.close]; // Close modal if click on escape keypress

    this.$el.addEventListener('keydown', e => {
      if (e.key === 'Escape' || e.keyCode === 27) {
        this.close();
      }
    });
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].on('modal:open', this.open.bind(this));
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].on('modal:close', this.close.bind(this));
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].on('modal:focused', this.isFocused.bind(this));
  }

  onClick() {
    this.close();
  }

  isFocused() {
    this.$refs.close.classList.add('is-open');
  }

  open() {
    this.$el.classList.add('is-open');
  }

  close() {
    this.$el.classList.remove('is-open');
    this.$refs.close.classList.remove('is-open');
  }

}
/* harmony export (immutable) */ __webpack_exports__["default"] = Modal;


/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

class ShowcaseCta extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    this.delegateClick = 'button';
  } // eslint-disable-next-line class-methods-use-this


  onClick() {
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].emit('modal:open');
  }

}
/* harmony export (immutable) */ __webpack_exports__["default"] = ShowcaseCta;


/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__source_js_connectionDB__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ejs_compiled_loader_showcase_item_ejs__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ejs_compiled_loader_showcase_item_ejs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_ejs_compiled_loader_showcase_item_ejs__);



/* harmony default export */ __webpack_exports__["default"] = (class extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    __WEBPACK_IMPORTED_MODULE_1__source_js_connectionDB__["a" /* default */].collection('showcases').where('isValidated', '==', true).orderBy('dateCreation', 'desc').get().then(snapshot => {
      snapshot.docs.forEach(doc => {
        this.$el.innerHTML += __WEBPACK_IMPORTED_MODULE_2_ejs_compiled_loader_showcase_item_ejs___default()(doc);
      });
    });
  }

});

/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_spin_js__ = __webpack_require__(141);


const opts = {
  lines: 5,
  // The number of lines to draw
  length: 32,
  // The length of each line
  width: 17,
  // The line thickness
  radius: 0,
  // The radius of the inner circle
  scale: 1.2,
  // Scales overall size of the spinner
  corners: 0,
  // Corner roundness (0..1)
  color: 'white',
  // CSS color or array of colors
  fadeColor: 'transparent',
  // CSS color or array of colors
  speed: 1.2,
  // Rounds per second
  rotate: 0,
  // The rotation offset
  animation: 'spinner-line-fade-quick',
  // The CSS animation name for the lines
  direction: 1,
  // 1: clockwise, -1: counterclockwise
  zIndex: 2e9,
  // The z-index (defaults to 2000000000)
  className: 'spinner',
  // The CSS class to assign to the spinner
  top: '50%',
  // Top position relative to parent
  left: '50%',
  // Left position relative to parent
  shadow: '0 0 1px transparent',
  // Box-shadow for the lines
  position: 'absolute' // Element positioning

};
class LoaderSpinner extends __WEBPACK_IMPORTED_MODULE_0_kapla__["Component"] {
  load() {
    this.spinner = new __WEBPACK_IMPORTED_MODULE_1_spin_js__["a" /* Spinner */](opts);
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].on('spinner:start', this.start.bind(this));
    __WEBPACK_IMPORTED_MODULE_0_kapla__["ee"].on('spinner:stop', this.stop.bind(this));
  }

  start() {
    this.spinner.spin(this.$el);
    this.$el.classList.add('is-active');
  }

  stop() {
    this.spinner.stop();
    this.$el.classList.remove('is-active');
  }

}
/* harmony export (immutable) */ __webpack_exports__["default"] = LoaderSpinner;


/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isEqual__ = __webpack_require__(135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isEqual___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_isEqual__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_kapla__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/**
 * Intersection observer custom event
 * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API
 *
 * Options:
 *    - {HTMLElement} [root=null]
 *    - {string} [rootMargin='0px 0px 0px 0px']
 *    - {number|array} [threshold=[0, 1]]
 *        - 0 = as soon as even one pixel is visible, the callback will be run
 *        - 1 = threshold isn't considered passed until every pixel is visible
 *    - {boolean} [once=false] - removed when once inViewport
 * Call `onAppear` with following params:
 *    - {boolean} isInViewport
 *    - {boolean} isFullyInViewport
 *    - {string} position (center, top, bottom)
 *
 * @class MyEvent
 * @extends {CustomEvent}
 */

class MyEvent extends __WEBPACK_IMPORTED_MODULE_1_kapla__["CustomEvent"] {
  constructor() {
    super(...arguments);
    this.scope = 'global';
    this.log = true;
    this.observers = new Set();
    this.elementsByObserver = new __WEBPACK_IMPORTED_MODULE_1_kapla__["Multimap"]();
    this.onceByElement = new Map();
  }

  bind(component, ee, opts) {
    const {
      element
    } = component.context;

    const options = _objectSpread({
      root: null,
      rootMargin: '0px 0px 0px 0px',
      threshold: [0, 1],
      once: false
    }, opts);

    const observer = this.createObserver(options, element);
    this.onceByElement.set(element, options.once);
    this.eventByElement.set(element, this.callback(component));
    observer.observe(element);
  }

  createObserver(options, element) {
    const existingObserver = this.getObserverByOptions(options);

    if (existingObserver) {
      if (!this.getObserverByElement(element)) {
        this.addObserver(existingObserver, element);
      }

      return existingObserver;
    }

    const newObserver = new IntersectionObserver(this.intersected.bind(this), options);
    this.addObserver(newObserver, element);
    return newObserver;
  }

  getObserverByOptions(options) {
    const thresholds = Array.isArray(options.threshold) ? options.threshold : [options.threshold];
    return Array.from(this.observers).find(observer => observer.root === options.root && observer.rootMargin === options.rootMargin && __WEBPACK_IMPORTED_MODULE_0_lodash_isEqual___default()(observer.thresholds, thresholds));
  }

  getObserverByElement(element) {
    return this.elementsByObserver.getKeysForValue(element)[0];
  }

  addObserver(observer, element) {
    this.observers.add(observer);
    this.elementsByObserver.add(observer, element);
  }

  removeObserver(observer, element) {
    this.elementsByObserver.delete(observer, element);

    if (this.elementsByObserver.getValuesForKey(observer) === 0) {
      this.observers.delete(observer);
    }
  }

  unobserve(element) {
    const existingObserver = this.getObserverByElement(element);
    existingObserver.unobserve(element);
    this.removeObserver(existingObserver, element);
  }

  unbind(component) {
    const {
      element
    } = component.context;
    this.unobserve(element);
  }

  intersected(entries) {
    entries.forEach(entry => {
      const element = entry.target;
      let isInViewport = false;
      let isFullyInViewport = false;

      if (entry.isIntersecting) {
        isInViewport = true;

        if (entry.intersectionRatio >= 1) {
          isFullyInViewport = true;
        } else {
          isFullyInViewport = false;
        }
      } else {
        isInViewport = false;
        isFullyInViewport = false;
      }

      const isBeforeViewport = entry.boundingClientRect.top < entry.rootBounds.top;
      const isAfterViewport = entry.boundingClientRect.top + entry.boundingClientRect.height > entry.rootBounds.top + entry.rootBounds.height;
      let position = 'center';

      if (isBeforeViewport) {
        position = 'top';
      } else if (isAfterViewport) {
        position = 'bottom';
      }

      this.eventByElement.get(element)(isInViewport, isFullyInViewport, position);

      if (isInViewport && this.onceByElement.get(element)) {
        this.unobserve(element);
      }
    });
  }

  callback(component) {
    // eslint-disable-line class-methods-use-this
    return function callback(isInViewport, isFullyInViewport, position) {
      component.onAppear(isInViewport, isFullyInViewport, position);
    };
  }

}

const appear = new MyEvent('appear');
/* harmony export (immutable) */ __webpack_exports__["a"] = appear;


/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

/**
 * RequestAnimationFrame custom event
 *
 * Call `onRaf` with following params:
 *    - {number} now (milliseconds)
 *    - {number} delta (milliseconds)
 *
 * @class MyEvent
 * @extends {CustomEvent}
 */

class MyEvent extends __WEBPACK_IMPORTED_MODULE_0_kapla__["CustomEvent"] {
  constructor() {
    super(...arguments);
    this.scope = 'global';
    this.log = false;
  }

  bind(component, ee) {
    const {
      element
    } = component.context;
    this.ee = ee;
    this.eventByElement.set(element, this.callback(component));
    this.ee.on('raf', this.eventByElement.get(element));
    this.onTick = this.onTick.bind(this);
    this.time = window.performance.now();
    this.raf = window.requestAnimationFrame(this.onTick);
  }

  unbind(component, ee) {
    ee.off('raf', this.eventByElement.get(component.context.element));
    window.cancelAnimationFrame(this.raf);
  }

  onTick(now) {
    this.time = now;
    this.delta = (now - this.oldTime) / 1000;
    this.oldTime = now;
    this.ee.emit('raf', this.delta, now);
    this.raf = window.requestAnimationFrame(this.onTick);
  }

  callback(component) {
    // eslint-disable-line class-methods-use-this
    return function callback(delta, now) {
      component.onRaf(delta, now);
    };
  }

}

const raf = new MyEvent('raf');
/* harmony export (immutable) */ __webpack_exports__["a"] = raf;


/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_verge__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_verge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_verge__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_kapla__);


/**
 * Window resize custom event
 *
 * Call `onResize` with following params:
 *    - {number} width
 *    - {number} height
 *    - {number} ratio (width / heigth)
 *
 * @class MyEvent
 * @extends {CustomEvent}
 */

class MyEvent extends __WEBPACK_IMPORTED_MODULE_1_kapla__["CustomEvent"] {
  constructor() {
    super(...arguments);
    this.scope = 'global';
    this.log = true;
  }

  bind(component, ee) {
    const {
      element
    } = component.context;
    this.eventByElement.set(element, this.callback(component, ee));
    window.addEventListener('resize', this.eventByElement.get(element));
  }

  unbind(component) {
    const {
      element
    } = component.context;
    window.removeEventListener('resize', this.eventByElement.get(element));
  }

  callback(component, ee) {
    // eslint-disable-line class-methods-use-this
    return function callback() {
      const width = __WEBPACK_IMPORTED_MODULE_0_verge___default.a.viewportW();
      const height = __WEBPACK_IMPORTED_MODULE_0_verge___default.a.viewportH();
      const ratio = width / height;
      ee.emit('resize', width, height, ratio);
      component.onResize(width, height, ratio);
    };
  }

}

const resize = new MyEvent('resize');
/* harmony export (immutable) */ __webpack_exports__["a"] = resize;


/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_kapla__);

/**
 * Window scroll custom event
 *
 * Call `onScroll` with following params:
 *    - {number} scrollX
 *    - {number} scrollY
 *
 * @class MyEvent
 * @extends {CustomEvent}
 */

class MyEvent extends __WEBPACK_IMPORTED_MODULE_0_kapla__["CustomEvent"] {
  constructor() {
    super(...arguments);
    this.scope = 'global';
    this.log = false;
  }

  bind(component) {
    const {
      element
    } = component.context;
    this.eventByElement.set(element, this.callback(component));
    window.addEventListener('scroll', this.eventByElement.get(element));
  }

  unbind(component) {
    const {
      element
    } = component.context;
    window.removeEventListener('scroll', this.eventByElement.get(element));
  }

  callback(component) {
    // eslint-disable-line class-methods-use-this
    return function callback() {
      component.onScroll(window.scrollX, window.scrollY);
    };
  }

}

const scroll = new MyEvent('scroll');
/* harmony export (immutable) */ __webpack_exports__["a"] = scroll;


/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__barba_core__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__barba_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__barba_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__barba_router__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__barba_router___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__barba_router__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_kapla__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_kapla___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_kapla__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transitions_routes__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__transitions_default__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__transitions_homeToFeature__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__transitions_featureToFeature__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__transitions_featureToHome__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__transitions_onceHome__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__transitions_onceFeature__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__transitions_docToDoc__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__events__ = __webpack_require__(47);








 // DEV
// import homeToPage from './transitions/homeToPage'
// import featureToPage from './transitions/featureToPage'
// import pageToPage from './transitions/pageToPage'
// import pageToHome from './transitions/pageToHome'
// import pageToFeature from './transitions/pageToFeature'



 // Views are not really needed with Kapla…
// import Home from './views/Home';
// Events


/*
 * Main Class
 */

class Main {
  static start() {
    return new Main();
  }

  constructor() {
    Promise.all([Main.domReady()]).then(this.init.bind(this));
  }

  static domReady() {
    return new Promise(resolve => {
      document.addEventListener('DOMContentLoaded', resolve);
    });
  }

  static showPage() {
    document.documentElement.classList.add('ready');
  } // eslint-disable-next-line class-methods-use-this


  init() {
    // Init polyfills
    // polyfills.init();
    // Avoid 'blank page' on JS error
    try {
      // DEV
      __WEBPACK_IMPORTED_MODULE_0__barba_core___default.a.use(__WEBPACK_IMPORTED_MODULE_1__barba_router___default.a, {
        routes: __WEBPACK_IMPORTED_MODULE_4__transitions_routes__["a" /* default */]
      });
      __WEBPACK_IMPORTED_MODULE_0__barba_core___default.a.init({
        debug: true,
        transitions: [__WEBPACK_IMPORTED_MODULE_5__transitions_default__["a" /* default */], __WEBPACK_IMPORTED_MODULE_6__transitions_homeToFeature__["a" /* default */], __WEBPACK_IMPORTED_MODULE_7__transitions_featureToFeature__["a" /* default */], __WEBPACK_IMPORTED_MODULE_8__transitions_featureToHome__["a" /* default */], // DEV
        // homeToPage,
        // featureToPage,
        // pageToHome,
        // pageToFeature,
        // pageToPage,
        __WEBPACK_IMPORTED_MODULE_11__transitions_docToDoc__["a" /* default */], __WEBPACK_IMPORTED_MODULE_9__transitions_onceHome__["a" /* default */], __WEBPACK_IMPORTED_MODULE_10__transitions_onceFeature__["a" /* default */]]
      });
      __WEBPACK_IMPORTED_MODULE_0__barba_core___default.a.hooks.before(() => {
        document.documentElement.classList.add('transitioning');
      });
      __WEBPACK_IMPORTED_MODULE_0__barba_core___default.a.hooks.after(() => {
        document.documentElement.classList.remove('transitioning');
      }); // Kapla

      const context = __webpack_require__(56); // 1. Register events


      __WEBPACK_IMPORTED_MODULE_3__app__["a" /* default */].use('appear', __WEBPACK_IMPORTED_MODULE_12__events__["a" /* appear */]);
      __WEBPACK_IMPORTED_MODULE_3__app__["a" /* default */].use('raf', __WEBPACK_IMPORTED_MODULE_12__events__["b" /* raf */]);
      __WEBPACK_IMPORTED_MODULE_3__app__["a" /* default */].use('resize', __WEBPACK_IMPORTED_MODULE_12__events__["c" /* resize */]);
      __WEBPACK_IMPORTED_MODULE_3__app__["a" /* default */].use('scroll', __WEBPACK_IMPORTED_MODULE_12__events__["d" /* scroll */]); // 2. Register components
      // Auto loading

      __WEBPACK_IMPORTED_MODULE_3__app__["a" /* default */].load(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_kapla__["autoLoad"])(context));
    } catch (err) {
      console.error(err);
    }

    Main.showPage();
  }

}

Main.start();

/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (['dependency-free', 'small-size', 'core', 'router', 'prefetch', 'about']);

/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Deferred
 * Return a special promises, where it exposes the resolve and reject as methods.
 *
 * example:
 *  function exampleDfd() {
 *    const dfd = deferred();
 *    window.setTimeout(dfd.resolve, 3000);
 *    return dfd.promise;
 *  }
 *
 * @returns {Promise} promise
 */
/* harmony default export */ __webpack_exports__["a"] = (() => {
  let _resolve = undefined;
  let _reject = undefined;
  const promise = new Promise((resolve, reject) => {
    _resolve = resolve;
    _reject = reject;
  });
  promise.resolve = _resolve;
  promise.reject = _reject;
  return promise;
});

/***/ }),
/* 163 */
/***/ (function(module, exports) {

module.exports = function anonymous(locals, filters, escape, rethrow) {
    escape = escape || function(html) {
        return String(html).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;").replace(/"/g, "&quot;");
    };
    var __stack = {
        lineno: 1,
        input: '<svg viewBox="<%= viewbox %>" aria-hidden="<%= hidden %>" class="icon<%- icon.match(/^barba/) ? \'--barba\' : \'\' %>">\n  <!-- <use attr.xlink:href="assets/svg/sprite.svg#<%= icon %>"></use> -->\n  <use xlink:href="#<%= icon %>"></use>\n</svg>',
        filename: "."
    };
    function rethrow(err, str, filename, lineno) {
        var lines = str.split("\n"), start = Math.max(lineno - 3, 0), end = Math.min(lines.length, lineno + 3);
        var context = lines.slice(start, end).map(function(line, i) {
            var curr = i + start + 1;
            return (curr == lineno ? " >> " : "    ") + curr + "| " + line;
        }).join("\n");
        err.path = filename;
        err.message = (filename || "ejs") + ":" + lineno + "\n" + context + "\n\n" + err.message;
        throw err;
    }
    try {
        var buf = [];
        with (locals || {}) {
            (function() {
                buf.push('<svg viewBox="', escape((__stack.lineno = 1, viewbox)), '" aria-hidden="', escape((__stack.lineno = 1, hidden)), '" class="icon', (__stack.lineno = 1, icon.match(/^barba/) ? "--barba" : ""), '">\n  <!-- <use attr.xlink:href="assets/svg/sprite.svg#', escape((__stack.lineno = 2, icon)), '"></use> -->\n  <use xlink:href="#', escape((__stack.lineno = 3, icon)), '"></use>\n</svg>');
            })();
        }
        return buf.join("");
    } catch (err) {
        rethrow(err, __stack.input, __stack.filename, __stack.lineno);
    }
}

/***/ }),
/* 164 */
/***/ (function(module, exports) {

module.exports = function anonymous(locals, filters, escape, rethrow) {
    escape = escape || function(html) {
        return String(html).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;").replace(/"/g, "&quot;");
    };
    var __stack = {
        lineno: 1,
        input: '<img class="partial-image" src="<%- src %>" alt="<%- alt %>">\n',
        filename: "."
    };
    function rethrow(err, str, filename, lineno) {
        var lines = str.split("\n"), start = Math.max(lineno - 3, 0), end = Math.min(lines.length, lineno + 3);
        var context = lines.slice(start, end).map(function(line, i) {
            var curr = i + start + 1;
            return (curr == lineno ? " >> " : "    ") + curr + "| " + line;
        }).join("\n");
        err.path = filename;
        err.message = (filename || "ejs") + ":" + lineno + "\n" + context + "\n\n" + err.message;
        throw err;
    }
    try {
        var buf = [];
        with (locals || {}) {
            (function() {
                buf.push('<img class="partial-image" src="', (__stack.lineno = 1, src), '" alt="', (__stack.lineno = 1, alt), '">\n');
            })();
        }
        return buf.join("");
    } catch (err) {
        rethrow(err, __stack.input, __stack.filename, __stack.lineno);
    }
}

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function anonymous(locals, filters, escape, rethrow) {
    escape = escape || function(html) {
        return String(html).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;").replace(/"/g, "&quot;");
    };
    var __stack = {
        lineno: 1,
        input: '<li class="grid__item showcase__card" data-id="<%- id %>">\n\n  <div class="showcase__card__picture">\n    <a href="<%- data().siteUrl %>" target="_blank" rel="noopener noreferrer">\n\n      <%- require(\'ejs-compiled-loader!../common/image.ejs\')({\n        src: data().pictureUrl,\n        alt: data().siteName,\n      }) %>\n    </a>\n  </div>\n\n  <div class=" showcase__card__footer">\n    <div>\n\n      <a href="<%- data().siteUrl %>" target="_blank">\n        <h2 class="showcase__card__footer__title"><%- data().siteName %></h2>\n      </a>\n\n      <% if (data().authorUrl) { %>\n      <a href="<%- data().authorUrl %>" target="_blank">\n        <% }; %>\n        <h3 class="showcase__card__footer__author"><%- data().authorName %></h3>\n        <% if (data().authorUrl) { %>\n      </a>\n      <% }; %>\n\n    </div>\n    <a class="grid__item__link link--view" target="_blank" href="<%- data().siteUrl %>">\n      View\n      <%- require(\'ejs-compiled-loader!../common/icon.ejs\')({\n        icon: \'barba-external\',\n        hidden: true,\n        viewbox: \'0 0 15 15\',\n      }) %>\n    </a>\n  </div>\n\n</li>\n',
        filename: "."
    };
    function rethrow(err, str, filename, lineno) {
        var lines = str.split("\n"), start = Math.max(lineno - 3, 0), end = Math.min(lines.length, lineno + 3);
        var context = lines.slice(start, end).map(function(line, i) {
            var curr = i + start + 1;
            return (curr == lineno ? " >> " : "    ") + curr + "| " + line;
        }).join("\n");
        err.path = filename;
        err.message = (filename || "ejs") + ":" + lineno + "\n" + context + "\n\n" + err.message;
        throw err;
    }
    try {
        var buf = [];
        with (locals || {}) {
            (function() {
                buf.push('<li class="grid__item showcase__card" data-id="', (__stack.lineno = 1, id), '">\n\n  <div class="showcase__card__picture">\n    <a href="', (__stack.lineno = 4, data().siteUrl), '" target="_blank" rel="noopener noreferrer">\n\n      ', (__stack.lineno = 6, __webpack_require__(164)({
                    src: data().pictureUrl,
                    alt: data().siteName
                })), '\n    </a>\n  </div>\n\n  <div class=" showcase__card__footer">\n    <div>\n\n      <a href="', (__stack.lineno = 16, data().siteUrl), '" target="_blank">\n        <h2 class="showcase__card__footer__title">', (__stack.lineno = 17, data().siteName), "</h2>\n      </a>\n\n      ");
                __stack.lineno = 20;
                if (data().authorUrl) {
                    buf.push('\n      <a href="', (__stack.lineno = 21, data().authorUrl), '" target="_blank">\n        ');
                    __stack.lineno = 22;
                }
                buf.push('\n        <h3 class="showcase__card__footer__author">', (__stack.lineno = 23, data().authorName), "</h3>\n        ");
                __stack.lineno = 24;
                if (data().authorUrl) {
                    buf.push("\n      </a>\n      ");
                    __stack.lineno = 26;
                }
                buf.push('\n\n    </div>\n    <a class="grid__item__link link--view" target="_blank" href="', (__stack.lineno = 29, data().siteUrl), '">\n      View\n      ', (__stack.lineno = 31, __webpack_require__(163)({
                    icon: "barba-external",
                    hidden: true,
                    viewbox: "0 0 15 15"
                })), "\n    </a>\n  </div>\n\n</li>\n");
            })();
        }
        return buf.join("");
    } catch (err) {
        rethrow(err, __stack.input, __stack.filename, __stack.lineno);
    }
}

/***/ }),
/* 166 */
/***/ (function(module, exports) {

module.exports = {"v":"5.5.8","fr":30,"ip":0,"op":300,"w":1920,"h":1080,"nm":"01 Illustration main 2","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Cube 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":107,"s":[-159,-19,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":149.997,"s":[837,549,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":171.271,"s":[837,549,0],"to":[0,0,0],"ti":[0,0,0]},{"t":214.2685546875,"s":[1989,1217,0]}],"ix":2},"a":{"a":0,"k":[0.018,15.882,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[29.622,40.036],[-69.148,-17.154],[-29.618,-40.034],[69.152,17.156]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-49.387,-5.701],[49.383,51.469],[49.383,5.719],[-49.387,-51.471]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.719,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 15","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.789,-11.433],[-19.789,34.317],[19.791,11.447],[19.731,-34.313]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.312,35.734],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 14","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":125,"op":195,"st":93.5,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Cube 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":109,"s":[-283,-91,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":152,"s":[713,477,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":178.05,"s":[713,477,0],"to":[0,0,0],"ti":[0,0,0]},{"t":221.046875,"s":[1865,1145,0]}],"ix":2},"a":{"a":0,"k":[-0.014,15.909,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.525,0.003],[0.005,22.873],[39.525,0.003],[-0.005,-22.877]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 10","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.764,11.456],[19.766,34.316],[19.766,-11.434],[-19.764,-34.314]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 12","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.791,11.446],[-19.789,34.316],[-19.789,-11.434],[19.731,-34.314]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.688,23.875],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 11","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":129,"op":205,"st":93.5,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Cube 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":37.5,"s":[-159,-19,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":80.497,"s":[837,549,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":108.271,"s":[837,549,0],"to":[0,0,0],"ti":[0,0,0]},{"t":151.2685546875,"s":[1989,1217,0]}],"ix":2},"a":{"a":0,"k":[0.018,15.882,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[29.622,40.036],[-69.148,-17.154],[-29.618,-40.034],[69.152,17.156]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-49.387,-5.701],[49.383,51.469],[49.383,5.719],[-49.387,-51.471]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.719,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 15","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.789,-11.433],[-19.789,34.317],[19.791,11.447],[19.731,-34.313]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.312,35.734],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 14","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":56,"op":132,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Cube 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":40,"s":[-283,-91,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":82.997,"s":[713,477,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":115.549,"s":[713,477,0],"to":[0,0,0],"ti":[0,0,0]},{"t":158.5458984375,"s":[1865,1145,0]}],"ix":2},"a":{"a":0,"k":[-0.014,15.909,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.525,0.003],[0.005,22.873],[39.525,0.003],[-0.005,-22.877]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 10","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.764,11.456],[19.766,34.316],[19.766,-11.434],[-19.764,-34.314]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 12","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.791,11.446],[-19.789,34.316],[-19.789,-11.434],[19.731,-34.314]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.688,23.875],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 11","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":60,"op":142,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Mask- - 3","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[940.502,481.437,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.519,-91.514],[-79.049,-68.634],[39.511,-0.014],[79.051,-22.894]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[79.054,68.64],[39.514,91.51],[39.514,-0.01],[79.054,-22.89]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[39.521,91.514],[-79.049,22.894],[-79.049,-68.636],[39.511,-0.016]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.43900001049,0.902000010014,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":270,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Fill 7","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":14.5,"s":[940.502,609.877,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.333,"y":0.333},"t":37.5,"s":[940.502,417.877,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":214,"s":[940.502,417.877,0],"to":[0,0,0],"ti":[0,0,0]},{"t":244,"s":[940.502,609.877,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.519,-45.752],[-79.049,-22.872],[39.511,45.748],[79.051,22.868]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.43900001049,0.902000010014,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 7","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.772,34.328],[-19.768,57.198],[-19.768,-34.322],[19.772,-57.202]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.165000006557,0.600000023842,0.882000029087,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[41.125,55.625],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 8","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[59.287,80.075],[-59.283,11.455],[-59.283,-80.075],[59.277,-11.455]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.219999998808,0.819999992847,0.944999992847,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,39.688],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 9","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":270,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"shadow 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":15,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":240.5,"s":[5]},{"t":250.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[857.665,513.737,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[19.772,22.879],[19.772,-22.881],[19.772,22.879],[-19.768,-0.001],[19.772,-22.881],[19.772,22.879],[-19.768,-0.001]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":270,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"shadow","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":15,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":240.5,"s":[10]},{"t":255.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[940,545.502,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":0,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.519,-45.752],[-79.049,-22.872],[-76.409,-20.492],[-36.869,-43.372]],"c":true}]},{"i":{"x":0.833,"y":1},"o":{"x":0.333,"y":0},"t":15,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.519,-45.752],[-79.049,-22.872],[39.511,45.748],[79.051,22.868]],"c":true}]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":240.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.519,-45.752],[-79.049,-22.872],[39.511,45.748],[79.051,22.868]],"c":true}]},{"t":255.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.519,-45.752],[-79.049,-22.872],[-76.409,-20.492],[-36.869,-43.372]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 7","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":270,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Cube 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":116.5,"s":[2176,1142,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":159.497,"s":[1180,556,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":184.66,"s":[1180,556,0],"to":[0,0,0],"ti":[0,0,0]},{"t":227.6572265625,"s":[46,-91,0]}],"ix":2},"a":{"a":0,"k":[-0.013,15.876,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.509,-0.005],[-0.009,22.885],[39.511,0.005],[0.011,-22.885]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 4","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.752,34.319],[-19.748,11.439],[-19.748,-34.321],[19.752,-11.431]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 6","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.789,-11.433],[-19.789,34.317],[19.791,11.447],[19.731,-34.313]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.688,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 5","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":136,"op":211,"st":93.5,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Cube 9","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":114,"s":[2052,1071,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":156.997,"s":[1056,485,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":182.16,"s":[1056,485,0],"to":[0,0,0],"ti":[0,0,0]},{"t":225.1572265625,"s":[-78,-162,0]}],"ix":2},"a":{"a":0,"k":[0,15.892,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[29.647,40.023],[-69.163,-17.147],[-29.643,-40.027],[69.167,17.153]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[49.398,51.467],[-49.402,-5.693],[-49.402,-51.463],[49.398,5.717]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 3","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.791,11.446],[-19.789,34.316],[-19.789,-11.434],[19.731,-34.314]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.312,35.75],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 2","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":132,"op":205,"st":93.5,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Cube 8","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":47,"s":[2176,1142,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":89.997,"s":[1180,556,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":120.16,"s":[1180,556,0],"to":[0,0,0],"ti":[0,0,0]},{"t":163.1572265625,"s":[46,-91,0]}],"ix":2},"a":{"a":0,"k":[-0.013,15.876,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.509,-0.005],[-0.009,22.885],[39.511,0.005],[0.011,-22.885]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 4","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.752,34.319],[-19.748,11.439],[-19.748,-34.321],[19.752,-11.431]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 6","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.789,-11.433],[-19.789,34.317],[19.791,11.447],[19.731,-34.313]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.688,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 5","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":66,"op":146,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Cube 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":44.5,"s":[2052,1071,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"t":87.497,"s":[1056,485,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.277,"y":1},"o":{"x":0.707,"y":0},"t":117.66,"s":[1056,485,0],"to":[0,0,0],"ti":[0,0,0]},{"t":160.6572265625,"s":[-78,-162,0]}],"ix":2},"a":{"a":0,"k":[0,15.892,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[29.647,40.023],[-69.163,-17.147],[-29.643,-40.027],[69.167,17.153]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[49.398,51.467],[-49.402,-5.693],[-49.402,-51.463],[49.398,5.717]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.812],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 3","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.791,11.446],[-19.789,34.316],[-19.789,-11.434],[19.731,-34.314]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.21960799396,0.819607973099,0.945097982883,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.312,35.75],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 2","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":62,"op":141,"st":0,"bm":0}],"markers":[]}

/***/ }),
/* 167 */
/***/ (function(module, exports) {

module.exports = {"v":"5.5.8","fr":30,"ip":0,"op":240,"w":1920,"h":1080,"nm":"02 Illustration main 2","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Mask - 1","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":180.5,"s":[960.082,555.77,0],"to":[0,0,0],"ti":[0,0,0]},{"t":210.5,"s":[960.002,-410.23,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-0.028,0.002],[-39.618,-22.818],[-0.028,-45.628],[39.562,-22.808]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-0.025,-0.001],[-0.025,45.629],[39.615,22.829],[39.565,-22.811]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.618,22.828],[-0.028,45.628],[-0.028,-0.002],[-39.618,-22.812]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.73299998045,1,0.490000009537,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Cube1","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":100,"s":[960,716,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":130,"s":[960,556,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":180.5,"s":[960,556,0],"to":[0,0,0],"ti":[0,0,0]},{"t":210.5,"s":[959.92,-410,0]}],"ix":2},"a":{"a":0,"k":[0.008,15.835,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.73299998045,1,0.490000009537,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.796,11.42],[19.794,34.22],[19.794,-11.41],[-19.796,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.375999987125,0.68599998951,0.093999996781,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.75,23.75],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 15","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.822,-11.409],[-19.822,34.221],[19.818,11.421],[19.768,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.587999999523,0.898000001907,0.301999986172,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.75,23.75],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 14","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":192,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":3,"nm":"▽ Shadow - 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[958.194,253.5,0],"ix":2},"a":{"a":0,"k":[28.125,15.972,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Shadow-dark - 1","parent":3,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":90,"s":[0]},{"t":105,"s":[5]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[42.069,183.9,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.58,-22.568],[19.58,0.002],[-19.58,22.572]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Shadow-light - 1","parent":3,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":90,"s":[0]},{"t":105,"s":[10]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[28.174,183.899,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":90,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"t":105,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Green stroke - 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1193.724,468.645,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-9.918,108.36],[49.512,74.12]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-49.508,85.543],[-9.918,108.353]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.376470588235,0.964705882353,0.658823529412,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":55,"op":76,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Mask - 2","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.677,"y":0.376},"o":{"x":0.344,"y":0},"t":63.5,"s":[1193.724,467.645,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.76,"y":0.863},"o":{"x":0.439,"y":0.152},"t":74.5,"s":[1193.695,467.693,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.747,"y":1},"o":{"x":0.424,"y":0.151},"t":141.5,"s":[1192.724,469.315,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":168,"s":[1193.724,468.645,0],"to":[0,0,0],"ti":[0,0,0]},{"t":198,"s":[1193.644,-697.355,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-49.506,-74.117],[-9.936,-51.337],[49.464,-85.557],[9.854,-108.357]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-9.918,-51.35],[-9.918,108.36],[49.512,74.12],[49.482,-85.57]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-49.508,85.543],[-9.918,108.353],[-9.918,-51.357],[-49.508,-74.117]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Cube 2","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.224,"y":1},"o":{"x":0.539,"y":0},"t":44.5,"s":[1194,798,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.81,"y":0.81},"o":{"x":0.158,"y":0.158},"t":74.5,"s":[1193,469,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":168,"s":[1193,469,0],"to":[0,0,0],"ti":[0,0,0]},{"t":198,"s":[1193.92,-698,0]}],"ix":2},"a":{"a":0,"k":[0.007,55.466,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-49.484,5.73],[-9.914,28.51],[49.486,-5.71],[9.876,-28.51]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 10","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.796,68.423],[19.794,91.233],[19.794,-68.477],[-19.796,-91.237]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-20.625,67.375],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 12","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-29.713,-62.743],[-29.713,96.967],[29.717,62.727],[29.687,-96.963]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.75,63.375],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 11","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":178,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":3,"nm":"▽ Shadow - 2","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1192.222,245.167,0],"ix":2},"a":{"a":0,"k":[34.722,20.139,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Shadow-dark - 2","parent":9,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":34.5,"s":[0]},{"t":49.5,"s":[5]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[55.307,183.895,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.641,-22.621],[19.639,-0.011],[-19.641,22.619]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Shadow-light - 2","parent":9,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":34.5,"s":[0]},{"t":49.5,"s":[10]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[34.583,187.854,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":34.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[8.836,-27.75],[48.406,-4.97],[49.486,-5.71],[9.876,-28.51]],"c":true}]},{"t":49.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-49.484,5.73],[-9.914,28.51],[49.486,-5.71],[9.876,-28.51]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 10","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Green stroke - 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1083.724,452.803,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[69.285,28.393],[-29.695,85.703]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-29.698,85.71],[-69.288,62.89]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"st","c":{"a":0,"k":[0.376470588235,0.964705882353,0.658823529412,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":31,"op":50,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"Mask - 5","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":163,"s":[1083.724,452.803,0],"to":[0,0,0],"ti":[0,0,0]},{"t":193,"s":[1083.644,-713.197,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-29.717,-5.548],[-69.287,-28.378],[29.663,-85.708],[69.253,-62.888]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[69.285,28.393],[-29.695,85.703],[-29.695,-5.567],[69.275,-62.907]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-29.698,85.71],[-69.288,62.89],[-69.288,-28.38],[-29.698,-5.57]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"Cube 3","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":20,"s":[1084,703,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[1084,453,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":163,"s":[1084,453,0],"to":[0,0,0],"ti":[0,0,0]},{"t":193,"s":[1083.92,-713,0]}],"ix":2},"a":{"a":0,"k":[-0.003,31.704,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-29.7,40.082],[-69.27,17.252],[29.68,-40.078],[69.27,-17.258]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 7","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[49.488,16.993],[-49.492,74.303],[-49.492,-16.967],[49.478,-74.307]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.75,39.625],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 8","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.794,57.046],[-19.796,34.226],[-19.796,-57.044],[19.794,-34.234]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-34.375,51.625],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 9","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":173,"st":0,"bm":0},{"ddd":0,"ind":15,"ty":3,"nm":"▽ Shadow - 3","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1081.806,181.972,0],"ix":2},"a":{"a":0,"k":[48.264,28.125,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":16,"ty":4,"nm":"Shadow-dark - 3","parent":15,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[0]},{"t":25,"s":[5]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[82.498,184.028,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-19.796,-22.838],[-19.656,-22.918],[19.794,-0.188],[19.794,-0.018],[-19.796,22.922]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":17,"ty":4,"nm":"Shadow-light - 3","parent":15,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[0]},{"t":25,"s":[10]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[48.336,195.887,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":10,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[68.22,-16.438],[28.65,-39.268],[29.68,-40.078],[69.27,-17.258]],"c":true}]},{"t":25,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-29.7,40.082],[-69.27,17.252],[29.68,-40.078],[69.27,-17.258]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 7","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":18,"ty":4,"nm":"Green stroke - 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[877.515,460.712,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-59.384,114.068],[98.976,22.798]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-98.977,91.256],[-59.387,114.076]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.376470588235,0.964705882353,0.658823529412,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":21,"op":40,"st":5,"bm":0},{"ddd":0,"ind":19,"ty":4,"nm":"Mask - 3","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":171.5,"s":[877.515,460.712,0],"to":[0,0,0],"ti":[0,0,0]},{"t":201.5,"s":[877.435,-705.288,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[59.356,-114.072],[-98.974,-22.782],[-59.404,0.048],[98.946,-91.252],[59.356,-114.072]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-59.384,0.028],[-59.384,114.068],[98.976,22.798],[98.966,-91.272]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-98.977,91.256],[-59.387,114.076],[-59.387,0.026],[-98.977,-22.784]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":20,"ty":4,"nm":"Cube 4","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":10,"s":[877,740,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[877,460,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":171.5,"s":[877,460,0],"to":[0,0,0],"ti":[0,0,0]},{"t":201.5,"s":[876.92,-706,0]}],"ix":2},"a":{"a":0,"k":[-0.003,39.605,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[59.372,-57.058],[-98.958,34.232],[-59.388,57.062],[98.962,-34.238],[59.372,-57.058]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 4","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.787,45.612],[19.793,68.432],[19.793,-45.618],[-19.787,-68.428]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-55,71.312],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 6","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-79.181,-11.372],[-79.181,102.668],[79.179,11.398],[79.169,-102.672]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.75,47.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 5","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":181,"st":0,"bm":0},{"ddd":0,"ind":21,"ty":3,"nm":"▽ Shadow - 4","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[877.639,205.583,0],"ix":2},"a":{"a":0,"k":[69.097,39.931,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":4,"nm":"Shadow-dark - 4","parent":21,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":15,"s":[5]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[123.991,183.903,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.546,-22.534],[19.544,-0.004],[-19.546,22.536],[-19.546,-22.534]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":23,"ty":4,"nm":"Shadow-light - 4","parent":21,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":15,"s":[10]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[68.844,207.679,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":0,"s":[{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[59.372,-57.058],[56.562,-55.768],[96.132,-32.938],[98.962,-34.238],[59.372,-57.058]],"c":true}]},{"t":15,"s":[{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[59.372,-57.058],[-98.958,34.232],[-59.388,57.062],[98.962,-34.238],[59.372,-57.058]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 4","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":24,"ty":4,"nm":"Green stroke - 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[767.552,476.547,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[98.975,-11.387],[-59.385,79.863]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-98.978,57.043],[-59.388,79.863]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.376470588235,0.964705882353,0.658823529412,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":48,"op":64.5,"st":3.5,"bm":0},{"ddd":0,"ind":25,"ty":4,"nm":"Mask - 4","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":155.5,"s":[767.552,476.547,0],"to":[0,0,0],"ti":[0,0,0]},{"t":186,"s":[767.473,-689.453,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-98.976,11.402],[-59.406,34.232],[98.944,-57.038],[59.354,-79.858]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[98.975,-11.387],[-59.385,79.863],[-59.385,34.213],[98.965,-57.057]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-98.978,57.043],[-59.388,79.863],[-59.388,34.213],[-98.978,11.403]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":4,"nm":"Cube 5","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":30,"s":[766.988,746.679,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[766.988,476.679,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.091,"y":1},"o":{"x":0.545,"y":0},"t":155.5,"s":[766.988,476.679,0],"to":[0,0,0],"ti":[0,0,0]},{"t":186,"s":[766.908,-689.321,0]}],"ix":2},"a":{"a":0,"k":[-0.006,15.84,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-98.959,34.216],[-59.389,57.046],[98.961,-34.224],[59.371,-57.044]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[79.179,-22.788],[-79.181,68.462],[-79.181,22.812],[79.169,-68.458]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690996647,0.966013014317,0.657918989658,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.75,23.75],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 2","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.797,11.412],[19.793,34.232],[19.793,-11.418],[-19.797,-34.228]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.375690983791,0.966012992111,0.657919012331,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-55,47.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 3","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":166,"st":0,"bm":0},{"ddd":0,"ind":27,"ty":3,"nm":"▽ Shadow - 5","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[765.833,173.639,0],"ix":2},"a":{"a":0,"k":[68.75,39.931,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":28,"ty":4,"nm":"Shadow-dark - 5","parent":27,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[0]},{"t":35,"s":[5]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[123.47,183.968,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-19.797,-22.729],[-19.627,-22.819],[19.793,-0.099],[19.793,0.091],[-19.637,22.821],[-19.797,22.721],[-19.797,-22.729]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0},{"ddd":0,"ind":29,"ty":4,"nm":"Shadow-light - 5","parent":27,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[0]},{"t":35,"s":[10]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[68.723,207.67,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":20,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[57.641,-56.864],[97.211,-34.034],[98.961,-34.224],[59.371,-57.044]],"c":true}]},{"t":35,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-98.959,34.216],[-59.389,57.046],[98.961,-34.224],[59.371,-57.044]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150.5,"st":0,"bm":0}],"markers":[]}

/***/ }),
/* 168 */
/***/ (function(module, exports) {

module.exports = {"v":"5.5.8","fr":30,"ip":0,"op":240,"w":1920,"h":1080,"nm":"03 Illustration main 2","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Mask 3","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.999,511.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Fill 22","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.78,"y":1},"o":{"x":0.81,"y":0},"t":164.5,"s":[960.122,524.179,0],"to":[0,0,0],"ti":[0,0,0]},{"t":186.5,"s":[960.122,864.179,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1.464,1.464,1]},"o":{"x":[0.507,0.507,0.333],"y":[0,0,0]},"t":63,"s":[0,0,100]},{"t":83,"s":[200,200,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[15.93,0],[0,15.88],[-15.93,0],[0,-15.87]],"o":[[-15.93,0],[0,-15.87],[15.93,0],[0,15.88]],"v":[[-0.001,28.745],[-28.841,-0.005],[-0.001,-28.745],[28.839,-0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":3,"k":{"a":0,"k":[0,1,0.763,0.229,0.331,0.931,0.481,0.205,1,0.863,0.2,0.18],"ix":9}},"s":{"a":0,"k":[0,-17],"ix":5},"e":{"a":0,"k":[100,0],"ix":6},"t":2,"h":{"a":0,"k":0,"ix":7},"a":{"a":0,"k":0,"ix":8},"nm":"Gradient Fill 3","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 22","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Combined Shape 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.5,619.733,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":125.5,"op":130.5,"st":-0.5,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Shadow-dark - 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[5]},{"t":191.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[986.083,652.355,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.58,-22.568],[19.58,0.002],[-19.58,22.572]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Shadow-light - 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[10]},{"t":201.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[958.292,652.354,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":104.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":119.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":186.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"t":201.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"Mask 5","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.999,511.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"cube 14","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":125,"s":[959,618,0],"to":[0,0,0],"ti":[0,0,0]},{"t":147,"s":[959,967,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":15,"ty":4,"nm":"cube","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":30,"s":[959,1167,0],"to":[0,0,0],"ti":[0,0,0]},{"t":53,"s":[959,618,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":38,"op":120,"st":0,"bm":0},{"ddd":0,"ind":16,"ty":4,"nm":"Combined Shape 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1042.5,574.733,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":142,"op":146,"st":10.5,"bm":0},{"ddd":0,"ind":17,"ty":4,"nm":"Mask 11","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1043.999,464.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":18,"ty":4,"nm":"cube 13","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":135,"s":[1043,476,0],"to":[0,0,0],"ti":[0,0,0]},{"t":157,"s":[1041,821,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":19,"ty":4,"nm":"Combined Shape 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[878,572.733,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":135,"op":138.5,"st":13.5,"bm":0},{"ddd":0,"ind":20,"ty":4,"nm":"Mask 12","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[875.999,465.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":21,"ty":4,"nm":"cube 12","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":127.5,"s":[877,476,0],"to":[0,0,0],"ti":[0,0,0]},{"t":149.5,"s":[875,819,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":22,"ty":4,"nm":"Combined Shape 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1042.5,574.233,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":131,"op":135,"st":-17,"bm":0},{"ddd":0,"ind":23,"ty":4,"nm":"Mask 9","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1043.999,465.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":24,"ty":4,"nm":"cube 11","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":130,"s":[1043,571.373,0],"to":[0,0,0],"ti":[0,0,0]},{"t":152,"s":[1043,919,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":25,"ty":4,"nm":"cube 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":25,"s":[1945,-51,0],"to":[0,0,0],"ti":[0,0,0]},{"t":48,"s":[1043,476,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":32,"op":120,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":4,"nm":"cube 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":10,"s":[1989,1117,0],"to":[0,0,0],"ti":[0,0,0]},{"t":33,"s":[1043,571.373,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":17,"op":120,"st":0,"bm":0},{"ddd":0,"ind":27,"ty":4,"nm":"Shadow-dark - 3","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[5]},{"t":191.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1071.083,605.355,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.58,-22.568],[19.58,0.002],[-19.58,22.572]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":28,"ty":4,"nm":"Shadow-light - 3","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[10]},{"t":201.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1043.292,605.354,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":104.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":119.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":186.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"t":201.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":29,"ty":4,"nm":"Combined Shape","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[878,572.733,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":121,"op":125,"st":-0.5,"bm":0},{"ddd":0,"ind":30,"ty":4,"nm":"Mask 8","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[875.999,463.836,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":31,"ty":4,"nm":"cube 10","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":120,"s":[876,571.373,0],"to":[0,0,0],"ti":[0,0,0]},{"t":142,"s":[878,919,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":32,"ty":4,"nm":"cube 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":20,"s":[-41,-51,0],"to":[0,0,0],"ti":[0,0,0]},{"t":43,"s":[877,476,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":27,"op":120,"st":0,"bm":0},{"ddd":0,"ind":33,"ty":4,"nm":"cube 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":20,"s":[-62,1109,0],"to":[0,0,0],"ti":[0,0,0]},{"t":43,"s":[876,571.373,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":27,"op":120,"st":0,"bm":0},{"ddd":0,"ind":34,"ty":4,"nm":"Shadow-dark - 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[5]},{"t":191.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[905.083,604.355,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.58,-22.568],[19.58,0.002],[-19.58,22.572]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":35,"ty":4,"nm":"Shadow-light - 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[10]},{"t":201.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[877.292,604.354,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":104.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":119.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":186.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"t":201.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":36,"ty":4,"nm":"Combined Shape 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.5,524.733,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":139.5,"op":143,"st":19,"bm":0},{"ddd":0,"ind":37,"ty":4,"nm":"Mask 6","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.999,414.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":38,"ty":4,"nm":"cube 9","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":132.5,"s":[960,428.627,0],"to":[0,0,0],"ti":[0,0,0]},{"t":154.5,"s":[958,769,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":39,"ty":4,"nm":"Combined Shape 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.5,524.733,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[39.675,22.827],[-0.025,45.627]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-39.674,22.827],[-0.024,45.627]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.988235294819,0.556862771511,0.372549027205,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":128,"op":132.5,"st":0,"bm":0},{"ddd":0,"ind":40,"ty":4,"nm":"Mask 7","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.999,415.336,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[41.176,100.873],[-0.024,123.953],[-41.174,100.873],[-41.174,-100.867],[-0.034,-123.957],[41.116,-100.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":0,"bm":0},{"ddd":0,"ind":41,"ty":4,"nm":"cube 8","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":127.5,"s":[960,522.627,0],"to":[0,0,0],"ti":[0,0,0]},{"t":149.5,"s":[958,871,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":120,"op":208.5,"st":120,"bm":0},{"ddd":0,"ind":42,"ty":4,"nm":"cube 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":15,"s":[958,-323,0],"to":[0,0,0],"ti":[0,0,0]},{"t":38,"s":[960,428.627,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":25,"op":120,"st":0,"bm":0},{"ddd":0,"ind":43,"ty":4,"nm":"cube 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.2,"y":1},"o":{"x":0.518,"y":0},"t":0,"s":[958,-229,0],"to":[0,0,0],"ti":[0,0,0]},{"t":23,"s":[960,522.627,0]}],"ix":2},"a":{"a":0,"k":[28.044,32.629,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.825,11.42],[19.825,34.22],[19.825,-11.41],[-19.825,-34.22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[14.259,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 21","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.85,-11.409],[-19.85,34.221],[19.85,11.421],[19.79,-34.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[41.811,40.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 20","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.005,22.815],[-39.645,-0.005],[0.005,-22.815],[39.645,0.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.55686300993,0.372548997402,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[28.024,16.787],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 19","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":9,"op":120,"st":0,"bm":0},{"ddd":0,"ind":44,"ty":4,"nm":"Shadow-dark - 4","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[5]},{"t":191.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[987.528,555.355,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.58,-22.568],[19.58,0.002],[-19.58,22.572]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0},{"ddd":0,"ind":45,"ty":4,"nm":"Shadow-light - 4","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":104.5,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":119.5,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":186.5,"s":[10]},{"t":201.5,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[959.737,555.354,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":104.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":119.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":186.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"t":201.5,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":104.5,"op":240,"st":0,"bm":0}],"markers":[]}

/***/ }),
/* 169 */
/***/ (function(module, exports) {

module.exports = {"v":"5.5.8","fr":30,"ip":0,"op":360,"w":1920,"h":1080,"nm":"04 Illustration main 2","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Fill 8","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[27.527,63.62,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-39.561,45.788],[39.559,91.488],[39.559,-91.492]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.603999972343,0.757000029087,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 8","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Fill 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[82.479,63.62,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-39.57,91.488],[39.57,45.838],[-39.57,-91.492]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.95920997858,0.343977987766,0.343977987766,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 7","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Combined Shape","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[55.006,63.62,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-0.009,91.488],[79.131,45.838],[-0.009,-91.492]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-79.131,45.788],[-0.011,91.488],[-0.011,-91.492]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.603999972343,0.757000029087,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":3,"ty":4,"nm":"Cylinder 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":25.5,"s":[904.5,647,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":47,"s":[848.5,679,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":101.5,"s":[657.5,569,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":133.5,"s":[822.5,472.613,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":165.854,"s":[738.5,423.613,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":192.103,"s":[960.5,298.113,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":214,"s":[1262.5,472.613,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":261.5,"s":[933.583,663.613,0],"to":[0,0,0],"ti":[0,0,0]},{"t":287.5,"s":[904.5,647,0]}],"ix":2},"a":{"a":0,"k":[-0.002,23.629,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":0,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0,0,0]},"t":20,"s":[200,200,100]},{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":300,"s":[200,200,100]},{"t":320,"s":[0,0,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[9.46,0],[0,5.22],[-9.46,0],[0,-5.22]],"o":[[-9.46,0],[0,-5.22],[9.46,0],[0,5.22]],"v":[[0.003,9.461],[-17.127,0.001],[0.003,-9.459],[17.123,0.001]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 18","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-9.46,0],[0,5.22],[0,0]],"o":[[0,0],[0,5.22],[9.46,0],[0,0],[0,0]],"v":[[-17.127,-38.718],[-17.127,29.262],[0.003,38.722],[17.123,29.262],[17.123,-38.718]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,26.938],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 15","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Cube","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.479,"y":1},"o":{"x":0.46,"y":0},"t":35.5,"s":[767.02,571.941,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.104,"y":1},"o":{"x":0.714,"y":0},"t":60.5,"s":[1042.52,731.441,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":98.5,"s":[1235.02,619.441,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":108,"s":[1185.52,590.266,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":158.394,"s":[883.196,765.941,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":193.799,"s":[546.201,571.941,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":1},"o":{"x":0.524,"y":0},"t":242.635,"s":[657.701,508.441,0],"to":[0,0,0],"ti":[0,0,0]},{"t":274,"s":[767.02,571.941,0]}],"ix":2},"a":{"a":0,"k":[-0.24,16.221,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":0,"s":[0,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":20,"s":[200,200,100]},{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":300,"s":[200,200,100]},{"t":320,"s":[0,0,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-39.573,-0.005],[0.007,22.875],[39.577,0.005],[-0.003,-22.875]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-0.25,0.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 4","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-19.788,11.45],[19.792,34.31],[19.792,-11.44],[-19.788,-34.31]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-14,24.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 6","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[19.817,11.45],[-19.813,34.31],[-19.813,-11.44],[19.757,-34.31]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.5,24.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 5","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Mask","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,515.003,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[216,216,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-0.009,91.488],[79.131,45.838],[-0.009,-91.492]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-79.131,45.788],[-0.011,91.488],[-0.011,-91.492]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":0,"nm":"4.0 Solid","cl":"0","tt":1,"refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[961.987,785,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":110.5,"s":[960,524,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":185,"s":[960,524,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":242.5,"s":[961.987,796.483,0],"to":[0,0,0],"ti":[0,0,0]},{"t":244,"s":[961.987,859,0]}],"ix":2},"a":{"a":0,"k":[55,64,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"w":110,"h":128,"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Shadow-dark - 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":35,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":50,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":244,"s":[5]},{"t":249,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1072.485,587.858,0],"ix":2},"a":{"a":0,"k":[13.597,0.001,0],"ix":1},"s":{"a":0,"k":[407.325,407.325,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-19.58,-22.568],[19.58,0.002],[-19.58,22.572]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Shadow-light - 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":35,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":50,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":244,"s":[10]},{"t":259,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1072.486,587.854,0],"ix":2},"a":{"a":0,"k":[27.493,0,0],"ix":1},"s":{"a":0,"k":[407.325,407.325,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":35,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0.833,"y":1},"o":{"x":0.167,"y":0},"t":50,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"i":{"x":0,"y":1},"o":{"x":0.371,"y":0},"t":244,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.001,22.815],[-39.589,-0.005],[0.001,-22.815],[39.591,0.005]],"c":true}]},{"t":259,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[38.521,0.495],[-1.069,-22.325],[0.001,-22.815],[39.591,0.005]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Cylinder 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":20,"s":[1207.5,582,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":50,"s":[1320.5,519.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":80,"s":[1153.5,422,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":104,"s":[1207.5,391,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":147,"s":[961.33,247.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.524,"y":0},"t":207.5,"s":[794.33,343,0],"to":[0,0,0],"ti":[0,0,0]},{"t":250,"s":[1207.5,582,0]}],"ix":2},"a":{"a":0,"k":[-0.002,10.405,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":7.5,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0,0,0]},"t":27.5,"s":[200,200,100]},{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":307.5,"s":[200,200,100]},{"t":327.5,"s":[0,0,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[15.77,0],[0,8.71],[-15.77,0],[0,-8.71]],"o":[[0,8.71],[-15.77,0],[0,-8.71],[15.77,0],[0,0]],"v":[[28.553,-0.001],[0.003,15.769],[-28.557,-0.001],[0.003,-15.771],[28.553,-0.001]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 12","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-15.78,0],[0,8.71],[0,0]],"o":[[0,0],[0,8.71],[15.77,0],[0,0],[0,0]],"v":[[-28.557,-22.792],[-28.557,7.018],[0.003,22.788],[28.553,7.018],[28.553,-22.792]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,15.938],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 9","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"Cube 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":33,"s":[1069.5,491.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":65,"s":[821.5,348.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":92.5,"s":[574,491.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":116.5,"s":[657,538.763,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":140.5,"s":[602,571.648,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.524,"y":0},"t":182.5,"s":[960.533,779.148,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.385,"y":1},"o":{"x":0.556,"y":0},"t":210,"s":[1374.033,539.763,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":1},"o":{"x":0.524,"y":0},"t":232.5,"s":[1179.789,427.843,0],"to":[0,0,0],"ti":[0,0,0]},{"t":261,"s":[1069.5,491.5,0]}],"ix":2},"a":{"a":0,"k":[0.003,7.938,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":10,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0,0,0]},"t":30,"s":[200,200,100]},{"i":{"x":[0.259,0.259,0.667],"y":[1,1,1]},"o":{"x":[0.672,0.672,0.333],"y":[0,0,0]},"t":310,"s":[200,200,100]},{"t":330,"s":[0,0,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0.002,11.442],[-19.788,0.002],[0.002,-11.438],[19.792,0.002]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[9.903,5.724],[-9.907,17.154],[-9.907,-5.716],[9.883,-17.156]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[6.875,11.906],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 2","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[9.896,17.154],[-9.894,5.724],[-9.894,-17.156],[9.896,-5.716]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917647004128,0.278430998325,0.61960798502,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-6.875,11.906],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 3","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0}],"markers":[]}

/***/ }),
/* 170 */
/***/ (function(module, exports) {

module.exports = {"v":"5.5.8","fr":30,"ip":0,"op":240,"w":1920,"h":1080,"nm":"05 Illustration main 2","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":2,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Shape-front - 1","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":10,"s":[-597.376,-240.271,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.041,"y":0.041},"o":{"x":1,"y":1},"t":55,"s":[-0.001,102.729,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[-0.001,102.729,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.42,"y":0.42},"t":95,"s":[-55.899,70.979,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":120,"s":[-55.899,70.979,0],"to":[0,0,0],"ti":[0,0,0]},{"t":140.5,"s":[497.789,395.854,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-20.699,-11.913],[-20.699,35.697],[20.701,11.928],[20.641,-35.693]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 11","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Fill 10","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":10,"s":[-695.727,-314.35,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.041,"y":0.041},"o":{"x":1,"y":1},"t":55,"s":[-98.352,28.65,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[-98.352,28.65,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.42,"y":0.42},"t":95,"s":[-98.352,28.65,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":120,"s":[-98.352,28.65,0],"to":[0,0,0],"ti":[0,0,0]},{"t":140.5,"s":[455.335,353.525,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-176.002,-78.005],[120.988,94.225],[162.328,70.445],[-134.662,-101.785]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-82.492,-23.825],[40.258,49.045],[81.597,25.265],[-41.152,-47.605]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 10","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Fill 12","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":10,"s":[-710.081,-289.564,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.041,"y":0.041},"o":{"x":1,"y":1},"t":55,"s":[-112.706,53.436,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[-112.706,53.436,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.42,"y":0.42},"t":95,"s":[-112.706,53.436,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":120,"s":[-112.706,53.436,0],"to":[0,0,0],"ti":[0,0,0]},{"t":140.5,"s":[440.981,378.311,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-155.192,-66.255],[141.387,105.236],[141.387,57.635],[-155.192,-113.875]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-61.823,-11.895],[61.827,59.516],[61.827,11.915],[-61.823,-59.514]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 12","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Shape-front - 2","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":15,"s":[-556.352,-264.03,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":60,"s":[41.523,78.47,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[41.523,78.47,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.437,"y":0.437},"t":95,"s":[28.023,70.47,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":115,"s":[28.023,70.47,0],"to":[0,0,0],"ti":[0,0,0]},{"t":135.5,"s":[581.71,395.345,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-20.699,-11.913],[-20.699,35.697],[20.701,11.928],[20.641,-35.693]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 8","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Fill 7","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":15,"s":[-654.144,-337.732,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":60,"s":[-56.269,4.768,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[-56.269,4.768,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.437,"y":0.437},"t":95,"s":[-7.769,33.268,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":115,"s":[-7.769,33.268,0],"to":[0,0,0],"ti":[0,0,0]},{"t":135.5,"s":[545.918,358.143,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[119.759,93.86],[-175.141,-78],[-133.801,-101.78],[161.099,70.08]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[30.839,41.66],[-72.181,-17.88],[-30.841,-41.66],[72.179,17.88]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 7","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Fill 9","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":15,"s":[-668.499,-312.945,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":60,"s":[-70.624,29.555,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[-70.624,29.555,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.437,"y":0.437},"t":95,"s":[-22.124,58.055,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":115,"s":[-22.124,58.055,0],"to":[0,0,0],"ti":[0,0,0]},{"t":135.5,"s":[531.564,382.93,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-155.551,-66.069],[141.149,106.13],[141.149,58.531],[-155.551,-113.689]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-51.511,-5.949],[51.509,53.57],[51.509,5.971],[-51.511,-53.57]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 9","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Shape front-Solid","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":5,"s":[-513.904,-287.859,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.119,"y":0.119},"o":{"x":0.965,"y":0.965},"t":50,"s":[82.471,55.141,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[82.471,55.141,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.391,"y":0.391},"t":95,"s":[13.471,15.641,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":125,"s":[13.471,15.641,0],"to":[0,0,0],"ti":[0,0,0]},{"t":155.5,"s":[567.158,340.516,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[20.654,11.927],[-20.656,35.727],[-20.656,-11.913],[20.594,-35.723]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.827000021935,0.462999999523,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 14","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Fill 13","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":5,"s":[-597.243,-352.175,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.119,"y":0.119},"o":{"x":0.965,"y":0.965},"t":50,"s":[-0.868,-9.175,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[-0.868,-9.175,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.391,"y":0.391},"t":95,"s":[-0.868,-9.175,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":125,"s":[-0.868,-9.175,0],"to":[0,0,0],"ti":[0,0,0]},{"t":155.5,"s":[552.82,315.7,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[99.348,80.7],[-196.582,-90.89],[-155.292,-114.72],[140.597,56.89]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-0.012,23.82],[-41.242,0.01],[0.048,-23.82],[41.238,0.01]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.944999992847,0.796000003815,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 13","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Fill 15","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":5,"s":[-611.566,-327.359,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.119,"y":0.119},"o":{"x":0.965,"y":0.965},"t":50,"s":[-15.191,15.641,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[-15.191,15.641,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.391,"y":0.391},"t":95,"s":[-15.191,15.641,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":125,"s":[-15.191,15.641,0],"to":[0,0,0],"ti":[0,0,0]},{"t":155.5,"s":[538.496,340.516,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[120.333,92.336],[-176.407,-80.054],[-176.407,-127.704],[120.333,44.697]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[20.613,35.727],[-20.617,11.926],[-20.617,-35.723],[20.613,-11.913]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.855000019073,0.671000003815,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 15","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Shape-front - 3","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":17.5,"s":[-458.832,-304.015,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":62.5,"s":[123.543,30.985,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[123.543,30.985,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.407,"y":0.407},"t":95,"s":[28.293,-24.515,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":125,"s":[28.293,-24.515,0],"to":[0,0,0],"ti":[0,0,0]},{"t":145.5,"s":[581.98,300.36,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[20.701,11.918],[-20.699,35.688],[-20.699,-11.912],[20.641,-35.692]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 5","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"Fill 4","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":17.5,"s":[-575.591,-388.448,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":62.5,"s":[6.784,-53.448,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[6.784,-53.448,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.407,"y":0.407},"t":95,"s":[6.784,-53.448,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":125,"s":[6.784,-53.448,0],"to":[0,0,0],"ti":[0,0,0]},{"t":145.5,"s":[560.471,271.427,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[147.977,108.777],[-148.452,-63.393],[-107.113,-87.174],[189.317,84.997]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[10.277,29.757],[-51.613,-5.973],[-10.273,-29.753],[51.617,5.977]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 4","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"Fill 6","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":17.5,"s":[-589.946,-363.662,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":62.5,"s":[-7.571,-28.662,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[-7.571,-28.662,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.407,"y":0.407},"t":95,"s":[-7.571,-28.662,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":125,"s":[-7.571,-28.662,0],"to":[0,0,0],"ti":[0,0,0]},{"t":145.5,"s":[546.117,296.213,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[168.638,121.217],[-128.143,-51.282],[-128.143,-98.902],[168.638,73.617]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[30.938,41.658],[-30.943,5.958],[-30.943,-41.663],[30.938,-5.943]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 6","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":15,"ty":4,"nm":"Shape-front - 4","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":12.5,"s":[-432.493,-335.712,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":57.5,"s":[165.382,7.288,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[165.382,7.288,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.398,"y":0.398},"t":95,"s":[97.132,-33.212,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":130,"s":[97.132,-33.212,0],"to":[0,0,0],"ti":[0,0,0]},{"t":150.5,"s":[650.819,291.663,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-20.7,-11.913],[-20.7,35.697],[20.7,11.927],[20.64,-35.693]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 2","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":16,"ty":4,"nm":"Fill 1","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":12.5,"s":[-529.397,-409.283,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":57.5,"s":[68.478,-66.283,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[68.478,-66.283,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.398,"y":0.398},"t":95,"s":[68.478,-66.283,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":130,"s":[68.478,-66.283,0],"to":[0,0,0],"ti":[0,0,0]},{"t":150.5,"s":[622.166,258.592,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-135.581,-103.033],[-176.921,-79.253],[117.939,94.568],[159.279,70.788]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-20.561,-35.712],[-61.901,-11.932],[20.559,35.708],[61.899,11.928]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":17,"ty":4,"nm":"Fill 3","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.472,"y":1},"o":{"x":0.895,"y":0},"t":12.5,"s":[-543.751,-384.497,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":1,"y":1},"t":57.5,"s":[54.124,-41.497,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.463,"y":0.463},"t":75,"s":[54.124,-41.497,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.398,"y":0.398},"t":95,"s":[54.124,-41.497,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"t":130,"s":[54.124,-41.497,0],"to":[0,0,0],"ti":[0,0,0]},{"t":150.5,"s":[607.811,283.378,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.463,"y":0},"t":75,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[139.149,105.578],[-156.431,-67.322],[-156.431,-114.942],[139.149,57.978]],"c":true}]},{"t":95,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[41.229,47.618],[-41.231,-0.002],[-41.231,-47.622],[41.229,0.018]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.988234996796,0.380391985178,0.784313976765,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[69.444,69.444],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Fill 3","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0}],"markers":[]}

/***/ })
/******/ ]);